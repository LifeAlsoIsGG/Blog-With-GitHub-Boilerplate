{"posts": [{"title": "JavaScript\u9762\u8bd5\u9898", "date": "2020-09-20T12:07:36-00.00", "path": "/archives/JavaScript\u9762\u8bd5\u9898/", "text": "JS\u4f5c\u7528\u57df\n\u53c2\u8003\n\n\u6df1\u5165\u7406\u89e3JavaScript\u4f5c\u7528\u57df\u548c\u4f5c\u7528\u57df\u94fe\n\n\u4ec0\u4e48\u662f\u4f5c\u7528\u57df\uff1f\u51e0\u79cd\u5e38\u89c1\u7684\u4f5c\u7528\u57df\u8be6\u89e3)\n\n\n\n", "categories": [{"name": "\u524d\u7aef", "slug": "\u524d\u7aef", "permalink": "/category/\u524d\u7aef/"}], "tags": [{"name": "JavaScript", "slug": "JavaScript", "permalink": "/tag/JavaScript/"}]}, {"title": "\u9762\u8bd5\u9898\u6574\u7406", "date": "2020-09-16T18:12:23-00.00", "path": "/archives/\u9762\u8bd5\u9898\u6574\u7406/", "text": "Java\n\nJava-JVM\n\nJava-\u5bb9\u5668\n\nJava-\u591a\u7ebf\u7a0b\u5e76\u53d1\nJava-\u8bbe\u8ba1\u6a21\u5f0f\nJava-\u65b9\u6cd5\u6c47\u603b\nJava-\u57fa\u7840\u9762\u8bd5\u9898\nJava-\u57fa\u7840\u77e5\u8bc6\u7b14\u8bb0\n\n\n\u6570\u636e\u7ed3\u6784\u7b97\u6cd5\n\n\u6570\u636e\u7ed3\u6784&amp;\u7b97\u6cd5\u7b14\u8bb0\n\u6570\u636e\u7ed3\u6784&amp;\u7b97\u6cd5\u9898\u76ee\u5408\u96c6\n\n\nMysql\n\nMysql\u9762\u8bd5\u9898\n\n\nSpring\n\nSpring\u9762\u8bd5\u9898\nSpringMVC\u9762\u8bd5\u9898\n\n\n\u5176\u5b83\u9762\u8bd5\u9898\n\n\u8ba1\u7b97\u673a\u5176\u5b83\u9762\u8bd5\u9898\n\n\n", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}]}, {"title": "Mysql\u9762\u8bd5\u9898", "date": "2020-09-16T18:10:26-00.00", "path": "/archives/Mysql\u9762\u8bd5\u9898/", "text": "Mysql\n", "categories": [{"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/category/\u6570\u636e\u5e93/"}], "tags": [{"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/tag/\u6570\u636e\u5e93/"}, {"name": "Mysql\u9762\u8bd5\u9898", "slug": "Mysql\u9762\u8bd5\u9898", "permalink": "/tag/Mysql\u9762\u8bd5\u9898/"}]}, {"title": "Spring\u9762\u8bd5\u9898", "date": "2020-09-16T14:57:41-00.00", "path": "/archives/Spring\u9762\u8bd5\u9898/", "text": "", "categories": [{"name": "Spring", "slug": "Spring", "permalink": "/category/Spring/"}], "tags": [{"name": "Spring", "slug": "Spring", "permalink": "/tag/Spring/"}, {"name": "Spring\u9762\u8bd5\u9898", "slug": "Spring\u9762\u8bd5\u9898", "permalink": "/tag/Spring\u9762\u8bd5\u9898/"}]}, {"title": "SpringMVC\u9762\u8bd5\u9898", "date": "2020-09-15T11:40:00-00.00", "path": "/archives/SpringMVC\u9762\u8bd5\u9898/", "text": "1. \u4ec0\u4e48\u662fMVC\nMVC\u5373Model-View-Controller\uff0c\u5c06\u5e94\u7528\u6309\u7167Model\uff08\u6a21\u578b\uff09\u3001View\uff08\u89c6\u56fe\uff09\u3001Controller\uff08\u63a7\u5236\uff09\u8fd9\u6837\u7684\u65b9\u5f0f\u5206\u79bb\u3002\u628a\u8f83\u4e3a\u590d\u6742\u7684web\u5e94\u7528\u5206\u6210\u903b\u8f91\u6e05\u6670\u7684\u51e0\u90e8\u5206\uff0c\u57fa\u4e8e\u8bf7\u6c42\u9a71\u52a8\u6307\u7684\u5c31\u662f\u4f7f\u7528\u8bf7\u6c42-\u54cd\u5e94\u6a21\u578b\u3002\u662f\u4e3a\u4e86\u7b80\u5316\u5f00\u53d1\uff0c\u51cf\u5c11\u51fa\u9519\u3002\u8fd8\u662f\u4e3a\u4e86\u7ec4\u5185\u5f00\u53d1\u4eba\u5458\u4e4b\u95f4\u7684\u914d\u5408\u3002\u603b\u4e4b\u5c31\u662f\u4e00\u79cd\u5206\u5c42\u5de5\u4f5c\u7684\u529e\u6cd5\u3002\n\n\n\u89c6\u56fe(View)\uff1a\u662f\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406\u6570\u636e\u663e\u793a\u7684\u90e8\u5206\uff0c\u4ee3\u8868\u7528\u6237\u4ea4\u4e92\u754c\u9762\uff0c\u5bf9\u4e8eWeb\u5e94\u7528\u6765\u8bf4\uff0c\u53ef\u4ee5\u662fHTML\uff0c\u4e5f\u53ef\u80fd\u662fjsp\u3001XML\u548cApplet\u7b49\u3002\u4e00\u4e2a\u5e94\u7528\u53ef\u80fd\u6709\u5f88\u591a\u4e0d\u540c\u7684\u89c6\u56fe\uff0cMVC\u8bbe\u8ba1\u6a21\u5f0f\u5bf9\u4e8e\u89c6\u56fe\u7684\u5904\u7406\u4ec5\u9650\u4e8e\u89c6\u56fe\u4e0a\u6570\u636e\u7684\u91c7\u96c6\u548c\u5904\u7406\uff0c\u4ee5\u53ca\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u5305\u62ec\u5728\u89c6\u56fe\u4e0a\u7684\u4e1a\u52a1\u6d41\u7a0b\u7684\u5904\u7406\u3002\u4e1a\u52a1\u6d41\u7a0b\u7684\u5904\u7406\u4ea4\u4e88\u6a21\u578b(Model)\u5904\u7406\u3002\n\u6a21\u578b(Model)\uff1a\u662f\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7528\u4e8e\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u6570\u636e\u903b\u8f91\u7684\u90e8\u5206\uff0c\u662f\u4e1a\u52a1\u7684\u5904\u7406\u4ee5\u53ca\u4e1a\u52a1\u89c4\u5219\u7684\u5236\u5b9a\u3002\u901a\u5e38\u6a21\u578b\u5bf9\u8c61\u8d1f\u8d23\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u53d6\u6570\u636e\u6a21\u578b\u63a5\u53d7\u89c6\u56fe\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u6700\u7ec8\u7684\u5904\u7406\u7ed3\u679c\u3002\u4e1a\u52a1\u6a21\u578b\u7684\u8bbe\u8ba1\u662fMVC\u6700\u4e3b\u8981\u7684\u6838\u5fc3\u3002MVC\u8bbe\u8ba1\u6a21\u5f0f\u544a\u8bc9\u6211\u4eec\uff0c\u628a\u5e94\u7528\u7684\u6a21\u578b\u6309\u4e00\u5b9a\u7684\u89c4\u5219\u62bd\u53d6\u51fa\u6765\uff0c\u62bd\u53d6\u7684\u5c42\u6b21\u5f88\u91cd\u8981\uff0c\u62bd\u8c61\u4e0e\u5177\u4f53\u4e0d\u80fd\u9694\u5f97\u592a\u8fdc\uff0c\u4e5f\u4e0d\u80fd\u592a\u8fd1\u3002MVC\u5e76\u6ca1\u6709\u63d0\u4f9b\u6a21\u578b\u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u800c\u53ea\u662f\u7ec4\u7ec7\u7ba1\u7406\u8fd9\u4e9b\u6a21\u578b\uff0c\u4ee5\u4fbf\u4e8e\u6a21\u578b\u7684\u91cd\u6784\u548c\u63d0\u9ad8\u91cd\u7528\u6027\u3002\n\u63a7\u5236(Controller)\uff1a\u662f\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406\u7528\u6237\u4ea4\u4e92\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u7528\u6237\u63a5\u6536\u8bf7\u6c42, \u5c06\u6a21\u578b\u4e0e\u89c6\u56fe\u5339\u914d\u5728\u4e00\u8d77\uff0c\u5171\u540c\u5b8c\u6210\u7528\u6237\u7684\u8bf7\u6c42\u3002\u5212\u5206\u63a7\u5236\u5c42\u7684\u4f5c\u7528\u4e5f\u5f88\u660e\u663e\uff0c\u5b83\u6e05\u695a\u5730\u544a\u8bc9\u4f60\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u5206\u53d1\u5668\uff0c\u9009\u62e9\u4ec0\u4e48\u6837\u7684\u6a21\u578b\uff0c\u9009\u62e9\u4ec0\u4e48\u6837\u7684\u89c6\u56fe\uff0c\u53ef\u4ee5\u5b8c\u6210\u4ec0\u4e48\u6837\u7684\u7528\u6237\u8bf7\u6c42\u3002\u63a7\u5236\u5c42\u5e76\u4e0d\u505a\u4efb\u4f55\u7684\u6570\u636e\u5904\u7406\u3002\n\n2. \u4ec0\u4e48\u662fMVP[Android]\nMVP\u5373Model-View-Presenter\n\n3. MVC\u548cMVP\u7684\u533a\u522b\n\nMVP\u4e0eMVC\u6709\u7740\u4e00\u4e2a\u91cd\u5927\u7684\u533a\u522b\uff1a\u5728MVP\u4e2dView\u5e76\u4e0d\u76f4\u63a5\u4f7f\u7528Model\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u901a\u4fe1\u662f\u901a\u8fc7Presenter (MVC\u4e2d\u7684Controller)\u6765\u8fdb\u884c\u7684\uff0c\u6240\u6709\u7684\u4ea4\u4e92\u90fd\u53d1\u751f\u5728Presenter\u5185\u90e8\uff0c\u800c\u5728MVC\u4e2dView\u4f1a\u76f4\u63a5\u4eceModel\u4e2d\u8bfb\u53d6\u6570\u636e\u800c\u4e0d\u662f\u901a\u8fc7 Controller\u3002\n\nPresenter\u4e0eController\u90fd\u626e\u6f14\u4e86\u903b\u8f91\u5c42\u7684\u89d2\u8272\uff0c\u4f46\u662fPresenter\u5c42\u7684\u529f\u80fd\u76f8\u5bf9\u66f4\u590d\u6742\uff0c\u56e0\u4e3a\u4ed6\u8d1f\u8d23\u548cView\u7684\u53cc\u5411\u4ea4\u4e92\uff0cController\u53ea\u662f\u5355\u5411\u7684\u4e2d\u4ecb\u3002\u56e0\u4e3aPresenter\u662f\u4eceView\u5c42\u62bd\u79bb\u51fa\u6765\u7684\uff0c\u901a\u5e38\u548cView\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u800cController\u662f\u9762\u5411\u4e1a\u52a1\u7684\uff0c\u5f80\u5f80\u662f\u5355\u4f8b\u6a21\u5f0f\u6216\u8005\u63d0\u4f9b\u9759\u6001\u65b9\u6cd5\u3002\nMVP\u4e2dView\u548cModel\u662f\u4e0d\u80fd\u8fdb\u884c\u901a\u4fe1\u7684\uff0c\u867d\u7136\u52a0\u91cd\u4e86P\u5c42\u7684\u8d1f\u62c5\uff0c\u4f46\u662f\u6709\u5229\u4e8e\u7ef4\u62a4View\u5c42\u548cModel\u5c42\uff0c\u5982\u679c\u6761\u4ef6\u5141\u8bb8\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9Presenter\u8fdb\u4e00\u6b65\u62c6\u5206\uff0c\u6765\u5f25\u8865Presenter\u8d1f\u62c5\u8fc7\u91cd\u7684\u95ee\u9898\u3002\nMVC\u4e2dView\u548cModel\u5c42\u53ef\u4ee5\u76f4\u63a5\u4ea4\u4e92\uff0c\u867d\u7136\u65b9\u4fbf\u4e86\u4e24\u8005\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4f46\u662f\u8026\u5408\u6027\u76f8\u5bf9\u8f83\u9ad8\u3002\n\n4. \u4ec0\u4e48\u662fSpringMVC\nSpring MVC\u662f\u4e00\u4e2a\u57fa\u4e8eJava\u7684\u5b9e\u73b0\u4e86MVC\u8bbe\u8ba1\u6a21\u5f0f\u7684\u8bf7\u6c42\u9a71\u52a8\u7c7b\u578b\u7684\u8f7b\u91cf\u7ea7Web\u6846\u67b6\uff0c\u901a\u8fc7\u628a\u6a21\u578b(Model)\uff0c\u89c6\u56fe(View)\uff0c\u63a7\u5236\u5668(Controller)\u5206\u79bb\uff0c\u5c06web\u5c42\u8fdb\u884c\u804c\u8d23\u89e3\u8026\uff0c\u628a\u590d\u6742\u7684web\u5e94\u7528\u5206\u6210\u903b\u8f91\u6e05\u6670\u7684\u51e0\u90e8\u5206\uff0c\u7b80\u5316\u5f00\u53d1\uff0c\u51cf\u5c11\u51fa\u9519\uff0c\u65b9\u4fbf\u7ec4\u5185\u5f00\u53d1\u4eba\u5458\u4e4b\u95f4\u7684\u914d\u5408\u3002Spring MVC \u4e0b\u6211\u4eec\u2f00\u822c\u628a\u540e\u7aef\u9879\u2f6c\u5206\u4e3a Service\u5c42 \uff08\u5904\u7406\u4e1a\u52a1\uff09\u3001Dao\u5c42\uff08\u6570\u636e\u5e93\u64cd\u4f5c\uff09\u3001Entity\u5c42\uff08\u5b9e\u4f53\u7c7b\uff09\u3001Controller\u5c42(\u63a7\u5236\u5c42\uff0c\u8fd4\u56de\u6570\u636e\u7ed9\u524d\u53f0 \u2eda\u2faf)\u3002\n5. SpringMVC\u7684\u4f18\u70b9\n\n\u53ef\u4ee5\u652f\u6301\u5404\u79cd\u89c6\u56fe\u6280\u672f,\u800c\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8eJSP\uff1b\n\u4e0eSpring\u6846\u67b6\u96c6\u6210\uff08\u5982IoC\u5bb9\u5668\u3001AOP\u7b49\uff09\uff1b\n\u6e05\u6670\u7684\u89d2\u8272\u5206\u914d\uff1a\u524d\u7aef\u63a7\u5236\u5668(dispatcherServlet) , \u8bf7\u6c42\u5230\u5904\u7406\u5668\u6620\u5c04\uff08handlerMapping), \u5904\u7406\u5668\u9002\u914d\u5668\uff08HandlerAdapter), \u89c6\u56fe\u89e3\u6790\u5668\uff08ViewResolver\uff09\u3002\n\u652f\u6301\u5404\u79cd\u8bf7\u6c42\u8d44\u6e90\u7684\u6620\u5c04\u7b56\u7565\u3002\n\n6. SpringMVC\u7ec4\u4ef6\n\nDispatcherServlet\uff1a\u524d\u7aef\u63a7\u5236\u5668\u3002\u4e5f\u79f0\u4e3a\u4e2d\u592e\u63a7\u5236\u5668\uff0c\u5b83\u662f\u6574\u4e2a\u8bf7\u6c42\u54cd\u5e94\u7684\u63a7\u5236\u4e2d\u5fc3\uff0c\u7ec4\u4ef6\u7684\u8c03\u7528\u7531\u5b83\u7edf\u4e00\u8c03\u5ea6\u3002\u6709\u4e86\u4ed6\u5c31\u51cf\u5c11\u4e86\u5176\u4ed6\u7ec4\u4ef6\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u3002\nHandlerMapping\uff1a\u5904\u7406\u5668\u6620\u5c04\u5668\u3002\u5b83\u6839\u636e\u7528\u6237\u8bbf\u95ee\u7684 URL \u6620\u5c04\u5230\u5bf9\u5e94\u7684\u540e\u7aef\u5904\u7406\u5668 Handler\u3002\u4e5f\u5c31\u662f\u8bf4\u5b83\u77e5\u9053\u5904\u7406\u7528\u6237\u8bf7\u6c42\u7684\u540e\u7aef\u5904\u7406\u5668\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u6267\u884c\u540e\u7aef\u5904\u7406\u5668\uff0c\u800c\u662f\u5c06\u5904\u7406\u5668\u544a\u8bc9\u7ed9\u4e2d\u592e\u5904\u7406\u5668\u3002\nHandlerAdapter\uff1a\u5904\u7406\u5668\u9002\u914d\u5668\u3002\u6839\u636e\u4f20\u8fc7\u6765\u4e0d\u540c\u7c7b\u578b\u7684Hadnle\u5b83\u8c03\u7528\u540e\u7aef\u5904\u7406\u5668\u4e2d\u7684\u65b9\u6cd5\uff0c\u8fd4\u56de\u903b\u8f91\u89c6\u56fe ModelAndView \u5bf9\u8c61\u7ed9DispatcherServlet\u3002\nViewResolver\uff1a\u89c6\u56fe\u89e3\u6790\u5668\u3002\u5c06 ModelAndView \u903b\u8f91\u89c6\u56fe\u89e3\u6790\u4e3a\u5177\u4f53\u7684\u89c6\u56fe\uff08\u5982 JSP\uff09\u3002\nHandler\uff1a\u540e\u7aef\u5904\u7406\u5668\u3002\u5bf9\u7528\u6237\u5177\u4f53\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7f16\u5199\u7684 Controller \u7c7b\u3002\u9700\u8981\u7a0b\u5e8f\u5458\u5f00\u53d1\n\n7. SpringMVC\u5de5\u4f5c\u6d41\u7a0b\n\n\n\u7528\u6237\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u5148\u5230\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet(\u4e5f\u53eb\u4e2d\u592e\u63a7\u5236\u5668)\u3002\n\n\nDispatcherServlet\u63a5\u6536\u5230\u8bf7\u6c42\u540e\u4f1a\u8c03\u7528HandlerMapping\u5904\u7406\u5668\u6620\u5c04\u5668\u6765\uff0c\u6839\u636e\u914d\u7f6e\u6216\u6ce8\u89e3\u83b7\u53d6\u4e0d\u540c\u7684Handle\uff0c\u5e76\u8fd4\u56de\u7ed9DispatcherServlet\u3002\u7531\u6b64\u5f97\u77e5\uff0c\u8be5\u8bf7\u6c42\u8be5\u7531\u54ea\u4e2aController\u6765\u5904\u7406\uff08\u5e76\u672a\u8c03\u7528Controller\uff0c\u53ea\u662f\u5f97\u77e5\uff09\n\n\nDispatcherServlet\u8c03\u7528HandlerAdapter\u5904\u7406\u5668\u9002\u914d\u5668\uff0c\u544a\u8bc9\u5904\u7406\u5668\u9002\u914d\u5668\u5e94\u8be5\u8981\u53bb\u6267\u884c\u54ea\u4e2aController\n\n\nHandlerAdapter\u5904\u7406\u5668\u9002\u914d\u5668\u53bb\u6267\u884cController\u5e76\u5f97\u5230ModelAndView(\u6570\u636e\u548c\u89c6\u56fe)\uff0c\u5e76\u5c42\u5c42\u8fd4\u56de\u7ed9DispatcherServlet\n\n\nDispatcherServlet\u5c06ModelAndView\u4ea4\u7ed9ViewReslover\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u7136\u540e\u8fd4\u56de\u771f\u6b63\u7684\u89c6\u56feView\u3002\n\n\nDispatcherServlet\u5c06\u6a21\u578b\u6570\u636e\u586b\u5145\u5230\u89c6\u56fe\u4e2d\n\n\nDispatcherServlet\u5c06\u7ed3\u679c\u54cd\u5e94\u7ed9\u7528\u6237\n\nSpringMVC\u6ce8\u89e3\u539f\u7406\n\u6ce8\u89e3\u672c\u8d28\u662f\u4e00\u4e2a\u7ee7\u627f\u4e86 Annotation\u7684\u7279\u6b8a\u63a5\u53e3,\u5176\u5177\u4f53\u5b9e\u73b0\u7c7b\u662fJava\u8fd0\u884c\u65f6\u751f\u6210\u7684\u52a8\u6001\u4ee3\u7406\u7c7b\u3002\u6211\u4eec\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u6ce8\u89e3\u65f6,\u8fd4\u56de\u7684\u662fJava\u8fd0\u884c\u65f6\u751f\u6210\u7684\u52a8\u6001\u4ee3\u7406\u5bf9\u8c61\u3002\u901a\u8fc7\u4ee3\u7406\u5bf9\u8c61\u8c03\u7528\u81ea\u5b9a\u4e49\u6ce8\u89e3\u7684\u65b9\u6cd5,\u4f1a\u6700\u7ec8\u8c03\u7528AnnotationInvocationHandler\u7684 invoke\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u4f1a\u4ece membervalues\u8fd9\u4e2aMap\u4e2d\u7d22\u5f15\u51fa\u5bf9\u5e94\u7684\u503c\u3002\u800c membervalues\u7684\u6765\u6e90\u662fJava\u5e38\u91cf\u6c60\n\u200b     Controller\u7c7b\u4f7f\u7528\u7ee7\u627f@Component\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u5c06\u5176\u4ee5\u5355\u4f8b\u7684\u5f62\u5f0f\u653e\u5165spring\u5bb9\u5668\uff0c\u5982\u679c\u4ed4\u7ec6\u770b\u7684\u8bdd\u4f1a\u53d1\u73b0\u6bcf\u4e2a\u6ce8\u89e3\u91cc\u9762\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684value()\u65b9\u6cd5\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u4e3a\u5f53\u524d\u7684\u6ce8\u89e3\u58f0\u660e\u4e00\u4e2a\u540d\u5b57\uff0c\u4e00\u822c\u9ed8\u8ba4\u4e3a\u7c7b\u540d\uff0c\u7136\u540espring\u4f1a\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684context:component-scan\u7684\u914d\u7f6e\uff0c\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n\u4f7f\u7528asm\u6280\u672f\u626b\u63cf.class\u6587\u4ef6\uff0c\u5e76\u5c06\u5305\u542b@Component\u53ca\u5143\u6ce8\u89e3\u4e3a@Component\u7684\u6ce8\u89e3@Controller\u3001@Service\u3001@Repository\u6216\u8005\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u7684bean\u6ce8\u518c\u5230beanFactory\u4e2d\uff0c\n\u7136\u540espring\u5728\u6ce8\u518c\u5904\u7406\u5668\n\u5b9e\u4f8b\u5316\u5904\u7406\u5668\uff0c\u7136\u540e\u5c06\u5176\u653e\u5230beanPostFactory\u4e2d\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7c7b\u4e2d\u8fdb\u884c\u4f7f\u7528\u4e86\u3002\n\u521b\u5efabean\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u76f8\u5e94\u7684\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406\u3002\n\n9. SpringMVC\u5e38\u7528\u6ce8\u89e3\n\u53c2\u8003\n\nhttps://www.cnblogs.com/leskang/p/5445698.html\n\n\n\n@Controller\n@Controller\u6ce8\u89e3\u5728\u7c7b\u4e0a\uff0c\u8868\u660e\u8fd9\u4e2a\u7c7b\u662fSpring MVC\u91cc\u7684Controller\uff0c\u5c06\u5176\u58f0\u660e\u4e3aSpring\u7684\u4e00\u4e2aBean\uff0cDispatchServlet\u4f1a\u81ea\u52a8\u626b\u63cf\u6ce8\u89e3\u4e86\u6b64\u6ce8\u89e3\u7684\u7c7b\uff0c\u5e76\u5c06Web\u8bf7\u6c42\u6620\u5c04\u5230\u6ce8\u89e3\u4e86@RequestMapping\u7684\u65b9\u6cd5\u4e0a\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728Spring MVC\u58f0\u660e\u63a7\u5236\u5668Bean\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u4f7f\u7528@Controller\u3002\n\n\n\n\n@RestController\n@RestController\u662f\u4e00\u4e2a\u7ec4\u5408\u6ce8\u89e3\uff0c\u7ec4\u5408\u4e86@Controller\u548c@ResponseBody\uff0c\u610f\u5473\u7740\u5f53\u53ea\u5f00\u53d1\u4e00\u4e2a\u548c\u9875\u9762\u4ea4\u4e92\u6570\u636e\u7684\u63a7\u5236\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528\u6b64\u6ce8\u89e3\u3002 \u82e5\u6ca1\u6709\u6b64\u6ce8\u89e3\uff0c\u8981\u60f3\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\uff0c\u5219\u9700\u81ea\u5df1\u5728\u4ee3\u7801\u4e2d\u52a0@Controller\u548c@ResponseBody\u4e24\u4e2a\u6ce8\u89e3\u3002\n\n\n\n\n@RequestMapping\n@RequestMapping\u6ce8\u89e3\u662f\u7528\u6765\u6620\u5c04Web\u8bf7\u6c42\uff08\u8bbf\u95ee\u8def\u5f84\u548c\u53c2\u6570\uff09\u3001\u5904\u7406\u7c7b\u548c\u65b9\u6cd5\u7684\u3002\u5b83\u53ef\u4ee5\u6ce8\u89e3\u5728\u7c7b\u548c\u65b9\u6cd5\u4e0a\u3002\u6ce8\u89e3\u5728\u65b9\u6cd5\u4e0a\u7684@RequestMapping\u8def\u5f84\u4f1a\u7ee7\u627f\u6ce8\u89e3\u5728\u7c7b\u4e0a\u7684\u8def\u5f84\uff0c@RequestMapping\u652f\u6301Servlet\u7684request\u548cresponse\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u652f\u6301\u5bf9\u5b83\u4eec\u7684\u5a92\u4f53\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\u3002\n\n\n\n\n@ResponseBody\n@ResponseBody\u652f\u6301\u5c06\u8fd4\u56de\u503c\u653e\u5728response\u4f53\u5185\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u4e00\u4e2a\u9875\u9762\u3002\u6211\u4eec\u5f88\u591a\u673a\u9047Ajax\u7684\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4ee5\u6b64\u6ce8\u89e3\u8fd4\u56de\u6570\u636e\u800c\u4e0d\u662f\u8fd4\u56de\u9875\u9762\uff1b\u6b64\u6ce8\u89e3\u53ef\u4ee5\u653e\u5728\u8fd4\u56de\u503c\u6216\u8005\u65b9\u6cd5\u4e0a\u3002\n\n\n@RequestBody\n@RequestBody\u5141\u8bb8request\u7684\u53c2\u6570\u5728request\u4f53\u4e2d\uff0c\u800c\u4e0d\u662f\u5728\u76f4\u63a5\u94fe\u63a5\u5728\u5730\u5740\u540e\u9762\u3002\u6b64\u6ce8\u89e3\u653e\u5728\u53c2\u6570\u524d\u3002\n\n\n\n\n@PathVariable\n@PathVariable \u7528\u6765\u63a5\u6536\u8def\u5f84\u53c2\u6570\uff0c\u5982/news/001,\u53ef\u63a5\u6536001\u4f5c\u4e3a\u53c2\u6570\uff0c\u6b64\u6ce8\u89e3\u653e\u7f6e\u5728\u53c2\u6570\u524d\u3002\n\n\n\n\n@Resource\u548c@Autowired\n@Resource\u548c@Autowired\u90fd\u662f\u505abean\u7684\u6ce8\u5165\u65f6\u4f7f\u7528\uff0c\u5176\u5b9e@Resource\u5e76\u4e0d\u662fSpring\u7684\u6ce8\u89e3\uff0c\u5b83\u7684\u5305\u662fjavax.annotation.Resource\uff0c\u9700\u8981\u5bfc\u5165\uff0c\u4f46\u662fSpring\u652f\u6301\u8be5\u6ce8\u89e3\u7684\u6ce8\u5165\u3002\n\n\n\n\n@Repository\n\u7528\u4e8e\u6ce8\u89e3dao\u5c42\uff0c\u5728daoImpl\u7c7b\u4e0a\u9762\u6ce8\u89e3\u3002\n\n\n\n8.1 @Controller\u63a7\u5236\u5668\n\u5728SpringMVC \u4e2d\uff0c\u63a7\u5236\u5668Controller \u8d1f\u8d23\u5904\u7406\u7531DispatcherServlet \u5206\u53d1\u7684\u8bf7\u6c42\uff0c\u5b83\u628a\u7528\u6237\u8bf7\u6c42\u7684\u6570\u636e\u7ecf\u8fc7\u4e1a\u52a1\u5904\u7406\u5c42\u5904\u7406\u4e4b\u540e\u5c01\u88c5\u6210\u4e00\u4e2aModel \uff0c\u7136\u540e\u518d\u628a\u8be5Model \u8fd4\u56de\u7ed9\u5bf9\u5e94\u7684View \u8fdb\u884c\u5c55\u793a\u3002\u5728SpringMVC \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u4fbf\u7684\u5b9a\u4e49Controller \u7684\u65b9\u6cd5\uff0c\u4f60\u65e0\u9700\u7ee7\u627f\u7279\u5b9a\u7684\u7c7b\u6216\u5b9e\u73b0\u7279\u5b9a\u7684\u63a5\u53e3\uff0c\u53ea\u9700\u4f7f\u7528@Controller \u6807\u8bb0\u4e00\u4e2a\u7c7b\u662fController \uff0c\u7136\u540e\u4f7f\u7528@RequestMapping \u548c@RequestParam \u7b49\u4e00\u4e9b\u6ce8\u89e3\u7528\u4ee5\u5b9a\u4e49URL \u8bf7\u6c42\u548cController \u65b9\u6cd5\u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u8fd9\u6837\u7684Controller \u5c31\u80fd\u88ab\u5916\u754c\u8bbf\u95ee\u5230\u3002\u6b64\u5916Controller \u4e0d\u4f1a\u76f4\u63a5\u4f9d\u8d56\u4e8eHttpServletRequest \u548cHttpServletResponse \u7b49HttpServlet \u5bf9\u8c61\uff0c\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7Controller \u7684\u65b9\u6cd5\u53c2\u6570\u7075\u6d3b\u7684\u83b7\u53d6\u5230\u3002\n@Controller \u7528\u4e8e\u6807\u8bb0\u5728\u4e00\u4e2a\u7c7b\u4e0a\uff0c\u4f7f\u7528\u5b83\u6807\u8bb0\u7684\u7c7b\u5c31\u662f\u4e00\u4e2aSpringMVC Controller \u5bf9\u8c61\u3002\u5206\u53d1\u5904\u7406\u5668\u5c06\u4f1a\u626b\u63cf\u4f7f\u7528\u4e86\u8be5\u6ce8\u89e3\u7684\u7c7b\u7684\u65b9\u6cd5\uff0c\u5e76\u68c0\u6d4b\u8be5\u65b9\u6cd5\u662f\u5426\u4f7f\u7528\u4e86@RequestMapping \u6ce8\u89e3\u3002@Controller \u53ea\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a7\u5236\u5668\u7c7b\uff0c\u800c\u4f7f\u7528@RequestMapping \u6ce8\u89e3\u7684\u65b9\u6cd5\u624d\u662f\u771f\u6b63\u5904\u7406\u8bf7\u6c42\u7684\u5904\u7406\u5668\u3002\u5355\u5355\u4f7f\u7528@Controller \u6807\u8bb0\u5728\u4e00\u4e2a\u7c7b\u4e0a\u8fd8\u4e0d\u80fd\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u8bf4\u5b83\u5c31\u662fSpringMVC \u7684\u4e00\u4e2a\u63a7\u5236\u5668\u7c7b\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019Spring \u8fd8\u4e0d\u8ba4\u8bc6\u5b83\u3002\u90a3\u4e48\u8981\u5982\u4f55\u505aSpring \u624d\u80fd\u8ba4\u8bc6\u5b83\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u6211\u4eec\u628a\u8fd9\u4e2a\u63a7\u5236\u5668\u7c7b\u4ea4\u7ed9Spring \u6765\u7ba1\u7406\u3002\n8.2 @RestController\n\u53ef\u4ee5\u53d1\u73b0\uff0c@RestController\u6ce8\u89e3\u91cc\u9762\u5305\u542b\u4e86@Controller\u6ce8\u89e3\u548c@ResponseBody\u6ce8\u89e3\uff0c@ResponseBody \u6ce8\u89e3\u662f\u5c06\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3a JSON \u683c\u5f0f\uff0c\u6240\u4ee5\u8bf4\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a@RestController = @Controller + @ResponseBody \uff0c\u7701\u4e86\u5f88\u591a\u4e8b\uff0c\u6211\u4eec\u4f7f\u7528 @RestController \u4e4b\u540e\u5c31\u4e0d\u9700\u8981\u518d\u4f7f\u7528 @Controller \u4e86\u3002\n8.3 @RequestMapping\u8bf7\u6c42\u6620\u5c04\nRequestMapping\u662f\u4e00\u4e2a\u7528\u6765\u5904\u7406\u8bf7\u6c42\u5730\u5740\u6620\u5c04\u7684\u6ce8\u89e3\uff0c\u53ef\u7528\u4e8e\u7c7b\u6216\u65b9\u6cd5\u4e0a\u3002\u7528\u4e8e\u7c7b\u4e0a\uff0c\u8868\u793a\u7c7b\u4e2d\u7684\u6240\u6709\u54cd\u5e94\u8bf7\u6c42\u7684\u65b9\u6cd5\u90fd\u662f\u4ee5\u8be5\u5730\u5740\u4f5c\u4e3a\u7236\u8def\u5f84\u3002@RequestMapping\u6ce8\u89e3\u662f\u7528\u6765\u6620\u5c04Web\u8bf7\u6c42\uff08\u8bbf\u95ee\u8def\u5f84\u548c\u53c2\u6570\uff09\u3001\u5904\u7406\u7c7b\u548c\u65b9\u6cd5\u7684\u3002\u5b83\u53ef\u4ee5\u6ce8\u89e3\u5728\u7c7b\u548c\u65b9\u6cd5\u4e0a\u3002\u6ce8\u89e3\u5728\u65b9\u6cd5\u4e0a\u7684@RequestMapping\u8def\u5f84\u4f1a\u7ee7\u627f\u6ce8\u89e3\u5728\u7c7b\u4e0a\u7684\u8def\u5f84\uff0c@RequestMapping\u652f\u6301Servlet\u7684request\u548cresponse\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u652f\u6301\u5bf9\u5b83\u4eec\u7684\u5a92\u4f53\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\u3002\n\u5c5e\u6027\n\nvalue\uff0c method\n\nvalue\uff1a   \u6307\u5b9a\u8bf7\u6c42\u7684\u5b9e\u9645\u5730\u5740\uff0c\u6307\u5b9a\u7684\u5730\u5740\u53ef\u4ee5\u662fURI Template \u6a21\u5f0f\u3002value \u53ef\u4ee5\u7701\u7565\u4e0d\u5199\nmethod\uff1a \u6307\u5b9a\u8bf7\u6c42\u7684method\u7c7b\u578b\uff0c GET\u3001POST\u3001PUT\u3001DELETE\u7b49\uff1b\u9ed8\u8ba4\u4e3aGET\u3002\u4e0d\u7528\u6bcf\u6b21\u5728 @RequestMapping \u6ce8\u89e3\u4e2d\u52a0 method \u5c5e\u6027\u6765\u6307\u5b9a\uff0c\u4e0a\u9762\u7684 GET \u65b9\u5f0f\u8bf7\u6c42\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 @GetMapping(\"/get\") \u6ce8\u89e3\uff0c\u6548\u679c\u4e00\u6837\u3002\u76f8\u5e94\u5730\uff0cPUT \u65b9\u5f0f\u3001POST \u65b9\u5f0f\u548c DELETE \u65b9\u5f0f\u5bf9\u5e94\u7684\u6ce8\u89e3\u5206\u522b\u4e3a @PutMapping\u3001@PostMapping \u548c DeleteMapping\u3002\n\n\n\n\n\nconsumes\uff0cproduces\n\nconsumes\uff1a \u6307\u5b9a\u5904\u7406\u8bf7\u6c42\u7684\u63d0\u4ea4\u5185\u5bb9\u7c7b\u578b\uff08Content-Type\uff09\uff0c\u4f8b\u5982application/json, text/html;\nproduces:  \u6307\u5b9a\u8fd4\u56de\u7684\u5185\u5bb9\u7c7b\u578b\uff0c\u4ec5\u5f53request\u8bf7\u6c42\u5934\u4e2d\u7684(Accept)\u7c7b\u578b\u4e2d\u5305\u542b\u8be5\u6307\u5b9a\u7c7b\u578b\u624d\u8fd4\u56de\uff1b\u5982 produces = \u201capplication/json; charset=UTF-8\u201d\n\n\n\n\n\nparams\uff0cheaders\n\nparams\uff1a \u6307\u5b9arequest\u4e2d\u5fc5\u987b\u5305\u542b\u67d0\u4e9b\u53c2\u6570\u503c\u662f\uff0c\u624d\u8ba9\u8be5\u65b9\u6cd5\u5904\u7406\u3002\nheaders\uff1a \u6307\u5b9arequest\u4e2d\u5fc5\u987b\u5305\u542b\u67d0\u4e9b\u6307\u5b9a\u7684header\u503c\uff0c\u624d\u80fd\u8ba9\u8be5\u65b9\u6cd5\u5904\u7406\u8bf7\u6c42\u3002\n\n\n\n\n8.4 @ResponseBody\n\u4f5c\u7528\uff1a \u8be5\u6ce8\u89e3\u7528\u4e8e\u5c06Controller\u7684\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u9002\u5f53\u7684HttpMessageConverter\u8f6c\u6362\u4e3a\u6307\u5b9a\u683c\u5f0f\u540e\uff0c\u5199\u5165\u5230Response\u5bf9\u8c61\u7684body\u6570\u636e\u533a\u3002\n\u4f7f\u7528\u65f6\u673a\uff1a\u8fd4\u56de\u7684\u6570\u636e\u4e0d\u662fhtml\u6807\u7b7e\u7684\u9875\u9762\uff0c\u800c\u662f\u5176\u4ed6\u67d0\u79cd\u683c\u5f0f\u7684\u6570\u636e\u65f6\uff08\u5982json\u3001xml\u7b49\uff09\u4f7f\u7528\uff1b\n8.5 @RequestBody\nRequestBody \u6ce8\u89e3\u7528\u4e8e\u63a5\u6536\u524d\u7aef\u4f20\u6765\u7684\u5b9e\u4f53\uff0c\u63a5\u6536\u53c2\u6570\u4e5f\u662f\u5bf9\u5e94\u7684\u5b9e\u4f53\uff0c\u6bd4\u5982\u524d\u7aef\u901a\u8fc7 JSON \u63d0\u4ea4\u4f20\u6765\u4e24\u4e2a\u53c2\u6570 username \u548c password\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u5728\u540e\u7aef\u5c01\u88c5\u4e00\u4e2a\u5b9e\u4f53\u6765\u63a5\u6536\u3002\u5728\u4f20\u9012\u7684\u53c2\u6570\u6bd4\u8f83\u591a\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 @RequestBody \u63a5\u6536\u4f1a\u975e\u5e38\u65b9\u4fbf\u3002\n8.6 @PathVariable\n@PathVariable \u6ce8\u89e3\u4e3b\u8981\u7528\u6765\u83b7\u53d6 URL \u53c2\u6570\uff0cSpring Boot \u652f\u6301 Restfull \u98ce\u683c\u7684 URL\uff0c\u6bd4\u5982\u4e00\u4e2a GET \u8bf7\u6c42\u643a\u5e26\u4e00\u4e2a\u53c2\u6570 id\uff0c\u6211\u4eec\u5c06 id \u4f5c\u4e3a\u53c2\u6570\u63a5\u6536\uff0c\u53ef\u4ee5\u4f7f\u7528 @PathVariable \u6ce8\u89e3\u3002\u5982\u4e0b\uff1a\n@Controller  \npublic class TestController {  \n     @RequestMapping(value=&quot;/user/{userId}/roles/{roleId}&quot;,method = RequestMethod.GET)  \n     public String getLogin(@PathVariable(&quot;userId&quot;) String userId,  \n         @PathVariable(&quot;roleId&quot;) String roleId){  \n         System.out.println(&quot;User Id : &quot; + userId);  \n         System.out.println(&quot;Role Id : &quot; + roleId);  \n         return &quot;hello&quot;;  \n     }  \n     @RequestMapping(value=&quot;/product/{productId}&quot;,method = RequestMethod.GET)  \n     public String getProduct(@PathVariable(&quot;productId&quot;) String productId){  \n           System.out.println(&quot;Product Id : &quot; + productId);  \n           return &quot;hello&quot;;  \n     }  \n     @RequestMapping(value=&quot;/javabeat/{regexp1:[a-z-]+}&quot;,  \n           method = RequestMethod.GET)  \n     public String getRegExp(@PathVariable(&quot;regexp1&quot;) String regexp1){  \n           System.out.println(&quot;URI Part 1 : &quot; + regexp1);  \n           return &quot;hello&quot;;  \n     }  \n}\n\n8.7 @RequestParam\n@RequestParam \u6ce8\u89e3\u987e\u540d\u601d\u4e49\uff0c\u4e5f\u662f\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\uff0c\u4e3b\u8981\u7528\u4e8e\u5728SpringMVC\u540e\u53f0\u63a7\u5236\u5c42\u83b7\u53d6\u53c2\u6570\uff0c\u7c7b\u4f3c\u4e00\u79cdrequest.getParameter(\"name\")\u3002\u4e0a\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 @PathValiable \u6ce8\u89e3\u4e5f\u662f\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\uff0c\u90a3\u4e48 @RequestParam \u548c @PathVariable \u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1a\n@PathValiable \u662f\u4ece URL \u6a21\u677f\u4e2d\u83b7\u53d6\u53c2\u6570\u503c\uff0c\u7c7b\u4f3cRestfull\nhttp://localhost:8080/user/{id}\n\n@RequestParam \u662f\u4ece Request \u91cc\u83b7\u53d6\u53c2\u6570\u503c\uff0c\u5373\u8fd9\u79cd\u98ce\u683c\u7684 URL\uff1a\nhttp://localhost:8080/user?id=1\n\n\u5c5e\u6027\ndefaultValue = \"0\", required = false, value = \"isApp\"\uff1b\n\nrequired\uff1atrue \u8868\u793a\u8be5\u53c2\u6570\u5fc5\u987b\u8981\u4f20\uff0c\u5426\u5219\u5c31\u4f1a\u62a5 404 \u9519\u8bef\uff0cfalse \u8868\u793a\u53ef\u6709\u53ef\u65e0\u3002\ndefaultValue\uff1a\u8868\u793a\u8bbe\u7f6e\u9ed8\u8ba4\u503c\nvalue:\u503c\u8868\u793a\u63a5\u53d7\u7684\u4f20\u5165\u7684\u53c2\u6570\u7c7b\u578b\n\n8.8 @Resource\u548c@Autowired\n@Resource\u548c@Autowired\u90fd\u662f\u505abean\u7684\u6ce8\u5165\u65f6\u4f7f\u7528\uff0c\u5176\u5b9e@Resource\u5e76\u4e0d\u662fSpring\u7684\u6ce8\u89e3\uff0c\u5b83\u7684\u5305\u662fjavax.annotation.Resource\uff0c\u9700\u8981\u5bfc\u5165\uff0c\u4f46\u662fSpring\u652f\u6301\u8be5\u6ce8\u89e3\u7684\u6ce8\u5165\u3002\n\u4e0d\u540c\u70b9\n@Resources\u6309\u540d\u5b57\uff0c\u662fJDK\u7684\uff1b@Autowired\u6309\u7c7b\u578b\uff0c\u662fSpring\u7684\u3002\n\n@Autowired\u6ce8\u89e3\u662f\u6309\u7c7b\u578b\u88c5\u914d\u4f9d\u8d56\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u8981\u6c42\u4f9d\u8d56\u5bf9\u8c61\u5fc5\u987b\u5b58\u5728\uff0c\u5982\u679c\u5141\u8bb8null\u503c\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u5b83required\u5c5e\u6027\u4e3afalse\u3002\n@Resource\u6ce8\u89e3\u548c@Autowired\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u6807\u6ce8\u5728\u5b57\u6bb5\u6216\u5c5e\u6027\u7684setter\u65b9\u6cd5\u4e0a\uff0c\u4f46\u5b83\u9ed8\u8ba4\u6309\u540d\u79f0\u88c5\u914d\u3002\u540d\u79f0\u53ef\u4ee5\u901a\u8fc7@Resource\u7684name\u5c5e\u6027\u6307\u5b9a\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9aname\u5c5e\u6027\uff0c\u5f53\u6ce8\u89e3\u6807\u6ce8\u5728\u5b57\u6bb5\u4e0a\uff0c\u5373\u9ed8\u8ba4\u53d6\u5b57\u6bb5\u7684\u540d\u79f0\u4f5c\u4e3abean\u540d\u79f0\u5bfb\u627e\u4f9d\u8d56\u5bf9\u8c61\uff0c\u5f53\u6ce8\u89e3\u6807\u6ce8\u5728\u5c5e\u6027\u7684setter\u65b9\u6cd5\u4e0a\uff0c\u5373\u9ed8\u8ba4\u53d6\u5c5e\u6027\u540d\u4f5c\u4e3abean\u540d\u79f0\u5bfb\u627e\u4f9d\u8d56\u5bf9\u8c61\u3002 \n\n@Autowired\n@Autowired\u4e3aSpring\u63d0\u4f9b\u7684\u6ce8\u89e3\uff0c\u9700\u8981\u5bfc\u5165\u5305org.springframework.beans.factory.annotation.Autowired;\u53ea\u6309\u7167byType\u6ce8\u5165\u3002\npublic class TestServiceImpl {\n    // \u4e0b\u9762\u4e24\u79cd@Autowired\u53ea\u8981\u4f7f\u7528\u4e00\u79cd\u5373\u53ef\n    @Autowired\n    private UserDao userDao; // \u7528\u4e8e\u5b57\u6bb5\u4e0a\n\n    @Autowired\n    public void setUserDao(UserDao userDao) { // \u7528\u4e8e\u5c5e\u6027\u7684\u65b9\u6cd5\u4e0a\n        this.userDao = userDao;\n    }\n}\n\n@Resource\n@Resource\u9ed8\u8ba4\u6309\u7167ByName\u81ea\u52a8\u6ce8\u5165\uff0c\u7531J2EE\u63d0\u4f9b\uff0c\u9700\u8981\u5bfc\u5165\u5305javax.annotation.Resource\u3002@Resource\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u5c5e\u6027\uff1aname\u548ctype\uff0c\u800cSpring\u5c06@Resource\u6ce8\u89e3\u7684name\u5c5e\u6027\u89e3\u6790\u4e3abean\u7684\u540d\u5b57\uff0c\u800ctype\u5c5e\u6027\u5219\u89e3\u6790\u4e3abean\u7684\u7c7b\u578b\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f7f\u7528name\u5c5e\u6027\uff0c\u5219\u4f7f\u7528byName\u7684\u81ea\u52a8\u6ce8\u5165\u7b56\u7565\uff0c\u800c\u4f7f\u7528type\u5c5e\u6027\u65f6\u5219\u4f7f\u7528byType\u81ea\u52a8\u6ce8\u5165\u7b56\u7565\u3002\u5982\u679c\u65e2\u4e0d\u5236\u5b9aname\u4e5f\u4e0d\u5236\u5b9atype\u5c5e\u6027\uff0c\u8fd9\u65f6\u5c06\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u4f7f\u7528byName\u81ea\u52a8\u6ce8\u5165\u7b56\u7565\u3002\npublic class TestServiceImpl {\n    // \u4e0b\u9762\u4e24\u79cd@Resource\u53ea\u8981\u4f7f\u7528\u4e00\u79cd\u5373\u53ef\n    @Resource(name=&quot;userDao&quot;)\n    private UserDao userDao; // \u7528\u4e8e\u5b57\u6bb5\u4e0a\n\n    @Resource(name=&quot;userDao&quot;)\n    public void setUserDao(UserDao userDao) { // \u7528\u4e8e\u5c5e\u6027\u7684setter\u65b9\u6cd5\u4e0a\n        this.userDao = userDao;\n    }\n}\n\n\u6ce8\uff1a\u6700\u597d\u662f\u5c06@Resource\u653e\u5728setter\u65b9\u6cd5\u4e0a\uff0c\u56e0\u4e3a\u8fd9\u6837\u66f4\u7b26\u5408\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff0c\u901a\u8fc7set\u3001get\u53bb\u64cd\u4f5c\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u53bb\u64cd\u4f5c\u5c5e\u6027\u3002\n@Resource\u88c5\u914d\u987a\u5e8f\uff1a\n\n\u5982\u679c\u540c\u65f6\u6307\u5b9a\u4e86name\u548ctype\uff0c\u5219\u4eceSpring\u4e0a\u4e0b\u6587\u4e2d\u627e\u5230\u552f\u4e00\u5339\u914d\u7684bean\u8fdb\u884c\u88c5\u914d\uff0c\u627e\u4e0d\u5230\u5219\u629b\u51fa\u5f02\u5e38\u3002\n\u5982\u679c\u6307\u5b9a\u4e86name\uff0c\u5219\u4ece\u4e0a\u4e0b\u6587\u4e2d\u67e5\u627e\u540d\u79f0\uff08id\uff09\u5339\u914d\u7684bean\u8fdb\u884c\u88c5\u914d\uff0c\u627e\u4e0d\u5230\u5219\u629b\u51fa\u5f02\u5e38\u3002\n\u5982\u679c\u6307\u5b9a\u4e86type\uff0c\u5219\u4ece\u4e0a\u4e0b\u6587\u4e2d\u627e\u5230\u7c7b\u4f3c\u5339\u914d\u7684\u552f\u4e00bean\u8fdb\u884c\u88c5\u914d\uff0c\u627e\u4e0d\u5230\u6216\u662f\u627e\u5230\u591a\u4e2a\uff0c\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\n\u5982\u679c\u65e2\u6ca1\u6709\u6307\u5b9aname\uff0c\u53c8\u6ca1\u6709\u6307\u5b9atype\uff0c\u5219\u81ea\u52a8\u6309\u7167byName\u65b9\u5f0f\u8fdb\u884c\u88c5\u914d\uff1b\u5982\u679c\u6ca1\u6709\u5339\u914d\uff0c\u5219\u56de\u9000\u4e3a\u4e00\u4e2a\u539f\u59cb\u7c7b\u578b\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5219\u81ea\u52a8\u88c5\u914d\u3002\n\n@Resource\u7684\u4f5c\u7528\u76f8\u5f53\u4e8e@Autowired\uff0c\u53ea\u4e0d\u8fc7@Autowired\u6309\u7167byType\u81ea\u52a8\u6ce8\u5165\u3002\n9. Spring\u63a7\u5236\u5668\u662f\u4ec0\u4e48\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u6a21\u5f0f\n\u662f\u5355\u4f8b\u6a21\u5f0f\uff0c\u6240\u4ee5\u5728\u591a\u7ebf\u7a0b\u8bbf\u95ee\u7684\u65f6\u5019\u6709\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u4e0d\u8981\u7528\u540c\u6b65\u4f1a\u5f71\u664c\u6027\u80fd\u7684\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5728\u63a7\u5236\u5668\u91cc\u9762\u4e0d\u80fd\u5199\u5b57\u6bb5\u6210\u5458\u53d8\u91cf\u3002\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u662f\u4e3a\u4e86\u6027\u80fd\uff08\u65e0\u9700\u9891\u7e41\u521d\u59cb\u5316\uff09\uff0c\u540c\u65f6\u4e5f\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u591a\u4f8b\u6a21\u5f0f\u3002\u4e07\u4e00\u5fc5\u987b\u8981\u5b9a\u4e49\u4e00\u4e2a\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u65f6\u5019\uff0c\u5219\u901a\u8fc7\u6ce8\u89e3@Scope(\"prototype\")\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a\u591a\u4f8b\u6a21\u5f0f\n", "categories": [{"name": "Spring", "slug": "Spring", "permalink": "/category/Spring/"}], "tags": [{"name": "Spring", "slug": "Spring", "permalink": "/tag/Spring/"}, {"name": "SpringMVC", "slug": "SpringMVC", "permalink": "/tag/SpringMVC/"}]}, {"title": "SQL\u5b9e\u6218\u9898\u76ee", "date": "2020-09-05T18:15:17-00.00", "path": "/archives/SQL\u5b9e\u6218\u9898\u76ee/", "text": "SQL\u5b9e\u6218\u9898\u76ee\n", "categories": [{"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/category/\u6570\u636e\u5e93/"}], "tags": [{"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/tag/\u6570\u636e\u5e93/"}, {"name": "SQL\u5b9e\u6218\u9898\u76ee", "slug": "SQL\u5b9e\u6218\u9898\u76ee", "permalink": "/tag/SQL\u5b9e\u6218\u9898\u76ee/"}]}, {"title": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u7b14\u8bb0", "date": "2020-08-30T18:03:39-00.00", "path": "/archives/\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u7b14\u8bb0/", "text": "1. \u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\n2. \u7b97\u6cd5\n\u533a\u522b\n\u52a8\u6001\u89c4\u5212\u548c\u8d2a\u5fc3\u7b97\u6cd5\u7684\u533a\u522b\n\u76f8\u540c\u70b9\n\n\u52a8\u6001\u89c4\u5212\u548c\u8d2a\u5fc3\u7b97\u6cd5\u90fd\u662f\u4e00\u79cd\u9012\u63a8\u7b97\u6cd5 \n\u5747\u6709\u5c40\u90e8\u6700\u4f18\u89e3\u6765\u63a8\u5bfc\u5168\u5c40\u6700\u4f18\u89e3\n\n\u4e0d\u540c\u70b9\n\n\u8d2a\u5fc3\u7b97\u6cd5\u4e2d\uff0c\u4f5c\u51fa\u7684\u6bcf\u6b65\u8d2a\u5fc3\u51b3\u7b56\u90fd\u65e0\u6cd5\u6539\u53d8\uff0c\u56e0\u4e3a\u8d2a\u5fc3\u7b56\u7565\u662f\u7531\u4e0a\u4e00\u6b65\u7684\u6700\u4f18\u89e3\u63a8\u5bfc\u4e0b\u4e00\u6b65\u7684\u6700\u4f18\u89e3\uff0c\u800c\u4e0a\u4e00\u90e8\u4e4b\u524d\u7684\u6700\u4f18\u89e3\u5219\u4e0d\u4f5c\u4fdd\u7559\u3002 \n\u53ef\u4ee5\u77e5\u9053\u8d2a\u5fc3\u6cd5\u6b63\u786e\u7684\u6761\u4ef6\u662f\uff1a\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u89e3\u4e00\u5b9a\u5305\u542b\u4e0a\u4e00\u6b65\u7684\u6700\u4f18\u89e3\u3002 \n\u5168\u5c40\u6700\u4f18\u89e3\u4e2d\u4e00\u5b9a\u5305\u542b\u67d0\u4e2a\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4f46\u4e0d\u4e00\u5b9a\u5305\u542b\u524d\u4e00\u4e2a\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u56e0\u6b64\u9700\u8981\u8bb0\u5f55\u4e4b\u524d\u7684\u6240\u6709\u6700\u4f18\u89e3 \n\u52a8\u6001\u89c4\u5212\u7684\u5173\u952e\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5373\u5982\u4f55\u7531\u4ee5\u6c42\u51fa\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u6765\u63a8\u5bfc\u5168\u5c40\u6700\u4f18\u89e3 \n\u8fb9\u754c\u6761\u4ef6\uff1a\u5373\u6700\u7b80\u5355\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u7684\u5c40\u90e8\u6700\u4f18\u89e3\n\n3. \u6570\u636e\u7ed3\u6784\n3.1 \u7a00\u758f\u6570\u7ec4\n\u53ea\u9002\u7528\u4e8e\u5927\u90e8\u5206\u5143\u7d20\u4e3a\u76f8\u540c\u65f6\uff0c\u6bd4\u5982\u4e94\u5b50\u68cb\n\n\u7b2c\u4e00\u884c\u8bb0\u5f55\u603b\u884c\u548c\u603b\u5217\u6570\u548c\u96640\u5916\u6709\u591a\u5c11\u4e2a\u975e\u96f6\u6570\u636e\uff0c\u5269\u4f59\u7684\u884c\u5219\u8bb0\u5f55\u6bcf\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u548c\u503c\n\netc:\u4e94\u5b50\u68cb\n\nJava\u4ee3\u7801\npublic class SparseArray {\n    public static void main(String[] args) {\n        /*0\uff1a\u6ca1\u6709\u68cb\u5b50\uff0c1\uff1a\u8868\u793a\u9ed1\u5b50\uff0c2\uff1a\u8868\u793a\u767d\u5b50*/\n        int chessArr[][] = new int[11][11];\n        chessArr[1][2] = 1;\n        chessArr[2][4] = 2;\n        chessArr[3][8] = 10;\n//        \u8f93\u51fa\u539f\u59cb\u4e3a\u4e8c\u7ef4\u6570\u7ec4\n        System.out.println(&quot;\u539f\u59cb\u4e8c\u7ef4\u6570\u7ec4&quot;);\n        for(int[] row : chessArr){\n            for(int data: row){\n                System.out.printf(&quot;%d\\t&quot;,data);\n            }\n            System.out.println();\n        }\n\n//        \u5c06\u4e8c\u7ef4\u6570\u7ec4\u8f6c\u4e3a\u7a00\u758f\u6570\u7ec4\n//        1.\u5148\u904d\u5386\u4e8c\u7ef4\u6570\u7ec4\u975e0\u7684\u4e2a\u6570\n        int sum = 0;\n        for(int i = 0; i &lt; 11;i++){\n            for(int j = 0; j &lt; 11;j++){\n                if(chessArr[i][j] != 0){\n                    sum++;\n                }\n            }\n        }\n\n        System.out.println(&quot;\u975e0\u4e2a\u6570\u4e3a&quot;+sum);\n\n//        2.\u521b\u5efa\u76f8\u5e94\u7684\u7a00\u758f\u6570\u7ec4\n        int sparseArr[][] = new int[sum+1][3];\n        sparseArr[0][0] = 11;\n        sparseArr[0][1] = 11;\n        sparseArr[0][2] = sum;\n\n//        \u904d\u5386\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5c06\u975e0\u7684\u503c\u5b58\u653e\u5230sparseArr\u4e2d\n        int count = 0;\n        for(int i = 0; i &lt; 11; i++){\n            for(int j = 0; j &lt; 11; j++){\n                if(chessArr[i][j] != 0){\n                    count++;\n                    sparseArr[count][0] = i;\n                    sparseArr[count][1] = j;\n                    sparseArr[count][2] = chessArr[i][j];\n                }\n            }\n        }\n\n//        \u8f93\u51fa\u7a00\u758f\u6570\u7ec4\n        System.out.println();\n        System.out.println(&quot;\u7a00\u758f\u6570\u7ec4&quot;);\n        for(int[] row : sparseArr){\n            for(int data: row){\n                System.out.printf(&quot;%d\\t&quot;,data);\n            }\n            System.out.println();\n        }\n\n//        3.\u5c06\u7a00\u758f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4\n//        \u58f0\u660e\u6570\u7ec4\n        int chessArry2[][] = new int[sparseArr[0][0]][sparseArr[0][1]];\n\n        for(int i  = 1; i &lt; sparseArr.length; i++){\n            chessArry2[sparseArr[i][0]][sparseArr[i][1]] = sparseArr[i][2];\n        }\n\n        //        \u8f93\u51fa\u8f6c\u6362\u540e\u7684\u4e8c\u7ef4\u6570\u7ec4\n        System.out.println(&quot;\u8f6c\u6362\u540e\u7684\u4e8c\u7ef4\u6570\u7ec4&quot;);\n        for(int[] row : chessArr){\n            for(int data: row){\n                System.out.printf(&quot;%d\\t&quot;,data);\n            }\n            System.out.println();\n        }\n    }\n\n}\n\n\u8fd0\u884c\u7ed3\u679c\n\n3.2 \u961f\u5217\n\u5148\u8fdb\u5148\u51fa\n\u7528\u6570\u7ec4\u6a21\u62df\u961f\u5217\u5b9e\u73b0\n\n\u961f\u5217\u672c\u8eab\u662f\u6709\u5e8f\u5217\u8868,\u82e5\u4f7f\u7528\u6570\u7ec4\u7684\u7ed3\u6784\u6765\u5b58\u50a8\u961f\u5217\u7684\u6570\u636e,\u5219\u961f\u5217\u6570\u7ec4\u7684\u58f0\u660e\u5982\u4e0b\u56fe,\u5176\u4e2dmaxSize\u662f\u8be5\u961f\u5217\u7684\u6700\u5927\u5bb9\u91cf\n\n\u56e0\u4e3a\u961f\u5217\u7684\u8f93\u51fa\u3001\u7ff0\u5165\u662f\u5206\u522b\u4ece\u524d\u540e\u7aef\u6765\u5904\u7406,\u56e0\u6b64\u9700\u8981\u4e24\u4e2a\u53d8\u91cf front \u53carear\u5206\u522b\u8bb0\u5f55\u961f\u5217\u524d\u540e\u7aef\u7684\u4e0b\u6807,front\u4f1a\u968f\u7740\u6570\u636e\u8f93\u51fa\u800c\u6539\u53d8,\u800crear\u5219\u662f\u968f\u7740\u6570\u636e\u8f93\u5165\u800c\u6539\u53d8,\u5982\u56fe\u6240\u793a:\n\n\n\n\n\u521d\u59cb\u5316\u961f\u5217\n\nprivate int maxSize;// \u8868\u793a\u6570\u7ec4\u6700\u5927\u5bb9\u91cf\n    private int front; // \u961f\u5217\u5934\u6307\u9488\u6307\u5411\u961f\u5217\u5934\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\n    private int rear; // \u961f\u5217\u5c3e\u6307\u9488\n    private int[] arr; // \u8be5\u6570\u636e\u7528\u4e8e\u5b58\u653e\u6570\u636e\uff0c\u6a21\u62df\u961f\u5217\n\n    //        \u521b\u5efa\u961f\u5217\u7684\u6784\u9020\u5668\n    public ArrayQueue(int arrMaxSize) {\n        maxSize = arrMaxSize;\n        arrQueue = new int[maxSize];\n        front = -1; // \u6307\u5411\u961f\u5217\u5934\u90e8\uff0c\u5206\u6790\u51fafront\u662f\u6307\u5411\u961f\u5217\u5934\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5f53\u961f\u5217\u6267\u884c\u51fa\u64cd\u4f5c\u65f6++\n        rear = -1; // \u5411\u961f\u5217\u961f\u5c3e\uff0c\u6307\u5411\u961f\u5217\u5c3e\u7684\u6570\u636e(\u961f\u5217\u6700\u540e\u4e00\u4e2a\u6570\u636e)\uff0c\u5f53\u961f\u5217\u6267\u884c\u5165\u64cd\u4f5c\u65f6++\n    }\n\n\n\u5224\u65ad\u961f\u5217\u662f\u5426\u5df2\u6ee1\n\n\u5f53 rear = maxSize - 1 \u65f6\u961f\u5217\u6ee1\n//        \u5224\u65ad\u961f\u5217\u662f\u5426\u6ee1\n    public boolean isFull() {\n        return rear == maxSize - 1;\n    }\n\n\n\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n\n\u5f53 rear == front \u65f6\u961f\u5217\u4e3a\u7a7a\n//        \u5224\u65ad\u961f\u5217\u662f\u5426\u7a7a\n    public boolean isEmpty() {\n        return rear == front;\n    }\n\n\n\u5165\u961f\u64cd\u4f5c addQueue \n\n\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\n\n\u5148\u5224\u65ad\u961f\u5217\u662f\u5426\u5df2\u6ee1\uff0c\u5f53 rear == maxSize-1 \u65f6\u961f\u5217\u6ee1\u65e0\u6cd5\u63d2\u5165\n\u82e5\u5c3e\u6307\u9488 rear \u5c0f\u4e8e\u961f\u5217\u7684\u6700\u5927\u4e0b\u6807 maxSize-1 ,\u5219\u5148\u5c06 rear++\uff0c\u518d\u5c06\u6570\u636en\u8d4b\u503c\u7ed9 arrQueue[rear] = n\n\n//        \u5165\u961f\u64cd\u4f5c\n    public void addQueue(int n) {\n        //        \u5224\u65ad\u961f\u5217\u662f\u5426\u6ee1\n        if (isFull()) {\n            System.out.println(&quot;\u961f\u5217\u5df2\u6ee1&quot;);\n            return;\n        }\n        rear++;\n        arr[rear] = n;\n    }\n\n\n\u51fa\u961f\u64cd\u4f5c outQueue\n\n\u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\n\n\u5148\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5f53 rear == front \u65f6\u961f\u5217\u4e3a\u7a7a\u65e0\u6cd5\u51fa\u961f\n\u82e5\u5934\u6307\u9488 front != rear \uff0cfront++ \uff0c\u56e0\u4e3afront\u6307\u5411\u961f\u5217\u5934\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8fd4\u56de\u7684\u51fa\u961f\u6570\u636e\u4e3a arrQueue[front]\n\n//        \u51fa\u961f\u64cd\u4f5c\n    public int outQueue() {\n        //        \u5224\u65ad\u961f\u5217\u662f\u5426\u6ee1\n        if (isEmpty()) {\n            System.out.println(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n            throw new RuntimeException(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n        }\n        front++;\n        return arrQueue[front];\n    }\n\n\n\u663e\u793a\u961f\u5217\n\npublic void showQueue() {\n        //\u904d\u5386\n        if (isEmpty()) {\n            System.out.println(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n            return;\n        }\n        for (int i = front+1; i &lt; rear+1; i++) {\n            System.out.printf(&quot;arr[%d] = %d\\n&quot;, i, arrQueue[i]);\n        }\n    }\n\n\n\u7528\u6570\u7ec4\u5b9e\u73b0\u961f\u5217\u6a21\u62df\u4ee3\u7801\n\npublic class ArrayQueue {\n    private int maxSize;// \u8868\u793a\u6570\u7ec4\u6700\u5927\u5bb9\u91cf\n    private int front; // \u961f\u5217\u5934\u6307\u9488\u6307\u5411\u961f\u5217\u5934\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\n    private int rear; // \u961f\u5217\u5c3e\u6307\u9488\n    private int[] arrQueue; // \u8be5\u6570\u636e\u7528\u4e8e\u5b58\u653e\u6570\u636e\uff0c\u6a21\u62df\u961f\u5217\n\n    //        \u521b\u5efa\u961f\u5217\u7684\u6784\u9020\u5668\n    public ArrayQueue(int arrMaxSize) {\n        maxSize = arrMaxSize;\n        arrQueue = new int[maxSize];\n        front = -1; // \u6307\u5411\u961f\u5217\u5934\u90e8\uff0c\u5206\u6790\u51fafront\u662f\u6307\u5411\u961f\u5217\u5934\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5f53\u961f\u5217\u6267\u884c\u51fa\u64cd\u4f5c\u65f6++\n        rear = -1; // \u5411\u961f\u5217\u961f\u5c3e\uff0c\u6307\u5411\u961f\u5217\u5c3e\u7684\u6570\u636e(\u961f\u5217\u6700\u540e\u4e00\u4e2a\u6570\u636e)\uff0c\u5f53\u961f\u5217\u6267\u884c\u5165\u64cd\u4f5c\u65f6++\n    }\n\n    //        \u5224\u65ad\u961f\u5217\u662f\u5426\u6ee1\n    public boolean isFull() {\n        return rear == maxSize - 1;\n    }\n\n    //        \u5224\u65ad\u961f\u5217\u662f\u5426\u7a7a\n    public boolean isEmpty() {\n        return rear == front;\n    }\n\n    //        \u5165\u961f\u64cd\u4f5c\n    public void addQueue(int n) {\n        //        \u5224\u65ad\u961f\u5217\u662f\u5426\u6ee1\n        if (isFull()) {\n            System.out.println(&quot;\u961f\u5217\u5df2\u6ee1&quot;);\n            return;\n        }\n        rear++;\n        arrQueue[rear] = n;\n    }\n\n    //        \u51fa\u961f\u64cd\u4f5c\n    public int outQueue() {\n        //        \u5224\u65ad\u961f\u5217\u662f\u5426\u6ee1\n        if (isEmpty()) {\n            System.out.println(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n            throw new RuntimeException(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n        }\n        front++;\n        return arrQueue[front];\n    }\n\n    //    \u67e5\u770b\u672a\u51fa\u961f\u7684\u6570\u636e\n    public void showQueue() {\n        //\u904d\u5386\n        if (isEmpty()) {\n            System.out.println(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n            return;\n        }\n        for (int i = front+1; i &lt; rear+1; i++) {\n            System.out.printf(&quot;arr[%d] = %d\\n&quot;, i, arrQueue[i]);\n        }\n    }\n\n    //    \u663e\u793a\u961f\u5217\u7684\u5934\u6570\u636e\uff0c\u5e76\u4e0d\u662f\u53d6\u51fa\u64cd\u4f5c\n    public int headQueue() {\n        if(isEmpty()) {\n            throw new RuntimeException(&quot;\u961f\u5217\u4e3a\u7a7a&quot;);\n        }\n        return arrQueue[front + 1];\n    }\n\n    public static void main(String[] args) {\n//        \u6784\u9020\u6570\u7ec4\u961f\u5217\n        ArrayQueue arrayQueue = new ArrayQueue(2);\n        char input;\n        Scanner scanner = new Scanner(System.in);\n        boolean loop = true;\n\n        while (loop){\n            System.out.println();\n            System.out.println(&quot;a(add)\uff1a\u5165\u961f&quot;);\n            System.out.println(&quot;g(get)\uff1a\u51fa\u961f&quot;);\n            System.out.println(&quot;s(show)\uff1a\u663e\u793a\u961f\u5217&quot;);\n            System.out.println(&quot;h(head)\uff1a\u67e5\u770b\u961f\u5217\u5934\u6570\u636e&quot;);\n            System.out.println(&quot;e(exit)\uff1a\u9000\u51fa\u7a0b\u5e8f&quot;);\n\n            input = scanner.next().charAt(0);\n            switch (input){\n\n                //\u8f93\u51fa\u961f\u5217\n                case  &#39;s&#39; :\n                    arrayQueue.showQueue();\n                    break;\n\n                //\u5165\u961f\u64cd\u4f5c\n                case  &#39;a&#39; :\n                    int value = scanner.nextInt();\n                    arrayQueue.addQueue(value);\n                    break;\n\n                //\u51fa\u961f\u64cd\u4f5c\n                case  &#39;g&#39; :\n                    try {\n                        System.out.println(&quot;\u51fa\u961f\u7684\u6570\u636e\u4e3a = &quot; + arrayQueue.outQueue());\n                    }catch (Exception e){\n                        System.out.println(e.getMessage());\n                    }\n                    break;\n\n                //\u8f93\u51fa\u961f\u5217\u5934\u6570\u636e\n                case  &#39;h&#39; :\n                    try {\n                        System.out.println(&quot;\u961f\u5217\u7684\u5934\u6570\u636e\u4e3a = &quot; + arrayQueue.headQueue());\n                    }catch (Exception e){\n                        System.out.println(e.getMessage());\n                    }\n                    break;\n\n                //\u9000\u51fa\n                case  &#39;e&#39; :\n                    scanner.close();\n                    loop = false;\n                   break;\n\n                default:\n                    break;\n            }\n        }\n    }\n}\n\n3.3 \u6811\n3.3.1 \u4e8c\u53c9\u6811\n\u53c2\u8003\n\nhttps://mp.weixin.qq.com/s/mBXfpH4nuIltyHm72zLryw\n\n\n\n\u524d\u5e8f\u904d\u5386\uff1a\u6839\u7ed3\u70b9 -&gt; \u5de6\u5b50\u6811 -&gt; \u53f3\u5b50\u6811 \n\u4e2d\u5e8f\u904d\u5386\uff1a\u5de6\u5b50\u6811 -&gt; \u6839\u7ed3\u70b9 -&gt; \u53f3\u5b50\u6811 \n\u540e\u5e8f\u904d\u5386\uff1a\u5de6\u5b50\u6811 -&gt; \u53f3\u5b50\u6811 -&gt; \u6839\u7ed3\u70b9\n\n\u7ed3\u70b9\u6784\u9020\npublic class TreeNode {\n    public int val;\n    public TreeNode left;\n    public TreeNode right;\n\n     public TreeNode(int x) {\n         val = x;\n     }\n\n    public TreeNode() {\n    }\n\n    @Override\n    public String toString() {\n        return &quot;[&quot; + val + &quot;]&quot;;\n    }\n}\n\n\u524d\u5e8f\u904d\u5386\n\nstatic ArrayList&lt;Integer&gt; arrayList = new ArrayList();\npublic static void preOrder(TreeNode tree) {\n    if (tree == null)\n        return;\n    arrayList.add(tree.val)\n    preOrder(tree.left);\n    preOrder(tree.right);\n}\n\n\u4e2d\u5e8f\u904d\u5386\n\nstatic ArrayList&lt;Integer&gt; arrayList = new ArrayList();\npublic static void inOrderTraversal(TreeNode node) {\n    if (node == null)\n        return;\n    inOrderTraversal(node.left);\n    arrayList.add(tree.val)\n    inOrderTraversal(node.right);\n}\n\n\u540e\u5e8f\u904d\u5386\n\nstatic ArrayList&lt;Integer&gt; arrayList = new ArrayList();\npublic static void inOrderTraversal(TreeNode node) {\n    if (node == null)\n        return;\n    inOrderTraversal(node.left);  \n    inOrderTraversal(node.right);\n    arrayList.add(tree.val)\n}\n\n\u6839\u636e\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u5efa\u4e8c\u53c9\u6811\nclass Solution {\n    HashMap&lt;Integer, Integer&gt; dic = new HashMap&lt;&gt;();\n    int[] po;\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        po = preorder;\n        for(int i = 0; i &lt; inorder.length; i++) \n            dic.put(inorder[i], i);\n        return recur(0, 0, inorder.length - 1);\n    }\n    TreeNode recur(int pre_root, int in_left, int in_right) {\n        if(in_left &gt; in_right) return null;\n        TreeNode root = new TreeNode(po[pre_root]);\n        int i = dic.get(po[pre_root]);\n        root.left = recur(pre_root + 1, in_left, i - 1);\n        root.right = recur(pre_root + i - in_left + 1, i + 1, in_right);\n        return root;\n    }\n}\n\nBFS(\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22)\n\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0b\u8bbf\u95ee\n\n\nBFS\u4ee3\u7801\n\npublic static void levelOrder(TreeNode tree) {\n     if (tree == null)\n         return;\n     LinkedList&lt;TreeNode&gt; list = new LinkedList&lt;&gt;();//\u94fe\u8868\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u961f\u5217\n     list.add(tree);//\u76f8\u5f53\u4e8e\u628a\u6570\u636e\u52a0\u5165\u5230\u961f\u5217\u5c3e\u90e8\n     while (!list.isEmpty()) {\n         TreeNode node = list.poll();//poll\u65b9\u6cd5\u76f8\u5f53\u4e8e\u79fb\u9664\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20\n         System.out.println(node.val);\n        if (node.left != null)\n            list.add(node.left);\n        if (node.right != null)\n            list.add(node.right);\n    }\n}\n\n\n\u9012\u5f52\u7684\u5199\u6cd5\n\npublic static void levelOrder(TreeNode tree) {\n     int depth = depth(tree);\n     for (int level = 0; level &lt; depth; level++) {\n         printLevel(tree, level);\n     }\n }\n\n private static int depth(TreeNode tree) {\n     if (tree == null)\n        return 0;\n    int leftDepth = depth(tree.left);\n    int rightDepth = depth(tree.right);\n    return Math.max(leftDepth, rightDepth) + 1;\n}\n\n\nprivate static void printLevel(TreeNode tree, int level) {\n    if (tree == null)\n        return;\n    if (level == 0) {\n        System.out.print(&quot; &quot; + tree.val);\n    } else {\n        printLevel(tree.left, level - 1);\n        printLevel(tree.right, level - 1);\n    }\n}\n\n\u5982\u679c\u60f3\u628a\u904d\u5386\u7684\u7ed3\u679c\u5b58\u653e\u5230list\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fd9\u6837\u5199\npublic static List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode tree) {\n     if (tree == null)\n         return null;\n     List&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();\n     bfs(tree, 0, list);\n     return list;\n }\n\n private static void bfs(TreeNode tree, int level, List&lt;List&lt;Integer&gt;&gt; list) {\n    if (tree == null)\n        return;\n    if (level &gt;= list.size()) {\n        List&lt;Integer&gt; subList = new ArrayList&lt;&gt;();\n        subList.add(tree.val);\n        list.add(subList);\n    } else {\n        list.get(level).add(tree.val);\n    }\n    bfs(tree.left, level + 1, list);\n    bfs(tree.right, level + 1, list);\n}\n\n4. \u6392\u5e8f\n4.1 \u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\n\n\n\u6392\u5e8f\u65b9\u6cd5\n\u65f6\u95f4\u590d\u6742\u5ea6(\u5e73\u5747)\n\u65f6\u95f4\u590d\u6742\u5ea6(\u6700\u574f)\n\u65f6\u95f4\u590d\u6742\u5ea6(\u6700\u597d)\n\u7a7a\u95f4\u590d\u6742\u5ea6\n\u7a33\u5b9a\u6027\n\u590d\u6742\u6027\n\n\n\n\n\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\nO(n2)\nO(n2)\nO(n)\nO(1)\n\u7a33\u5b9a\n\u7b80\u5355\n\n\n\u5e0c\u5c14\u6392\u5e8f\nO(nlog2n)\nO(n2)\nO(n1.3)\nO(1)\n\u4e0d\u7a33\u5b9a\n\u8f83\u590d\u6742\n\n\n\u76f4\u63a5\u9009\u62e9\u6392\u5e8f\nO(n2)\nO(n2)\nO(n2)\nO(1)\n\u4e0d\u7a33\u5b9a\n\u7b80\u5355\n\n\n\u5806\u6392\u5e8f\nO(nlog2n)\nO(nlog2n)\nO(nlog2n)\nO(1)\n\u4e0d\u7a33\u5b9a\n\u8f83\u590d\u6742\n\n\n\u5192\u6ce1\u6392\u5e8f\nO(n2)\nO(n2)\nO(n)\nO(1)\n\u7a33\u5b9a\n\u7b80\u5355\n\n\n\u5feb\u901f\u6392\u5e8f\nO(nlog2n)\nO(n2)\nO(nlog2n)\nO(nlog2n)\n\u4e0d\u7a33\u5b9a\n\u8f83\u590d\u6742\n\n\n\u5f52\u5e76\u6392\u5e8f\nO(nlog2n)\nO(nlog2n)\nO(nlog2n)\nO(n)\n\u7a33\u5b9a\n\u8f83\u590d\u6742\n\n\n\u57fa\u6570\u6392\u5e8f\nO(d(n+r))\nO(d(n+r))\nO(d(n+r))\nO(n+r)\n\u7a33\u5b9a\n\u8f83\u590d\u6742\n\n\n\n4.2 \u5feb\u901f\u6392\u5e8f\n5. \u67e5\u627e\n5.1 \u4e8c\u5206\u67e5\u627e\n\u53c2\u8003\n\nhttps://www.cnblogs.com/kyoner/p/11080078.html\n\n\n5.1.1 \u6700\u57fa\u672c\u7684\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\n/*\u57fa\u672c\u4e8c\u5206\u67e5\u627e\u6846\u67b6*/\n    public static int binarySearch(int[] nums, int target) {\n      if (nums.length == 0) return -1;\n        /*left\u6307\u9488\u6307\u5411\u4e0b\u6807\u4e3a0\uff0cright\u6307\u9488\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20*/\n        int left = 0, right = nums.length - 1;\n        while(left &lt;= right) {\n          /*mid\u8d4b\u503c\u65f6\u9632\u6b62\u5f53right + left\u6570\u636e\u8fc7\u5927\u65f6\u6ea2\u51fa*/\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target) {\n                return mid;\n            } else if (nums[mid] &lt; target) {\n                left = mid + 1;\n            } else if (nums[mid] &gt; target) {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n\n5.1.2 \u5bfb\u627e\u5de6\u4fa7\u8fb9\u754c\u7684\u4e8c\u5206\u67e5\u627e\n\u56e0\u4e3a\u6211\u4eec\u521d\u59cb\u5316 right = nums.length \u6240\u4ee5\u51b3\u5b9a\u4e86\u6211\u4eec\u7684\u300c\u641c\u7d22\u533a\u95f4\u300d\u662f [left, right) \u6240\u4ee5\u51b3\u5b9a\u4e86 while (left &lt; right) \u540c\u65f6\u4e5f\u51b3\u5b9a\u4e86 left = mid+1 \u548c right = mid \u56e0\u4e3a\u6211\u4eec\u9700\u627e\u5230 target \u7684\u6700\u5de6\u4fa7\u7d22\u5f15 \u6240\u4ee5\u5f53 nums[mid] == target \u65f6\u4e0d\u8981\u7acb\u5373\u8fd4\u56de \u800c\u8981\u6536\u7d27\u53f3\u4fa7\u8fb9\u754c\u4ee5\u9501\u5b9a\u5de6\u4fa7\u8fb9\u754c\n\n/*\u67e5\u8be2\u6700\u5de6\u4fa7\u7d22\u5f15*/\n    public static int binarySearch_Left(int[] nums, int target){\n        if (nums.length == 0){\n            return -1;\n        }\n\n        int left = 0 , right = nums.length - 1;\n        while (left &lt;= right){\n            int mid = left + (right - left) / 2;\n            /*\u5f53\u76f8\u7b49\u65f6\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\uff0c\u800c\u662f\u6536\u7d27\u53f3\u4fa7\u533a\u95f4\u5728mid\u7684\u524d\u4e00\u4e2a*/\n            if(target == nums[mid]){\n                right = mid - 1;\n            }\n            /*\u5f53target &gt; nums[mid]\u65f6\u6536\u7d27\u5de6\u4fa7\u533a\u95f4\uff0c\u5373left = mid + 1*/\n            else if(target &gt; nums[mid]){\n                left = mid + 1;\n            }\n            /*\u5f53target &lt; nums[mid]\u65f6\u6536\u7d27\u53f3\u4fa7\u533a\u95f4\uff0c\u5373right = mid - 1*/\n            else if(target &lt; nums[mid]){\n                right = mid - 1;\n            }\n        }\n        return left;\n    }\n\n5.1.3 \u5bfb\u627e\u53f3\u4fa7\u8fb9\u754c\u7684\u4e8c\u5206\u67e5\u627e\n/*\u67e5\u8be2\u6700\u53f3\u4fa7\u7d22\u5f15*/\n    public static int binarySearch_Right(int[] nums, int target){\n        if (nums.length == 0){\n            return -1;\n        }\n\n        int left = 0 , right = nums.length - 1;\n        System.out.println(&quot;nums.length : &quot; + nums.length);\n\n        while (left &lt;= right){\n            System.out.println(&quot;left : &quot; + left);\n            System.out.println(&quot;right : &quot; + right);\n            int mid = left + (right - left) / 2;\n            /*\u5f53\u76f8\u7b49\u65f6\uff0c\u5e76\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\uff0c\u800c\u662f\u6536\u7d27\u5de6\u4fa7\u533a\u95f4\u5728mid\u7684\u540e\u4e00\u4e2a\uff0c\u4ee5\u6b64\u67e5\u627e\u662f\u5426\u53f3\u8fb9\u8fd8\u6709\u6b64\u503c*/\n            if(target == nums[mid]){\n                left = mid + 1;\n            }\n            /*\u5f53target &gt; nums[mid]\u65f6\u6536\u7d27\u5de6\u4fa7\u533a\u95f4\uff0c\u5373left = mid + 1*/\n            else if(target &gt; nums[mid]){\n                left = mid + 1;\n            }\n            /*\u5f53target &lt; nums[mid]\u65f6\u6536\u7d27\u53f3\u4fa7\u533a\u95f4\uff0c\u5373right = mid - 1*/\n            else if(target &lt; nums[mid]){\n                right = mid - 1;\n            }\n        }\n        return right;\n    }\n\ntips\n\n\u5728\u5199\u5224\u5b9a\u6761\u4ef6 &amp;&amp; \u8fd0\u7b97\u65f6\uff0c\u5c3d\u91cf\u628a\u7b80\u5355\u7684\u64cd\u4f5c\u5199\u5728&amp;&amp;\u4e4b\u524d\n\n", "categories": [{"name": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5", "slug": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5", "permalink": "/category/\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5/"}], "tags": [{"name": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u7b14\u8bb0", "slug": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u7b14\u8bb0", "permalink": "/tag/\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u7b14\u8bb0/"}]}, {"title": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u9898\u76ee\u5408\u96c6", "date": "2020-08-29T19:21:57-00.00", "path": "/archives/\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u9898\u76ee\u5408\u96c6/", "text": "1. \u901a\u7528\u64cd\u4f5c\n1.1 \u8f93\u5165\u7c7b\n1.1.1 \u5229\u7528\u5b57\u7b26\u4e32\u8f93\u5165\u4e0d\u5b9a\u957fint\u6570\u7ec4\uff0c\u9017\u53f7\u9694\u5f00\n\u8f93\u5165\u65f6\u7528','\u9694\u5f00\nScanner input = new Scanner(System.in);\n        String str = input.nextLine().toString();\n        String[] arr  = str.split(&quot;,&quot;);\n        int[] nums = new int[arr.length];\n        for(int j = 0; j&lt;nums.length;j++) {\n            nums[j] = Integer.parseInt(arr[j]);\n        }\n        int repeat = 0;\n        System.out.println(Arrays.toString(nums));\n\n1.1.2 \u8f93\u5165\u5b9a\u957f\u4e8c\u7ef4\u6570\u7ec4\u5b57\u7b26\nScanner in=new Scanner(System.in);\n        int m=in.nextInt();\n        int n=in.nextInt();\n        in.nextLine();\n        char[][] arr = new char[m][n];\n\n        for (int i = 0; i &lt;m ; i++) {\n            String s = in.nextLine().toString();\n            for (int j = 0; j &lt;n ; j++) {\n                arr[i][j]=s.charAt(j);\n            }\n        }\n\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                System.out.print(arr[i][j]);\n            }\n            System.out.println();\n        }\n\n1.1.3 \u8f93\u5165\u5b9a\u957f\u4e8c\u7ef4\u5b57\u7b26\u4e32\nScanner in=new Scanner(System.in);\n        int m=in.nextInt();\n        int n=in.nextInt();\n        in.nextLine();//\u6b64\u884c\u7528\u6765\u505a\u7f13\u51b2ENTER\u6309\u952e\n        String[][] arr = new String[m][n];\n\n        for (int i = 0; i &lt;m ; i++) {\n            for (int j = 0; j &lt;n ; j++) {\n\n                arr[i][j]=in.nextLine();\n                System.out.println(&quot;arr[i][j] : &quot; + arr[i][j]);\n            }\n        }\n\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                System.out.print(arr[i][j]);\n            }\n            System.out.println();\n        }\n\n1.2 \u5c06\u4e24\u4e2a\u6574\u6570\u6570\u7ec4\u5408\u5e76\u4e4b\u540e\u6309\u7167\u5347\u5e8f\u6392\u5e8f,\u5e76\u6253\u5370\u8f93\u51fa\u5230\u63a7\u5236\u53f0,\u6ce8\u610f\u4e0d\u8981\u53bb\u91cd\npublic class \u5408\u5e76\u6570\u7ec4\u6309\u7167\u5347\u5e8f\u6392\u5e8f {\n    public static void main(String[] args) {\n        int a[] = {1,3,5,7};\n        int b[] = {2,4,5,8};\n        int c[] = new int[a.length + b.length];\n        int i =0, j = 0 , k = 0;\n        while(i &lt; a.length &amp;&amp; j &lt; b.length){\n            if(a[i] &lt; b[j]) {\n                c[k++] = a[i++];\n            }else{\n                c[k++] = b[j++];\n            }\n        }\n        while (i &lt; a.length) {\n            c[k++] = a[i++];\n        }\n        while (j &lt; b.length) {\n            c[k++] = b[j++];\n        }\n        System.out.println(Arrays.toString(c));\n    }\n}\n\n1.3 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u65e2\u9ad8\u6548\u53c8\u516c\u5e73\u7684\u65b9\u6cd5\u968f\u673a\u6253\u4e71\u8fd9\u4e2a\u6570\u7ec4\u3002\n1.4 \u5982\u4f55\u5224\u65ad\u7d20\u6570\npublic static boolean primeNumber(int i){\n        int s = (int) Math.sqrt(i);\n        int j = 0;\n        for (j = 2; j &lt;= s; j++) {\n            if(i % j == 0){\n                break;\n            }\n        }\n        if(j &gt; s){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n        System.out.println(primeNumber(19));\n\n    }\n\n1.5 \u6570\u4f4d\u548c\u8ba1\u7b97\n\u901a\u8fc7\u8f6c\u6362\u4e3aString\u518d\u4e00\u4e00\u76f8\u52a0\nlong i = 1111111111111111L;\nString s = String.valueOf(i);\nint sum = 0;\nfor (int j = 0; j &lt; s.length(); j++) {\n sum += s.charAt(j) - &#39;0&#39;;\n}\nSystem.out.println(sum);\n\n\u5faa\u73af\u6c42\u4f59\nint j = 11111;\nint sum2 = 0;\nwhile (j != 0){\n sum2 += j % 10;\n j = j / 10;\n}\n\n2. Leetcode\n\u53c2\u8003\n\nhttps://krahets.gitee.io/views/sword-for-offer/2020-05-20-sword-for-offer-00.html\n\n\n05. \u6700\u957f\u56de\u6587\u5b50\u4e32\n\u5f53 s.length() &lt; 2 \u65f6\u76f4\u63a5\u8fd4\u56de\n\u66b4\u529b\u6cd5\n\u76f4\u63a5\u8ba1\u7b97\u6bcf\u4e2a\u5b50\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u6570\uff0c\u662f\u7684\u8bdd\u5c31\u5c06\u6b64\u5b50\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0e maxLen \u6bd4\u8f83\uff0c\u5982\u679c\u5927\u4e8e maxLen \uff0c\u5c31\u8986\u76d6 maxLen \u5e76\u8986\u76d6\u8d77\u59cb\u4f4d\u7f6e begin \uff0c\u6700\u540e\u7684\u65f6\u5019\u8fd4\u56de s.subString(begin , begin + maxLen) \u5373\u53ef\n/*\u66b4\u529b\u6cd5\uff0c\u904d\u5386\u6240\u6709\u5b50\u4e32*/\n    public static String longestPalindrome(String s){\n        int len = s.length();\n        if(len &lt; 2){\n            return s;\n        }\n        int maxLen = 1;\n        int begin = 0;\n        char[] chars = s.toCharArray();\n        for (int i = 0; i &lt; len - 1; i++) {\n            for (int j = i + 1; j &lt; len; j++) {\n                if(j - i + 1 &gt; maxLen &amp;&amp; validPalindrome(chars, i ,j)){\n                    maxLen = j - i + 1;\n                    begin = i;\n                }\n            }\n        }\n        return s.substring(begin, begin + maxLen);\n    }\n    public static boolean validPalindrome(char[] chars , int left , int right){\n        while (left &lt; right){\n            if(chars[left] != chars[right]){\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n\n\u4e2d\u5fc3\u6269\u5c55\n\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u4ee5\u6bcf\u4e2a\u5b57\u7b26\u4e3a\u4e2d\u5fc3\u6bd4\u8f83\u5de6\u53f3\u4e24\u4e2a\u5b57\u7b26\u662f\u5426\u76f8\u7b49\uff0c\u8fb9\u754c\u6761\u4ef6\u4e3a left &gt;=0 &amp;&amp; right &lt; s.length() &amp;&amp; s.charAt(left) == s.charAt(right) \u3002\u4f46\u662f\u5206\u4e24\u79cd\u60c5\u51b5\n\n\u4ee5\u4e00\u4e2a\u5b57\u7b26\u4e3a\u4e2d\u5fc3\u6269\u5c55\n\u4ee5\u4e24\u4e2a\u5b57\u7b26\u4e3a\u4e2d\u5fc3\u6269\u5c55\n\n\u5728\u6bcf\u4e00\u6b21\u5faa\u73af\u65f6\u6bd4\u8f83\u4e0a\u8ff0\u4e24\u4e2a\u957f\u5ea6\u7684\u6700\u5927\u503c\uff0c\u518d\u4e0e maxLen \u6bd4\u8f83\uff0c\u5927\u4e8e\u5219\u8d4b\u503c\u7ed9 maxLen \u5e76\u8d4b\u503c begin \u7d22\u5f15\n/*\u4e2d\u5fc3\u6269\u5c55*/\n    public static String longestPalindrome_expandCenter(String s){\n        int maxLen = 0;\n        int begin = 0;\n        if(s.length() &lt; 2){\n            return s;\n        }\n        for (int i = 0; i &lt; s.length(); i++) {\n\n            int len = Math.max(expandAroundCenter(s , i , i),expandAroundCenter(s , i , i + 1));\n            if(len &gt; maxLen){\n                begin = i - (len - 1)/2;//\u8d4b\u503c\u7ed9\u7d22\u5f15begin\n                maxLen = len;//\u8d4b\u503c\u7ed9\u56de\u6587\u4e32\u6700\u5927\u957f\u5ea6\n            }\n        }\n        return s.substring(begin, begin + maxLen);\n    }\n\n    public static int expandAroundCenter(String s , int left , int right){\n        while (left &gt;=0 &amp;&amp; right &lt; s.length() &amp;&amp; s.charAt(left) == s.charAt(right)){\n            left--;\n            right++;\n        }\n        return right - left - 1;\n    }\n\n\u53c2\u8003\n\n\u300c \u5251\u6307 OFFER \u7cfb\u5217\u9898\u89e3 \u300d \u626c\u5e06\uff0c\u8d77\u822a\n\n\n03. \u5251\u6307 Offer 03. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57\nHashSet\u53bb\u91cd\n\n\u7b2c\u4e00\u79cd\uff1a\u4f7f\u7528HastSet\u53bb\u91cd\uff0c\u904d\u5386\u6dfb\u52a0\u65f6\u5982\u679c\u8fd4\u56de\u4e3afalse\u5219\u8bf4\u660e\u91cd\u590d\u5219\u76f4\u63a5\u8fd4\u56de\u6b64\u6570\npublic static int findRepeatNumber() {\n        HashSet&lt;Integer&gt; dic = new HashSet&lt;Integer&gt;();\n        int[] nums = {1,2,2,4};\n        int repeat = 0;\n        for(int num : nums){\n            if( !dic.add(num)){\n                repeat = num;\n                break;\n            }\n        }\n        return repeat;\n    }\n\n\u7b2c\u4e8c\u79cd\uff1a\u7531\u4e8e\u6307\u5b9a\u4e86\u91cc\u9762\u7684\u6570\u8303\u56f4\u4e3a0 ~ n-1\uff0c\u53ef\u4ee5\u7528\u904d\u5386\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e0b\u6807\u4e3a\u6570\u7ec4\u4e2d\u7684\u6570\uff0c\u503c\u4e3a\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5f53\u6b21\u6570\u5927\u4e8e2\u5219\u8fd4\u56de\nint[] nums = {1,2,2,3};\n        int[] nums_2 = new int[nums.length];\n        int repeat = -1;\n        for (int i = 0; i &lt; nums.length; i++) {\n            if(++nums_2[nums[i]] &gt; 1){\n                repeat = nums[i];\n                break;\n            }\n        }\n        return repeat;\n    }\n\n04. \u5251\u6307 Offer 04. \u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u67e5\u627e\n\u6807\u5fd7\u4f4d\u6cd5 \u7ebf\u6027\u67e5\u627e\n\n\u7ebf\u6027\u67e5\u627e\n\u200b       \u7531\u4e8e\u7ed9\u5b9a\u7684\u4e8c\u7ef4\u6570\u7ec4\u5177\u5907\u6bcf\u884c\u4ece\u5de6\u5230\u53f3\u9012\u589e\u4ee5\u53ca\u6bcf\u5217\u4ece\u4e0a\u5230\u4e0b\u9012\u589e\u7684\u7279\u70b9\uff0c\u5f53\u8bbf\u95ee\u5230\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u53ef\u4ee5\u6392\u9664\u6570\u7ec4\u4e2d\u7684\u90e8\u5206\u5143\u7d20\u3002\n\u4ece\u4e8c\u7ef4\u6570\u7ec4\u7684\u53f3\u4e0a\u89d2\u5f00\u59cb\u67e5\u627e\u3002\u5982\u679c\u5f53\u524d\u5143\u7d20\u7b49\u4e8e\u76ee\u6807\u503c\uff0c\u5219\u8fd4\u56de true\u3002\u5982\u679c\u5f53\u524d\u5143\u7d20\u5927\u4e8e\u76ee\u6807\u503c\uff0c\u5219\u79fb\u5230\u5de6\u8fb9\u4e00\u5217\u3002\u5982\u679c\u5f53\u524d\u5143\u7d20\u5c0f\u4e8e\u76ee\u6807\u503c\uff0c\u5219\u79fb\u5230\u4e0b\u8fb9\u4e00\u884c\u3002\n\u53ef\u4ee5\u8bc1\u660e\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4f1a\u9519\u8fc7\u76ee\u6807\u503c\u3002\u5982\u679c\u5f53\u524d\u5143\u7d20\u5927\u4e8e\u76ee\u6807\u503c\uff0c\u8bf4\u660e\u5f53\u524d\u5143\u7d20\u7684\u4e0b\u8fb9\u7684\u6240\u6709\u5143\u7d20\u90fd\u4e00\u5b9a\u5927\u4e8e\u76ee\u6807\u503c\uff0c\u56e0\u6b64\u5f80\u4e0b\u67e5\u627e\u4e0d\u53ef\u80fd\u627e\u5230\u76ee\u6807\u503c\uff0c\u5f80\u5de6\u67e5\u627e\u53ef\u80fd\u627e\u5230\u76ee\u6807\u503c\u3002\u5982\u679c\u5f53\u524d\u5143\u7d20\u5c0f\u4e8e\u76ee\u6807\u503c\uff0c\u8bf4\u660e\u5f53\u524d\u5143\u7d20\u7684\u5de6\u8fb9\u7684\u6240\u6709\u5143\u7d20\u90fd\u4e00\u5b9a\u5c0f\u4e8e\u76ee\u6807\u503c\uff0c\u56e0\u6b64\u5f80\u5de6\u67e5\u627e\u4e0d\u53ef\u80fd\u627e\u5230\u76ee\u6807\u503c\uff0c\u5f80\u4e0b\u67e5\u627e\u53ef\u80fd\u627e\u5230\u76ee\u6807\u503c\u3002\n\n\u82e5\u6570\u7ec4\u4e3a\u7a7a\uff0c\u8fd4\u56de false\n\n\u521d\u59cb\u5316\u884c\u4e0b\u6807\u4e3a 0\uff0c\u5217\u4e0b\u6807\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u6570\u51cf 1\n\n\u91cd\u590d\u4e0b\u5217\u6b65\u9aa4\uff0c\u76f4\u5230\u884c\u4e0b\u6807\u6216\u5217\u4e0b\u6807\u8d85\u51fa\u8fb9\u754c\n\n\u83b7\u5f97\u5f53\u524d\u4e0b\u6807\u4f4d\u7f6e\u7684\u5143\u7d20 num\n\n\u5982\u679c num \u548c target \u76f8\u7b49\uff0c\u8fd4\u56de true\n\u5982\u679c num \u5927\u4e8e target\uff0c\u5217\u4e0b\u6807\u51cf 1\n\u5982\u679c num \u5c0f\u4e8e target\uff0c\u884c\u4e0b\u6807\u52a0 1\n\n\n\n\u5faa\u73af\u4f53\u6267\u884c\u5b8c\u6bd5\u4ecd\u672a\u627e\u5230\u5143\u7d20\u7b49\u4e8e target \uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u8fd4\u56defalse\n\n\nclass Solution {\n    public boolean findNumberIn2DArray(int[][] matrix, int target) {\n        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {\n            return false;\n        }\n        int rows = matrix.length, columns = matrix[0].length;\n        int row = 0, column = columns - 1;\n        while (row &lt; rows &amp;&amp; column &gt;= 0) {\n            int num = matrix[row][column];\n            if (num == target) {\n                return true;\n            } else if (num &gt; target) {\n                column--;\n            } else {\n                row++;\n            }\n        }\n        return false;\n    }\n}\n\n05. \u5251\u6307 Offer 05. \u66ff\u6362\u7a7a\u683c\n\u5b57\u7b26\u4e32\u62fc\u63a5 StringBuilder\nclass Solution {\n    public String replaceSpace(String s) {\n        StringBuilder res = new StringBuilder();\n        for(Character c : s.toCharArray())\n        {\n            if(c == &#39; &#39;) res.append(&quot;%20&quot;);\n            else res.append(c);\n        }\n        return res.toString();\n\n    }\n}\n\n06. \u5251\u6307 Offer 06. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868\n\u6808 \u904d\u5386\u94fe\u8868\n\u7b2c\u4e00\u79cd\uff1a\u5148\u7b97\u51fa\u6570\u91cf\u518d\u904d\u5386\u8d4b\u503c\u76f4\u5230head.next == null\npublic int[] reversePrint(ListNode head) {\n       //\u5148\u83b7\u53d6\u94fe\u8868\u957f\u5ea6\uff0c\u521b\u5efa\u5bf9\u5e94\u957f\u5ea6\u6570\u7ec4\n        ListNode currNode = head;\n        int len = 0;\n        while(currNode != null){\n            len ++;\n            currNode = currNode.next;\n        }\n        int[] result = new int[len];\n\n        //\u518d\u6b21\u904d\u5386\u94fe\u8868\uff0c\u5c06\u503c\u5012\u5e8f\u586b\u5145\u81f3\u7ed3\u679c\u6570\u7ec4\n        currNode = head;\n        while(currNode != null){\n            result[len - 1] = currNode.val;\n            len --;\n            currNode = currNode.next;\n        }\n        return result;\n\n\u7b2c\u4e8c\u79cd\uff1a\u4f7f\u7528\u6808\n/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public int[] reversePrint(ListNode head) {\n        Stack&lt;ListNode&gt; stack = new Stack&lt;ListNode&gt;();\n        ListNode temp = head;\n        while (temp != null) {\n            stack.push(temp);\n            temp = temp.next;\n        }\n        int size = stack.size();\n        int[] print = new int[size];\n        for (int i = 0; i &lt; size; i++) {\n            print[i] = stack.pop().val;\n        }\n        return print;\n    }\n}\n\n\u7b2c\u4e09\u79cd\uff1a\u4f7f\u7528\u96c6\u5408\u7b49\u904d\u5386\u9006\u5e8f\u6dfb\u52a0\n07. \u5251\u6307 Offer 07. \u91cd\u5efa\u4e8c\u53c9\u6811\n\u9012\u5f52\u6cd5 \u4e8c\u53c9\u6811 \u5206\u6cbb\u601d\u60f3\n\nclass Solution {\n    HashMap&lt;Integer, Integer&gt; dic = new HashMap&lt;&gt;();\n    int[] po;\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        po = preorder;\n        for(int i = 0; i &lt; inorder.length; i++) \n            dic.put(inorder[i], i);\n        return recur(0, 0, inorder.length - 1);\n    }\n    TreeNode recur(int pre_root, int in_left, int in_right) {\n        if(in_left &gt; in_right) return null;\n        TreeNode root = new TreeNode(po[pre_root]);\n        int i = dic.get(po[pre_root]);\n        root.left = recur(pre_root + 1, in_left, i - 1);\n        root.right = recur(pre_root + i - in_left + 1, i + 1, in_right);\n        return root;\n    }\n}\n\n09. \u5251\u6307 Offer 09. \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217\n\u6808 \u961f\u5217\n\u4f7f\u7528\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u6808(A)\u8d1f\u8d23\u8fdb\uff0c\u4e00\u4e2a\u6808(B)\u8d1f\u8d23\u51fa\uff0c\u6839\u636e\u65b9\u6cd5\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\u5165\u961fappendTail\n\u76f4\u63a5\u5c06\u5143\u7d20\u538b\u5165\u7b2c\u4e00\u4e2a\u6808A\u4e2d\uff0c\u6b64\u65f6\u7b2c\u4e00\u4e2a\u6808\u6808\u5e95\u5373\u4e3a\u961f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\n\u51fa\u961fdeleteHead\n\u5728\u6267\u884c\u51fa\u961f\u65f6\u6211\u4eec\u5c06A\u6808\u4e2d\u7684\u5143\u7d20\u51fa\u961f\u5230B\u6808\u4e2d\uff0cA\u6808\u5728pop\u524d\u6808\u5e95\u4e3a\u5934\u7ed3\u70b9\uff0c\u6808\u9876\u4e3a\u5c3e\u7ed3\u70b9\uff0c\u5c06A\u6808\u4e2d\u5143\u7d20\u51fa\u6808\u540epush\u8fdbB\u4e2d\uff0c\u6b64\u65f6A\u6808\u4e3a\u7a7a\uff0cB\u6808\u4e2d\u6808\u9876\u5143\u7d20\u4e3a\u961f\u5217\u7684\u5934\u7ed3\u70b9\uff0c\u6808\u5e95\u5143\u7d20\u4e3a\u961f\u5217\u7684\u5c3e\u7ed3\u70b9\u3002\u5728\u540e\u7eed\u51fa\u6808\u4e2d\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\nB\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5219\u51fa\u6808push\nB\u6808\u4e3a\u7a7a\uff0cA\u6808\u4e0d\u4e3a\u7a7a\uff0c\u5c06A\u6808\u5143\u7d20\u90fdpop\u7136\u540epush\u5230B\u6808\u4e2d\uff0cB\u6808\u518d\u51fa\u6808\nB\u6808\u4e3a\u7a7a\uff0cA\u6808\u4e3a\u7a7a\uff0c\u6b64\u65f6\u6ca1\u6709\u7ed3\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de-1\n\n\u96c6\u5408\u6846\u67b6\u4e0d\u91c7\u7528Stack\u662f\u56e0\u4e3a\u88abStack\u7ee7\u627f\u4e8eVector\uff0c\u5b58\u5728\u7740\u5927\u91cf\u7684Synchronized\u800c\u5f03\u7528\uff0c\u4f7f\u7528LinkedList\u53ef\u4ee5\u6a21\u62df\uff0c\u6bd4\u5982addFirst\u548caddLast\uff0cremoveFirst\u548cremoveLast\nclass CQueue {\n    static LinkedList&lt;Integer&gt; A,B;\n\n    public CQueue() {\n        A = new LinkedList&lt;&gt;();\n        B = new LinkedList&lt;&gt;();\n\n    }\n\n    public void appendTail(int value) {\n        A.addLast(value);\n\n    }\n\n    public int deleteHead() {\n        if(!B.isEmpty()){\n            return B.removeLast();\n        }\n        if(A.isEmpty()){\n            return -1;\n        }\n        while (!A.isEmpty()){\n            B.addLast(A.removeLast());\n        }\n        return B.removeLast();\n\n    }\n}\n\n/**\n * Your CQueue object will be instantiated and called as such:\n * CQueue obj = new CQueue();\n * obj.appendTail(value);\n * int param_2 = obj.deleteHead();\n */\n\n10. \u5251\u6307 Offer 10- II. \u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898\nFibonacci\nclass Solution {\n    public int numWays(int n) {\n        int a = 0 , b = 1 , sum = 0;\n        for (int i = 0; i &lt; n; i++) {\n            sum = (a + b) % 1000000007;\n            a = b;\n            b = sum;\n        }\n        return sum;\n\n    }\n}\n\n11. \u5251\u6307 Offer 11. \u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57\n\u4e8c\u5206\u6cd5\n\u6574\u4f53\u601d\u8def\u4f7f\u7528\u4e8c\u5206\u6cd5\u3002\u6839\u636e\u9898\u610f\u53ef\u4ee5\u77e5\u9053\uff0c\u5148\u8bbe\u65cb\u8f6c\u70b9\u4e0b\u6807\u4e3a x\uff0c\u5de6\u4fa7\u4e3aleft\uff0c\u53f3\u4fa7\u4e3aright \uff0c\u6b64\u6570\u7ec4\u7684\u7279\u6027\u6709\n\n\u7531\u4e8e\u662f\u9012\u589e\u6392\u5e8f\u540e\u7684\u65cb\u8f6c\u6570\u7ec4\uff0c\u90a3\u4e48\u5de6\u8fb9\u6570\u7ec4\u7684\u6700\u5c0f\u503c &gt;= \u53f3\u8fb9\u6570\u7ec4\u7684\u6700\u5927\u503c\n\u65cb\u8f6c\u540e\u7684\u6570\u7ec4\u4e00\u5b9a\u6709\u53f3\u8fb9\u6570\u7ec4\uff0c\u53ef\u4ee5\u6ca1\u6709\u5de6\u8fb9\u6570\u7ec4\uff0c\u4f8b\u5982[1,2,3,4,5]\u4f1a\u88ab\u8ba4\u4e3a\u662f[1,2,3,4,5]\u65cb\u8f6c5\u6b21\u540e\u7684\u6570\u7ec4\uff0c\u6240\u4ee5\u8fd9\u5c31\u51b3\u5b9a\u4e86numbers[mid]\u5e94\u8be5\u4e0enumbers[right]\u8fdb\u884c\u5bf9\u6bd4\u800c\u4e0d\u662fnumbers[left]\uff0c\u56e0\u4e3aright\u4e00\u5b9a\u6307\u5411\u53f3\u8fb9\u6570\u7ec4\uff0c\u800cleft\u4e0d\u4e00\u5b9a\uff0c\u4e0b\u65b9\u4f1a\u8be6\u7ec6\u8bf4\u660e\n\n\n\u8ba9numbers[mid]\u4e0enumbers[right]\u5bf9\u6bd4\uff0c\u4f7f\u7528\u4e8c\u5206\u6cd5\u4f9d\u7136\u6709\u4e09\u79cd\u60c5\u51b5\n\nnumbers[mid] &gt; numbers[right]:\u7531\u4e8eright\u6307\u5411\u6700\u53f3\u8fb9\u5373\u53f3\u8fb9\u6570\u7ec4\u7684\u6700\u5927\u503c\uff0c\u5f53\u5927\u4e8e\u53f3\u8fb9\u6570\u7ec4\u7684\u6700\u5927\u503c\u65f6\uff0c\u8bf4\u660enumbers[mid]\u5de6\u4fa7\u6570\u7ec4\uff0c\u6b64\u65f6\u5c06left\u6307\u5411mid + 1\uff0c\u56e0\u4e3anumbers[mid]\u5728\u5de6\u4fa7\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u6452\u5f03\n\nnumbers[mid] &lt; numbers[right]\uff1a\u7531\u4e8e\u5de6\u8fb9\u6570\u7ec4\u7684\u6700\u5c0f\u503c &gt;= \u53f3\u8fb9\u6570\u7ec4\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5numbers[mid]\u5fc5\u5b9a\u5728\u53f3\u4fa7\u6570\u7ec4\uff0c\u5982\u679c\u6b64\u65cb\u8f6c\u540e\u7684\u6570\u7ec4\u5168\u662f\u53f3\u4fa7\u6570\u7ec4\uff0c\u6ca1\u6709\u5de6\u4fa7\u6570\u7ec4\uff0c\u4e5f\u53ef\u6210\u7acb\u9002\u7528\u3002\u6b64\u65f6\u7f29\u5c0f\u8303\u56f4\uff0c\u5c06right\u6307\u5411mid\uff0c\u662f\u56e0\u4e3amid\u8fd8\u5728\u53f3\u4fa7\u6570\u7ec4\uff0c\u4e0d\u80fd\u6452\u5f03\uff0c\u4f8b\u5982[3,1,3]\uff0c\u5728\u6bd4\u8f83\u540e\uff0cright\u4e3a0\uff0c\u4e8c\u65cb\u8f6c\u70b9\u662f1\uff0c\u663e\u7136\u4e0d\u7b26\u5408\u3002\n\nnumbers[mid] == numbers[right]\uff1a\u8fd9\u65f6\u5019\u65e0\u6cd5\u786e\u5b9amid\u5728\u54ea\u8fb9\uff0c\u6267\u884c right = right - 1\u7f29\u5c0f\u5224\u65ad\u8303\u56f4\n\n\u5f53[2,2,2,1,2]\u65f6\uff0cmid\u5728\u5de6\u4fa7\u6570\u7ec4\uff0c\u53ef\u4ee5\u53d1\u73b0\u533a\u95f4[left,mid]\u503c\u548cright\u76f8\u7b49\uff0c\u7531\u4e8e \u5de6\u6392\u5e8f\u6570\u7ec4 \u4efb\u4e00\u5143\u7d20 &gt;= \u53f3\u6392\u5e8f\u6570\u7ec4 \u4efb\u4e00\u5143\u7d20,\u53ef\u4ee5\u77e5\u9053\uff0cnumbers[\u65cb\u8f6c\u70b9] &lt;= (numbers[right] == numbers[mid]),\n\n\u82e5 numbers[\u65cb\u8f6c\u70b9] &lt; numbers[right]:\u90a3\u4e48\u6267\u884c right = right - 1\u540e\uff0c\u65cb\u8f6c\u70b9\u4f9d\u7136\u5728[left,right]\u4e2d\n\n\u82e5 numbers[\u65cb\u8f6c\u70b9] == numbers[right]\uff1a\u6b64\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\u5173\u4e8e\u4e0b\u6807\n\n\u5f53 right &gt; \u65cb\u8f6c\u70b9 \uff1a \u6613\u5f97\u6267\u884cright = right - 1\u540e\u65cb\u8f6c\u70b9 \u4ecd\u5728[left,right]\u533a\u95f4\u5185\u3002\n\u5f53right == \u65cb\u8f6c\u70b9\uff1a\u4f8b\u5982[1,1,1,2,3,1]\uff0c\u867d\u7136\u4e22\u5931\u4e86\u65cb\u8f6c\u70b9\u7d22\u5f15 x = 5\uff0c\u4f46\u6700\u7ec8\u8fd4\u56de\u503c\u4ecd\u6b63\u786e\uff08\u6700\u7ec8\u8fd4\u56de\u7684 numbers[0] \u7b49\u4e8e\u65cb\u8f6c\u70b9\u503c numbers[5] \uff09\uff0c\u8fd9\u662f\u56e0\u4e3a\uff1a\u4e4b\u540e\u7684\u4e8c\u5206\u5faa\u73af\u4e00\u76f4\u5728\u6267\u884cright = mid\uff0c\u800c\u533a\u95f4[left,mid] \u5185\u7684\u5143\u7d20\u503c\u4e00\u5b9a\u90fd\u7b49\u4e8e\u65cb\u8f6c\u70b9\u503c numbers[\u65cb\u8f6c\u70b9]\n\n\n\n\n\n\n\u5f53[2,3,2,2,2]\u65f6\uff0cmid\u5728\u53f3\u4fa7\u6570\u7ec4\uff0c\u53ef\u4ee5\u53d1\u73b0\u533a\u95f4[mid,right]\u7684\u503c\u76f8\u7b49,\u6b64\u65f6\u6267\u884c right = right - 1,\u4f9d\u7136\u662f\u53ef\u4ee5\u6c42\u51fa\u65cb\u8f6c\u70b9\u7684\u503c\uff0c\u53ea\u662f\u629b\u5f03\u4e00\u4e2a\u91cd\u590d\u503c\uff0c\u6bd5\u7adf\u90fd\u76f8\u540c\n\n\n\n\n\n\n\u603b\u7ed3\uff1a \u6b64\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u8fd4\u56de\u503c numbers[left] \u7b49\u4e8e\u65cb\u8f6c\u70b9\u503c numbers[\u65cb\u8f6c\u70b9] \uff1b\u4f46\u5728\u5c11\u6570\u7279\u4f8b\u4e0bleft\u70b9\u4e0d\u662f\u65cb\u8f6c\u70b9\uff0c\u53ea\u8981\u6c42\u8fd4\u56de \u201c\u65cb\u8f6c\u70b9\u7684\u503c\u201d \uff0c\u56e0\u6b64\u672c\u65b9\u6cd5\u53ef\u884c\u3002\npublic static int findMin(int[] numbers){\n        if (numbers.length == 0) {\n            return -1;\n        }\n        int left = 0 , right = numbers.length - 1 , mid;\n        while (left &lt; right){\n            mid = left + (right - left) / 2;\n            if(numbers[mid] &gt; numbers[right]){\n                left = mid + 1;\n            }else if(numbers[mid] &lt; numbers[right]){\n                right = mid;\n            }else if(numbers[mid] == numbers[right]){\n                right -= 1;\n            }\n        }\n        return numbers[left];\n\n    }\n\n\u5251\u6307 Offer 12. \u77e9\u9635\u4e2d\u7684\u8def\u5f84\nDFS \u526a\u679d\nclass Solution {\n    public boolean exist(char[][] board, String word) {\n        if (board.length == 0 || word.length() == 0){\n            return false;\n        }\n        char[] words = word.toCharArray();\n        for (int i = 0; i &lt; board.length; i++) {\n            for (int j = 0; j &lt; board[0].length; j++) {\n                if(dfs(board, words, i, j, 0)){\n                    return true;\n                }\n            }\n        }\n        return false;\n\n    }\n\n        public static boolean dfs(char[][] board, char[] words , int i , int j , int k){\n        /*\u5f53\u4e00\u7ef4\u4e0b\u6807i\u8d8a\u754c\uff08\u5f80\u4e0b\u79fb\u52a8\u65f6\uff09\u6216\u5c0f\u4e8e0\uff08\u5f80\u5de6\u79fb\u52a8\u65f6\uff09\uff0c\u6216\n        \u5f53\u4e8c\u7ef4\u4e0b\u6807j\u8d8a\u754c\uff08\u5f80\u53f3\u79fb\u52a8\u65f6\uff09\u6216\u5c0f\u4e8e0\uff08\u5411\u4e0a\u79fb\u52a8\u65f6\uff09\uff0c\u6216\n        board[i][j] != words[k]\uff0c\u4e0d\u5339\u914d\u65f6\uff0c\n        \u8fd4\u56defalse*/\n        if((i &gt;= board.length || i &lt; 0) || (j &gt;= board[0].length ||j &lt; 0) || board[i][j] != words[k]){\n            return false;\n        }\n        /*\u8fd9\u91cc\u4e5f\u662f\u7ec8\u6b62\u6761\u4ef6\uff0c\u7ecf\u8fc7\u4e0a\u9762if\u540e\uff0c\u6b64\u7ed3\u70b9\u662f\u5339\u914d\u7684\uff0c\u5f53\u6b64\u7ed3\u70b9\u5339\u914d\u4e14\u662f\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u65f6\u8fd4\u56detrue*/\n        if(k == words.length - 1){\n            return true;\n        }\n        /*\u4fdd\u7559\u5b57\u7b26*/\n        char tmp = board[i][j];\n        /*\u7ecf\u8fc7\u524d\u9762\u7684\u5224\u65ad\uff0c\u6b64\u65f6\u8fd9\u4e2a\u7ed3\u70b9\u6ca1\u8d8a\u754c\u4e14\u5339\u914d\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u5c06\u6b64\u5b57\u7b26\u4e32\u8bbe\u4e3a&#39;/&#39;\u8868\u793a\u904d\u5386\u8fc7*/\n        board[i][j] = &#39;/&#39;;\n        /*\u6b64\u65f6\u5f80\u56db\u4e2a\u65b9\u5411\u7ee7\u7eed\u904d\u5386\uff0c\u53ea\u8981\u8fd9\u56db\u4e2a\u65b9\u5411\u6709\u4e00\u4e2a\u662f\u5339\u914d\u7684\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u7ed3\u70b9\u662f\u5339\u914d\u4e14\u662f\u8fde\u7eed\u7684*/\n        boolean res = dfs(board, words, i + 1, j, k + 1) || dfs(board, words, i - 1, j, k + 1)\n                || dfs(board, words, i, j + 1, k + 1) || dfs(board, words, i, j - 1, k + 1);\n\n        board[i][j] = tmp;\n        return res;\n    }\n}\n\n52. \u5251\u6307 Offer 52. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9\n\u53cc\u6307\u9488\n\n\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u6ce8\u610f\u7ed3\u70b9\u7684\u6570\u5b57\u76f8\u540c\u4e0d\u4ee3\u8868\u7ed3\u70b9\u5bf9\u8c61\u76f8\u540c\npublic static class ListNode {\n      int val;\n      ListNode next;\n      ListNode(int val) {\n          val = val;\n          next = null;\n      }\n  }\n\n    /*\u53cc\u6307\u9488*/\n    public static ListNode getIntersectionNode(ListNode headA , ListNode headB){\n                if (headA == null || headB == null) {\n                    return null;\n                }\n                ListNode node1=headA;\n                ListNode node2=headB;\n                while (node1!=node2){\n                    node1=(node1==null)?headB:node1.next;\n                    node2=(node2==null)?headA:node2.next;\n                }\n\n                return node1;\n\n    }\n\n3. \u725b\u5ba2\u7f51\n\u5224\u65ad\u4e00\u4e2a\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u5339\u914d\u6b63\u786e\uff0c\u5982\u679c\u62ec\u53f7\u6709\u591a\u79cd\uff0c\u600e\u4e48\u505a\uff1f\u5982\uff08\uff08[]\uff09\uff09\u6b63\u786e\uff0c[[(()\u9519\u8bef\u3002\n", "categories": [{"name": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5", "slug": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5", "permalink": "/category/\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5/"}], "tags": [{"name": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u9898\u76ee\u5408\u96c6", "slug": "\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u9898\u76ee\u5408\u96c6", "permalink": "/tag/\u6570\u636e\u7ed3\u6784&\u7b97\u6cd5\u9898\u76ee\u5408\u96c6/"}]}, {"title": "\u817e\u8baf\u79fb\u52a8\u5ba2\u6237\u7aef\u9762\u7ecf", "date": "2020-08-24T18:44:39-00.00", "path": "/archives/\u817e\u8baf\u79fb\u52a8\u5ba2\u6237\u7aef\u9762\u7ecf/", "text": "", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}, {"name": "\u817e\u8baf\u79fb\u52a8\u5ba2\u6237\u7aef\u9762\u7ecf", "slug": "\u817e\u8baf\u79fb\u52a8\u5ba2\u6237\u7aef\u9762\u7ecf", "permalink": "/tag/\u817e\u8baf\u79fb\u52a8\u5ba2\u6237\u7aef\u9762\u7ecf/"}]}, {"title": "Java-JVM", "date": "2020-08-23T21:10:09-00.00", "path": "/archives/Java-JVM/", "text": "\u200b   JVM\u5c4f\u853d\u4e86\u4e0e\u5177\u4f53\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4f7fJava\u7a0b\u5e8f\u53ea\u9700\u751f\u6210\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u76ee\u6807\u4ee3\u7801\uff08\u5b57\u8282\u7801\uff09,\u5c31\u53ef\u4ee5\u5728\u591a\u79cd\u5e73\u53f0\u4e0a\u4e0d\u52a0\u4fee\u6539\u5730\u8fd0\u884c\u3002JVM\u5728\u6267\u884c\u5b57\u8282\u7801\u65f6\uff0c\u5b9e\u9645\u4e0a\u6700\u7ec8\u8fd8\u662f\u628a\u5b57\u8282\u7801\u89e3\u91ca\u6210\u5177\u4f53\u5e73\u53f0\u4e0a\u7684\u673a\u5668\u6307\u4ee4\u6267\u884c\u3002\nJVM\u7ec4\u6210\n\u603b\u5171\u5206\u4e3a\u4e09\u5927\u533a\u57df\n\n\u7c7b\u52a0\u8f7d\u5b50\u7cfb\u7edf\n\u8fd0\u884c\u65f6\u6570\u636e\u533a\n\u6267\u884c\u5f15\u64ce\n\n\n\n\u7ebf\u7a0b\u5171\u4eab\n\n\u65b9\u6cd5\u533a\uff1a\u7528\u4e8e\u5b58\u50a8\u865a\u62df\u673a\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\uff0c\u5e38\u91cf\uff0c\u9759\u6001\u53d8\u91cf\u7b49\u6570\u636e\n\u5806\uff1a\u5b58\u653e\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u548c\u6570\u7ec4\u90fd\u8981\u5728\u5806\u4e0a\u5206\u914d\u3002\u662fJVM\u6240\u7ba1\u7406\u7684\n\n\u65b9\u6cd5\u533a\n\u65b9\u6cd5\u533a\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u5c5e\u4e8e\u5171\u4eab\u5185\u5b58\u533a\u57df\uff0c\u89c4\u8303\u4e3a\u5b58\u50a8\u5df2\u88ab\u865a\u62df\u673a\u52a0\u8f7d\u7684\u7c7b\u4fe1\u606f\u3001\u5e38\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001\u5373\u65f6\u7f16\u8bd1\u5668\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u7b49\u6570\u636e\u3002\u867d\u7136Java\u865a\u62df\u673a\u89c4\u8303\u628a\u2f45\u6cd5\u533a\u63cf\u8ff0\u4e3a\u5806\u7684\u2f00\u4e2a\u903b\u8f91\u90e8\u5206\uff0c\u4f46 \u662f\u5b83\u5374\u6709\u2f00\u4e2a\u522b\u540d\u53eb\u505a Non-Heap\uff08\u2fae\u5806\uff09\uff0c\u2f6c\u7684\u5e94\u8be5\u662f\u4e0e Java \u5806\u533a\u5206\u5f00\u6765\u3002\n\u2f45\u6cd5\u533a\u548c\u6c38\u4e45\u4ee3\u7684\u5173\u7cfb\n\u300aJava\u865a\u62df\u673a\u89c4\u8303\u300b\u53ea\u662f\u89c4\u5b9a\u4e86\u6709\u2f45\u6cd5\u533a\u8fd9\u4e48\u4e2a\u6982\u5ff5\u548c\u5b83\u7684\u4f5c\u2f64\uff0c\u5e76\u6ca1\u6709\u89c4\u5b9a\u5982\u4f55\u53bb\u5b9e\u73b0\u5b83\u3002\u90a3 \u4e48\uff0c\u5728\u4e0d\u540c\u7684 JVM \u4e0a\u2f45\u6cd5\u533a\u7684\u5b9e\u73b0\u80af\u5b9a\u662f\u4e0d\u540c\u7684\u4e86\u3002 \u2f45\u6cd5\u533a\u548c\u6c38\u4e45\u4ee3\u7684\u5173\u7cfb\u5f88\u50cfJava\u4e2d\u63a5\u2f1d\u548c\u7c7b \u7684\u5173\u7cfb\uff0c\u7c7b\u5b9e\u73b0\u4e86\u63a5\u2f1d\uff0c\u2f7d\u6c38\u4e45\u4ee3\u5c31\u662fHotSpot\u865a\u62df\u673a\u5bf9\u865a\u62df\u673a\u89c4\u8303\u4e2d\u2f45\u6cd5\u533a\u7684\u2f00\u79cd\u5b9e\u73b0\u2f45\u5f0f\u3002 \u4e5f \u5c31\u662f\u8bf4\uff0c\u6c38\u4e45\u4ee3\u662fHotSpot\u7684\u6982\u5ff5\uff0c\u2f45\u6cd5\u533a\u662fJava\u865a\u62df\u673a\u89c4\u8303\u4e2d\u7684\u5b9a\u4e49\uff0c\u662f\u2f00\u79cd\u89c4\u8303\uff0c\u2f7d\u6c38\u4e45\u4ee3\u662f\u2f00 \u79cd\u5b9e\u73b0\uff0c\u2f00\u4e2a\u662f\u6807\u51c6\u2f00\u4e2a\u662f\u5b9e\u73b0\uff0c\u5176\u4ed6\u7684\u865a\u62df\u673a\u5b9e\u73b0\u5e76\u6ca1\u6709\u6c38\u4e45\u5e26\u8fd9\u2f00\u8bf4\u6cd5\u3002\n\n\u7248\u672c\u8fed\u4ee3\uff1a\n\n\u5728JDK1.7\u4e4b\u524d\uff1a\u6c38\u4e45\u4ee3\n\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u903b\u8f91\u5305\u542b\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u5b58\u653e\u5728\u65b9\u6cd5\u533a, \u6b64\u65f6hotspot\u865a\u62df\u673a\u5bf9\u65b9\u6cd5\u533a\u7684\u5b9e\u73b0\u4e3a\u6c38\u4e45\u4ee3\n\n\n\n\n\u5728JDK1.7\uff1a\u6c38\u4e45\u4ee3\u548c\u5806\n\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u88ab\u4ece\u65b9\u6cd5\u533a\u62ff\u5230\u4e86\u5806\u4e2d, \u8fd9\u91cc\u6ca1\u6709\u63d0\u5230\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60,\u4e5f\u5c31\u662f\u8bf4\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u88ab\u5355\u72ec\u62ff\u5230\u5806,\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u5269\u4e0b\u7684\u4e1c\u897f\u8fd8\u5728\u65b9\u6cd5\u533a, \u4e5f\u5c31\u662fhotspot\u4e2d\u7684\u6c38\u4e45\u4ee3\n\n\n\n\n\u5728JDK1.8\uff1a \u5143\u7a7a\u95f4\u548c\u5806\nhotspot\u79fb\u9664\u4e86\u6c38\u4e45\u4ee3\u7528\u5143\u7a7a\u95f4(Metaspace)\u53d6\u800c\u4ee3\u4e4b, \u8fd9\u65f6\u5019\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u8fd8\u5728\u5806, \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u8fd8\u5728\u65b9\u6cd5\u533a, \u53ea\u4e0d\u8fc7\u65b9\u6cd5\u533a\u7684\u5b9e\u73b0\u4ece\u6c38\u4e45\u4ee3\u53d8\u6210\u4e86\u5143\u7a7a\u95f4(Metaspace) \uff0c\u5143\u7a7a\u95f4\u5e76\u4e0d\u5728\u865a\u62df\u673a\u4e2d\uff0c\u800c\u662f\u5728\u672c\u5730\u5185\u5b58(Direct Memory)\n\n\n\n\u4e3a\u4ec0\u4e48\u8981\u5c06\u6c38\u4e45\u4ee3(PermGen)\u66ff\u6362\u4e3a\u5143\u7a7a\u95f4(MetaSpace)\u5462?\n\u6574\u4e2a\u6c38\u4e45\u4ee3\u6709\u2f00\u4e2a JVM \u672c\u8eab\u8bbe\u7f6e\u56fa\u5b9a\u2f24\u2f29\u4e0a\u7ebf\uff0c\u2f46\u6cd5\u8fdb\u2f8f\u8c03\u6574\uff0c\u2f7d\u5143\u7a7a\u95f4\u4f7f\u2f64\u7684\u662f\u76f4\u63a5\u5185\u5b58\uff0c\u53d7\u672c\u673a \u53ef\u2f64\u5185\u5b58\u7684\u9650\u5236\uff0c\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u5f97\u5230java.lang.OutOfMemoryError\u3002\u4f60\u53ef\u4ee5\u4f7f\u2f64 -XX\uff1a MaxMetaspaceSize \u6807\u5fd7\u8bbe\u7f6e\u6700\u2f24\u5143\u7a7a\u95f4\u2f24\u2f29\uff0c\u9ed8\u8ba4\u503c\u4e3a unlimited\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ea\u53d7\u7cfb\u7edf\u5185\u5b58\u7684\u9650 \u5236\u3002 -XX\uff1aMetaspaceSize \u8c03\u6574\u6807\u5fd7\u5b9a\u4e49\u5143\u7a7a\u95f4\u7684\u521d\u59cb\u2f24\u2f29\u5982\u679c\u672a\u6307\u5b9a\u6b64\u6807\u5fd7\uff0c\u5219 Metaspace \u5c06\u6839 \u636e\u8fd0\u2f8f\u65f6\u7684\u5e94\u2f64\u7a0b\u5e8f\u9700\u6c42\u52a8\u6001\u5730\u91cd\u65b0\u8c03\u6574\u2f24\u2f29\u3002 \u5f53\u7136\u8fd9\u53ea\u662f\u5176\u4e2d\u2f00\u4e2a\u539f\u56e0\uff0c\u8fd8\u6709\u5f88\u591a\u5e95\u5c42\u7684\u539f\u56e0\uff0c\u8fd9\u2fa5\u5c31\u4e0d\u63d0\u4e86\u3002\n\u5806\nJava \u865a\u62df\u673a\u6240\u7ba1\u7406\u7684\u5185\u5b58\u4e2d\u6700\u2f24\u7684\u2f00\u5757\uff0cJava \u5806\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u7684\u2f00\u5757\u5185\u5b58\u533a\u57df\uff0c\u5728\u865a\u62df\u673a\u542f\u52a8\u65f6\u521b \u5efa\u3002\u6b64\u5185\u5b58\u533a\u57df\u7684\u552f\u2f00\u2f6c\u7684\u5c31\u662f\u5b58\u653e\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u2f0f\u4e4e\u6240\u6709\u7684\u5bf9\u8c61\u5b9e\u4f8b\u4ee5\u53ca\u6570\u7ec4\u90fd\u5728\u8fd9\u2fa5\u5206\u914d\u5185\u5b58\u3002 Java \u5806\u662f\u5783\u573e\u6536\u96c6\u5668\u7ba1\u7406\u7684\u4e3b\u8981\u533a\u57df\uff0c\u56e0\u6b64\u4e5f\u88ab\u79f0\u4f5cGC\u5806\uff08Garbage Collected Heap\uff09.\u4ece\u5783\u573e\u56de\u6536\u7684 \u2ec6\u5ea6\uff0c\u7531\u4e8e\u73b0\u5728\u6536\u96c6\u5668\u57fa\u672c\u90fd\u91c7\u2f64\u5206\u4ee3\u5783\u573e\u6536\u96c6\u7b97\u6cd5\uff0c\u6240\u4ee5Java\u5806\u8fd8\u53ef\u4ee5\u7ec6\u5206\u4e3a\uff1a\u65b0\u2f63\u4ee3\u548c\u2f7c\u5e74\u4ee3\uff1a\u518d \u7ec6\u81f4\u2f00\u70b9\u6709\uff1aEden\u7a7a\u95f4\u3001From Survivor\u3001To Survivor\u7a7a\u95f4\u7b49\u3002\u8fdb\u2f00\u6b65\u5212\u5206\u7684\u2f6c\u7684\u662f\u66f4\u597d\u5730\u56de\u6536\u5185\u5b58\uff0c \u6216\u8005\u66f4\u5feb\u5730\u5206\u914d\u5185\u5b58\u3002\n\n\u4e0a\u56fe\u6240\u793a\u7684 eden\u533a\u3001s0\u533a\u3001s1\u533a\u90fd\u5c5e\u4e8e\u65b0\u2f63\u4ee3\uff0ctentired \u533a\u5c5e\u4e8e\u2f7c\u5e74\u4ee3\u3002\u2f24\u90e8\u5206\u60c5\u51b5\uff0c\u5bf9\u8c61\u90fd\u4f1a\u2fb8\u5148 \u5728 Eden \u533a\u57df\u5206\u914d\uff0c\u5728\u2f00\u6b21\u65b0\u2f63\u4ee3\u5783\u573e\u56de\u6536\u540e\uff0c\u5982\u679c\u5bf9\u8c61\u8fd8\u5b58\u6d3b\uff0c\u5219\u4f1a\u8fdb\u2f0a s0 \u6216\u8005 s1\uff0c\u5e76\u4e14\u5bf9\u8c61\u7684 \u5e74\u9f84\u8fd8\u4f1a\u52a0 1(Eden\u533ai&gt;Survivor \u533a\u540e\u5bf9\u8c61\u7684\u521d\u59cb\u5e74\u9f84\u53d8\u4e3a1)\uff0c\u5f53\u5b83\u7684\u5e74\u9f84\u589e\u52a0\u5230\u2f00\u5b9a\u7a0b\u5ea6\uff08\u9ed8\u8ba4\u4e3a15 \u5c81\uff09\uff0c\u5c31\u4f1a\u88ab\u664b\u5347\u5230\u2f7c\u5e74\u4ee3\u4e2d\u3002\u5bf9\u8c61\u664b\u5347\u5230\u2f7c\u5e74\u4ee3\u7684\u5e74\u9f84\u9608\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 - XX:MaxTenuringThreshold \u6765\u8bbe\u7f6e\u3002\n\u5e38\u91cf\u6c60\n\n\u7ebf\u7a0b\u79c1\u6709\n\n\u865a\u62df\u673a\u6808\uff1aJava\u65b9\u6cd5\u6267\u884c\u7684\u5185\u5b58\u6a21\u578b\uff0c\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u8868(\u5305\u62ec\u6210\u5458\u53d8\u91cf\uff0c\u5bf9\u8c61\u5730\u5740\uff0c\u5373\u5f15\u7528\u7c7b\u578b)\uff0c\u64cd\u4f5c\u6570\u6808\uff0c\u52a8\u6001\u94fe\u63a5\uff0c\u65b9\u6cd5\u51fa\u53e3\u4fe1\u606f\u3002\u968f\u7ebf\u7a0b\u521b\u5efa\u548c\u9500\u6bc1\n\u672c\u5730\u65b9\u6cd5\u6808\uff1a\u4e0e\u865a\u62df\u673a\u6808\u76f8\u4f3c\uff0c\u4e0d\u540c\u70b9\u672c\u5730\u65b9\u6cd5\u6808\u4e3anative\u65b9\u6cd5\u6267\u884c\u670d\u52a1\uff0c\u865a\u62df\u673a\u6808\u4e3a\u865a\u62df\u673a\u6808\u6267\u884c\u7684Java\u65b9\u6cd5\u670d\u52a1\n\u7a0b\u5e8f\u8ba1\u6570\u5668\uff1a\u5f53\u524d\u7ebf\u7a0b\u6240\u6267\u884c\u7684\u884c\u53f7\u6307\u793a\u5668\u3002\u662fJVM\u5185\u5b58\u533a\u57df\u6700\u5c0f\u7684\u4e00\u5757\u533a\u57df\u3002\u6267\u884c\u5b57\u8282\u7801\u5de5\u4f5c\u65f6\u5c31\u662f\u5229\u7528\u7a0b\u5e8f\u8ba1\u6570\u5668\u6765\u9009\u53d6\u4e0b\u4e00\u6761\u9700\u8981\u6267\u884c\u7684\u5b57\u8282\u7801\u6307\u4ee4\n\n\u865a\u62df\u673a\u6808\n\u4e0e\u7a0b\u5e8f\u8ba1\u6570\u5668\u2f00\u6837\uff0cJava\u865a\u62df\u673a\u6808\u4e5f\u662f\u7ebf\u7a0b\u79c1\u6709\u7684\uff0c\u5b83\u7684\u2f63\u547d\u5468\u671f\u548c\u7ebf\u7a0b\u76f8\u540c\uff0c\u63cf\u8ff0\u7684\u662f Java \u2f45\u6cd5\u6267 \u2f8f\u7684\u5185\u5b58\u6a21\u578b\uff0c\u6bcf\u6b21\u2f45\u6cd5\u8c03\u2f64\u7684\u6570\u636e\u90fd\u662f\u901a\u8fc7\u6808\u4f20\u9012\u7684\u3002\nJava \u5185\u5b58\u53ef\u4ee5\u7c97\u7cd9\u7684\u533a\u5206\u4e3a\u5806\u5185\u5b58\uff08Heap\uff09\u548c\u6808\u5185\u5b58(Stack),\u5176\u4e2d\u6808\u5c31\u662f\u73b0\u5728\u8bf4\u7684\u865a\u62df\u673a\u6808\uff0c\u6216\u8005\u8bf4 \u662f\u865a\u62df\u673a\u6808\u4e2d\u5c40\u90e8\u53d8\u91cf\u8868\u90e8\u5206\u3002 \uff08\u5b9e\u9645\u4e0a\uff0cJava\u865a\u62df\u673a\u6808\u662f\u7531\u2f00\u4e2a\u4e2a\u6808\u5e27\u7ec4\u6210\uff0c\u2f7d\u6bcf\u4e2a\u6808\u5e27\u4e2d\u90fd\u62e5 \u6709\uff1a\u5c40\u90e8\u53d8\u91cf\u8868\u3001\u64cd\u4f5c\u6570\u6808\u3001\u52a8\u6001\u94fe\u63a5\u3001\u2f45\u6cd5\u51fa\u2f1d\u4fe1\u606f\u3002\uff09\n\u5c40\u90e8\u53d8\u91cf\u8868\u4e3b\u8981\u5b58\u653e\u4e86\u7f16\u8bd1\u5668\u53ef\u77e5\u7684\u5404\u79cd\u6570\u636e\u7c7b\u578b\uff08boolean\u3001byte\u3001char\u3001short\u3001int\u3001float\u3001 long\u3001double\uff09\u3001\u5bf9\u8c61\u5f15\u2f64\uff08reference\u7c7b\u578b\uff0c\u5b83\u4e0d\u540c\u4e8e\u5bf9\u8c61\u672c\u8eab\uff0c\u53ef\u80fd\u662f\u2f00\u4e2a\u6307\u5411\u5bf9\u8c61\u8d77\u59cb\u5730\u5740\u7684\u5f15 \u2f64\u6307\u9488\uff0c\u4e5f\u53ef\u80fd\u662f\u6307\u5411\u2f00\u4e2a\u4ee3\u8868\u5bf9\u8c61\u7684\u53e5\u67c4\u6216\u5176\u4ed6\u4e0e\u6b64\u5bf9\u8c61\u76f8\u5173\u7684\u4f4d\u7f6e\uff09\u3002\nJava \u865a\u62df\u673a\u6808\u4f1a\u51fa\u73b0\u4e24\u79cd\u5f02\u5e38\uff1aStackOverFlowError \u548c OutOfMemoryError\u3002\n\nStackOverFlowError\uff1a \u82e5Java\u865a\u62df\u673a\u6808\u7684\u5185\u5b58\u2f24\u2f29\u4e0d\u5141\u8bb8\u52a8\u6001\u6269\u5c55\uff0c\u90a3\u4e48\u5f53\u7ebf\u7a0b\u8bf7\u6c42\u6808\u7684\u6df1\u5ea6 \u8d85\u8fc7\u5f53\u524dJava\u865a\u62df\u673a\u6808\u7684\u6700\u2f24\u6df1\u5ea6\u7684\u65f6\u5019\uff0c\u5c31\u629b\u51faStackOverFlowError\u5f02\u5e38\u3002 \nOutOfMemoryError\uff1a \u82e5 Java \u865a\u62df\u673a\u6808\u7684\u5185\u5b58\u2f24\u2f29\u5141\u8bb8\u52a8\u6001\u6269\u5c55\uff0c\u4e14\u5f53\u7ebf\u7a0b\u8bf7\u6c42\u6808\u65f6\u5185\u5b58\u2f64\u5b8c \u4e86\uff0c\u2f46\u6cd5\u518d\u52a8\u6001\u6269\u5c55\u4e86\uff0c\u6b64\u65f6\u629b\u51faOutOfMemoryError\u5f02\u5e38\u3002 \n\n\nJava \u865a\u62df\u673a\u6808\u4e5f\u662f\u7ebf\u7a0b\u79c1\u6709\u7684\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u5404\u2f83\u7684Java\u865a\u62df\u673a\u6808\uff0c\u2f7d\u4e14\u968f\u7740\u7ebf\u7a0b\u7684\u521b\u5efa\u2f7d\u521b\u5efa\uff0c\u968f \u7740\u7ebf\u7a0b\u7684\u6b7b\u4ea1\u2f7d\u6b7b\u4ea1\u3002\n\u6269\u5c55\uff1a\u90a3\u4e48\u2f45\u6cd5/\u51fd\u6570\u5982\u4f55\u8c03\u2f64\uff1f Java \u6808\u53ef\u2f64\u7c7b\u2f50\u6570\u636e\u7ed3\u6784\u4e2d\u6808\uff0cJava \u6808\u4e2d\u4fdd\u5b58\u7684\u4e3b\u8981\u5185\u5bb9\u662f\u6808\u5e27\uff0c\u6bcf\u2f00\u6b21\u51fd\u6570\u8c03\u2f64\u90fd\u4f1a\u6709\u2f00\u4e2a\u5bf9\u5e94\u7684 \u6808\u5e27\u88ab\u538b\u2f0aJava\u6808\uff0c\u6bcf\u2f00\u4e2a\u51fd\u6570\u8c03\u2f64\u7ed3\u675f\u540e\uff0c\u90fd\u4f1a\u6709\u2f00\u4e2a\u6808\u5e27\u88ab\u5f39\u51fa\u3002 Java\u2f45\u6cd5\u6709\u4e24\u79cd\u8fd4\u56de\u2f45\u5f0f\uff1a\n\nreturn \u8bed\u53e5\u3002 \n\u629b\u51fa\u5f02\u5e38\u3002 \n\n\u7ba1\u54ea\u79cd\u8fd4\u56de\u2f45\u5f0f\u90fd\u4f1a\u5bfc\u81f4\u6808\u5e27\u88ab\u5f39\u51fa\u3002\n\u672c\u5730\u65b9\u6cd5\u6808\n\u548c\u865a\u62df\u673a\u6808\u6240\u53d1\u6325\u7684\u4f5c\u2f64\u2fae\u5e38\u76f8\u4f3c\uff0c\u533a\u522b\u662f\uff1a \u865a\u62df\u673a\u6808\u4e3a\u865a\u62df\u673a\u6267\u2f8f Java \u2f45\u6cd5 \uff08\u4e5f\u5c31\u662f\u5b57\u8282\u7801\uff09\u670d \u52a1\uff0c\u2f7d\u672c\u5730\u2f45\u6cd5\u6808\u5219\u4e3a\u865a\u62df\u673a\u4f7f\u2f64\u5230\u7684 Native \u2f45\u6cd5\u670d\u52a1\u3002\n\u5728 HotSpot \u865a\u62df\u673a\u4e2d\u548c Java \u865a\u62df\u673a\u6808\u5408 \u2f06\u4e3a\u2f00\u3002 \u672c\u5730\u2f45\u6cd5\u88ab\u6267\u2f8f\u7684\u65f6\u5019\uff0c\u5728\u672c\u5730\u2f45\u6cd5\u6808\u4e5f\u4f1a\u521b\u5efa\u2f00\u4e2a\u6808\u5e27\uff0c\u2f64\u4e8e\u5b58\u653e\u8be5\u672c\u5730\u2f45\u6cd5\u7684\u5c40\u90e8\u53d8\u91cf\u8868\u3001\u64cd\u4f5c\u6570 \u6808\u3001\u52a8\u6001\u94fe\u63a5\u3001\u51fa\u2f1d\u4fe1\u606f\u3002\n\u2f45\u6cd5\u6267\u2f8f\u5b8c\u6bd5\u540e\u76f8\u5e94\u7684\u6808\u5e27\u4e5f\u4f1a\u51fa\u6808\u5e76\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\uff0c\u4e5f\u4f1a\u51fa\u73b0 StackOverFlowError \u548c OutOfMemoryError \u4e24\u79cd\u5f02\u5e38\u3002\n\u7a0b\u5e8f\u8ba1\u6570\u5668\n\u7a0b\u5e8f\u8ba1\u6570\u5668\u662f\u2f00\u5757\u8f83\u2f29\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u5f53\u524d\u7ebf\u7a0b\u6240\u6267\u2f8f\u7684\u5b57\u8282\u7801\u7684\u2f8f\u53f7\u6307\u793a\u5668\u3002\u5b57\u8282\u7801\u89e3\u91ca\u5668 \u2f2f\u4f5c\u65f6\u901a\u8fc7\u6539\u53d8\u8fd9\u4e2a\u8ba1\u6570\u5668\u7684\u503c\u6765\u9009\u53d6\u4e0b\u2f00\u6761\u9700\u8981\u6267\u2f8f\u7684\u5b57\u8282\u7801\u6307\u4ee4\uff0c\u5206\u2f40\u3001\u5faa\u73af\u3001\u8df3\u8f6c\u3001\u5f02\u5e38\u5904\u7406\u3001 \u7ebf\u7a0b\u6062\u590d\u7b49\u529f\u80fd\u90fd\u9700\u8981\u4f9d\u8d56\u8fd9\u4e2a\u8ba1\u6570\u5668\u6765\u5b8c\u3002 \u53e6\u5916\uff0c\u4e3a\u4e86\u7ebf\u7a0b\u5207\u6362\u540e\u80fd\u6062\u590d\u5230\u6b63\u786e\u7684\u6267\u2f8f\u4f4d\u7f6e\uff0c\u6bcf\u6761\u7ebf\u7a0b\u90fd\u9700\u8981\u6709\u2f00\u4e2a\u72ec\u2f74\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u5404\u7ebf\u7a0b\u4e4b \u95f4\u8ba1\u6570\u5668\u4e92\u4e0d\u5f71\u54cd\uff0c\u72ec\u2f74\u5b58\u50a8\uff0c\u6211\u4eec\u79f0\u8fd9\u7c7b\u5185\u5b58\u533a\u57df\u4e3a\u201c\u7ebf\u7a0b\u79c1\u6709\u201d\u7684\u5185\u5b58\u3002\n\u7a0b\u5e8f\u8ba1\u6570\u5668\u4e3b\u8981\u6709\u4e0b\u2faf\u4e24\u4e2a\u4f5c\u2f64\uff1a\n\n\u5b57\u8282\u7801\u89e3\u91ca\u5668\u901a\u8fc7\u6539\u53d8\u7a0b\u5e8f\u8ba1\u6570\u5668\u6765\u4f9d\u6b21\u8bfb\u53d6\u6307\u4ee4\uff0c\u4ece\u2f7d\u5b9e\u73b0\u4ee3\u7801\u7684\u6d41\u7a0b\u63a7\u5236\uff0c\u5982\uff1a\u987a\u5e8f\u6267\u2f8f\u3001 \u9009\u62e9\u3001\u5faa\u73af\u3001\u5f02\u5e38\u5904\u7406\u3002 \n\u5728\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\u2f64\u4e8e\u8bb0\u5f55\u5f53\u524d\u7ebf\u7a0b\u6267\u2f8f\u7684\u4f4d\u7f6e\uff0c\u4ece\u2f7d\u5f53\u7ebf\u7a0b\u88ab\u5207\u6362\u56de\u6765\u7684\u65f6\u5019\u80fd \u591f\u77e5\u9053\u8be5\u7ebf\u7a0b\u4e0a\u6b21\u8fd0\u2f8f\u5230\u54ea\u2f09\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6267\u2f8f\u7684\u662f native \u2f45\u6cd5\uff0c\u90a3\u4e48\u7a0b\u5e8f\u8ba1\u6570\u5668\u8bb0\u5f55\u7684\u662f undefined \u5730\u5740\uff0c\u53ea\u6709\u6267\u2f8f\u7684 \u662f Java \u4ee3\u7801\u65f6\u7a0b\u5e8f\u8ba1\u6570\u5668\u8bb0\u5f55\u7684\u624d\u662f\u4e0b\u2f00\u6761\u6307\u4ee4\u7684\u5730\u5740\u3002 \u6240\u4ee5\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\u79c1\u6709\u4e3b\u8981\u662f\u4e3a\u4e86\u7ebf\u7a0b\u5207\u6362\u540e\u80fd\u6062\u590d\u5230\u6b63\u786e\u7684\u6267\u2f8f\u4f4d\u7f6e\u3002\u7a0b\u5e8f\u8ba1\u6570\u5668\u662f\u552f\u2f00\u2f00\u4e2a\u4e0d\u4f1a\u51fa\u73b0 OutOfMemoryError \u7684\u5185\u5b58\u533a\u57df\uff0c\u5b83\u7684\u2f63\u547d\u5468\u671f\u968f\u7740\u7ebf\u7a0b\u7684\u521b\u5efa \u2f7d\u521b\u5efa\uff0c\u968f\u7740\u7ebf\u7a0b\u7684\u7ed3\u675f\u2f7d\u6b7b\u4ea1\u3002\n\u865a\u62df\u673a\u6808\u548c\u672c\u5730\u2f45\u6cd5\u6808\u4e3a\u4ec0\u4e48\u662f\u7ebf\u7a0b\u79c1\u6709\u7684?\n\n\u865a\u62df\u673a\u6808\uff1a \u6bcf\u4e2a Java \u2f45\u6cd5\u5728\u6267\u2f8f\u7684\u540c\u65f6\u4f1a\u521b\u5efa\u2f00\u4e2a\u6808\u5e27\u2f64\u4e8e\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u8868\u3001\u64cd\u4f5c\u6570\u6808\u3001\u5e38\u91cf\u6c60\u5f15\u2f64\u7b49\u4fe1\u606f\u3002\u4ece\u2f45\u6cd5\u8c03\u2f64\u76f4\u2f84\u6267\u2f8f\u5b8c\u6210\u7684\u8fc7\u7a0b\uff0c\u5c31\u5bf9\u5e94\u7740\u2f00\u4e2a\u6808\u5e27\u5728 Java \u865a\u62df\u673a\u6808\u4e2d\u2f0a\u6808 \u548c\u51fa\u6808\u7684\u8fc7\u7a0b\u3002 \n\u672c\u5730\u2f45\u6cd5\u6808\uff1a \u548c\u865a\u62df\u673a\u6808\u6240\u53d1\u6325\u7684\u4f5c\u2f64\u2fae\u5e38\u76f8\u4f3c\uff0c\u533a\u522b\u662f\uff1a \u865a\u62df\u673a\u6808\u4e3a\u865a\u62df\u673a\u6267\u2f8f Java \u2f45\u6cd5 \uff08\u4e5f\u5c31\u662f\u5b57\u8282\u7801\uff09\u670d\u52a1\uff0c\u2f7d\u672c\u5730\u2f45\u6cd5\u6808\u5219\u4e3a\u865a\u62df\u673a\u4f7f\u2f64\u5230\u7684 Native \u2f45\u6cd5\u670d\u52a1\u3002 \u5728 HotSpot \u865a \u62df\u673a\u4e2d\u548c Java \u865a\u62df\u673a\u6808\u5408\u2f06\u4e3a\u2f00\u3002\n\n\u6240\u4ee5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u4e0d\u88ab\u522b\u7684\u7ebf\u7a0b\u8bbf\u95ee\u5230\uff0c\u865a\u62df\u673a\u6808\u548c\u672c\u5730\u2f45\u6cd5\u6808\u662f\u7ebf\u7a0b\u79c1\u6709\u7684\u3002\n\u5806\u548c\u6808\u7684\u533a\u522b\u8054\u7cfb\uff1f\n\u53c2\u8003\n\nhttps://www.cnblogs.com/weichunguang/p/wei6.html\n\n\nJava\u628a\u5185\u5b58\u5212\u5206\u6210\u4e24\u79cd\uff1a\u4e00\u79cd\u662f\u6808\u5185\u5b58\uff0c\u4e00\u79cd\u662f\u5806\u5185\u5b58\u3002\n\u4f5c\u7528\n\n\u5806\uff1a\u5b58\u653e\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u548c\u6570\u7ec4\u90fd\u8981\u5728\u5806\u4e0a\u5206\u914d\u3002\u662fJVM\u6240\u7ba1\u7406\u7684\n\u6808\uff1aJava\u65b9\u6cd5\u6267\u884c\u7684\u5185\u5b58\u6a21\u578b\uff0c\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u8868\uff0c\u64cd\u4f5c\u6570\u6808\uff0c\u52a8\u6001\u94fe\u63a5\uff0c\u65b9\u6cd5\u51fa\u53e3\u4fe1\u606f\u3002\u968f\u7ebf\u7a0b\u521b\u5efa\u548c\u9500\u6bc1\n\n\u79c1\u6709\u6216\u5171\u4eab\n\n\u5806\uff1a\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\u5bf9\u6240\u6709\u7ebf\u7a0b\u53ef\u89c1\u3002\u5806\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\u53ef\u4ee5\u88ab\u6240\u6709\u7ebf\u7a0b\u8bbf\u95ee\u3002\u7ebf\u7a0b\u5171\u4eab\n\u6808\uff1a\u5185\u5b58\u5f52\u5c5e\u4e8e\u5355\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u6808\u5185\u5b58\uff0c\u5176\u5b58\u50a8\u7684\u53d8\u91cf\u53ea\u80fd\u5728\u5176\u6240\u5c5e\u7ebf\u7a0b\u4e2d\u53ef\u89c1\uff0c\u5373\u6808\u5185\u5b58\u53ef\u4ee5\u7406\u89e3\u6210\u7ebf\u7a0b\u7684\u79c1\u6709\u5185\u5b58\u3002\u7ebf\u7a0b\u79c1\u6709\n\n\u5f02\u5e38\u9519\u8bef\n\n\u5806\u5185\u5b58\uff1a\u6ca1\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u5b58\u50a8\u751f\u6210\u7684\u5bf9\u8c61\uff0cJVM\u4f1a\u629b\u51fajava.lang.OutOfMemoryError\u3002\n\u6808\u5185\u5b58\uff1a\u6ca1\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u5b58\u50a8\u65b9\u6cd5\u8c03\u7528\u548c\u5c40\u90e8\u53d8\u91cf\uff0cJVM\u4f1a\u629b\u51fajava.lang.StackOverFlowError\u3002\n\n\u7a7a\u95f4\u5927\u5c0f\nGC(Garbage Collection)\u5783\u573e\u56de\u6536\n\u53c2\u8003\n\nhttps://blog.csdn.net/laomo_bible/article/details/83112622\n\n\n\u9700\u8981GC\u7684\u533a\u57df\njvm \u4e2d\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u90fd\u662f\u968f\u7ebf\u7a0b\u800c\u751f\u968f\u7ebf\u7a0b\u800c\u706d\uff0c\u6808\u5e27\u968f\u7740\u65b9\u6cd5\u7684\u8fdb\u5165\u548c\u9000\u51fa\u505a\u5165\u6808\u548c\u51fa\u6808\u64cd\u4f5c\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u7684\u5185\u5b58\u6e05\u7406\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u5185\u5b58\u5783\u573e\u56de\u6536\u4e3b\u8981\u96c6\u4e2d\u4e8e java \u5806\u548c\u65b9\u6cd5\u533a\u4e2d\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u7684\u5206\u914d\u548c\u4f7f\u7528\u90fd\u662f\u52a8\u6001\u7684\u3002\nGC\u7684\u5bf9\u8c61\n\u9700\u8981\u8fdb\u884c\u56de\u6536\u7684\u5bf9\u8c61\u5c31\u662f\u5df2\u7ecf\u6ca1\u6709\u5b58\u6d3b\u7684\u5bf9\u8c61\uff0c\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5b58\u6d3b\u5e38\u7528\u7684\u6709\u4e24\u79cd\u529e\u6cd5\uff1a\n\n\u5f15\u7528\u8ba1\u6570\uff1a\u6bcf\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u5c5e\u6027\uff0c\u65b0\u589e\u4e00\u4e2a\u5f15\u7528\u65f6\u8ba1\u6570\u52a01\uff0c\u5f15\u7528\u91ca\u653e\u65f6\u8ba1\u6570\u51cf1\uff0c\u8ba1\u6570\u4e3a0\u65f6\u53ef\u4ee5\u56de\u6536\u3002\u6b64\u65b9\u6cd5\u7b80\u5355\uff0c\u65e0\u6cd5\u89e3\u51b3\u5bf9\u8c61\u76f8\u4e92\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\uff0c\u800c\u4e14\u8ba1\u6570\u5668\u9700\u8981\u7ef4\u62a4\uff0c\u9700\u8981\u6d88\u8017\uff0c\u6240\u4ee5\u5f88\u5c11\u7528\u3002\n\n\u53ef\u8fbe\u5206\u6790\uff1a\u4eceGC Roots\u5f00\u59cb\u5411\u4e0b\u641c\u7d22\uff0c\u641c\u7d22\u6240\u8d70\u8fc7\u7684\u8def\u5f84\u79f0\u4e3a\u5f15\u7528\u94fe\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u5230GC Roots\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u94fe\u76f8\u8fde\u65f6\uff0c\u5219\u8bc1\u660e\u6b64\u5bf9\u8c61\u662f\u4e0d\u53ef\u7528\u7684\u3002\u4e0d\u53ef\u8fbe\u5bf9\u8c61\u3002\u5728Java\u8bed\u8a00\u4e2d\uff0cGC Roots\u5305\u62ec\uff1a\n\n\u865a\u62df\u673a\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61\u3002\n\u65b9\u6cd5\u533a\u4e2d\u7c7b\u9759\u6001\u5c5e\u6027\u5b9e\u4f53\u5f15\u7528\u7684\u5bf9\u8c61\u3002\n\u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61\u3002\n\u672c\u5730\u65b9\u6cd5\u6808\u4e2dJNI\u5f15\u7528\u7684\u5bf9\u8c61\u3002\n\n\n\n\n\n\u4ec0\u4e48\u65f6\u5019\u89e6\u53d1GC\n\n\u7a0b\u5e8f\u8c03\u7528System.gc()\u65f6\u53ef\u4ee5\u89e6\u53d1\n\u7cfb\u7edf\u81ea\u8eab\u6765\u51b3\u5b9aGC\u89e6\u53d1\u7684\u65f6\u673a\uff08\u6839\u636eEden\u533a\u548cFrom Space\u533a\u7684\u5185\u5b58\u5927\u5c0f\u6765\u51b3\u5b9a\u3002\u5f53\u5185\u5b58\u5927\u5c0f\u4e0d\u8db3\u65f6\uff0c\u5219\u4f1a\u542f\u52a8GC\u7ebf\u7a0b\u5e76\u505c\u6b62\u5e94\u7528\u7ebf\u7a0b\uff09\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "JVM", "slug": "JVM", "permalink": "/tag/JVM/"}]}, {"title": "Java-\u5bb9\u5668", "date": "2020-08-23T20:37:41-00.00", "path": "/archives/Java-\u5bb9\u5668/", "text": "\u5bb9\u5668\u603b\u89c8\n\n\n\n\n\u5e38\u7528\u96c6\u5408\u65b9\u6cd5\n\u53c2\u8003\nhttps://wiki.lifeisgg.online/archives/Java%E6%96%B9%E6%B3%95%E6%B1%87%E6%80%BB\n\n1. List\n1.1 ArrayList\n\u53c2\u8003\nArrayList\u65b9\u6cd5\u539f\u7406\uff1ahttps://www.cnblogs.com/lierabbit/p/8383683.html\n\n\u6784\u9020\u65b9\u6cd5\n\n\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\n\u6709\u53c2\u6784\u9020\u65b9\u6cd5\n\u6307\u5b9a\u96c6\u5408\n\npublic ArrayList()//\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\npublic ArrayList(int initialCapacity)\uff1b//\u6709\u53c2\u6784\u9020\u65b9\u6cd5\npublic ArrayList(Collection&lt;? extends E&gt; c)//\u6307\u5b9a\u96c6\u5408\n\n/**\n* \u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u5927\u5c0f\u4e3a10\n*/\nprivate static final int DEFAULT_CAPACITY = 10;\n\n/**\u9ed8\u8ba4\u7a7a\u6570\u7ec4*/\nprivate static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n\n\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\n\u4ee5\u65e0\u53c2\u6570\u6784\u9020\u65b9\u6cd5\u521b\u5efa ArrayList \u65f6\uff0c\u5b9e\u9645\u4e0a\u521d\u59cb\u5316\u8d4b\u503c\u7684\u662f\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002\u5f53\u771f\u6b63\u5bf9\u6570\u7ec4\u8fdb\u884c\u6dfb\u52a0\u5143\u7d20\u64cd\u4f5c\u65f6\uff0c\u624d\u771f\u6b63\u5206\u914d\u5bb9\u91cf\u3002\u5373\u5411\u6570\u7ec4\u4e2d\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u6570\u7ec4\u5bb9\u91cf\u6269\u4e3a10\u3002\n/**\n     * Shared empty array instance used for default sized empty instances. We\n     * distinguish this from EMPTY_ELEMENTDATA to know how much to inflate when\n     * first element is added.\n     */\n    private static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n    /**\n     * Constructs an empty list with an initial capacity of ten.\n     */\n    public ArrayList() {\n        this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n    }\n\n\u6709\u53c2\u6307\u5b9a\u5927\u5c0f\u6784\u9020\u65b9\u6cd5\n\n\u5f53\u6307\u5b9a\u7684\u521d\u59cb\u5bb9\u91cf\u5927\u4e8e0\uff0c\u521d\u59cb\u5316\u6307\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\n\u5f53\u6307\u5b9a\u7684\u521d\u59cb\u5bb9\u91cf\u7b49\u4e8e0\uff0c\u521d\u59cb\u5316\u7a7a\u6570\u7ec4\n\u5f53\u6307\u5b9a\u7684\u521d\u59cb\u5bb9\u91cf\u5c0f\u4e8e0\uff0c\u629b\u51faIllegalArgumentException\u5f02\u5e38\n\n/**\n     * Shared empty array instance used for empty instances.\n     */\n    private static final Object[] EMPTY_ELEMENTDATA = {};\n    /**\n     * Constructs an empty list with the specified initial capacity.\n     *\n     * @param  initialCapacity  the initial capacity of the list\n     * @throws IllegalArgumentException if the specified initial capacity\n     *         is negative\n     */\n\n\n    public ArrayList(int initialCapacity) {\n        if (initialCapacity &gt; 0) {\n            this.elementData = new Object[initialCapacity];\n        } else if (initialCapacity == 0) {\n            this.elementData = EMPTY_ELEMENTDATA;\n        } else {\n            throw new IllegalArgumentException(&quot;Illegal Capacity: &quot;+\n                                               initialCapacity);\n        }\n    }\n\n\u6307\u5b9a\u96c6\u5408\n\u5f53\u6307\u5b9a\u96c6\u5408\u4e0d\u4e3a\u7a7a\u5373\u957f\u5ea6\u4e0d\u4e3a0\uff0c\u5219\u590d\u5236\u8be5\u96c6\u5408\uff0c\u5426\u5219\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u6570\u7ec4\n/**\n     * Constructs a list containing the elements of the specified\n     * collection, in the order they are returned by the collection&#39;s\n     * iterator.\n     *\n     * @param c the collection whose elements are to be placed into this list\n     * @throws NullPointerException if the specified collection is null\n     */\n    public ArrayList(Collection&lt;? extends E&gt; c) {\n        elementData = c.toArray();\n        if ((size = elementData.length) != 0) {\n            // c.toArray might (incorrectly) not return Object[] (see 6260652)\n            if (elementData.getClass() != Object[].class)\n                elementData = Arrays.copyOf(elementData, size, Object[].class);\n        } else {\n            // replace with empty array.\n            this.elementData = EMPTY_ELEMENTDATA;\n        }\n    }\n\nE get(int index) \uff1a\u83b7\u53d6index\u4f4d\u7f6e\u7684\u5143\u7d20\n\u9996\u5148\u5224\u65adindex\u662f\u5426\u8d8a\u754c\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u5224\u65ad\u662f\u5426\u5c0f\u4e8e0\uff0c\u56e0\u4e3a\u4e0b\u6807\u5c0f\u4e8e0\u65f6\u6570\u7ec4\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u8d8a\u754c\u5219\u629b\u51faIndexOutOfBoundsException\u5f02\u5e38\uff0c\u53cd\u4e4b\u8fd4\u56de\u6570\u7ec4\u5bf9\u5e94index\u4f4d\u7f6e\u7684\u5143\u7d20\n// Positional Access Operations\n    // \u8fd4\u56deindex\u4e0b\u6807\u7684\u5143\u7d20\u4e14\u5f3a\u5236\u8f6c\u5316\u4e3aE\uff08List&lt;E&gt;\u4e2d\u7684E\uff09\u7c7b\u578b\n    @SuppressWarnings(&quot;unchecked&quot;)\n    E elementData(int index) {\n        return (E) elementData[index];\n    }\n\n    /**\n     * Returns the element at the specified position in this list.\n     *\n     * @param  index index of the element to return\n     * @return the element at the specified position in this list\n     * @throws IndexOutOfBoundsException {@inheritDoc}\n     */\n    public E get(int index) {\n        // \u68c0\u67e5index\u662f\u5426\u8d8a\u754c\n        rangeCheck(index);\n        // \u8fd4\u56deindex\u4e0b\u6807\u7684\u5143\u7d20\n        return elementData(index);\n    }\n\n    /**\n     * Checks if the given index is in range.  If not, throws an appropriate\n     * runtime exception.  This method does *not* check if the index is\n     * negative: It is always used immediately prior to an array access,\n     * which throws an ArrayIndexOutOfBoundsException if index is negative.\n     */\n    private void rangeCheck(int index) {\n        // \u68c0\u67e5index\u662f\u5426\u5927\u4e8e\u7b49\u4e8esize\uff08\u6570\u7ec4\u7684\u5143\u7d20\u6570\u91cf\uff09\uff0c\u56e0\u4e3a\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u4e5f\u4e0d\u80fd\u7b49\u4e8e\u5143\u7d20\u6570\u91cf\n        // \u8fd9\u91cc\u6ca1\u6709\u68c0\u67e5index &lt; 0\u7684\u60c5\u51b5\uff0c\u56e0\u4e3aindex &lt; 0\u65f6\u6570\u7ec4\u4f1a\u81ea\u52a8\u629b\u51fa\u5f02\u5e38\uff0c\u6240\u4ee5\u5e76\u672a\u68c0\u67e5index&lt;0\u7684\u60c5\u51b5\n        if (index &gt;= size)\n            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));\n    }\n\n    /**\n     * Constructs an IndexOutOfBoundsException detail message.\n     * Of the many possible refactorings of the error handling code,\n     * this &quot;outlining&quot; performs best with both server and client VMs.\n     */\n    private String outOfBoundsMsg(int index) {\n        return &quot;Index: &quot;+index+&quot;, Size: &quot;+size;\n    }\n\nE set(int index, E element)  \uff1a\u8bbe\u7f6e\uff08\u8986\u76d6\uff09index\u4f4d\u7f6e\u7684\u5143\u7d20\n\u548cget\u4e00\u6837\u5148\u5224\u65adindex\uff08\u4e0b\u6807\uff09\u662f\u5426\u8d8a\u754c\uff0c\u4e0d\u8d8a\u754c\u5219\u5148\u83b7\u53d6\u539f\u6765index\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\uff0c\u63a5\u7740\u8bbe\u7f6e\uff08\u8986\u76d6\uff09index\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\uff0c\u7136\u540e\u8fd4\u56de\u539f\u6765\u7684\u5143\u7d20\uff0c\u53cd\u4e4b\u629b\u51faIndexOutOfBoundsException\u5f02\u5e38\n/**\n     * Replaces the element at the specified position in this list with\n     * the specified element.\n     *\n     * @param index index of the element to replace\n     * @param element element to be stored at the specified position\n     * @return the element previously at the specified position\n     * @throws IndexOutOfBoundsException {@inheritDoc}\n     */\n    public E set(int index, E element) {\n        rangeCheck(index);\n\n        E oldValue = elementData(index);\n        elementData[index] = element;\n        return oldValue;\n    }\n\nboolean add(E e)  \uff1a\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u5230\u5217\u8868\u5c3e/\u6269\u5bb9\u673a\u5236\n\u53c2\u8003\n\nhttps://www.cnblogs.com/dengrongzhang/p/9371551.html\nhttps://blog.csdn.net/zymx14/article/details/78324464\nhttps://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/ArrayList-Grow.md\n\n\n\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u5230\u5217\u8868\u5c3e\uff0c\u5f53\u5217\u8868\u5bb9\u91cf\u4e0d\u8db3\u65f6\u81ea\u52a8\u6269\u5bb9\uff08\u901a\u5e38\u662f\u6269\u5bb9\u81f3\u539f\u6765\u76841.5\u500d\uff09\uff0c\u6dfb\u52a0\u6210\u529f\u8fd4\u56detrue \u3002\u5982\u679c\u662f\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u4e14\u8c03\u7528\u7684\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u65f6\u662f\u5c06\u7a7a\u6570\u7ec4DEFAULTCAPACITY_EMPTY_ELEMENTDATA\u8d4b\u7ed9elementData\uff0c\u5728\u7b2c\u4e00\u6b21\u8c03\u7528add\u65b9\u6cd5\u65f6\u624d\u4f1a\u6269\u5bb9\uff0c\u4e00\u822c\u662f\u9ed8\u8ba4\u503cDEFAULT_CAPACITY = 10\n\u6d41\u7a0b\n\n\u7b2c\u4e00\u6b65\uff1a\u8c03\u7528ensureCapacityInternal(size + 1)\u65b9\u6cd5\n\u7b2c\u4e8c\u6b65\uff1a\u8c03\u7528 calculateCapacity(elementData, minCapacity) \u65b9\u6cd5\u8ba1\u7b97\u8fd4\u56de\u9700\u8981\u6269\u5bb9\u7684\u6700\u5c0f\u503c\n\u7b2c\u4e09\u6b65\uff1a\u8c03\u7528ensureExplicitCapacity()\u65b9\u6cd5\u5224\u65ad\u6269\u5bb9\u7684\u6700\u5c0f\u503c\u662f\u5426\u5927\u4e8e\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u6b64\u65f6minCapacity\u4e3a\u8c03\u7528calculateCapacity\u4f20\u8fc7\u6765\u7684\u6700\u540e\u8ba1\u7b97\u5f97\u51fa\u7684\u6700\u5c0f\u5bb9\u91cf\u3002\u5927\u4e8e\u5219\u7ee7\u7eed\u8c03\u7528grow(minCapacity)\u65b9\u6cd5\uff0c\u5426\u5219\u76f4\u63a5 elementData[size++] = e;\n\u7b2c\u56db\u6b65\uff1a\u8c03\u7528grow()\u65b9\u6cd5\u8fdb\u884c\u6269\u5bb9\u3002\u5148newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);\u8ba1\u7b97\u6269\u5bb91.5\u500d\u540e\u518d\u4e0eminCapacity\u5bf9\u6bd4\uff0c\u5982\u679c\u8fd8\u662f\u6bd4minCapacity\u5c0f\u5c31\u76f4\u63a5newCapacity = minCapacity; \u4e4b\u540e\u518d\u5c06newCapacity\u4e0eMAX_ARRAY_SIZE\u5bf9\u6bd4\uff0c\u5982\u679c\u6bd4MAX_ARRAY_SIZE\u5927\u90a3\u5c31\u8c03\u7528hugeCapacity(minCapacity);\u91cd\u65b0\u8ba1\u7b97\u5927\u5c0f\uff0c\u6700\u540eelementData = Arrays.copyOf(elementData, newCapacity);\u5b8c\u6210\u6269\u5bb9\uff0c\u6700\u540e\u518d\u5c06\u52a0\u7684\u5bf9\u8c61\u8d4b\u503c\u7ed9elementData[size] , size++\n\n\u7b2c\u4e00\u6b65\uff1a\u8c03\u7528ensureCapacityInternal(size + 1)\u65b9\u6cd5\nminCapacity = size + 1\u5373\u4e3a\u6240\u9700\u6700\u5c0f\u5bb9\u91cf\uff0c\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\u4f1a\u5148\u8c03\u7528calculateCapacity(elementData, minCapacity)\u53bb\u8ba1\u7b97\u6240\u9700\u6700\u5c0f\u5bb9\u91cf\uff0c\u4e4b\u540e\u4f5c\u4e3a\u53c2\u6570\u53bb\u8c03\u7528ensureExplicitCapacity\u53bb\u4e0e\u5f53\u524delementdata\u6570\u7ec4\u7684\u957f\u5ea6elementdata.length\u6bd4\u8f83\u770b\u662f\u5426\u9700\u8981\u8c03\u7528grow()\u53bb\u6269\u5bb9\u3002\n/**\n     * Appends the specified element to the end of this list.\n     *\n     * @param e element to be appended to this list\n     * @return &lt;tt&gt;true&lt;/tt&gt; (as specified by {@link Collection#add})\n     */\n    public boolean add(E e) {\n        // \u68c0\u67e5\u5f53\u524d\u5bb9\u91cf\u662f\u5426\u8fd8\u53ef\u4ee5\u5bb9\u7eb3\u4e00\u4e2a\u5143\u7d20\uff0c\u4e0d\u591f\u5219\u6269\u5bb9\n        ensureCapacityInternal(size + 1);  // Increments modCount!!\n        // \u6dfb\u52a0\u5230\u6570\u7ec4\u672b\u5c3e\n        // \u8fd9\u4e2a\u8bed\u53e5\u53ef\u4ee5\u5206\u89e3\u4e3a\n        // elementData[size] = e;\n        // size += 1;\n        elementData[size++] = e;\n        return true;\n    }\n\n        private void ensureCapacityInternal(int minCapacity) {\n        ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));\n    }\n\n\u6ce8\u610f \uff1aJDK11 \u79fb\u9664\u4e86 ensureCapacityInternal() \u548c ensureExplicitCapacity() \u65b9\u6cd5\n\n\u7b2c\u4e8c\u6b65\uff1a\u8c03\u7528 calculateCapacity(elementData, minCapacity) \u65b9\u6cd5\n\u8ba1\u7b97\u9ed8\u8ba4\u5bb9\u91cfDEFAULT_CAPACITY = 10\u548c\u5f53\u524dminCapacity = size + 1\u7684\u6700\u5927\u503c\u3002\u5f53 \u8981 add \u8fdb\u7b2c1\u4e2a\u5143\u7d20\u65f6\uff0cminCapacity\u4e3a1\uff0c\u5728Math.max()\u65b9\u6cd5\u6bd4\u8f83\u540e\uff0cminCapacity \u4e3a10\u3002\n/**\n     * Default initial capacity.\n     */\n    private static final int DEFAULT_CAPACITY = 10;  // \u9ed8\u8ba4\u5bb9\u91cf\u4e3a10\n\n // \u5982\u679c\u6570\u636e\u7b49\u4e8e\u9ed8\u8ba4\u6570\u636e\uff0c\u8fd4\u56de\u9ed8\u8ba4\u5bb9\u91cf\u548cminCapacity\uff08\u6240\u9700\u5bb9\u91cf\u6700\u5c0f\u503c\uff09\u7684\u6700\u5927\u503c\uff0c\u53cd\u4e4b\u8fd4\u56de\u6240\u9700\u5bb9\u91cf\u6700\u5c0f\u503c\n    private static int calculateCapacity(Object[] elementData, int minCapacity) {\n        if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n            return Math.max(DEFAULT_CAPACITY, minCapacity);\n        }\n        return minCapacity;\n    }\n\n\n    /**\n     * The maximum size of array to allocate.\n     * Some VMs reserve some header words in an array.\n     * Attempts to allocate larger arrays may result in\n     * OutOfMemoryError: Requested array size exceeds VM limit\n     */\n\n\u7b2c\u4e09\u6b65\uff1a\u8c03\u7528ensureExplicitCapacity()\u65b9\u6cd5\u770b\u662f\u5426\u9700\u8981\u6269\u5bb9\n\n\u5f53\u6211\u4eec\u8981 add \u8fdb\u7b2c1\u4e2a\u5143\u7d20\u5230 ArrayList \u65f6\uff0celementData.length \u4e3a0 \uff08\u56e0\u4e3a\u8fd8\u662f\u4e00\u4e2a\u7a7a\u7684 list\uff09\uff0c\u56e0\u4e3a\u6267\u884c\u4e86 ensureCapacityInternal() \u65b9\u6cd5 \uff0c\u6240\u4ee5 minCapacity \u6b64\u65f6\u4e3a10\u3002\u6b64\u65f6\uff0cminCapacity - elementData.length &gt; 0\u6210\u7acb\uff0c\u6240\u4ee5\u4f1a\u8fdb\u5165 grow(minCapacity\u4e3a10) \u65b9\u6cd5\u3002\n\u5f53add\u7b2c2\u4e2a\u5143\u7d20\u65f6\uff0cminCapacity \u4e3a2\uff0c\u6b64\u65f6elementData.length(\u5bb9\u91cf)\u5728\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5143\u7d20\u540e\u6269\u5bb9\u6210 10 \u4e86\u3002\u6b64\u65f6\uff0cminCapacity - elementData.length &gt; 0\u4e0d\u6210\u7acb\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8fdb\u5165 \uff08\u6267\u884c\uff09grow(minCapacity) \u65b9\u6cd5\u3002\n\u6dfb\u52a0\u7b2c3\u30014\u00b7\u00b7\u00b7\u5230\u7b2c10\u4e2a\u5143\u7d20\u65f6\uff0c\u4f9d\u7136\u4e0d\u4f1a\u6267\u884cgrow\u65b9\u6cd5\uff0c\u6570\u7ec4\u5bb9\u91cf\u90fd\u4e3a10\u3002\u76f4\u5230\u6dfb\u52a0\u7b2c11\u4e2a\u5143\u7d20\uff0cminCapacity(\u4e3a11)\u6bd4elementData.length\uff08\u4e3a10\uff09\u8981\u5927\u3002\u8fdb\u5165grow(minCapacity\u4e3a11)\u65b9\u6cd5\u8fdb\u884c\u6269\u5bb9\n\nprivate void ensureExplicitCapacity(int minCapacity) {\n        modCount++;  // \u64cd\u4f5c\u6570+1\n\n        // overflow-conscious code\n        // \u5982\u679c\u6240\u9700\u5bb9\u91cf\u6700\u5c0f\u503c\u5927\u4e8e\u5b9e\u9645\u6570\u7ec4\u7684\u957f\u5ea6\u5c31\u6269\u5927\u5b9e\u9645\u6570\u7ec4\u5bb9\u91cf\n        if (minCapacity - elementData.length &gt; 0)\n            grow(minCapacity);\n    }\n\n\u7b2c\u56db\u6b65\uff1a\u8c03\u7528grow()\u65b9\u6cd5\u8fdb\u884c\u6269\u5bb9\n\n\u5f53add\u7b2c1\u4e2a\u5143\u7d20\u65f6\uff0coldCapacity \u4e3a0\uff0c\u7ecf\u6bd4\u8f83\u540e\u7b2c\u4e00\u4e2aif\u5224\u65ad\u6210\u7acb\uff0cnewCapacity = minCapacity(\u4e3a10)\u3002\u4f46\u662f\u7b2c\u4e8c\u4e2aif\u5224\u65ad\u4e0d\u4f1a\u6210\u7acb\uff0c\u5373newCapacity \u4e0d\u6bd4 MAX_ARRAY_SIZE\u5927\uff0c\u5219\u4e0d\u4f1a\u8fdb\u5165 hugeCapacity \u65b9\u6cd5\u3002\u6570\u7ec4\u5bb9\u91cf\u4e3a10\uff0cadd\u65b9\u6cd5\u4e2d return true,size\u589e\u4e3a1\u3002\n\u5f53add\u7b2c11\u4e2a\u5143\u7d20\u8fdb\u5165grow\u65b9\u6cd5\u65f6\uff0cnewCapacity\u4e3a15\uff0c\u6bd4minCapacity\uff08\u4e3a11\uff09\u5927\uff0c\u7b2c\u4e00\u4e2aif\u5224\u65ad\u4e0d\u6210\u7acb\u3002\u65b0\u5bb9\u91cf\u6ca1\u6709\u5927\u4e8e\u6570\u7ec4\u6700\u5927size\uff0c\u4e0d\u4f1a\u8fdb\u5165hugeCapacity\u65b9\u6cd5\u3002\u6570\u7ec4\u5bb9\u91cf\u6269\u4e3a15\uff0cadd\u65b9\u6cd5\u4e2dreturn true,size\u589e\u4e3a11\u3002\n\u4ee5\u6b64\u7c7b\u63a8\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u4e4b\u6240\u4ee5\u6bcf\u6b21\u6269\u5bb9\u539f\u6765\u76841.5\u500d\uff0c\u662f\u4e3a\u4e86\u4e0d\u8ba9\u6bcf\u6b21\u8c03\u7528add()\u65b9\u6cd5\u90fd\u53bb\u6269\u5bb9\u7136\u540e\u590d\u5236\u6570\u7ec4\n/**\n     * Increases the capacity to ensure that it can hold at least the\n     * number of elements specified by the minimum capacity argument.\n     *\n     * @param minCapacity the desired minimum capacity\n     */\n    private void grow(int minCapacity) {\n        // overflow-conscious code\n        int oldCapacity = elementData.length;\n        // \u65b0\u7684\u5bb9\u91cf\u4e3a\u65e7\u7684\u5bb9\u91cf\u76841.5\u500d\n        int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1);\n        // \u5982\u679c\u6269\u5145\u5bb9\u91cf\u540e\u8fd8\u662f\u4e0d\u591f\uff0c\u5219\u65b0\u7684\u5bb9\u91cf\u7b49\u4e8e\u6240\u9700\u5bb9\u91cf\u6700\u5c0f\u503c\uff08\u4e00\u822c\u5c31\u662f\u6570\u7ec4\u5b9e\u9645\u5143\u7d20\u4e2a\u6570\uff09\n        if (newCapacity - minCapacity &lt; 0)\n            newCapacity = minCapacity;\n        // \u5982\u679c\u65b0\u7684\u5bb9\u91cf\u5927\u4e8e\u6570\u7ec4\u6700\u5927\u5bb9\u91cf\uff0c\u518d\u8c03\u7528hugeCapacity\u8ba1\u7b97\u65b0\u7684\u5bb9\u91cf\n        if (newCapacity - MAX_ARRAY_SIZE &gt; 0)\n            newCapacity = hugeCapacity(minCapacity);\n        // minCapacity is usually close to size, so this is a win:\n        // \u590d\u5236\u539f\u6765\u7684\u6570\u636e\u5230\u65b0\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u5bb9\u91cf\u4e3a\u65b0\u7684\u5bb9\u91cf\n        elementData = Arrays.copyOf(elementData, newCapacity);\n    }\n\n    private static int hugeCapacity(int minCapacity) {\n        if (minCapacity &lt; 0) // overflow\n            throw new OutOfMemoryError();\n        // \u5927\u4e8e\u6570\u7ec4\u6700\u5927\u5bb9\u91cf\u8fd4\u56deInteger\u6700\u5927\u503c\uff0c\u53cd\u4e4b\u8fd4\u56de\u6570\u7ec4\u6700\u5927\u5bb9\u91cf\n        return (minCapacity &gt; MAX_ARRAY_SIZE) ?\n                Integer.MAX_VALUE :\n                MAX_ARRAY_SIZE;\n    }\n\n private static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;  // \u6570\u7ec4\u6700\u5927\u5bb9\u91cf\u4e3aInteger\u6700\u5927\u503c\u518d\u51cf8\n\nvoid add(int index, E element) \uff1a\u5728index\u5904\u653e\u7f6e\u5143\u7d20\n\u5c06elementData\u6570\u7ec4\u4eceindex\u5f00\u59cb\u540e\u9762\u7684\u5143\u7d20\u5f80\u540e\u79fb\u4e00\u4f4d\uff0c\u63a5\u7740\u5728index\u5904\u653e\u7f6e\u5143\u7d20\n\u6a21\u62df\u6dfb\u52a0\u6570\u636e(lierabbit)\u5230index=4\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\n\u5728\u6b64\u5217\u8868\u4e2d\u7684\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u6307\u5b9a\u7684\u5143\u7d20\u3002 \n\u5148\u8c03\u7528 rangeCheckForAdd \u5bf9index\u8fdb\u884c\u754c\u9650\u68c0\u67e5\uff1b\u7136\u540e\u8c03\u7528 ensureCapacityInternal \u65b9\u6cd5\u4fdd\u8bc1capacity\u8db3\u591f\u5927\uff1b\n\u518d\u5c06\u4eceindex\u5f00\u59cb\u4e4b\u540e\u7684\u6240\u6709\u6210\u5458\u540e\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff1b\u5c06element\u63d2\u5165index\u4f4d\u7f6e\uff1b\u6700\u540esize\u52a01\u3002\n\n/**\n     * Inserts the specified element at the specified position in this\n     * list. Shifts the element currently at that position (if any) and\n     * any subsequent elements to the right (adds one to their indices).\n     *\n     * @param index index at which the specified element is to be inserted\n     * @param element element to be inserted\n     * @throws IndexOutOfBoundsException {@inheritDoc}\n     */\n    public void add(int index, E element) {\n        // \u68c0\u67e5\u4e0b\u6807\u662f\u5426\u8d8a\u754c\n        rangeCheckForAdd(index);\n        // \u68c0\u67e5\u5f53\u524d\u5bb9\u91cf\u662f\u5426\u8fd8\u53ef\u4ee5\u5728\u5bb9\u7eb3\u4e00\u4e2a\u5143\u7d20\uff0c\u4e0d\u591f\u5219\u6269\u5bb9\n        ensureCapacityInternal(size + 1);  // Increments modCount!!\n        // \u5c06elementData\u4eceindex\u5f00\u59cb\u540e\u9762\u7684\u5143\u7d20\u5f80\u540e\u79fb\u4e00\u4f4d\n        System.arraycopy(elementData, index, elementData, index + 1,\n                size - index);\n        elementData[index] = element;\n        size++;\n    }\n\n    /**\n     * A version of rangeCheck used by add and addAll.\n     */\n    private void rangeCheckForAdd(int index) {\n        // \u5f53index\u7b49\u4e8esize\u65f6\u76f8\u5f53\u4e8e\u6dfb\u52a0\u5143\u7d20\u5230\u5217\u8868\u5c3e\n        if (index &gt; size || index &lt; 0)\n            throw new IndexOutOfBoundsException(outOfBoundsMsg(index));\n    }\n\nensureCapacity(int minCapacity)\uff1a\u81ea\u4e3b\u6269\u589e\u5bb9\u91cf\n\u5728\u4f7f\u7528add()\u65b9\u6cd5\u589e\u52a0\u65b0\u7684\u5143\u7d20\u65f6\uff0c\u5982\u679c\u8981\u589e\u52a0\u7684\u6570\u636e\u91cf\u5f88\u5927\uff0c\u5e94\u8be5\u4f7f\u7528ensureCapacity()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u9884\u5148\u8bbe\u7f6eArraylist\u7684\u5927\u5c0f\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u521d\u59cb\u5316\u901f\u5ea6\u3002\n/**\n    \u5982\u6709\u5fc5\u8981\uff0c\u589e\u52a0\u6b64 ArrayList \u5b9e\u4f8b\u7684\u5bb9\u91cf\uff0c\u4ee5\u786e\u4fdd\u5b83\u81f3\u5c11\u53ef\u4ee5\u5bb9\u7eb3\u7531minimum capacity\u53c2\u6570\u6307\u5b9a\u7684\u5143\u7d20\u6570\u3002\n     *\n     * @param   minCapacity   \u6240\u9700\u7684\u6700\u5c0f\u5bb9\u91cf\n     */\n    public void ensureCapacity(int minCapacity) {\n        int minExpand = (elementData != DEFAULTCAPACITY_EMPTY_ELEMENTDATA)? 0: DEFAULT_CAPACITY;\n            // any size if not default element table            \n            // larger than default for default empty table. It&#39;s already\n            // supposed to be at default size.\n\n        if (minCapacity &gt; minExpand) {\n            ensureExplicitCapacity(minCapacity);\n        }\n    }\n\n\u6700\u597d\u5728 add \u5927\u91cf\u5143\u7d20\u4e4b\u524d\u7528 ensureCapacity \u65b9\u6cd5\uff0c\u4ee5\u51cf\u5c11\u589e\u91cf\u91cd\u65b0\u5206\u914d\u7684\u6b21\u6570\u3002\u4f8b\u5982\uff1a\n\u672a\u63d0\u524d\u4f7f\u7528 ensureCapacity \u524d\npublic class EnsureCapacityTest {\n    public static void main(String[] args) {\n        ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;();\n        final int N = 10000000;\n        long startTime = System.currentTimeMillis();\n        for (int i = 0; i &lt; N; i++) {\n            list.add(i);\n        }\n        long endTime = System.currentTimeMillis();\n        System.out.println(&quot;\u4f7f\u7528ensureCapacity\u65b9\u6cd5\u524d\uff1a&quot;+(endTime - startTime));\n\n    }\n}\n\n\u7ed3\u679c\uff1a\u4f7f\u7528ensureCapacity\u65b9\u6cd5\u524d\uff1a2158\n\u4f7f\u7528 ensureCapacity \u540e\npublic class EnsureCapacityTest {\n    public static void main(String[] args) {\n        ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;();\n        final int N = 10000000;\n        list = new ArrayList&lt;Object&gt;();\n        long startTime1 = System.currentTimeMillis();\n        list.ensureCapacity(N);//\u6b64\u5904\u8c03\u7528\u540e\n        for (int i = 0; i &lt; N; i++) {\n            list.add(i);\n        }\n        long endTime1 = System.currentTimeMillis();\n        System.out.println(&quot;\u4f7f\u7528ensureCapacity\u65b9\u6cd5\u540e\uff1a&quot;+(endTime1 - startTime1));\n    }\n}\n\n\u7ed3\u679c\uff1a\u4f7f\u7528ensureCapacity\u65b9\u6cd5\u540e\uff1a1773\n\u6570\u7ec4\u590d\u5236/\u6269\u5bb9\u7684\u4e24\u4e2a\u65b9\u6cd5\nSystem.arraycopy(Object src, int srcPos, Object dest, int destPos, int length)\n\u5c06\u6570\u7ec4src\u4ecesrcPos\u540e\u7684\u5143\u7d20\u590d\u5236\u5230\u76ee\u6807\u6570\u7ec4dest\u7684destPos\u8d77\u70b9\u5f00\u59cb\uff0c\u590d\u5236length\u4e2a\n\nsrc -\u8fd9\u662f\u6e90\u6570\u7ec4. \nsrcPos -\u8fd9\u662f\u6e90\u6570\u7ec4\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\ndest -\u8fd9\u662f\u76ee\u6807\u6570\u7ec4\u3002\ndestPos -\u8fd9\u662f\u76ee\u6807\u6570\u636e\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\nlength -- \u8fd9\u662f\u4e00\u4e2a\u8981\u590d\u5236\u7684\u6570\u7ec4\u5143\u7d20\u7684\u6570\u76ee\u3002\n\n\nArrays.copyOf()\nelementData = Arrays.copyOf(elementData, newCapacity);\n\n\u533a\u522b\n\u770b\u4e24\u8005\u6e90\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0 copyOf() \u5185\u90e8\u5b9e\u9645\u8c03\u7528\u4e86 System.arraycopy() \u65b9\u6cd5\narraycopy() \u9700\u8981\u76ee\u6807\u6570\u7ec4\uff0c\u5c06\u539f\u6570\u7ec4\u62f7\u8d1d\u5230\u4f60\u81ea\u5df1\u5b9a\u4e49\u7684\u6570\u7ec4\u91cc\u6216\u8005\u539f\u6570\u7ec4\uff0c\u800c\u4e14\u53ef\u4ee5\u9009\u62e9\u62f7\u8d1d\u7684\u8d77\u70b9\u548c\u957f\u5ea6\u4ee5\u53ca\u653e\u5165\u65b0\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e copyOf() \u662f\u7cfb\u7edf\u81ea\u52a8\u5728\u5185\u90e8\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u8fd4\u56de\u8be5\u6570\u7ec4\u3002\nboolean addAll(Collection&lt;? extends E&gt; c) : \u6dfb\u52a0\u4e00\u4e2a\u96c6\u5408\u91cc\u7684\u6240\u6709\u5143\u7d20\u5230\u5217\u8868\u5c3e\n\u5c06\u8981\u6dfb\u52a0\u7684\u96c6\u5408\u53d8\u4e3a\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u5176\u590d\u5236\u5230elementData\u6570\u7ec4\u672b\u5c3e\n/**\n     * Appends all of the elements in the specified collection to the end of\n     * this list, in the order that they are returned by the\n     * specified collection&#39;s Iterator.  The behavior of this operation is\n     * undefined if the specified collection is modified while the operation\n     * is in progress.  (This implies that the behavior of this call is\n     * undefined if the specified collection is this list, and this\n     * list is nonempty.)\n     *\n     * @param c collection containing elements to be added to this list\n     * @return &lt;tt&gt;true&lt;/tt&gt; if this list changed as a result of the call\n     * @throws NullPointerException if the specified collection is null\n     */\n    public boolean addAll(Collection&lt;? extends E&gt; c) {\n        Object[] a = c.toArray();\n        int numNew = a.length;\n        // \u68c0\u67e5\u5f53\u524d\u5bb9\u91cf\u662f\u5426\u8fd8\u53ef\u4ee5\u5728\u5bb9\u7eb3a\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u4e0d\u591f\u5219\u6269\u5bb9\n        ensureCapacityInternal(size + numNew);  // Increments modCount\n        // \u5c06a\u6570\u7ec4\u91cc\u7684\u5143\u7d20\u6dfb\u52a0\u5230elementData\u672b\u5c3e\n        System.arraycopy(a, 0, elementData, size, numNew);\n        size += numNew;\n        // a\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff08\u957f\u5ea6\u4e0d\u4e3a0\uff09\u65f6\u8fd4\u56detrue\uff0c\u53cd\u4e4bfalse\n        return numNew != 0;\n    }\n\nint indexOf(Object o)  \uff1a\u67e5\u627eo\u5143\u7d20\u5728\u5217\u8868\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\nArrayList\u4e2d\u53ef\u4ee5\u5b58\u653enull\u5143\u7d20\uff0cindexof\u662f\u8fd4\u56deelementData\u6570\u7ec4\u4e2d\u503c\u76f8\u540c\u7684\u9996\u4e2a\u5143\u7d20\u7684\u4e0b\u6807\uff0cindexof\u4e2d\u6bd4\u8f83\u65b9\u6cd5\u662fequals\u800cequals\u662f\u6bd4\u8f83\u5143\u7d20\u7684\u503c\uff0c\u5982\u679c\u4f7f\u7528null.equals(Object o)\u4f1a\u62a5\u9519\u7a7a\u6307\u9488\uff0c\u56e0\u6b64\u5fc5\u987b\u5bf9null\u5355\u72ec\u67e5\u627e\u3002\u5982\u679c\u672a\u627e\u5230\u8be5\u5143\u7d20\u5219\u8fd4\u56de-1\n/**\n     * Returns the index of the first occurrence of the specified element\n     * in this list, or -1 if this list does not contain the element.\n     * More formally, returns the lowest index &lt;tt&gt;i&lt;/tt&gt; such that\n     * &lt;tt&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/tt&gt;,\n     * or -1 if there is no such index.\n     */\n    public int indexOf(Object o) {\n        //\u5143\u7d20\u53ef\u4ee5\u4e3anull\uff0c\u5982\u679c\u4e3anull\u8fd4\u56denull\u7684\u4e0b\u6807\n        if (o == null) {\n            for (int i = 0; i &lt; size; i++)\n                if (elementData[i]==null)\n                    return i;\n        } else {\n            for (int i = 0; i &lt; size; i++)\n                if (o.equals(elementData[i]))\n                    return i;\n        }\n        // \u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u5143\u7d20\u8fd4\u56de-1\n        return -1;\n    }\n\nE remove(int index)  \uff1a\u5220\u9664index\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\n\u6a21\u62df\u5220\u9664index=4\uff08\u503c\u4e3alierabbit\uff09\u8fc7\u7a0b\u5982\u4e0b\n\n/**\n     * Removes the element at the specified position in this list.\n     * Shifts any subsequent elements to the left (subtracts one from their\n     * indices).\n     *\n     * @param index the index of the element to be removed\n     * @return the element that was removed from the list\n     * @throws IndexOutOfBoundsException {@inheritDoc}\n     */\n    public E remove(int index) {\n        // \u68c0\u67e5\u4e0b\u6807\u662f\u5426\u8d8a\u754c\n        rangeCheck(index);\n\n        modCount++;  // \u64cd\u4f5c\u6570+1\n        E oldValue = elementData(index);  // \u83b7\u53d6index\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\n\n        int numMoved = size - index - 1;  // \u9700\u8981\u5f80\u524d\u79fb\u52a8\u51e0\u4e2a\u4f4d\u7f6e\n        if (numMoved &gt; 0)\n            // \u4eceindex + 1\u5f00\u59cb\uff0c\u5f80\u540e\u7684\u5143\u7d20\u5411\u524d\u79fb\u52a81\u4e2a\u4f4d\u7f6e\n            System.arraycopy(elementData, index+1, elementData, index,\n                    numMoved);\n        // \u5c06\u6570\u7ec4\u672b\u5c3e\u5143\u7d20\u7f6e\u7a7a\n        elementData[--size] = null; // clear to let GC do its work\n\n        return oldValue;\n    }\n\nboolean remove(Object o)  \uff1a\u5220\u9664o\u5143\u7d20\n\u901a\u8fc7\u5bfb\u627eo\u5143\u7d20\uff0c\u53ef\u4ee5\u83b7\u5f97\u5176\u4e0b\u6807\uff0c\u518d\u6839\u636e\u4e0b\u6807\u5220\u9664o\u5143\u7d20\n/**\n     * Removes the first occurrence of the specified element from this list,\n     * if it is present.  If the list does not contain the element, it is\n     * unchanged.  More formally, removes the element with the lowest index\n     * &lt;tt&gt;i&lt;/tt&gt; such that\n     * &lt;tt&gt;(o==null ? get(i)==null : o.equals(get(i)))&lt;/tt&gt;\n     * (if such an element exists).  Returns &lt;tt&gt;true&lt;/tt&gt; if this list\n     * contained the specified element (or equivalently, if this list\n     * changed as a result of the call).\n     *\n     * @param o element to be removed from this list, if present\n     * @return &lt;tt&gt;true&lt;/tt&gt; if this list contained the specified element\n     */\n    public boolean remove(Object o) {\n        // \u5143\u7d20\u53ef\u4ee5\u4e3anull\uff0c\u5206\u5f00\u641c\u7d22o\n        if (o == null) {\n            for (int index = 0; index &lt; size; index++)\n                if (elementData[index] == null) {\n                    fastRemove(index);\n                    return true;\n                }\n        } else {\n            for (int index = 0; index &lt; size; index++)\n                if (o.equals(elementData[index])) {\n                    fastRemove(index);\n                    return true;\n                }\n        }\n        // \u6ca1\u6709\u627e\u5230\u8fd4\u56defalse\n        return false;\n    }\n\n    /*\n     * Private remove method that skips bounds checking and does not\n     * return the value removed.\n     */\n    // \u7531\u4e8e\u5df2\u7ecf\u627e\u5230\u5143\u7d20\uff0c\u5219\u5143\u7d20\u5fc5\u5b9a\u5b58\u5728\uff0c\u5219index\u5fc5\u5b9a\u5408\u7406\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5728\u68c0\u67e5index\u662f\u5426\u8d8a\u754c\n    private void fastRemove(int index) {\n        modCount++;\n        int numMoved = size - index - 1;\n        if (numMoved &gt; 0)\n            System.arraycopy(elementData, index+1, elementData, index,\n                    numMoved);\n        elementData[--size] = null; // clear to let GC do its work\n    }\n\nforEach(Consumer&lt;? super E&gt; action) \uff1a\u904d\u5386\u5217\u8868\n\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230modCount\u7684\u7528\u5904\uff0c\u5f53modCount\u53d1\u751f\u6539\u53d8\u540e\uff0c\u7acb\u523b\u629b\u51faConcurrentModificationException\u5f02\u5e38\u3002\u901a\u8fc7\u4e4b\u524d\u7684\u5206\u6790\u53ef\u4ee5\u77e5\u9053\u5f53\u5217\u8868\u5185\u5bb9\u88ab\u4fee\u6539\u65f6modCount\u4f1a\u589e\u52a0\u3002\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5728\u904d\u5386ArrayList\u7684\u8fc7\u7a0b\u4e2d\u6709\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u4e86ArrayList\uff0c\u90a3\u4e48\u5c06\u629b\u51faConcurrentModificationException\u5f02\u5e38\nprotected transient int modCount = 0;//\u64cd\u4f5c\u6570\n\n    @Override\n    public void forEach(Consumer&lt;? super E&gt; action) {\n        // \u786e\u4fdd\u4e0d\u4e3a\u7a7a\n        Objects.requireNonNull(action);\n        final int expectedModCount = modCount;\n        @SuppressWarnings(&quot;unchecked&quot;)\n        final E[] elementData = (E[]) this.elementData;\n        final int size = this.size;\n        for (int i=0; modCount == expectedModCount &amp;&amp; i &lt; size; i++) {\n            action.accept(elementData[i]);\n        }\n        if (modCount != expectedModCount) {\n            throw new ConcurrentModificationException();\n        }\n    }\n\n\n    public static &lt;T&gt; T requireNonNull(T obj) {\n        if (obj == null)\n            throw new NullPointerException();\n        return obj;\n    }\n\nLinkedList\n\u533a\u522b\nArraylist \u4e0e LinkedList \u533a\u522b?\n\nArrayList \u4e0e Vector \u533a\u522b\u5462?\u4e3a\u4ec0\u4e48\u8981\u2f64Arraylist\u53d6\u4ee3Vector\u5462\uff1f\n\n2. Set\n2.1 HashSet\nHashSet\u5b9e\u73b0Set\u63a5\u53e3\uff0c\u7531\u54c8\u5e0c\u8868\uff08\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2aHashMap\u5b9e\u4f8b\uff09\u652f\u6301\u3002\u5b83\u4e0d\u4fdd\u8bc1set \u7684\u8fed\u4ee3\u987a\u5e8f\uff1b\u7279\u522b\u662f\u5b83\u4e0d\u4fdd\u8bc1\u8be5\u987a\u5e8f\u6052\u4e45\u4e0d\u53d8\u3002\u6b64\u7c7b\u5141\u8bb8\u4f7f\u7528null\u5143\u7d20\u3002\u5bf9\u4e8eHashSet\u800c\u8a00\uff0c\u5b83\u662f\u57fa\u4e8eHashMap\u5b9e\u73b0\u7684\uff0cHashSet\u5e95\u5c42\u4f7f\u7528HashMap\u6765\u4fdd\u5b58\u6240\u6709\u5143\u7d20\uff0c\u56e0\u6b64HashSet \u7684\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u76f8\u5173HashSet\u7684\u64cd\u4f5c\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u76f4\u63a5\u8c03\u7528\u5e95\u5c42HashMap\u7684\u76f8\u5173\u65b9\u6cd5\u6765\u5b8c\u6210\uff0c HashSet\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a\nHashSet\u4e0eHashMap\u533a\u522b\n\n\u6784\u9020\u5668\npublic class HashSet&lt;E&gt;  \n    extends AbstractSet&lt;E&gt;  \n    implements Set&lt;E&gt;, Cloneable, java.io.Serializable  \n{  \n    static final long serialVersionUID = -5024744406713321676L;  \n\n    // \u5e95\u5c42\u4f7f\u7528HashMap\u6765\u4fdd\u5b58HashSet\u4e2d\u6240\u6709\u5143\u7d20\u3002  \n    private transient HashMap&lt;E,Object&gt; map;  \n\n    // \u5b9a\u4e49\u4e00\u4e2a\u865a\u62df\u7684Object\u5bf9\u8c61\u4f5c\u4e3aHashMap\u7684value\uff0c\u5c06\u6b64\u5bf9\u8c61\u5b9a\u4e49\u4e3astatic final\u3002  \n    private static final Object PRESENT = new Object();  \n\n    /** \n     * \u9ed8\u8ba4\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashSet\u3002 \n     *  \n     * \u5b9e\u9645\u5e95\u5c42\u4f1a\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684HashMap\uff0c\u5e76\u4f7f\u7528\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u4e3a16\u548c\u52a0\u8f7d\u56e0\u5b500.75\u3002 \n     */  \n    public HashSet() {  \n    map = new HashMap&lt;E,Object&gt;();  \n    }  \n\n    /** \n     * \u6784\u9020\u4e00\u4e2a\u5305\u542b\u6307\u5b9acollection\u4e2d\u7684\u5143\u7d20\u7684\u65b0set\u3002 \n     * \n     * \u5b9e\u9645\u5e95\u5c42\u4f7f\u7528\u9ed8\u8ba4\u7684\u52a0\u8f7d\u56e0\u5b500.75\u548c\u8db3\u4ee5\u5305\u542b\u6307\u5b9a \n     * collection\u4e2d\u6240\u6709\u5143\u7d20\u7684\u521d\u59cb\u5bb9\u91cf\u6765\u521b\u5efa\u4e00\u4e2aHashMap\u3002 \n     * @param c \u5176\u4e2d\u7684\u5143\u7d20\u5c06\u5b58\u653e\u5728\u6b64set\u4e2d\u7684collection\u3002 \n     */  \n    public HashSet(Collection&lt;? extends E&gt; c) {  \n    map = new HashMap&lt;E,Object&gt;(Math.max((int) (c.size()/.75f) + 1, 16));  \n    addAll(c);  \n    }  \n\n    /** \n     * \u4ee5\u6307\u5b9a\u7684initialCapacity\u548cloadFactor\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashSet\u3002 \n     * \n     * \u5b9e\u9645\u5e95\u5c42\u4ee5\u76f8\u5e94\u7684\u53c2\u6570\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashMap\u3002 \n     * @param initialCapacity \u521d\u59cb\u5bb9\u91cf\u3002 \n     * @param loadFactor \u52a0\u8f7d\u56e0\u5b50\u3002 \n     */  \n    public HashSet(int initialCapacity, float loadFactor) {  \n    map = new HashMap&lt;E,Object&gt;(initialCapacity, loadFactor);  \n    }  \n\n    /** \n     * \u4ee5\u6307\u5b9a\u7684initialCapacity\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashSet\u3002 \n     * \n     * \u5b9e\u9645\u5e95\u5c42\u4ee5\u76f8\u5e94\u7684\u53c2\u6570\u53ca\u52a0\u8f7d\u56e0\u5b50loadFactor\u4e3a0.75\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashMap\u3002 \n     * @param initialCapacity \u521d\u59cb\u5bb9\u91cf\u3002 \n     */  \n    public HashSet(int initialCapacity) {  \n    map = new HashMap&lt;E,Object&gt;(initialCapacity);  \n    }  \n\n    /** \n     * \u4ee5\u6307\u5b9a\u7684initialCapacity\u548cloadFactor\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u7a7a\u94fe\u63a5\u54c8\u5e0c\u96c6\u5408\u3002 \n     * \u6b64\u6784\u9020\u51fd\u6570\u4e3a\u5305\u8bbf\u95ee\u6743\u9650\uff0c\u4e0d\u5bf9\u5916\u516c\u5f00\uff0c\u5b9e\u9645\u53ea\u662f\u662f\u5bf9LinkedHashSet\u7684\u652f\u6301\u3002 \n     * \n     * \u5b9e\u9645\u5e95\u5c42\u4f1a\u4ee5\u6307\u5b9a\u7684\u53c2\u6570\u6784\u9020\u4e00\u4e2a\u7a7aLinkedHashMap\u5b9e\u4f8b\u6765\u5b9e\u73b0\u3002 \n     * @param initialCapacity \u521d\u59cb\u5bb9\u91cf\u3002 \n     * @param loadFactor \u52a0\u8f7d\u56e0\u5b50\u3002 \n     * @param dummy \u6807\u8bb0\u3002 \n     */  \n    HashSet(int initialCapacity, float loadFactor, boolean dummy) {  \n    map = new LinkedHashMap&lt;E,Object&gt;(initialCapacity, loadFactor);  \n    }  \n\n\n\n    /** \n     * \u8fd4\u56de\u6b64HashSet\u5b9e\u4f8b\u7684\u6d45\u8868\u526f\u672c\uff1a\u5e76\u6ca1\u6709\u590d\u5236\u8fd9\u4e9b\u5143\u7d20\u672c\u8eab\u3002 \n     * \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684clone()\u65b9\u6cd5\uff0c\u83b7\u53d6HashMap\u7684\u6d45\u8868\u526f\u672c\uff0c\u5e76\u8bbe\u7f6e\u5230HashSet\u4e2d\u3002 \n     */  \n    public Object clone() {  \n        try {  \n            HashSet&lt;E&gt; newSet = (HashSet&lt;E&gt;) super.clone();  \n            newSet.map = (HashMap&lt;E, Object&gt;) map.clone();  \n            return newSet;  \n        } catch (CloneNotSupportedException e) {  \n            throw new InternalError();  \n        }  \n    }  \n}\n\n\u8c03\u7528add\u65b9\u6cd5/\u5982\u4f55\u53bb\u91cd\n\n\u5982\u679c\u6b64set\u4e2d\u5c1a\u672a\u5305\u542b\u6307\u5b9a\u5143\u7d20\uff0c\u5219\u6dfb\u52a0\u6307\u5b9a\u5143\u7d20\u3002 \n\u66f4\u786e\u5207\u5730\u8bb2\uff0c\u5982\u679c\u6b64 set \u6ca1\u6709\u5305\u542b\u6ee1\u8db3(e\\==null ? e2\\==null : e.equals(e2)) \u7684\u5143\u7d20e2\uff0c\u5219\u5411\u6b64set \u6dfb\u52a0\u6307\u5b9a\u7684\u5143\u7d20e\u3002 \n\u5982\u679c\u6b64set\u5df2\u5305\u542b\u8be5\u5143\u7d20\uff0c\u5219\u8be5\u8c03\u7528\u4e0d\u66f4\u6539set\u5e76\u8fd4\u56defalse\u3002 \n\u5e95\u5c42\u5b9e\u9645\u5c06\u5c06\u8be5\u5143\u7d20\u4f5c\u4e3akey\u653e\u5165HashMap\u3002 \n\u7531\u4e8eHashMap\u7684put()\u65b9\u6cd5\u6dfb\u52a0key-value\u5bf9\u65f6\uff0c\u5f53\u65b0\u653e\u5165HashMap\u7684Entry\u4e2dkey \u4e0e\u96c6\u5408\u4e2d\u539f\u6709Entry\u7684key\u76f8\u540c\uff08hashCode()\u8fd4\u56de\u503c\u76f8\u7b49\uff0c\u901a\u8fc7equals\u6bd4\u8f83\u4e5f\u8fd4\u56detrue\uff09\u3002\u65b0\u6dfb\u52a0\u7684Entry\u7684value\u4f1a\u5c06\u8986\u76d6\u539f\u6765Entry\u7684value\uff0c\u4f46key\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\uff0c \n\u56e0\u6b64\u5982\u679c\u5411HashSet\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u65f6\uff0c\u65b0\u6dfb\u52a0\u7684\u96c6\u5408\u5143\u7d20\u5c06\u4e0d\u4f1a\u88ab\u653e\u5165HashMap\u4e2d\uff0c \n\u539f\u6765\u7684\u5143\u7d20\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\uff0c\u8fd9\u4e5f\u5c31\u6ee1\u8db3\u4e86Set\u4e2d\u5143\u7d20\u4e0d\u91cd\u590d\u7684\u7279\u6027\u3002 \n\n/**  \n     * @param e \u5c06\u6dfb\u52a0\u5230\u6b64set\u4e2d\u7684\u5143\u7d20\u3002 \n     * @return \u5982\u679c\u6b64set\u5c1a\u672a\u5305\u542b\u6307\u5b9a\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002 \n     */  \n    public boolean add(E e) {  \n    return map.put(e, PRESENT)==null;  \n    }\n\n\u8c03\u7528remove\u65b9\u6cd5\n/** \n     * \u5982\u679c\u6307\u5b9a\u5143\u7d20\u5b58\u5728\u4e8e\u6b64set\u4e2d\uff0c\u5219\u5c06\u5176\u79fb\u9664\u3002 \n     * \u66f4\u786e\u5207\u5730\u8bb2\uff0c\u5982\u679c\u6b64set\u5305\u542b\u4e00\u4e2a\u6ee1\u8db3(o==null ? e==null : o.equals(e))\u7684\u5143\u7d20e\uff0c \n     * \u5219\u5c06\u5176\u79fb\u9664\u3002\u5982\u679c\u6b64set\u5df2\u5305\u542b\u8be5\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue \n     * \uff08\u6216\u8005\uff1a\u5982\u679c\u6b64set\u56e0\u8c03\u7528\u800c\u53d1\u751f\u66f4\u6539\uff0c\u5219\u8fd4\u56detrue\uff09\u3002\uff08\u4e00\u65e6\u8c03\u7528\u8fd4\u56de\uff0c\u5219\u6b64set\u4e0d\u518d\u5305\u542b\u8be5\u5143\u7d20\uff09\u3002 \n     * \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684remove\u65b9\u6cd5\u5220\u9664\u6307\u5b9aEntry\u3002 \n     * @param o \u5982\u679c\u5b58\u5728\u4e8e\u6b64set\u4e2d\u5219\u9700\u8981\u5c06\u5176\u79fb\u9664\u7684\u5bf9\u8c61\u3002 \n     * @return \u5982\u679cset\u5305\u542b\u6307\u5b9a\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002 \n     */  \n    public boolean remove(Object o) {  \n    return map.remove(o)==PRESENT;\n    }\n\n\u8c03\u7528clear\u65b9\u6cd5\n/** \n     * \u4ece\u6b64set\u4e2d\u79fb\u9664\u6240\u6709\u5143\u7d20\u3002\u6b64\u8c03\u7528\u8fd4\u56de\u540e\uff0c\u8be5set\u5c06\u4e3a\u7a7a\u3002 \n     * \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684clear\u65b9\u6cd5\u6e05\u7a7aEntry\u4e2d\u6240\u6709\u5143\u7d20\u3002 \n     */  \n    public void clear() {  \n    map.clear();  \n    }\n\n\u8fed\u4ee3\u5668\u904d\u5386\n\u5e95\u5c42\u5b9e\u9645\u8c03\u7528\u5e95\u5c42HashMap\u7684keySet\u6765\u8fd4\u56de\u6240\u6709\u7684key\u3002\n/** \n     * \u8fd4\u56de\u5bf9\u6b64set\u4e2d\u5143\u7d20\u8fdb\u884c\u8fed\u4ee3\u7684\u8fed\u4ee3\u5668\u3002\u8fd4\u56de\u5143\u7d20\u7684\u987a\u5e8f\u5e76\u4e0d\u662f\u7279\u5b9a\u7684\u3002 \n     *  \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528\u5e95\u5c42HashMap\u7684keySet\u6765\u8fd4\u56de\u6240\u6709\u7684key\u3002 \n     * \u53ef\u89c1HashSet\u4e2d\u7684\u5143\u7d20\uff0c\u53ea\u662f\u5b58\u653e\u5728\u4e86\u5e95\u5c42HashMap\u7684key\u4e0a\uff0c \n     * value\u4f7f\u7528\u4e00\u4e2astatic final\u7684Object\u5bf9\u8c61\u6807\u8bc6\u3002 \n     * @return \u5bf9\u6b64set\u4e2d\u5143\u7d20\u8fdb\u884c\u8fed\u4ee3\u7684Iterator\u3002 \n     */  \n    public Iterator&lt;E&gt; iterator() {  \n    return map.keySet().iterator();  \n    }\n\nsize\u5927\u5c0f\n\u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684size()\u65b9\u6cd5\u8fd4\u56deEntry\u7684\u6570\u91cf\uff0c\u5c31\u5f97\u5230\u8be5Set\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\n/** \n     * \u8fd4\u56de\u6b64set\u4e2d\u7684\u5143\u7d20\u7684\u6570\u91cf\uff08set\u7684\u5bb9\u91cf\uff09\u3002 \n     * \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684size()\u65b9\u6cd5\u8fd4\u56deEntry\u7684\u6570\u91cf\uff0c\u5c31\u5f97\u5230\u8be5Set\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 \n     * @return \u6b64set\u4e2d\u7684\u5143\u7d20\u7684\u6570\u91cf\uff08set\u7684\u5bb9\u91cf\uff09\u3002 \n     */  \n    public int size() {\n    return map.size();  \n    }\n\n\u5224\u65ad\u7a7a\n/** \n     * \u5982\u679c\u6b64set\u4e0d\u5305\u542b\u4efb\u4f55\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002 \n     * \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684isEmpty()\u5224\u65ad\u8be5HashSet\u662f\u5426\u4e3a\u7a7a\u3002 \n     * @return \u5982\u679c\u6b64set\u4e0d\u5305\u542b\u4efb\u4f55\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002 \n     */  \n    public boolean isEmpty() {  \n    return map.isEmpty();  \n    }\n\n\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5bf9\u8c61\n/** \n     * \u5982\u679c\u6b64set\u5305\u542b\u6307\u5b9a\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002 \n     * \u66f4\u786e\u5207\u5730\u8bb2\uff0c\u5f53\u4e14\u4ec5\u5f53\u6b64set\u5305\u542b\u4e00\u4e2a\u6ee1\u8db3(o==null ? e==null : o.equals(e)) \n     * \u7684e\u5143\u7d20\u65f6\uff0c\u8fd4\u56detrue\u3002 \n     * \n     * \u5e95\u5c42\u5b9e\u9645\u8c03\u7528HashMap\u7684containsKey\u5224\u65ad\u662f\u5426\u5305\u542b\u6307\u5b9akey\u3002 \n     * @param o \u5728\u6b64set\u4e2d\u7684\u5b58\u5728\u5df2\u5f97\u5230\u6d4b\u8bd5\u7684\u5143\u7d20\u3002 \n     * @return \u5982\u679c\u6b64set\u5305\u542b\u6307\u5b9a\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002 \n     */  \n    public boolean contains(Object o) {  \n    return map.containsKey(o);  \n    }\n\n3. Map\n3.1 HashMap\n\n\u53c2\u8003\n\nhttps://www.cnblogs.com/chentang/p/12670462.html\nhttps://www.cnblogs.com/wytiger/p/10731082.html\nhttps://www.cnblogs.com/yuanblog/p/4441017.html\n\n\n\u54c8\u5e0c\u8868&amp;\u54c8\u5e0c\u51b2\u7a81\n\n    \u5728\u6570\u7ec4\u4e2d\u6839\u636e\u4e0b\u6807\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\uff0c\u4e00\u6b21\u5b9a\u4f4d\u5c31\u53ef\u4ee5\u8fbe\u5230\uff0c\u54c8\u5e0c\u8868\u5229\u7528\u4e86\u8fd9\u79cd\u7279\u6027\uff0c**\u54c8\u5e0c\u8868\u7684\u4e3b\u5e72\u5c31\u662f\u6570\u7ec4**\u3002\u6bd4\u5982\u6211\u4eec\u8981\u65b0\u589e\u6216\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u901a\u8fc7\u628a\u5f53\u524d\u5143\u7d20\u7684\u5173\u952e\u5b57 \u901a\u8fc7\u67d0\u4e2a\u51fd\u6570\u6620\u5c04\u5230\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u901a\u8fc7\u6570\u7ec4\u4e0b\u6807\u4e00\u6b21\u5b9a\u4f4d\u5c31\u53ef\u5b8c\u6210\u64cd\u4f5c\u3002\n\n\n\u5b58\u50a8\u4f4d\u7f6e = f(\u5173\u952e\u5b57)\n\n\u5176\u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570f\u4e00\u822c\u79f0\u4e3a\u54c8\u5e0c\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u8bbe\u8ba1\u597d\u574f\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230\u54c8\u5e0c\u8868\u7684\u4f18\u52a3\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u5728\u54c8\u5e0c\u8868\u4e2d\u6267\u884c\u63d2\u5165\u64cd\u4f5c\uff1a\n\n\u67e5\u627e\u64cd\u4f5c\u540c\u7406\uff0c\u5148\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u51fa\u5b9e\u9645\u5b58\u50a8\u5730\u5740\uff0c\u7136\u540e\u4ece\u6570\u7ec4\u4e2d\u5bf9\u5e94\u5730\u5740\u53d6\u51fa\u5373\u53ef\u3002\n\n    \u7136\u800c\u4e07\u4e8b\u65e0\u5b8c\u7f8e\uff0c\u5982\u679c\u4e24\u4e2a\u4e0d\u540c\u7684\u5143\u7d20\uff0c\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u51fa\u7684\u5b9e\u9645\u5b58\u50a8\u5730\u5740\u76f8\u540c\u600e\u4e48\u529e\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u5bf9\u67d0\u4e2a\u5143\u7d20\u8fdb\u884c\u54c8\u5e0c\u8fd0\u7b97\uff0c\u5f97\u5230\u4e00\u4e2a\u5b58\u50a8\u5730\u5740\uff0c\u7136\u540e\u8981\u8fdb\u884c\u63d2\u5165\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u5df2\u7ecf\u88ab\u5176\u4ed6\u5143\u7d20\u5360\u7528\u4e86\uff0c\u5176\u5b9e\u8fd9\u5c31\u662f\u6240\u8c13\u7684**\u54c8\u5e0c\u51b2\u7a81**\uff0c\u4e5f\u53eb\u54c8\u5e0c\u78b0\u649e\u3002\u524d\u9762\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8bbe\u8ba1\u81f3\u5173\u91cd\u8981\uff0c\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u4f1a\u5c3d\u53ef\u80fd\u5730\u4fdd\u8bc1 **\u8ba1\u7b97\u7b80\u5355**\u548c**\u6563\u5217\u5730\u5740\u5206\u5e03\u5747\u5300,**\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u6e05\u695a\u7684\u662f\uff0c\u6570\u7ec4\u662f\u4e00\u5757\u8fde\u7eed\u7684\u56fa\u5b9a\u957f\u5ea6\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u518d\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5f97\u5230\u7684\u5b58\u50a8\u5730\u5740\u7edd\u5bf9\u4e0d\u53d1\u751f\u51b2\u7a81\u3002\u90a3\u4e48\u54c8\u5e0c\u51b2\u7a81\u5982\u4f55\u89e3\u51b3\u5462\uff1f\n\n\n\n\u94fe\u5730\u5740\u6cd5\uff1a\u5c06\u54c8\u5e0c\u8868\u7684\u6bcf\u4e2a\u5355\u5143\u4f5c\u4e3a\u94fe\u8868\u7684\u5934\u7ed3\u70b9\uff0c\u6240\u6709\u54c8\u5e0c\u5730\u5740\u4e3a i \u7684\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u540c\u4e49\u8bcd\u94fe\u8868\u3002\u5373\u53d1\u751f\u51b2\u7a81\u65f6\u5c31\u628a\u8be5\u5173\u952e\u5b57\u94fe\u5728\u4ee5\u8be5\u5355\u5143\u4e3a\u5934\u7ed3\u70b9\u7684\u94fe\u8868\u7684\u5c3e\u90e8\u3002\n\nHashMap\u6570\u636e\u7ed3\u6784\nHashMap\u7684\u4e3b\u5e72\u662f\u4e00\u4e2a\u53d8\u91cf\u540d\u4e3atable\u7684Entry/Node\u6570\u7ec4\u3002Entry/Node\u662fHashMap\u7684\u57fa\u672c\u7ec4\u6210\u5355\u5143\uff0c\u6bcf\u4e00\u4e2aEntry/Node\u5305\u542b\u4e00\u4e2akey-value\u952e\u503c\u5bf9\u3002\n//HashMap\u7684\u4e3b\u5e72\u6570\u7ec4\uff0c\u53ef\u4ee5\u770b\u5230\u5c31\u662f\u4e00\u4e2aEntry\u6570\u7ec4\uff0c\u521d\u59cb\u503c\u4e3a\u7a7a\u6570\u7ec4{}\uff0c\u4e3b\u5e72\u6570\u7ec4\u7684\u957f\u5ea6\u4e00\u5b9a\u662f2\u7684\u6b21\u5e42\ntransient Entry&lt;K,V&gt;[] table = (Entry&lt;K,V&gt;[]) EMPTY_TABLE;\n\n    static class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {\n        final int hash;\n        final K key;\n        V value;\n        Node&lt;K,V&gt; next;\n\n        Node(int hash, K key, V value, Node&lt;K,V&gt; next) {\n            this.hash = hash;\n            this.key = key;\n            this.value = value;\n            this.next = next;\n        }\n\n\n\u7b80\u5355\u6765\u8bf4\uff0cHashMap\u7531\u6570\u7ec4+\u94fe\u8868\u7ec4\u6210\u7684\uff0c\u6570\u7ec4\u662fHashMap\u7684\u4e3b\u4f53\uff0c\u94fe\u8868\u5219\u662f\u4e3b\u8981\u4e3a\u4e86\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\u800c\u5b58\u5728\u7684\u3002\n\u5982\u679c\u5b9a\u4f4d\u5230\u7684\u6570\u7ec4\u4f4d\u7f6e\u4e0d\u542b\u94fe\u8868\uff08\u5f53\u524dentry\u7684next\u6307\u5411null\uff09\uff1a\u90a3\u4e48\u5bf9\u4e8e\u67e5\u627e\uff0c\u6dfb\u52a0\u7b49\u64cd\u4f5c\u5f88\u5feb\uff0c\u4ec5\u9700\u4e00\u6b21\u5bfb\u5740\u5373\u53ef\uff1b\n\u5982\u679c\u5b9a\u4f4d\u5230\u7684\u6570\u7ec4\u5305\u542b\u94fe\u8868\uff1a\u5bf9\u4e8e\u6dfb\u52a0\u64cd\u4f5c\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u9996\u5148\u904d\u5386\u94fe\u8868\uff0c\u5b58\u5728\u5373\u8986\u76d6\uff0c\u5426\u5219\u65b0\u589e\uff1b\u5bf9\u4e8e\u67e5\u627e\u64cd\u4f5c\u6765\u8bb2\uff0c\u4ecd\u9700\u904d\u5386\u94fe\u8868\uff0c\u7136\u540e\u901a\u8fc7key\u5bf9\u8c61\u7684equals\u65b9\u6cd5\u9010\u4e00\u6bd4\u5bf9\u67e5\u627e\u3002\n\n\n\nHashMap\u5c5e\u6027\n\ninitialCapacity\uff1a\u521d\u59cb\u5bb9\u91cf\u3002\u6307\u7684\u662f HashMap \u96c6\u5408\u521d\u59cb\u5316\u7684\u65f6\u5019\u81ea\u8eab\u7684\u5bb9\u91cf\u3002\u53ef\u4ee5\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u6307\u5b9a\uff1b\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\uff0c\u603b\u5bb9\u91cf\u9ed8\u8ba4\u503c\u662f 16 \u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u521d\u59cb\u5bb9\u91cf\u5fc5\u987b\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\nsize\uff1a\u5f53\u524d HashMap \u4e2d\u5df2\u7ecf\u5b58\u50a8\u7740\u7684\u952e\u503c\u5bf9\u6570\u91cf\uff0c\u5373 HashMap.size()\nloadFactor\uff1a\u52a0\u8f7d\u56e0\u5b50\u3002\u6240\u8c13\u7684\u52a0\u8f7d\u56e0\u5b50\u5c31\u662f HashMap (\u5f53\u524d\u7684\u5bb9\u91cf/\u603b\u5bb9\u91cf) \u5230\u8fbe\u4e00\u5b9a\u503c\u7684\u65f6\u5019\uff0cHashMap \u4f1a\u5b9e\u65bd\u6269\u5bb9\u3002\u52a0\u8f7d\u56e0\u5b50\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4e2d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u7684\u503c\u662f 0.75 \u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a HashMap \u7684\u521d\u59cb\u5bb9\u91cf\u4e3a 16 \uff0c\u90a3\u4e48\u6269\u5bb9\u7684\u9600\u503c\u5c31\u662f 0.75 * 16 = 12 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4f60\u6253\u7b97\u5b58\u5165\u7b2c 13 \u4e2a\u503c\u7684\u65f6\u5019\uff0cHashMap \u4f1a\u5148\u6267\u884c\u6269\u5bb9\u3002\nthreshold\uff1a\u6269\u5bb9\u9600\u503c\u3002\u5373 \u6269\u5bb9\u9600\u503c = HashMap \u603b\u5bb9\u91cf * \u52a0\u8f7d\u56e0\u5b50\u3002\u5f53\u524d HashMap \u7684\u5bb9\u91cf\u5927\u4e8e\u6216\u7b49\u4e8e\u6269\u5bb9\u9600\u503c\u7684\u65f6\u5019\u5c31\u4f1a\u53bb\u6267\u884c\u6269\u5bb9\u3002\u6269\u5bb9\u7684\u5bb9\u91cf\u4e3a\u5f53\u524d HashMap \u603b\u5bb9\u91cf\u7684\u4e24\u500d\u3002\u6bd4\u5982\uff0c\u5f53\u524d HashMap \u7684\u603b\u5bb9\u91cf\u4e3a 16 \uff0c\u90a3\u4e48\u6269\u5bb9\u4e4b\u540e\u4e3a 32 \u3002\ntable\uff1a1.8\u4e4b\u524d\u4e3aEntry \u6570\u7ec4\uff0c1.8\u4e4b\u540e\u4e3aNode\u6570\u7ec4\u3002\u6211\u4eec\u90fd\u77e5\u9053 HashMap \u5185\u90e8\u5b58\u50a8 key/value \u662f\u901a\u8fc7 Entry/Node \u8fd9\u4e2a\u4ecb\u8d28\u6765\u5b9e\u73b0\u7684\u3002\n\nimplements Map&lt;K,V&gt;, Cloneable, Serializable {\n    //\u5e8f\u5217\u53f7\uff0c\u5e8f\u5217\u5316\u7684\u65f6\u5019\u4f7f\u7528\u3002\n    private static final long serialVersionUID = 362498820763181265L;\n    /**\u9ed8\u8ba4\u5bb9\u91cf\uff0c1\u5411\u5de6\u79fb\u4f4d4\u4e2a\uff0c00000001\u53d8\u621000010000\uff0c\u4e5f\u5c31\u662f2\u76844\u6b21\u65b9\u4e3a16\uff0c\u4f7f\u7528\u79fb\u4f4d\u662f\u56e0\u4e3a\u79fb\u4f4d\u662f\u8ba1\u7b97\u673a\u57fa\u7840\u8fd0\u7b97\uff0c\u6548\u7387\u6bd4\u52a0\u51cf\u4e58\u9664\u5feb\u3002**/\n    static final int DEFAULT_INITIAL_CAPACITY = 1 &lt;&lt; 4;\n    //\u6700\u5927\u5bb9\u91cf\uff0c2\u768430\u6b21\u65b9\u3002\n    static final int MAXIMUM_CAPACITY = 1 &lt;&lt; 30;\n    //\u52a0\u8f7d\u56e0\u5b50\uff0c\u7528\u4e8e\u6269\u5bb9\u4f7f\u7528\u3002\n    static final float DEFAULT_LOAD_FACTOR = 0.75f;\n    //\u5f53\u67d0\u4e2a\u6876\u8282\u70b9\u6570\u91cf\u5927\u4e8e8\u65f6\uff0c\u4f1a\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\u3002\n    static final int TREEIFY_THRESHOLD = 8;\n    //\u5f53\u67d0\u4e2a\u6876\u8282\u70b9\u6570\u91cf\u5c0f\u4e8e6\u65f6\uff0c\u4f1a\u8f6c\u6362\u4e3a\u94fe\u8868\uff0c\u524d\u63d0\u662f\u5b83\u5f53\u524d\u662f\u7ea2\u9ed1\u6811\u7ed3\u6784\u3002\n    static final int UNTREEIFY_THRESHOLD = 6;\n    //\u5f53\u6574\u4e2ahashMap\u4e2d\u5143\u7d20\u6570\u91cf\u5927\u4e8e64\u65f6\uff0c\u4e5f\u4f1a\u8fdb\u884c\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u7ed3\u6784\u3002\n    static final int MIN_TREEIFY_CAPACITY = 64;\n    //\u5b58\u50a8\u5143\u7d20\u7684\u6570\u7ec4\uff0ctransient\u5173\u952e\u5b57\u8868\u793a\u8be5\u5c5e\u6027\u4e0d\u80fd\u88ab\u5e8f\u5217\u5316\n    transient Node&lt;K,V&gt;[] table;\n    //\u5c06\u6570\u636e\u8f6c\u6362\u6210set\u7684\u53e6\u4e00\u79cd\u5b58\u50a8\u5f62\u5f0f\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4e3b\u8981\u7528\u4e8e\u8fed\u4ee3\u529f\u80fd\u3002\n    transient Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet;\n    //\u5143\u7d20\u6570\u91cf\n    transient int size;\n    //\u7edf\u8ba1\u8be5map\u4fee\u6539\u7684\u6b21\u6570\n    transient int modCount;\n    //\u4e34\u754c\u503c\uff0c\u4e5f\u5c31\u662f\u5143\u7d20\u6570\u91cf\u8fbe\u5230\u4e34\u754c\u503c\u65f6\uff0c\u4f1a\u8fdb\u884c\u6269\u5bb9\u3002\n    int threshold;\n    //\u4e5f\u662f\u52a0\u8f7d\u56e0\u5b50\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u662f\u53d8\u91cf\u3002\n    final float loadFactor;\n\nHashMap\u5e38\u7528\u5185\u90e8\u7c7b\n\u7ea2\u9ed1\u6811\u7ed3\u6784\nstatic final class TreeNode&lt;K,V&gt; extends LinkedHashMap.Entry&lt;K,V&gt; {\n        TreeNode&lt;K,V&gt; parent;  \n        TreeNode&lt;K,V&gt; left;\n        TreeNode&lt;K,V&gt; right;\n        TreeNode&lt;K,V&gt; prev;    \n        boolean red;\n        TreeNode(int hash, K key, V val, Node&lt;K,V&gt; next) {\n            super(hash, key, val, next);\n        }\n}\n\n\u7ed3\u70b9\u7c7b\nstatic class Node&lt;K,V&gt; implements Map.Entry&lt;K,V&gt; {\n        final int hash;\n        final K key;\n        V value;\n        Node&lt;K,V&gt; next;\n\n        Node(int hash, K key, V value, Node&lt;K,V&gt; next) {\n            this.hash = hash;\n            this.key = key;\n            this.value = value;\n            this.next = next;\n        }\n}\n\n\u6784\u9020\u65b9\u6cd5\n\n\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u5bb9\u91cf16\uff0c\u9ed8\u8ba4\u7684\u52a0\u8f7d\u56e0\u5b500.75\n\u8bbe\u7f6e\u521d\u59cb\u5bb9\u91cf\uff0c\u5e76\u4f7f\u7528\u9ed8\u8ba4\u7684\u52a0\u8f7d\u56e0\u5b500.75\uff0c\u8c03\u7528\u7684\u65b9\u6cd5\u662f\u7b2c\u4e09\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5c06\u9ed8\u8ba4DEFAULT_LOAD_FACTOR\u4f5c\u4e3a\u5f62\u53c2\u4f20\u5165\u7b2c\u4e09\u4e2a\u6784\u9020\u51fd\u6570\n\u8bbe\u7f6e\u521d\u59cb\u5bb9\u91cf\u548c\u52a0\u8f7d\u56e0\u5b50\n\u4f20\u5165\u4e00\u4e2aMap\uff0c\u7136\u540e\u628a\u8be5Map\u8f6c\u4e3ahashMap\n\n\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\npublic HashMap() {\n        this.loadFactor = DEFAULT_LOAD_FACTOR; \n    }\n\n\u8bbe\u7f6e\u521d\u59cb\u5bb9\u91cf\uff0c\u5e76\u4f7f\u7528\u9ed8\u8ba4\u7684\u52a0\u8f7d\u56e0\u5b500.75\npublic HashMap(int initialCapacity) {\n        this(initialCapacity, DEFAULT_LOAD_FACTOR);\n    }\n\n\u8bbe\u7f6e\u521d\u59cb\u5bb9\u91cf\u548c\u52a0\u8f7d\u56e0\u5b50\npublic HashMap(int initialCapacity, float loadFactor) {\n        if (initialCapacity &lt; 0)\n            throw new IllegalArgumentException(&quot;Illegal initial capacity: &quot; +\n                                               initialCapacity);\n        if (initialCapacity &gt; MAXIMUM_CAPACITY)\n            initialCapacity = MAXIMUM_CAPACITY;\n        if (loadFactor &lt;= 0 || Float.isNaN(loadFactor))\n            throw new IllegalArgumentException(&quot;Illegal load factor: &quot; +\n                                               loadFactor);\n        this.loadFactor = loadFactor;\n        this.threshold = tableSizeFor(initialCapacity);\n    }\n\n\u4f20\u5165\u4e00\u4e2aMap\uff0c\u7136\u540e\u628a\u8be5Map\u8f6c\u4e3ahashMap\npublic HashMap(Map&lt;? extends K, ? extends V&gt; m) {\n        this.loadFactor = DEFAULT_LOAD_FACTOR;\n        putMapEntries(m, false);\n    }\n\n\n    final void putMapEntries(Map&lt;? extends K, ? extends V&gt; m, boolean evict) {\n        //\u83b7\u53d6\u8be5map\u7684\u5b9e\u9645\u957f\u5ea6\n        int s = m.size();\n        if (s &gt; 0) {\n            //\u5224\u65adtable\u662f\u5426\u521d\u59cb\u5316\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\n            if (table == null) { // pre-size\n                /**\u6c42\u51fa\u9700\u8981\u7684\u5bb9\u91cf\uff0c\u56e0\u4e3a\u5b9e\u9645\u4f7f\u7528\u7684\u957f\u5ea6=\u5bb9\u91cf*0.75\u5f97\u6765\u7684\uff0c+1\u662f\u56e0\u4e3a\u5c0f\u6570\u76f8\u9664\uff0c\u57fa\u672c\u90fd\u4e0d\u4f1a\u662f\u6574\u6570\uff0c\u5bb9\u91cf\u5927\u5c0f\u4e0d\u80fd\u4e3a\u5c0f\u6570\u7684\uff0c\u540e\u9762\u8f6c\u6362\u4e3aint\uff0c\u591a\u4f59\u7684\u5c0f\u6570\u5c31\u8981\u88ab\u4e22\u6389\uff0c\u6240\u4ee5+1\uff0c\u4f8b\u5982\uff0cmap\u5b9e\u9645\u957f\u5ea622\uff0c22/0.75=29.3,\u6240\u9700\u8981\u7684\u5bb9\u91cf\u80af\u5b9a\u4e3a30\uff0c\u6709\u4eba\u4f1a\u95ee\u5982\u679c\u521a\u521a\u597d\u9664\u5f97\u6574\u6570\u5462\uff0c\u9664\u5f97\u6574\u6570\u7684\u8bdd\uff0c\u5bb9\u91cf\u5927\u5c0f\u591a1\u4e5f\u6ca1\u4ec0\u4e48\u5f71\u54cd**/\n                float ft = ((float)s / loadFactor) + 1.0F;\n                //\u5224\u65ad\u8be5\u5bb9\u91cf\u5927\u5c0f\u662f\u5426\u8d85\u51fa\u4e0a\u9650\u3002\n                int t = ((ft &lt; (float)MAXIMUM_CAPACITY) ?\n                         (int)ft : MAXIMUM_CAPACITY);\n                /**\u5bf9\u4e34\u754c\u503c\u8fdb\u884c\u521d\u59cb\u5316\uff0ctableSizeFor(t)\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u5927\u4e8et\u503c\u7684\uff0c\u4e14\u79bb\u5176\u6700\u8fd1\u76842\u6b21\u5e42\uff0c\u4f8b\u5982t\u4e3a29\uff0c\u5219\u8fd4\u56de\u7684\u503c\u662f32**/\n                if (t &gt; threshold)\n                    threshold = tableSizeFor(t);\n            }\n            //\u5982\u679ctable\u5df2\u7ecf\u521d\u59cb\u5316\uff0c\u5219\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\uff0cresize()\u5c31\u662f\u6269\u5bb9\u3002\n            else if (s &gt; threshold)\n                resize();\n            //\u904d\u5386\uff0c\u628amap\u4e2d\u7684\u6570\u636e\u8f6c\u5230hashMap\u4e2d\u3002\n            for (Map.Entry&lt;? extends K, ? extends V&gt; e : m.entrySet()) {\n                K key = e.getKey();\n                V value = e.getValue();\n                putVal(hash(key), key, value, false, evict);\n            }\n        }\n    }\n\nput()\uff1a\u6dfb\u52a0\u4e00\u4e2a\u952e\u503c\u5bf9/\u6269\u5bb9\u673a\u5236\n\u5411map\u4e2d\u6dfb\u52a0\u503c(\u8fd4\u56de\u8fd9\u4e2akey\u4ee5\u524d\u7684\u503c,\u5982\u679c\u6ca1\u6709\u8fd4\u56denull)\n\n\u8ba1\u7b97hash\u503c\n\u5148\u83b7\u53d6\u5230key\u7684hashCode\uff0c\u7136\u540e\u8fdb\u884c\u79fb\u4f4d\u518d\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u7b97\u51fa\u8981\u63d2\u5165\u7684\u7d22\u5f15\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u590d\u6742\uff0c\u4e0d\u7528\u60f3\u80af\u5b9a\u662f\u4e3a\u4e86\u51cf\u5c11hash\u51b2\u7a81\u3002\u5982\u679ckey\u4e3a\u7a7a\u5c31\u8fd4\u56de\u7d22\u5f150\uff0c\u4e5f\u5c31\u662f\u8bf4\u63d2\u5165\u5230\u7b2c\u4e00\u4e2a\u7ed3\u70b9\u3002\nstatic final int hash(Object key) {\n        int h;\n        return (key == null) ? 0 : (h = key.hashCode()) ^ (h &gt;&gt;&gt; 16);\n    }\n\n\u65b9\u6cd5\u6e90\u7801\npublic V put(K key, V value) {\n        /**\u56db\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2ahash\u503c\uff0c\u7b2c\u56db\u4e2a\u53c2\u6570\u8868\u793a\u5982\u679c\u8be5key\u5b58\u5728\u503c\uff0c\u5982\u679c\u4e3anull\u7684\u8bdd\uff0c\u5219\u63d2\u5165\u65b0\u7684value\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u5728hashMap\u4e2d\u6ca1\u6709\u7528\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ba1\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u5373\u53ef**/\n        return putVal(hash(key), key, value, false, true);\n    }\n\n    final V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n        //tab \u54c8\u5e0c\u6570\u7ec4\uff0cp \u8be5\u54c8\u5e0c\u6876\u7684\u9996\u8282\u70b9\uff0cn hashMap\u7684\u957f\u5ea6\uff0ci \u8ba1\u7b97\u51fa\u7684\u6570\u7ec4\u4e0b\u6807\n        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;\n        //\u83b7\u53d6\u957f\u5ea6\u5e76\u8fdb\u884c\u6269\u5bb9\uff0c\u4f7f\u7528\u7684\u662f\u61d2\u52a0\u8f7d\uff0ctable\u4e00\u5f00\u59cb\u662f\u6ca1\u6709\u52a0\u8f7d\u7684\uff0c\u7b49put\u540e\u624d\u5f00\u59cb\u52a0\u8f7d\n        if ((tab = table) == null || (n = tab.length) == 0)\n            n = (tab = resize()).length;\n        /**\u5982\u679c\u8ba1\u7b97\u51fa\u7684\u8be5\u54c8\u5e0c\u6876\u7684\u4f4d\u7f6e\u6ca1\u6709\u503c\uff0c\u5219\u628a\u65b0\u63d2\u5165\u7684key-value\u653e\u5230\u6b64\u5904\uff0c\u6b64\u5904\u5c31\u7b97\u6ca1\u6709\u63d2\u5165\u6210\u529f\uff0c\u4e5f\u5c31\u662f\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u65f6\u4e5f\u4f1a\u628a\u54c8\u5e0c\u6876\u7684\u9996\u8282\u70b9\u8d4b\u4e88p**/\n        if ((p = tab[i = (n - 1) &amp; hash]) == null)\n            tab[i] = newNode(hash, key, value, null);\n        //\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\u7684\u51e0\u79cd\u60c5\u51b5\n        else {\n            // e \u4e34\u65f6\u8282\u70b9\u7684\u4f5c\u7528\uff0c k \u5b58\u653e\u8be5\u5f53\u524d\u8282\u70b9\u7684key \n            Node&lt;K,V&gt; e; K k;\n            //\u7b2c\u4e00\u79cd\uff0c\u63d2\u5165\u7684key-value\u7684hash\u503c\uff0ckey\u90fd\u4e0e\u5f53\u524d\u8282\u70b9\u7684\u76f8\u7b49\uff0ce = p\uff0c\u5219\u8868\u793a\u4e3a\u9996\u8282\u70b9\n            if (p.hash == hash &amp;&amp;\n                ((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))\n                e = p;\n            //\u7b2c\u4e8c\u79cd\uff0chash\u503c\u4e0d\u7b49\u4e8e\u9996\u8282\u70b9\uff0c\u5224\u65ad\u8be5p\u662f\u5426\u5c5e\u4e8e\u7ea2\u9ed1\u6811\u7684\u8282\u70b9\n            else if (p instanceof TreeNode)\n                /**\u4e3a\u7ea2\u9ed1\u6811\u7684\u8282\u70b9\uff0c\u5219\u5728\u7ea2\u9ed1\u6811\u4e2d\u8fdb\u884c\u6dfb\u52a0\uff0c\u5982\u679c\u8be5\u8282\u70b9\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u8be5\u8282\u70b9\uff08\u4e0d\u4e3anull\uff09\uff0c\u8be5\u503c\u5f88\u91cd\u8981\uff0c\u7528\u6765\u5224\u65adput\u64cd\u4f5c\u662f\u5426\u6210\u529f\uff0c\u5982\u679c\u6dfb\u52a0\u6210\u529f\u8fd4\u56denull**/\n                e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);\n            //\u7b2c\u4e09\u79cd\uff0chash\u503c\u4e0d\u7b49\u4e8e\u9996\u8282\u70b9\uff0c\u4e0d\u4e3a\u7ea2\u9ed1\u6811\u7684\u8282\u70b9\uff0c\u5219\u4e3a\u94fe\u8868\u7684\u8282\u70b9\n            else {\n                //\u904d\u5386\u8be5\u94fe\u8868\n                for (int binCount = 0; ; ++binCount) {\n                    //\u5982\u679c\u627e\u5230\u5c3e\u90e8\uff0c\u5219\u8868\u660e\u6dfb\u52a0\u7684key-value\u6ca1\u6709\u91cd\u590d\uff0c\u5728\u5c3e\u90e8\u8fdb\u884c\u6dfb\u52a0\n                    if ((e = p.next) == null) {\n                        p.next = newNode(hash, key, value, null);\n                        //\u5224\u65ad\u662f\u5426\u8981\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\u7ed3\u6784\n                        if (binCount &gt;= TREEIFY_THRESHOLD - 1) \n                            treeifyBin(tab, hash);\n                        break;\n                    }\n                    //\u5982\u679c\u94fe\u8868\u4e2d\u6709\u91cd\u590d\u7684key\uff0ce\u5219\u4e3a\u5f53\u524d\u91cd\u590d\u7684\u8282\u70b9\uff0c\u7ed3\u675f\u5faa\u73af\n                    if (e.hash == hash &amp;&amp;\n                        ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))\n                        break;\n                    p = e;\n                }\n            }\n            //\u6709\u91cd\u590d\u7684key\uff0c\u5219\u7528\u5f85\u63d2\u5165\u503c\u8fdb\u884c\u8986\u76d6\uff0c\u8fd4\u56de\u65e7\u503c\u3002\n            if (e != null) { \n                V oldValue = e.value;\n                if (!onlyIfAbsent || oldValue == null)\n                    e.value = value;\n                afterNodeAccess(e);\n                return oldValue;\n            }\n        }\n        //\u5230\u4e86\u6b64\u6b65\u9aa4\uff0c\u5219\u8868\u660e\u5f85\u63d2\u5165\u7684key-value\u662f\u6ca1\u6709key\u7684\u91cd\u590d\uff0c\u56e0\u4e3a\u63d2\u5165\u6210\u529fe\u8282\u70b9\u7684\u503c\u4e3anull\n        //\u4fee\u6539\u6b21\u6570+1\n        ++modCount;\n        //\u5b9e\u9645\u957f\u5ea6+1\uff0c\u5224\u65ad\u662f\u5426\u5927\u4e8e\u4e34\u754c\u503c\uff0c\u5927\u4e8e\u5219\u6269\u5bb9\n        if (++size &gt; threshold)\n            resize();\n        afterNodeInsertion(evict);\n        //\u6dfb\u52a0\u6210\u529f\n        return null;\n    }\n\nresize()\u6269\u5bb9\u64cd\u4f5c\n\u53c2\u8003\n\nHashMap\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406\u548c\u4e3a\u4f55\u6269\u5bb9\u4e3a2\u7684\u6b21\u6570\u5e42\u53ca\u4e0eHashTable\u7684\u533a\u522b\u3002\nHashMap\u7684\u6269\u5bb9\u673a\u5236\n\n\n\u200b   \u5f53hashmap\u4e2d\u7684\u5143\u7d20\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\uff0c\u78b0\u649e\u7684\u51e0\u7387\u4e5f\u5c31\u8d8a\u6765\u8d8a\u9ad8\uff08\u56e0\u4e3a\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff09\uff0c\u6240\u4ee5\u4e3a\u4e86\u63d0\u9ad8\u67e5\u8be2\u7684\u6548\u7387\uff0c\u5c31\u8981\u5bf9hashmap\u7684\u6570\u7ec4\u8fdb\u884c\u6269\u5bb9\uff0c\u6570\u7ec4\u6269\u5bb9\u8fd9\u4e2a\u64cd\u4f5c\u4e5f\u4f1a\u51fa\u73b0\u5728ArrayList\u4e2d\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u7684\u64cd\u4f5c\uff0c\u5f88\u591a\u4eba\u5bf9\u5b83\u7684\u6027\u80fd\u8868\u793a\u8fc7\u6000\u7591\uff0c\u4e0d\u8fc7\u60f3\u60f3\u6211\u4eec\u7684\u201c\u5747\u644a\u201d\u539f\u7406\uff0c\u5c31\u91ca\u7136\u4e86\uff0c\u800c\u5728hashmap\u6570\u7ec4\u6269\u5bb9\u4e4b\u540e\uff0c\u6700\u6d88\u8017\u6027\u80fd\u7684\u70b9\u5c31\u51fa\u73b0\u4e86\uff1a\u539f\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u5fc5\u987b\u91cd\u65b0\u8ba1\u7b97\u5176\u5728\u65b0\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u653e\u8fdb\u53bb\uff0c\u8fd9\u5c31\u662fresize\u3002\n\u200b    \u90a3\u4e48hashmap\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u6269\u5bb9\u5462\uff1f\u5f53hashmap\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u8d85\u8fc7\u6570\u7ec4\u5927\u5c0floadFactor\u65f6\uff0c\u5c31\u4f1a\u8fdb\u884c\u6570\u7ec4\u6269\u5bb9\uff0cloadFactor\u7684\u9ed8\u8ba4\u503c\u4e3a0.75\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3a16\uff0c\u90a3\u4e48\u5f53hashmap\u4e2d\u5143\u7d20\u4e2a\u6570\u8d85\u8fc716 \u00d7 0.75 = 12\u7684\u65f6\u5019\uff0c\u5c31\u628a\u6570\u7ec4\u7684\u5927\u5c0f\u6269\u5c55\u4e3a2 \u00d7 16=32\uff0c\u5373\u6269\u5927\u4e00\u500d\uff0c\u7136\u540e\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u800c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6d88\u8017\u6027\u80fd\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u9884\u77e5hashmap\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u9884\u8bbe\u5143\u7d20\u7684\u4e2a\u6570\u80fd\u591f\u6709\u6548\u7684\u63d0\u9ad8hashmap\u7684\u6027\u80fd\u3002\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u67091000\u4e2a\u5143\u7d20new HashMap(1000), \u4f46\u662f\u7406\u8bba\u4e0a\u6765\u8bb2new HashMap(1024)\u66f4\u5408\u9002\uff0c\u4e0d\u8fc7\u4e0a\u9762annegu\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u5373\u4f7f\u662f1000\uff0chashmap\u4e5f\u81ea\u52a8\u4f1a\u5c06\u5176\u8bbe\u7f6e\u4e3a1024\u3002 \u4f46\u662fnew HashMap(1024)\u8fd8\u4e0d\u662f\u66f4\u5408\u9002\u7684\uff0c\u56e0\u4e3a0.75 \u00d7 1000 &lt; 1000, \u4e5f\u5c31\u662f\u8bf4\u4e3a\u4e86\u8ba90.75 \u00d7 size &gt; 1000, \u6211\u4eec\u5fc5\u987b\u8fd9\u6837new HashMap(2048)\u624d\u6700\u5408\u9002\uff0c\u65e2\u8003\u8651\u4e86&amp;\u7684\u95ee\u9898\uff0c\u4e5f\u907f\u514d\u4e86resize\u7684\u95ee\u9898\u3002\nfinal Node&lt;K,V&gt;[] resize() {\n        //\u628a\u6ca1\u63d2\u5165\u4e4b\u524d\u7684\u54c8\u5e0c\u6570\u7ec4\u505a\u6211\u8bf6oldTal\n        Node&lt;K,V&gt;[] oldTab = table;\n        //old\u7684\u957f\u5ea6\n        int oldCap = (oldTab == null) ? 0 : oldTab.length;\n        //old\u7684\u4e34\u754c\u503c\n        int oldThr = threshold;\n        //\u521d\u59cb\u5316new\u7684\u957f\u5ea6\u548c\u4e34\u754c\u503c\n        int newCap, newThr = 0;\n        //oldCap &gt; 0\u4e5f\u5c31\u662f\u8bf4\u4e0d\u662f\u9996\u6b21\u521d\u59cb\u5316\uff0c\u56e0\u4e3ahashMap\u7528\u7684\u662f\u61d2\u52a0\u8f7d\n        if (oldCap &gt; 0) {\n            //\u5927\u4e8e\u6700\u5927\u503c\n            if (oldCap &gt;= MAXIMUM_CAPACITY) {\n                //\u4e34\u754c\u503c\u4e3a\u6574\u6570\u7684\u6700\u5927\u503c\n                threshold = Integer.MAX_VALUE;\n                return oldTab;\n            }\n            //\u6807\u8bb0##\uff0c\u5176\u5b83\u60c5\u51b5\uff0c\u6269\u5bb9\u4e24\u500d\uff0c\u5e76\u4e14\u6269\u5bb9\u540e\u7684\u957f\u5ea6\u8981\u5c0f\u4e8e\u6700\u5927\u503c\uff0cold\u957f\u5ea6\u4e5f\u8981\u5927\u4e8e16\n            else if ((newCap = oldCap &lt;&lt; 1) &lt; MAXIMUM_CAPACITY &amp;&amp;\n                     oldCap &gt;= DEFAULT_INITIAL_CAPACITY)\n                //\u4e34\u754c\u503c\u4e5f\u6269\u5bb9\u4e3aold\u7684\u4e34\u754c\u503c2\u500d\n                newThr = oldThr &lt;&lt; 1; \n        }\n        /**\u5982\u679coldCap&lt;0\uff0c\u4f46\u662f\u5df2\u7ecf\u521d\u59cb\u5316\u4e86\uff0c\u50cf\u628a\u5143\u7d20\u5220\u9664\u5b8c\u4e4b\u540e\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5b83\u7684\u4e34\u754c\u503c\u80af\u5b9a\u8fd8\u5b58\u5728\uff0c        \n           \u5982\u679c\u662f\u9996\u6b21\u521d\u59cb\u5316\uff0c\u5b83\u7684\u4e34\u754c\u503c\u5219\u4e3a0\n        **/\n        else if (oldThr &gt; 0) \n            newCap = oldThr;\n        //\u9996\u6b21\u521d\u59cb\u5316\uff0c\u7ed9\u4e0e\u9ed8\u8ba4\u7684\u503c\n        else {               \n            newCap = DEFAULT_INITIAL_CAPACITY;\n            //\u4e34\u754c\u503c\u7b49\u4e8e\u5bb9\u91cf*\u52a0\u8f7d\u56e0\u5b50\n            newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n        }\n        //\u6b64\u5904\u7684if\u4e3a\u4e0a\u9762\u6807\u8bb0##\u7684\u8865\u5145\uff0c\u4e5f\u5c31\u662f\u521d\u59cb\u5316\u65f6\u5bb9\u91cf\u5c0f\u4e8e\u9ed8\u8ba4\u503c16\u7684\uff0c\u6b64\u65f6newThr\u6ca1\u6709\u8d4b\u503c\n        if (newThr == 0) {\n            //new\u7684\u4e34\u754c\u503c\n            float ft = (float)newCap * loadFactor;\n            //\u5224\u65ad\u662f\u5426new\u5bb9\u91cf\u662f\u5426\u5927\u4e8e\u6700\u5927\u503c\uff0c\u4e34\u754c\u503c\u662f\u5426\u5927\u4e8e\u6700\u5927\u503c\n            newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (float)MAXIMUM_CAPACITY ?\n                      (int)ft : Integer.MAX_VALUE);\n        }\n        //\u628a\u4e0a\u9762\u5404\u79cd\u60c5\u51b5\u5206\u6790\u51fa\u7684\u4e34\u754c\u503c\uff0c\u5728\u6b64\u5904\u771f\u6b63\u8fdb\u884c\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u5bb9\u91cf\u548c\u4e34\u754c\u503c\u90fd\u6539\u53d8\u4e86\u3002\n        threshold = newThr;\n        //\u8868\u793a\u5ffd\u7565\u8be5\u8b66\u544a\n        @SuppressWarnings({&quot;rawtypes&quot;,&quot;unchecked&quot;})\n            //\u521d\u59cb\u5316\n            Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])new Node[newCap];\n        //\u8d4b\u4e88\u5f53\u524d\u7684table\n        table = newTab;\n        //\u6b64\u5904\u81ea\u7136\u662f\u628aold\u4e2d\u7684\u5143\u7d20\uff0c\u904d\u5386\u5230new\u4e2d\n        if (oldTab != null) {\n            for (int j = 0; j &lt; oldCap; ++j) {\n                //\u4e34\u65f6\u53d8\u91cf\n                Node&lt;K,V&gt; e;\n                //\u5f53\u524d\u54c8\u5e0c\u6876\u7684\u4f4d\u7f6e\u503c\u4e0d\u4e3anull\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4\u4e0b\u6807\u5904\u6709\u503c\uff0c\u56e0\u4e3a\u6709\u503c\u8868\u793a\u53ef\u80fd\u4f1a\u53d1\u751f\u51b2\u7a81\n                if ((e = oldTab[j]) != null) {\n                    //\u628a\u5df2\u7ecf\u8d4b\u503c\u4e4b\u540e\u7684\u53d8\u91cf\u7f6e\u4f4dnull\uff0c\u5f53\u7136\u662f\u4e3a\u4e86\u597d\u56de\u6536\uff0c\u91ca\u653e\u5185\u5b58\n                    oldTab[j] = null;\n                    //\u5982\u679c\u4e0b\u6807\u5904\u7684\u8282\u70b9\u6ca1\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\n                    if (e.next == null)\n                        //\u628a\u8be5\u53d8\u91cf\u7684\u503c\u5b58\u5165newCap\u4e2d\uff0ce.hash &amp; (newCap - 1)\u5e76\u4e0d\u7b49\u4e8ej\n                        newTab[e.hash &amp; (newCap - 1)] = e;\n                    //\u8be5\u8282\u70b9\u4e3a\u7ea2\u9ed1\u6811\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u5b58\u5728\u54c8\u5e0c\u51b2\u7a81\uff0c\u8be5\u54c8\u5e0c\u6876\u4e2d\u6709\u591a\u4e2a\u5143\u7d20\n                    else if (e instanceof TreeNode)\n                        //\u628a\u6b64\u6811\u8fdb\u884c\u8f6c\u79fb\u5230newCap\u4e2d\n                        ((TreeNode&lt;K,V&gt;)e).split(this, newTab, j, oldCap);\n                    else { /**\u6b64\u5904\u8868\u793a\u4e3a\u94fe\u8868\u7ed3\u6784\uff0c\u540c\u6837\u628a\u94fe\u8868\u8f6c\u79fb\u5230newCap\u4e2d\uff0c\u5c31\u662f\u628a\u94fe\u8868\u904d\u5386\u540e\uff0c\u628a\u503c\u8f6c\u8fc7\u53bb\uff0c\u5728\u7f6e\u4f4dnull**/\n                        Node&lt;K,V&gt; loHead = null, loTail = null;\n                        Node&lt;K,V&gt; hiHead = null, hiTail = null;\n                        Node&lt;K,V&gt; next;\n                        do {\n                            next = e.next;\n                            if ((e.hash &amp; oldCap) == 0) {\n                                if (loTail == null)\n                                    loHead = e;\n                                else\n                                    loTail.next = e;\n                                loTail = e;\n                            }\n                            else {\n                                if (hiTail == null)\n                                    hiHead = e;\n                                else\n                                    hiTail.next = e;\n                                hiTail = e;\n                            }\n                        } while ((e = next) != null);\n                        if (loTail != null) {\n                            loTail.next = null;\n                            newTab[j] = loHead;\n                        }\n                        if (hiTail != null) {\n                            hiTail.next = null;\n                            newTab[j + oldCap] = hiHead;\n                        }\n                    }\n                }\n            }\n        }\n        //\u8fd4\u56de\u6269\u5bb9\u540e\u7684hashMap\n        return newTab;\n    }\n\nHashMap \u7684\u2ed3\u5ea6\u4e3a\u4ec0\u4e48\u662f2\u7684\u5e42\u6b21\u2f45\n\u4e3a\u4e86\u80fd\u8ba9 HashMap \u5b58\u53d6\u2fbc\u6548\uff0c\u5c3d\u91cf\u51cf\u5c11\u78b0\u649e\uff0c\u4e5f\u5c31\u662f\u8981\u5c3d\u91cf\u628a\u6570\u636e\u5206\u914d\u5747\u5300\u3002\u6211\u4eec\u4e0a\u2faf\u4e5f\u8bb2\u5230\u4e86\u8fc7 \u4e86\uff0cHash \u503c\u7684\u8303\u56f4\u503c-2147483648\u52302147483647\uff0c\u524d\u540e\u52a0\u8d77\u6765\u2f24\u698240\u4ebf\u7684\u6620\u5c04\u7a7a\u95f4\uff0c\u53ea\u8981\u54c8\u5e0c\u51fd\u6570\u6620\u5c04 \u5f97\u2f50\u8f83\u5747\u5300\u677e\u6563\uff0c\u2f00\u822c\u5e94\u2f64\u662f\u5f88\u96be\u51fa\u73b0\u78b0\u649e\u7684\u3002\u4f46\u95ee\u9898\u662f\u2f00\u4e2a40\u4ebf\u2ed3\u5ea6\u7684\u6570\u7ec4\uff0c\u5185\u5b58\u662f\u653e\u4e0d\u4e0b\u7684\u3002\u6240\u4ee5 \u8fd9\u4e2a\u6563\u5217\u503c\u662f\u4e0d\u80fd\u76f4\u63a5\u62ff\u6765\u2f64\u7684\u3002\u2f64\u4e4b\u524d\u8fd8\u8981\u5148\u505a\u5bf9\u6570\u7ec4\u7684\u2ed3\u5ea6\u53d6\u6a21\u8fd0\u7b97\uff0c\u5f97\u5230\u7684\u4f59\u6570\u624d\u80fd\u2f64\u6765\u8981\u5b58\u653e \u7684\u4f4d\u7f6e\u4e5f\u5c31\u662f\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\u3002\u8fd9\u4e2a\u6570\u7ec4\u4e0b\u6807\u7684\u8ba1\u7b97\u2f45\u6cd5\u662f\u201c (n - 1) &amp; hash \u201d\u3002\uff08n\u4ee3\u8868\u6570\u7ec4\u2ed3 \u5ea6\uff09\u3002\u8fd9\u4e5f\u5c31\u89e3\u91ca\u4e86 HashMap \u7684\u2ed3\u5ea6\u4e3a\u4ec0\u4e48\u662f2\u7684\u5e42\u6b21\u2f45\u3002\n\u8fd9\u4e2a\u7b97\u6cd5\u5e94\u8be5\u5982\u4f55\u8bbe\u8ba1\u5462\uff1f\n\u6211\u4eec\u2fb8\u5148\u53ef\u80fd\u4f1a\u60f3\u5230\u91c7\u2f64%\u53d6\u4f59\u7684\u64cd\u4f5c\u6765\u5b9e\u73b0\u3002\u4f46\u662f\uff0c\u91cd\u70b9\u6765\u4e86\uff1a\u201c\u53d6\u4f59(%)\u64cd\u4f5c\u4e2d\u5982\u679c\u9664\u6570\u662f2\u7684\u5e42\u6b21\u5219 \u7b49\u4ef7\u4e8e\u4e0e\u5176\u9664\u6570\u51cf\u2f00\u7684\u4e0e(&amp;)\u64cd\u4f5c\uff08\u4e5f\u5c31\u662f\u8bf4 hash%lengthdehash&amp;(length-1)\u7684\u524d\u63d0\u662f length \u662f2\u7684 n \u6b21\u2f45\uff1b\uff09\u3002\u201d \u5e76\u4e14 \u91c7\u2f64\u2f06\u8fdb\u5236\u4f4d\u64cd\u4f5c &amp;\uff0c\u76f8\u5bf9\u4e8e%\u80fd\u591f\u63d0\u2fbc\u8fd0\u7b97\u6548\u7387\uff0c\u8fd9\u5c31\u89e3\u91ca\u4e86 HashMap \u7684\u2ed3\u5ea6 \u4e3a\u4ec0\u4e48\u662f2\u7684\u5e42\u6b21\u2f45\u3002\nJDK1.8\u4e2dHashMap\u5982\u4f55\u5e94\u5bf9hash\u51b2\u7a81\uff1f\n\u53c2\u8003\n\nJDK1.8\u4e2dHashMap\u5982\u4f55\u5e94\u5bf9hash\u51b2\u7a81\n\n\njdk1.8\u4e4b\u524d\u5e76\u53d1\u64cd\u4f5chashmap\u65f6\u4e3a\u4ec0\u4e48\u4f1a\u6709\u6b7b\u5faa\u73af\u7684\u95ee\u9898\uff1f\n\u4e3a\u4ec0\u4e48HashMap\u7ebf\u7a0b\u4e0d\u5b89\u5168\n\u53c2\u8003\n\nhttps://blog.csdn.net/swpu_ocean/article/details/88917958\n\n\n\u603b\u7ed3\n\n\u5728JDK1.7\u4e2d\uff0c\u5f53\u5e76\u53d1\u6267\u884c\u6269\u5bb9\u64cd\u4f5c\u65f6\u4f1a\u9020\u6210\u73af\u5f62\u94fe\u548c\u6570\u636e\u4e22\u5931\u7684\u60c5\u51b5\u3002\n\u5728JDK1.8\u4e2d\uff0c\u5728\u5e76\u53d1\u6267\u884cput\u64cd\u4f5c\u65f6\u4f1a\u53d1\u751f\u6570\u636e\u8986\u76d6\u7684\u60c5\u51b5\u3002\n\n3.2 LinkedHashMap\n3.3 ConcurrentHashMap\n\u5982\u4f55\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\n\n3.3 Hashtable\n\u533a\u522b\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "Java-\u5bb9\u5668", "slug": "Java-\u5bb9\u5668", "permalink": "/tag/Java-\u5bb9\u5668/"}]}, {"title": "Java-\u591a\u7ebf\u7a0b\u5e76\u53d1", "date": "2020-08-23T20:36:25-00.00", "path": "/archives/Java-\u591a\u7ebf\u7a0b\u5e76\u53d1/", "text": "1. \u7ebf\u7a0b\u3001\u7a0b\u5e8f\u3001\u8fdb\u7a0b\u7684\u57fa\u672c\u6982\u5ff5\n\n2. \u4f7f\u2f64\u591a\u7ebf\u7a0b\u53ef\u80fd\u5e26\u6765\u4ec0\u4e48\u95ee\u9898?\n\u5e76\u53d1\u7f16\u7a0b\u7684\u2f6c\u7684\u5c31\u662f\u4e3a\u4e86\u80fd\u63d0\u2fbc\u7a0b\u5e8f\u7684\u6267\u2f8f\u6548\u7387\u63d0\u2fbc\u7a0b\u5e8f\u8fd0\u2f8f\u901f\u5ea6\uff0c\u4f46\u662f\u5e76\u53d1\u7f16\u7a0b\u5e76\u4e0d\u603b\u662f\u80fd\u63d0\u2fbc\u7a0b\u5e8f \u8fd0\u2f8f\u901f\u5ea6\u7684\uff0c\u2f7d\u4e14\u5e76\u53d1\u7f16\u7a0b\u53ef\u80fd\u4f1a\u9047\u5230\u5f88\u591a\u95ee\u9898\uff0c\u2f50\u5982\uff1a\u5185\u5b58\u6cc4\u6f0f\u3001\u4e0a\u4e0b\u2f42\u5207\u6362\u3001\u6b7b\u9501\u8fd8\u6709\u53d7\u9650\u4e8e\u786c\u4ef6 \u548c\u8f6f\u4ef6\u7684\u8d44\u6e90\u95f2\u7f6e\u95ee\u9898\u3002\n3. Java\u591a\u7ebf\u7a0b\u7684\u56db\u79cd\u5b9e\u73b0\u65b9\u5f0f&amp;\u542f\u52a8\u539f\u7406\n\u53c2\u8003\n\nhttps://www.cnblogs.com/felixzh/p/6036074.html\nhttps://www.jianshu.com/p/7950ea349dbb\n\n\n\n\u65e0\u8fd4\u56de\u503c\uff0crun()\u8fd4\u56de\u4e3avoid\n\n\u7ee7\u627fThread\u7c7b\uff1a\u91cd\u5199run()\u65b9\u6cd5\n\u5b9e\u73b0Runnable\u63a5\u53e3\uff1a\u5982\u679c\u81ea\u5df1\u7684\u7c7b\u5df2\u7ecfextends\u53e6\u4e00\u4e2a\u7c7b\uff0c\u5c31\u65e0\u6cd5\u76f4\u63a5extends Thread\uff0c\u6b64\u65f6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2aRunnable\u63a5\u53e3\uff0c\u91cd\u5199run\u65b9\u6cd5\uff0c\u5b9e\u73b0Runnable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u4f5c\u4e3aThread\u6784\u9020\u51fd\u6570\u7684target\n\n\u6709\u8fd4\u56de\u503c\uff0c\u901a\u8fc7Callable\u63a5\u53e3\uff0c\u5c31\u8981\u5b9e\u73b0call\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u662fObject\n\n\u5b9e\u73b0Callable\u63a5\u53e3\u901a\u8fc7FutureTask\u5305\u88c5\u5668\u6765\u521b\u5efaThread\u7ebf\u7a0b\uff0c\u8c03\u7528Thread\u4e3a\n\u7ebf\u7a0b\u6c60\uff0c\u4f7f\u7528ExecutorService\u3001Callable\u3001Future\u5b9e\u73b0\u6709\u8fd4\u56de\u7ed3\u679c\u7684\u591a\u7ebf\u7a0b\n\n3.1 \u7ebf\u7a0b\u542f\u52a8\u539f\u7406\n\u53c2\u8003\n\nhttps://www.jianshu.com/p/8c16aeea7e1a\nhttps://www.cnblogs.com/xuyuanpeng/p/11050394.html\n\n\nJava\u591a\u7ebf\u7a0b\uff0c\u7686\u59cb\u4e8eThread\u3002Thread\u662f\u591a\u7ebf\u7a0b\u7684\u6839\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5f00\u542f\u90fd\u59cb\u4e8eThread\u7684start()\u65b9\u6cd5\n3.1.1 start()\u65b9\u6cd5\u6e90\u7801\n/**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the &lt;code&gt;run&lt;/code&gt; method of this thread.\n     * \n     * 1\u3001start\u65b9\u6cd5\u5c06\u5bfc\u81f4this thread\u5f00\u59cb\u6267\u884c\u3002\u7531JVM\u8c03\u7528this thread\u7684run\u65b9\u6cd5\u3002\n     * \n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * &lt;code&gt;start&lt;/code&gt; method) and the other thread (which executes its\n     * &lt;code&gt;run&lt;/code&gt; method).\n     * \n     * 2\u3001\u7ed3\u679c\u662f \u8c03\u7528start\u65b9\u6cd5\u7684\u5f53\u524d\u7ebf\u7a0b \u548c \u6267\u884crun\u65b9\u6cd5\u7684\u53e6\u4e00\u4e2a\u7ebf\u7a0b \u540c\u65f6\u8fd0\u884c\u3002\n     * \n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * 3\u3001\u591a\u6b21\u542f\u52a8\u7ebf\u7a0b\u6c38\u8fdc\u4e0d\u5408\u6cd5\u3002 \u7279\u522b\u662f\uff0c\u7ebf\u7a0b\u4e00\u65e6\u5b8c\u6210\u6267\u884c\u5c31\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\u3002\n     * \n     * @exception  IllegalThreadStateException  if the thread was already started.\n     * \u5982\u679c\u7ebf\u7a0b\u5df2\u542f\u52a8\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or &quot;system&quot;\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         * \n         * 4\u3001\u5bf9\u4e8e\u7531VM\u521b\u5efa/\u8bbe\u7f6e\u7684main\u65b9\u6cd5\u7ebf\u7a0b\u6216\u201csystem\u201d\u7ec4\u7ebf\u7a0b\uff0c\u4e0d\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\u3002 \n         *    \u672a\u6765\u6dfb\u52a0\u5230\u6b64\u65b9\u6cd5\u7684\u4efb\u4f55\u65b0\u529f\u80fd\u53ef\u80fd\u4e5f\u5fc5\u987b\u6dfb\u52a0\u5230VM\u4e2d\u3002\n         * \n         * A zero status value corresponds to state &quot;NEW&quot;.\n         * 5\u3001status=0 \u4ee3\u8868\u662f status \u662f &quot;NEW&quot;\u3002\n         */\n        if (threadStatus != 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group&#39;s list of threads\n         * and the group&#39;s unstarted count can be decremented. \n         * \n         * 6\u3001\u901a\u77e5\u7ec4\u8be5\u7ebf\u7a0b\u5373\u5c06\u542f\u52a8\uff0c\u4ee5\u4fbf\u5c06\u5176\u6dfb\u52a0\u5230\u7ebf\u7a0b\u7ec4\u7684\u5217\u8868\u4e2d\uff0c\n         *    \u5e76\u4e14\u51cf\u5c11\u7ebf\u7a0b\u7ec4\u7684\u672a\u542f\u52a8\u7ebf\u7a0b\u6570\u9012\u51cf\u3002\n         * \n         * */\n        group.add(this);\n\n        boolean started = false;\n        try {\n            //7\u3001\u8c03\u7528native\u65b9\u6cd5\uff0c\u5e95\u5c42\u5f00\u542f\u5f02\u6b65\u7ebf\u7a0b\uff0c\u5e76\u8c03\u7528run\u65b9\u6cd5\u3002\n            start0();\n            started = true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then it will be passed up the call stack \n                 * 8\u3001\u5ffd\u7565\u5f02\u5e38\u3002 \u5982\u679cstart0\u629b\u51fa\u4e00\u4e2aThrowable\uff0c\u5b83\u5c06\u88ab\u4f20\u9012\u7ed9\u8c03\u7528\u5806\u6808\u3002\n                 */\n            }\n        }\n    }\n\n //native\u65b9\u6cd5\uff0cJVM\u521b\u5efa\u5e76\u542f\u52a8\u7ebf\u7a0b\uff0c\u5e76\u8c03\u7528run\u65b9\u6cd5\n private native void start0();\n\n\nstart\u65b9\u6cd5\u7528synchronized\u4fee\u9970\uff0c\u4e3a\u540c\u6b65\u65b9\u6cd5\uff1b\n\u867d\u7136\u4e3a\u540c\u6b65\u65b9\u6cd5\uff0c\u4f46\u4e0d\u80fd\u907f\u514d\u591a\u6b21\u8c03\u7528\u95ee\u9898\uff0c\u7528threadStatus\u6765\u8bb0\u5f55\u7ebf\u7a0b\u72b6\u6001\uff0c\u5982\u679c\u7ebf\u7a0b\u88ab\u591a\u6b21start\u4f1a\u629b\u51fa\u5f02\u5e38\uff1bthreadStatus\u7684\u72b6\u6001\u7531JVM\u63a7\u5236\u3002\n\u4f7f\u7528Runnable\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u65e0\u6cd5\u6355\u83b7\u5b50\u7ebf\u7a0b\u4e2d\u7684\u5f02\u5e38\u72b6\u6001\u3002\u7ebf\u7a0b\u7684\u5f02\u5e38\uff0c\u5e94\u5728\u7ebf\u7a0b\u5185\u90e8\u89e3\u51b3\u3002\n\n\n3.1.2 run()\u65b9\u6cd5\u6e90\u7801\n/**\n     * If this thread was constructed using a separate\n     * &lt;code&gt;Runnable&lt;/code&gt; run object, then that\n     * &lt;code&gt;Runnable&lt;/code&gt; object&#39;s &lt;code&gt;run&lt;/code&gt; method is called;\n     * otherwise, this method does nothing and returns.\n     * &lt;p&gt;\n     * Subclasses of &lt;code&gt;Thread&lt;/code&gt; should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target != null) {\n            target.run();\n        }\n    }\n\nrun\u65b9\u6cd5\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5c31\u662f\u56de\u8c03\u4e86Runable\u7684run()\u63a5\u53e3\u3002\u5bfc\u81f4Thread\u5199\u7684@Overwrite void run() \u65b9\u6cd5\u76f4\u63a5\u662f\u5728\u4e3b\u7ebf\u7a0b\u6267\u884c\uff0c\u5bfc\u81f4\u963b\u585e\u4e86\u4e3b\u7ebf\u7a0b\u3002\n\u5230\u6b64\u6211\u4eec\u5c31\u77e5\u9053\u4e86\uff0cstart\u4f1a\u4f7f\u91cd\u5199\u7684run\u65b9\u6cd5\u88ab\u865a\u62df\u673a\u8c03\u7528\uff0c\u662f\u5728\u5b50\u7ebf\u7a0b\u4e2d\u6267\u884c\u7684run\u65b9\u6cd5\u3002\u800c\u76f4\u63a5\u8c03\u7528\u7ebf\u7a0b\u7684run\u65b9\u6cd5\uff0c\u4ed6\u662f\u5185\u90e8\u56de\u8c03\u4e86run\u63a5\u53e3\uff0c\u5bfc\u81f4\u76f4\u63a5\u6267\u884c\u4e86Runable.run\u7684\u91cd\u5199\u5185\u5bb9\u3002\u76f8\u5f53\u4e8e\u76f4\u63a5\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002\n3.1.3 \u4e3a\u4ec0\u4e48\u6211\u4eec\u8c03\u2f64 start() \u2f45\u6cd5\u65f6\u4f1a\u6267\u2f8f run() \u2f45\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u8c03\u2f64 run() \u2f45\u6cd5\uff1f\nnew \u2f00\u4e2a Thread\uff0c\u7ebf\u7a0b\u8fdb\u2f0a\u4e86\u65b0\u5efa\u72b6\u6001;\u8c03\u2f64 start() \u2f45\u6cd5\uff0c\u4f1a\u542f\u52a8\u2f00\u4e2a\u7ebf\u7a0b\u5e76\u4f7f\u7ebf\u7a0b\u8fdb\u2f0a\u4e86\u5c31\u7eea\u72b6 \u6001\uff0c\u5f53\u5206\u914d\u5230\u65f6\u95f4\u2f5a\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fd0\u2f8f\u4e86\u3002 start() \u4f1a\u6267\u2f8f\u7ebf\u7a0b\u7684\u76f8\u5e94\u51c6\u5907\u2f2f\u4f5c\uff0c\u7136\u540e\u2f83\u52a8\u6267\u2f8f run() \u2f45\u6cd5\u7684\u5185\u5bb9\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u591a\u7ebf\u7a0b\u2f2f\u4f5c\u3002 \u2f7d\u76f4\u63a5\u6267\u2f8f run() \u2f45\u6cd5\uff0c\u4f1a\u628a run \u2f45\u6cd5\u5f53\u6210\u2f00\u4e2a main \u4e3b\u7ebf\u7a0b\u4e0b\u7684\u666e\u901a\u2f45\u6cd5\u53bb\u6267\u2f8f\uff0c\u5e76\u4e0d\u4f1a\u5728\u67d0\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u2f8f\u5b83\uff0c\u6240\u4ee5\u8fd9\u5e76\u4e0d\u662f\u591a\u7ebf\u7a0b\u2f2f\u4f5c\u3002 \u603b\u7ed3\uff1a \u8c03\u2f64 start \u2f45\u6cd5\u2f45\u53ef\u542f\u52a8\u7ebf\u7a0b\u5e76\u4f7f\u7ebf\u7a0b\u8fdb\u2f0a\u5c31\u7eea\u72b6\u6001\uff0c\u2f7d run \u2f45\u6cd5\u53ea\u662f thread \u7684\u2f00\u4e2a\u666e\u901a \u2f45\u6cd5\u8c03\u2f64\uff0c\u8fd8\u662f\u5728\u4e3b\u7ebf\u7a0b\u2fa5\u6267\u2f8f\u3002\n3.2 \u7ee7\u627fThread\u7c7b\u521b\u5efa\u7ebf\u7a0b\n\u200b   Thread\u7c7b\u672c\u8d28\u4e0a\u662f\u5b9e\u73b0\u4e86Runnable\u63a5\u53e3\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u4ee3\u8868\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5b9e\u4f8b\u3002\u542f\u52a8\u7ebf\u7a0b\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u901a\u8fc7Thread\u7c7b\u7684start()\u5b9e\u4f8b\u65b9\u6cd5\u3002start()\u65b9\u6cd5\u662f\u4e00\u4e2anative\u65b9\u6cd5\uff0c\u5b83\u5c06\u542f\u52a8\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u5e76\u6267\u884crun()\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u591a\u7ebf\u7a0b\u5f88\u7b80\u5355\uff0c\u901a\u8fc7\u81ea\u5df1\u7684\u7c7b\u76f4\u63a5extend Thread\uff0c\u5e76\u590d\u5199run()\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8\u65b0\u7ebf\u7a0b\u5e76\u6267\u884c\u81ea\u5df1\u5b9a\u4e49\u7684run()\u65b9\u6cd5\u3002\u4f8b\u5982\uff1a\npublic class MyThread extends Thread {  \n\u3000\u3000public void run() {  \n\u3000\u3000 System.out.println(&quot;MyThread.run()&quot;);  \n\u3000\u3000}  \n}  \n\nMyThread myThread1 = new MyThread();  \nMyThread myThread2 = new MyThread();  \nmyThread1.start();  \nmyThread2.start();\n\n\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u662f\u663e\u793a\u7684\u7ee7\u627f\u4e86Thread\uff0c\u4f46\u4ece\u7c7b\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cThread\u7c7b\u672c\u8eab\u5c31\u7ee7\u627f\u81eaRunnable\uff0c\u6240\u4ee5\u7ee7\u627fThread\u7684\u672c\u8d28\u4f9d\u7136\u662f\u5b9e\u73b0Runnable\u63a5\u53e3\u5b9a\u4e49\u7684run\u65b9\u6cd5\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ee7\u627fThread\u65b9\u5f0f\uff0ctarget\u5bf9\u8c61\u4e3anull\uff0c\u91cd\u5199\u4e86run\u65b9\u6cd5\uff0c\u5bfc\u81f4\u65b9\u5f0f1\u4e2d\u7684Thread\u539f\u751f\u7684run\u65b9\u6cd5\u5931\u6548\uff0c\u56e0\u6b64\u5e76\u4e0d\u4f1a\u8c03\u7528\u5230target.run()\u7684\u903b\u8f91\uff0c\u800c\u662f\u76f4\u63a5\u8c03\u7528\u5b50\u7c7b\u91cd\u5199\u7684run\u65b9\u6cd5\u3002\n\u56e0\u4e3ajava\u662f\u5355\u6839\u7ee7\u627f\uff0c\u6b64\u65b9\u5f0f\u4e00\u822c\u4e0d\u5e38\u7528\u3002\n3.3 \u5b9e\u73b0Runnable\u63a5\u53e3\n\u5b9e\u73b0run\u65b9\u6cd5\uff0c\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7684\u5b9e\u4f8b\u4f5c\u4e3aThread\u7684target\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u5e26\u53c2\u7684Thread\u6784\u9020\u51fd\u6570\uff0c\u901a\u8fc7\u8c03\u7528start()\u65b9\u6cd5\u542f\u52a8\u7ebf\u7a0b\u3002\u9002\u7528\u4e8e\u5df2\u7ecf\u6709\u7ee7\u627f\u7684\u7236\u7c7b\u65e0\u6cd5\u7ee7\u627fThread\u7c7b\u7684\u65f6\u5019\npublic class ThreadDemo02 {\n\n    public static void main(String[] args){ \n        System.out.println(Thread.currentThread().getName());\n        Thread t1 = new Thread(new MyThread());\n        t1.start(); \n    }\n}\n\nclass MyThread implements Runnable{\n    @Override\n    public void run() {\n        // TODO Auto-generated method stub\n        System.out.println(Thread.currentThread().getName()+&quot;--&gt;\u6211\u662f\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3\u7684\u7ebf\u7a0b\u5b9e\u73b0\u65b9\u5f0f\uff01&quot;);\n    }   \n}\n\n3.4 \u5b9e\u73b0Callable\u63a5\u53e3\u901a\u8fc7FutureTask\u5305\u88c5\u5668\u6765\u521b\u5efaThread\u7ebf\u7a0b\n\n\u521b\u5efaCallable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b \uff0c\u5e76\u5b9e\u73b0Call\u65b9\u6cd5 \n\u521b\u5efaCallable\u5b9e\u73b0\u7c7b\u7684\u5b9e\u73b0\uff0c\u4f7f\u7528FutureTask\u7c7b\u5305\u88c5Callable\u5bf9\u8c61\uff0c\u8be5FutureTask\u5bf9\u8c61\u5c01\u88c5\u4e86Callable\u5bf9\u8c61\u7684Call\u65b9\u6cd5\u7684\u8fd4\u56de\u503c \n\u4f7f\u7528FutureTask\u5bf9\u8c61\u4f5c\u4e3aThread\u5bf9\u8c61\u7684target\u521b\u5efa\u5e76\u542f\u52a8\u7ebf\u7a0b \n\u8c03\u7528FutureTask\u5bf9\u8c61\u7684get()\u6765\u83b7\u53d6\u5b50\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u7684\u8fd4\u56de\u503c\n\npublic class DemoCallable implements Callable&lt;String&gt;{\n    @Override\n    public String call() throws Exception {\n        // TODO Auto-generated method stub\n        return null;\n    }\n\n    public static void main(String[] args) throws Exception {\n        DemoCallable c = new DemoCallable();\n        FutureTask&lt;String&gt; future = new FutureTask&lt;&gt;(c); \n        Thread t = new Thread(future);\n        t.start();\n        ...\n        String result = future.get(); //\u540c\u6b65\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c\n        System.out.println(result);\n    }\n}\n\n\u8fd9\u4e2a\u65b9\u6cd5\u91cc\uff0c\u660e\u660e\u6ca1\u6709\u770b\u5230run\u65b9\u6cd5\uff0c\u6ca1\u6709\u770b\u5230Runnable\uff0c\u4e3a\u4ec0\u4e48\u8bf4\u672c\u8d28\u4e5f\u662f\u5b9e\u73b0Runnable\u63a5\u53e3\u5462\uff1f\n\u56de\u770b\u5f00\u7bc7\u7684\u7c7b\u56fe\uff0cFutureTask\u5b9e\u73b0\u4e86RunnableFuture\uff0cRunnableFuture\u5219\u5b9e\u73b0\u4e86Runnable\u548cFuture\u4e24\u4e2a\u63a5\u53e3\u3002\u56e0\u6b64\u6784\u9020Thread\u65f6\uff0cFutureTask\u8fd8\u662f\u88ab\u8f6c\u578b\u4e3aRunnable\u4f7f\u7528\u3002\u56e0\u6b64\u5176\u672c\u8d28\u8fd8\u662f\u5b9e\u73b0Runnable\u63a5\u53e3\u3002\n3.5 \u901a\u8fc7\u7ebf\u7a0b\u6c60\u521b\u5efa\u7ebf\u7a0b\nExecutorService\u3001Callable\u90fd\u662f\u5c5e\u4e8eExecutor\u6846\u67b6\u3002\u8fd4\u56de\u7ed3\u679c\u7684\u7ebf\u7a0b\u662f\u5728JDK1.5\u4e2d\u5f15\u5165\u7684\u65b0\u7279\u5f81\uff0c\u8fd8\u6709Future\u63a5\u53e3\u4e5f\u662f\u5c5e\u4e8e\u8fd9\u4e2a\u6846\u67b6\uff0c\u6709\u4e86\u8fd9\u79cd\u7279\u5f81\u5f97\u5230\u8fd4\u56de\u503c\u5c31\u5f88\u65b9\u4fbf\u4e86\u3002 \n\u901a\u8fc7\u5206\u6790\u53ef\u4ee5\u77e5\u9053\uff0c\u4ed6\u540c\u6837\u4e5f\u662f\u5b9e\u73b0\u4e86Callable\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86Call\u65b9\u6cd5\uff0c\u6240\u4ee5\u6709\u8fd4\u56de\u503c\u3002\u8fd9\u4e5f\u5c31\u662f\u6b63\u597d\u7b26\u5408\u4e86\u524d\u9762\u6240\u8bf4\u7684\u4e24\u79cd\u5206\u7c7b\n\u6267\u884cCallable\u4efb\u52a1\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e00\u4e2aFuture\u7684\u5bf9\u8c61\uff0c\u5728\u8be5\u5bf9\u8c61\u4e0a\u8c03\u7528get\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230Callable\u4efb\u52a1\u8fd4\u56de\u7684Object\u4e86\u3002get\u65b9\u6cd5\u662f\u963b\u585e\u7684\uff0c\u5373\uff1a\u7ebf\u7a0b\u65e0\u8fd4\u56de\u7ed3\u679c\uff0cget\u65b9\u6cd5\u4f1a\u4e00\u76f4\u7b49\u5f85\u3002\npublic class ThreadDemo05{\n\n    private static int POOL_NUM = 10;     //\u7ebf\u7a0b\u6c60\u6570\u91cf\n\n    /**\n     * @param args\n     * @throws InterruptedException \n     */\n    public static void main(String[] args) throws InterruptedException {\n        // TODO Auto-generated method stub\n        ExecutorService executorService = Executors.newFixedThreadPool(5);  \n        for(int i = 0; i&lt;POOL_NUM; i++)  \n        {  \n            RunnableThread thread = new RunnableThread();\n\n            //Thread.sleep(1000);\n            executorService.execute(thread);  \n        }\n        //\u5173\u95ed\u7ebf\u7a0b\u6c60\n        executorService.shutdown(); \n    }   \n\n}\n\nclass RunnableThread implements Runnable  \n{     \n    @Override\n    public void run()  \n    {  \n        System.out.println(&quot;\u901a\u8fc7\u7ebf\u7a0b\u6c60\u65b9\u5f0f\u521b\u5efa\u7684\u7ebf\u7a0b\uff1a&quot; + Thread.currentThread().getName() + &quot; &quot;);  \n\n    }  \n}\n\n4. \u7ebf\u7a0b\u7684\u2f63\u547d\u5468\u671f\u548c\u72b6\u6001?\nJava \u7ebf\u7a0b\u5728\u8fd0\u2f8f\u7684\u2f63\u547d\u5468\u671f\u4e2d\u7684\u6307\u5b9a\u65f6\u523b\u53ea\u53ef\u80fd\u5904\u4e8e\u4e0b\u2faf 6 \u79cd\u4e0d\u540c\u72b6\u6001\u7684\u5176\u4e2d\u2f00\u4e2a\u72b6\u6001\uff08\u56fe\u6e90\u300aJava \u5e76\u53d1\u7f16\u7a0b\u827a\u672f\u300b4.1.4 \u8282\uff09\u3002\n\n\u7ebf\u7a0b\u5728\u2f63\u547d\u5468\u671f\u4e2d\u5e76\u4e0d\u662f\u56fa\u5b9a\u5904\u4e8e\u67d0\u2f00\u4e2a\u72b6\u6001\u2f7d\u662f\u968f\u7740\u4ee3\u7801\u7684\u6267\u2f8f\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u5207\u6362\u3002Java \u7ebf\u7a0b\u72b6 \u6001\u53d8\u8fc1\u5982\u4e0b\u56fe\u6240\u793a\uff08\u56fe\u6e90\u300aJava \u5e76\u53d1\u7f16\u7a0b\u827a\u672f\u300b4.1.4 \u8282\uff09\uff1a\n\n\u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff1a\u7ebf\u7a0b\u521b\u5efa\u4e4b\u540e\u5b83\u5c06\u5904\u4e8e NEW\uff08\u65b0\u5efa\uff09 \u72b6\u6001\uff0c\u8c03\u2f64 start() \u2f45\u6cd5\u540e\u5f00\u59cb\u8fd0\u2f8f\uff0c\u7ebf\u7a0b \u8fd9\u65f6\u5019\u5904\u4e8e READY\uff08\u53ef\u8fd0\u2f8f\uff09 \u72b6\u6001\u3002\u53ef\u8fd0\u2f8f\u72b6\u6001\u7684\u7ebf\u7a0b\u83b7\u5f97\u4e86 CPU \u65f6\u95f4\u2f5a\uff08timeslice\uff09\u540e\u5c31\u5904\u4e8e RUNNING\uff08\u8fd0\u2f8f\uff09 \u72b6\u6001\u3002\n\u5f53\u7ebf\u7a0b\u6267\u2f8f wait() \u2f45\u6cd5\u4e4b\u540e\uff0c\u7ebf\u7a0b\u8fdb\u2f0a WAITING\uff08\u7b49\u5f85\uff09 \u72b6\u6001\u3002\u8fdb\u2f0a\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\u9700\u8981\u4f9d\u9760\u5176\u4ed6 \u7ebf\u7a0b\u7684\u901a\u77e5\u624d\u80fd\u591f\u8fd4\u56de\u5230\u8fd0\u2f8f\u72b6\u6001\uff0c\u2f7d TIME_WAITING(\u8d85\u65f6\u7b49\u5f85) \u72b6\u6001\u76f8\u5f53\u4e8e\u5728\u7b49\u5f85\u72b6\u6001\u7684\u57fa\u7840\u4e0a\u589e\u52a0 \u4e86\u8d85\u65f6\u9650\u5236\uff0c\u2f50\u5982\u901a\u8fc7 sleep\uff08long millis\uff09 \u2f45\u6cd5\u6216 wait\uff08long millis\uff09 \u2f45\u6cd5\u53ef\u4ee5\u5c06 Java \u7ebf\u7a0b\u7f6e\u4e8e TIMED WAITING \u72b6\u6001\u3002\u5f53\u8d85\u65f6\u65f6\u95f4\u5230\u8fbe\u540e Java \u7ebf\u7a0b\u5c06\u4f1a\u8fd4\u56de\u5230 RUNNABLE \u72b6\u6001\u3002\u5f53\u7ebf\u7a0b\u8c03 \u2f64\u540c\u6b65\u2f45\u6cd5\u65f6\uff0c\u5728\u6ca1\u6709\u83b7\u53d6\u5230\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u7ebf\u7a0b\u5c06\u4f1a\u8fdb\u2f0a\u5230 BLOCKED\uff08\u963b\u585e\uff09 \u72b6\u6001\u3002\u7ebf\u7a0b\u5728\u6267\u2f8f Runnable \u7684 run() \u2f45\u6cd5\u4e4b\u540e\u5c06\u4f1a\u8fdb\u2f0a\u5230 TERMINATED\uff08\u7ec8\u2f4c\uff09 \u72b6\u6001\u3002\n5. \u4ec0\u4e48\u662f\u4e0a\u4e0b\u2f42\u5207\u6362?\n\n\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\u2f00\u822c\u7ebf\u7a0b\u7684\u4e2a\u6570\u90fd\u2f24\u4e8e CPU \u6838\u2f3c\u7684\u4e2a\u6570\uff0c\u2f7d\u2f00\u4e2a CPU \u6838\u2f3c\u5728\u4efb\u610f\u65f6\u523b\u53ea\u80fd\u88ab\u2f00\u4e2a\u7ebf\u7a0b\u4f7f \u2f64\uff0c\u4e3a\u4e86\u8ba9\u8fd9\u4e9b\u7ebf\u7a0b\u90fd\u80fd\u5f97\u5230\u6709\u6548\u6267\u2f8f\uff0cCPU \u91c7\u53d6\u7684\u7b56\u7565\u662f\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u65f6\u95f4\u2f5a\u5e76\u8f6e\u8f6c\u7684\u5f62\u5f0f\u3002\u5f53\u2f00 \u4e2a\u7ebf\u7a0b\u7684\u65f6\u95f4\u2f5a\u2f64\u5b8c\u7684\u65f6\u5019\u5c31\u4f1a\u91cd\u65b0\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u8ba9\u7ed9\u5176\u4ed6\u7ebf\u7a0b\u4f7f\u2f64\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u5c5e\u4e8e\u2f00\u6b21\u4e0a\u4e0b\u2f42\u5207 \u6362\u3002 \n\u6982\u62ec\u6765\u8bf4\u5c31\u662f\uff1a\u5f53\u524d\u4efb\u52a1\u5728\u6267\u2f8f\u5b8c CPU \u65f6\u95f4\u2f5a\u5207\u6362\u5230\u53e6\u2f00\u4e2a\u4efb\u52a1\u4e4b\u524d\u4f1a\u5148\u4fdd\u5b58\u2f83\u2f30\u7684\u72b6\u6001\uff0c\u4ee5\u4fbf\u4e0b\u6b21 \u518d\u5207\u6362\u56de\u8fd9\u4e2a\u4efb\u52a1\u65f6\uff0c\u53ef\u4ee5\u518d\u52a0\u8f7d\u8fd9\u4e2a\u4efb\u52a1\u7684\u72b6\u6001\u3002\u4efb\u52a1\u4ece\u4fdd\u5b58\u5230\u518d\u52a0\u8f7d\u7684\u8fc7\u7a0b\u5c31\u662f\u2f00\u6b21\u4e0a\u4e0b\u2f42\u5207\u6362\u3002 \n\u4e0a\u4e0b\u2f42\u5207\u6362\u901a\u5e38\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u9700\u8981\u76f8\u5f53\u53ef\u89c2\u7684\u5904\u7406\u5668\u65f6\u95f4\uff0c\u5728\u6bcf\u79d2\u2f0f\u2f17\u4e0a\u767e\u6b21\u7684\u5207\u6362 \u4e2d\uff0c\u6bcf\u6b21\u5207\u6362\u90fd\u9700\u8981\u7eb3\u79d2\u91cf\u7ea7\u7684\u65f6\u95f4\u3002\u6240\u4ee5\uff0c\u4e0a\u4e0b\u2f42\u5207\u6362\u5bf9\u7cfb\u7edf\u6765\u8bf4\u610f\u5473\u7740\u6d88\u8017\u2f24\u91cf\u7684 CPU \u65f6\u95f4\uff0c\u4e8b \u5b9e\u4e0a\uff0c\u53ef\u80fd\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u65f6\u95f4\u6d88\u8017\u6700\u2f24\u7684\u64cd\u4f5c\u3002 \nLinux \u76f8\u2f50\u4e0e\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\uff08\u5305\u62ec\u5176\u4ed6\u7c7b Unix \u7cfb\u7edf\uff09\u6709\u5f88\u591a\u7684\u4f18\u70b9\uff0c\u5176\u4e2d\u6709\u2f00\u9879\u5c31\u662f\uff0c\u5176\u4e0a\u4e0b\u2f42\u5207\u6362 \u548c\u6a21\u5f0f\u5207\u6362\u7684\u65f6\u95f4\u6d88\u8017\u2fae\u5e38\u5c11\u3002\n\n6. \u4ec0\u4e48\u662f\u7ebf\u7a0b\u6b7b\u9501?\u5982\u4f55\u907f\u514d\u6b7b\u9501?\n\u200b       \u7ebf\u7a0b\u6b7b\u9501\u63cf\u8ff0\u7684\u662f\u8fd9\u6837\u2f00\u79cd\u60c5\u51b5\uff1a\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u88ab\u963b\u585e\uff0c\u5b83\u4eec\u4e2d\u7684\u2f00\u4e2a\u6216\u8005\u5168\u90e8\u90fd\u5728\u7b49\u5f85\u67d0\u4e2a\u8d44\u6e90\u88ab\u91ca \u653e\u3002\u7531\u4e8e\u7ebf\u7a0b\u88ab\u2f46\u9650\u671f\u5730\u963b\u585e\uff0c\u56e0\u6b64\u7a0b\u5e8f\u4e0d\u53ef\u80fd\u6b63\u5e38\u7ec8\u2f4c\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u7ebf\u7a0b A \u6301\u6709\u8d44\u6e90 2\uff0c\u7ebf\u7a0b B \u6301\u6709\u8d44\u6e90 1\uff0c\u4ed6\u4eec\u540c\u65f6\u90fd\u60f3\u7533\u8bf7\u5bf9\u2f45\u7684\u8d44\u6e90\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u7ebf \u7a0b\u5c31\u4f1a\u4e92\u76f8\u7b49\u5f85\u2f7d\u8fdb\u2f0a\u6b7b\u9501\u72b6\u6001\u3002\n6.1 \u4ea7\u2f63\u6b7b\u9501\u5fc5\u987b\u5177\u5907\u4ee5\u4e0b\u56db\u4e2a\u6761\u4ef6\n\n\u4e92\u65a5\u6761\u4ef6\uff1a\u8be5\u8d44\u6e90\u4efb\u610f\u2f00\u4e2a\u65f6\u523b\u53ea\u7531\u2f00\u4e2a\u7ebf\u7a0b\u5360\u2f64\u3002 \n\u8bf7\u6c42\u4e0e\u4fdd\u6301\u6761\u4ef6\uff1a\u2f00\u4e2a\u8fdb\u7a0b\u56e0\u8bf7\u6c42\u8d44\u6e90\u2f7d\u963b\u585e\u65f6\uff0c\u5bf9\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\u4fdd\u6301\u4e0d\u653e\u3002\n\u4e0d\u5265\u593a\u6761\u4ef6\uff1a\u7ebf\u7a0b\u5df2\u83b7\u5f97\u7684\u8d44\u6e90\u5728\u672b\u4f7f\u2f64\u5b8c\u4e4b\u524d\u4e0d\u80fd\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5f3a\u2f8f\u5265\u593a\uff0c\u53ea\u6709\u2f83\u2f30\u4f7f\u2f64\u5b8c\u6bd5\u540e \u624d\u91ca\u653e\u8d44\u6e90\u3002 \n\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\uff1a\u82e5\u2f32\u8fdb\u7a0b\u4e4b\u95f4\u5f62\u6210\u2f00\u79cd\u5934\u5c3e\u76f8\u63a5\u7684\u5faa\u73af\u7b49\u5f85\u8d44\u6e90\u5173\u7cfb\u3002\n\n6.2 \u5982\u4f55\u907f\u514d\u7ebf\u7a0b\u6b7b\u9501?\n\u53ea\u8981\u7834\u574f\u4ea7\u2f63\u6b7b\u9501\u7684\u56db\u4e2a\u6761\u4ef6\u4e2d\u7684\u5176\u4e2d\u2f00\u4e2a\u5c31\u53ef\u4ee5\u4e86\n\n\u7834\u574f\u4e92\u65a5\u6761\u4ef6 \uff1a\u8fd9\u4e2a\u6761\u4ef6\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u7834\u574f\uff0c\u56e0\u4e3a\u6211\u4eec\u2f64\u9501\u672c\u6765\u5c31\u662f\u60f3\u8ba9\u4ed6\u4eec\u4e92\u65a5\u7684\uff08\u4e34\u754c\u8d44 \u6e90\u9700\u8981\u4e92\u65a5\u8bbf\u95ee\uff09\u3002 \n\u7834\u574f\u8bf7\u6c42\u4e0e\u4fdd\u6301\u6761\u4ef6 \uff1a\u2f00\u6b21\u6027\u7533\u8bf7\u6240\u6709\u7684\u8d44\u6e90\u3002\n\u7834\u574f\u4e0d\u5265\u593a\u6761\u4ef6 \uff1a\u5360\u2f64\u90e8\u5206\u8d44\u6e90\u7684\u7ebf\u7a0b\u8fdb\u2f00\u6b65\u7533\u8bf7\u5176\u4ed6\u8d44\u6e90\u65f6\uff0c\u5982\u679c\u7533\u8bf7\u4e0d\u5230\uff0c\u53ef\u4ee5\u4e3b\u52a8\u91ca\u653e \u5b83\u5360\u6709\u7684\u8d44\u6e90\u3002 \n\u7834\u574f\u5faa\u73af\u7b49\u5f85\u6761\u4ef6 \uff1a\u9760\u6309\u5e8f\u7533\u8bf7\u8d44\u6e90\u6765\u9884\u9632\u3002\u6309\u67d0\u2f00\u987a\u5e8f\u7533\u8bf7\u8d44\u6e90\uff0c\u91ca\u653e\u8d44\u6e90\u5219\u53cd\u5e8f\u91ca\u653e\u3002\u7834 \u574f\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\u3002\n\n7. \u8bf4\u8bf4 sleep() \u2f45\u6cd5\u548c wait() \u2f45\u6cd5\u533a\u522b\u548c\u5171\u540c\u70b9?\n\n\u4e24\u8005\u6700\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\uff1asleep \u2f45\u6cd5\u6ca1\u6709\u91ca\u653e\u9501\uff0c\u2f7d wait \u2f45\u6cd5\u91ca\u653e\u4e86\u9501 \u3002 \n\u4e24\u8005\u90fd\u53ef\u4ee5\u6682\u505c\u7ebf\u7a0b\u7684\u6267\u2f8f\u3002 Wait \u901a\u5e38\u88ab\u2f64\u4e8e\u7ebf\u7a0b\u95f4\u4ea4\u4e92/\u901a\u4fe1\uff0csleep \u901a\u5e38\u88ab\u2f64\u4e8e\u6682\u505c\u6267\u2f8f\u3002 \nwait() \u2f45\u6cd5\u88ab\u8c03\u2f64\u540e\uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u2f83\u52a8\u82cf\u9192\uff0c\u9700\u8981\u522b\u7684\u7ebf\u7a0b\u8c03\u2f64\u540c\u2f00\u4e2a\u5bf9\u8c61\u4e0a\u7684 notify() \u6216\u8005 notifyAll() \u2f45\u6cd5\u3002sleep() \u2f45\u6cd5\u6267\u2f8f\u5b8c\u6210\u540e\uff0c\u7ebf\u7a0b\u4f1a\u2f83\u52a8\u82cf\u9192\u3002\u6216\u8005\u53ef\u4ee5\u4f7f\u2f64 wait(long timeout)\u8d85\u65f6\u540e\u7ebf\u7a0b\u4f1a\u2f83\u52a8\u82cf\u9192\u3002\n\n7.1 \u8be6\u7ec6\n\n\u539f\u7406\u4e0d\u540c\uff0csleep\uff08\uff09\u65b9\u6cd5\u662fThread\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u662f\u7ebf\u7a0b\u7528\u6765\u63a7\u5236\u81ea\u8eab\u6d41\u7a0b\u7684\uff0c\u5b83\u4f1a\u4f7f\u6b64\u7ebf\u7a0b\u6682\u505c\u6267\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u800c\u628a\u6267\u884c\u673a\u4f1a\u8ba9\u7ed9\u5176\u4ed6\u7ebf\u7a0b\uff0c\u7b49\u5230\u8ba1\u65f6\u65f6\u95f4\u4e00\u5230\uff0c\u6b64\u7ebf\u7a0b\u4f1a\u81ea\u52a8\u201c\u82cf\u9192\u201d\u3002\u4f8b\u5982\uff0c\u5f53\u7ebf\u7a0b\u6267\u884c\u62a5\u65f6\u529f\u80fd\u65f6\uff0c\u6bcf\u4e00\u79d2\u949f\u6253\u5370\u4e00\u4e2a\u65f6\u95f4\uff0c\u90a3\u4e48\u6b64\u65f6\u5c31\u9700\u8981\u5728\u6253\u5370\u65b9\u6cd5\u524d\u9762\u52a0\u4e0a\u4e00\u4e2aSleep()\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u8ba9\u81ea\u5df1\u6bcf\u96941s\u6267\u884c\u4e00\u6b21\uff0c\u8be5\u8fc7\u7a0b\u5982\u540c\u95f9\u949f\u4e00\u6837\uff0c\u800cwait\uff08\uff09\u65b9\u6cd5\u662fobject\u7c7b\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u4f7f\u5f53\u524d\u62e5\u6709\u8be5\u5bf9\u8c61\u9501\u7684\u8fdb\u7a0b\u7b49\u5f85\uff0c\u76f4\u5230\u5176\u5b83\u7ebf\u7a0b\u8c03\u7528notify()\u65b9\u6cd5\uff08\u6216notifyALL\u65b9\u6cd5\uff09\u65f6\u624d\u201c\u9192\u8fc7\u6765\u201d\uff0c\u4e0d\u8fc7\uff0c\u5f00\u53d1\u4eba\u5458\u4e5f\u53ef\u4ee5\u7ed9\u5b83\u6307\u5b9a\u4e00\u4e2a\u65f6\u95f4\uff0c\u81ea\u52a8\u201c\u9192\u201d\u8fc7\u6765\u3002\u4e0ewait()\u65b9\u6cd5\u914d\u5957\u7684\u65b9\u6cd5\u8fd8\u6709notify\uff08\uff09\u65b9\u6cd5\u548cnotifyALL()\u65b9\u6cd5\u3002\n\u5bf9\u9501\u7684\u5904\u7406\u673a\u5236\u4e0d\u540c\uff0c\u7531\u4e8esleep\uff08\uff09\u65b9\u6cd5\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u8ba9\u7ebf\u7a0b\u6682\u505c\u6267\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u65f6\u95f4\u4e00\u5230\u5219\u81ea\u52a8\u6062\u590d\uff0c\u4e0d\u6d89\u53ca\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u56e0\u6b64\uff0c\u8c03\u7528sleep\uff08\uff09\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u91ca\u653e\u9501\uff0c \u800cwait()\u65b9\u6cd5\u5219\u4e0d\u540c\uff0c\u5f53\u8c03\u7528wan()\u65b9\u6cd5\u540e\uff0c\u7ebf\u7a0b\u4f1a\u91ca\u653e\u6389\u5b83\u6240\u5360\u7528\u7684\u9501\uff0c\u4ece\u800c\u4f7f\u7ebf\u7a0b\u6240\u5728\u5bf9\u8c61\u4e2d\u7684\u5176\u4ed6synchronized\u6570\u636e\u53ef\u88ab\u522b\u7684\u7ebf\u7a0b\u4f7f\u7528\u3002\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u5c0f\u660e\u62ff\u9065\u63a7\u5668\u7684\u671f\u95f4\uff0c\u53ef\u4ee5\u7528\u81ea\u5df1\u7684sleep()\u65b9\u6cd5\u6bcf\u969410min\u8c03\u4e00\u6b21\u9891\u9053\uff0c\u800c\u5728\u8fd910min\u91cc\uff0c\u9065\u63a7\u5668\u8fd8\u5728\u4ed6\u7684\u624b\u91cc\u3002\n\u4f7f\u7528\u7684\u533a\u57df\u4e0d\u540c\u3002\u7531\u4e8ewait()\u65b9\u6cd5\u7684\u7279\u6b8a\u610f\u4e49\uff0c\u56e0\u6b64\uff0c\u5b83\u5fc5\u987b\u653e\u5728\u540c\u6b65\u63a7\u5236\u65b9\u6cd5\u6216\u540c\u6b65\u8bed\u53e5\u5757\u4e2d\u4f7f\u7528\uff0c\u800c sleep\uff08\uff09\u65b9\u6cd5\u5219\u53ef\u4ee5\u653e\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u3002\nsleep\uff08\uff09\u65b9\u6cd5\u5fc5\u987b\u6355\u83b7\u5f02\u5e38\uff0c\u800cwait\uff08\uff09\u3001notify\uff08\uff09\u4ee5\u53canotifyALL()\u4e0d\u9700\u8981\u6355\u83b7\u5f02\u5e38\uff0c\u5728sleep()\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u53ef\u80fd\u88ab\u5176\u4ed6\u5bf9\u8c61\u8c03\u7528\u5b83\u7684interrupt\uff08\uff09\uff0c\u4ea7\u751finterruptException\u5f02\u5e38\u3002\n\u7531\u4e8esleep\u4e0d\u4f1a\u91ca\u653e\u201c\u9501\u6807\u5fd7\u201d\uff0c\u5bb9\u6613\u5bfc\u81f4\u6b7b\u9501\u95ee\u9898\u7684\u53d1\u751f\uff0c\u56e0\u6b64\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528sleep\uff08\uff09\u65b9\u6cd5\uff0c\u800c\u63a8\u8350\u4f7f\u7528wait\uff08\uff09\u65b9\u6cd5\u3002\n\n \n\u200b       new \u2f00\u4e2a Thread\uff0c\u7ebf\u7a0b\u8fdb\u2f0a\u4e86\u65b0\u5efa\u72b6\u6001;\u8c03\u2f64 start() \u2f45\u6cd5\uff0c\u4f1a\u542f\u52a8\u2f00\u4e2a\u7ebf\u7a0b\u5e76\u4f7f\u7ebf\u7a0b\u8fdb\u2f0a\u4e86\u5c31\u7eea\u72b6 \u6001\uff0c\u5f53\u5206\u914d\u5230\u65f6\u95f4\u2f5a\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u8fd0\u2f8f\u4e86\u3002 start() \u4f1a\u6267\u2f8f\u7ebf\u7a0b\u7684\u76f8\u5e94\u51c6\u5907\u2f2f\u4f5c\uff0c\u7136\u540e\u2f83\u52a8\u6267\u2f8f run() \u2f45\u6cd5\u7684\u5185\u5bb9\uff0c\u8fd9\u662f\u771f\u6b63\u7684\u591a\u7ebf\u7a0b\u2f2f\u4f5c\u3002 \u2f7d\u76f4\u63a5\u6267\u2f8f run() \u2f45\u6cd5\uff0c\u4f1a\u628a run \u2f45\u6cd5\u5f53\u6210\u2f00\u4e2a main \u7ebf\u7a0b\u4e0b\u7684\u666e\u901a\u2f45\u6cd5\u53bb\u6267\u2f8f\uff0c\u5e76\u4e0d\u4f1a\u5728\u67d0\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u2f8f\u5b83\uff0c\u6240\u4ee5\u8fd9\u5e76\u4e0d\u662f\u591a\u7ebf\u7a0b\u2f2f\u4f5c\u3002 \u603b\u7ed3\uff1a \u8c03\u2f64 start \u2f45\u6cd5\u2f45\u53ef\u542f\u52a8\u7ebf\u7a0b\u5e76\u4f7f\u7ebf\u7a0b\u8fdb\u2f0a\u5c31\u7eea\u72b6\u6001\uff0c\u2f7d run \u2f45\u6cd5\u53ea\u662f thread \u7684\u2f00\u4e2a\u666e\u901a \u2f45\u6cd5\u8c03\u2f64\uff0c\u8fd8\u662f\u5728\u4e3b\u7ebf\u7a0b\u2fa5\u6267\u2f8f\u3002\n9. synchronized \u5173\u952e\u5b57\n\u200b       synchronized\u5173\u952e\u5b57\u89e3\u51b3\u7684\u662f\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u8bbf\u95ee\u8d44\u6e90\u7684\u540c\u6b65\u6027\uff0csynchronized\u5173\u952e\u5b57\u53ef\u4ee5\u4fdd\u8bc1\u88ab\u5b83\u4fee\u9970 \u7684\u2f45\u6cd5\u6216\u8005\u4ee3\u7801\u5757\u5728\u4efb\u610f\u65f6\u523b\u53ea\u80fd\u6709\u2f00\u4e2a\u7ebf\u7a0b\u6267\u2f8f\u3002\u53e6\u5916\uff0c\u5728 Java \u65e9\u671f\u7248\u672c\u4e2d\uff0csynchronized\u5c5e\u4e8e\u91cd\u91cf\u7ea7\u9501\uff0c\u6548\u7387\u4f4e\u4e0b\uff0c\u56e0\u4e3a\u76d1\u89c6\u5668\u9501\uff08monitor\uff09\u662f\u4f9d \u8d56\u4e8e\u5e95\u5c42\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684 Mutex Lock \u6765\u5b9e\u73b0\u7684\uff0cJava \u7684\u7ebf\u7a0b\u662f\u6620\u5c04\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u2f63\u7ebf\u7a0b\u4e4b\u4e0a\u7684\u3002\u5982 \u679c\u8981\u6302\u8d77\u6216\u8005\u5524\u9192\u2f00\u4e2a\u7ebf\u7a0b\uff0c\u90fd\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5e2e\u5fd9\u5b8c\u6210\uff0c\u2f7d\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5207\u6362\u65f6\u9700\u8981\u4ece\u2f64\u6237 \u6001\u8f6c\u6362\u5230\u5185\u6838\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u9700\u8981\u76f8\u5bf9\u2f50\u8f83\u2ed3\u7684\u65f6\u95f4\uff0c\u65f6\u95f4\u6210\u672c\u76f8\u5bf9\u8f83\u2fbc\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u65e9\u671f \u7684 synchronized \u6548\u7387\u4f4e\u7684\u539f\u56e0\u3002\u5e86\u5e78\u7684\u662f\u5728 Java 6 \u4e4b\u540e Java \u5b98\u2f45\u5bf9\u4ece JVM \u5c42\u2faf\u5bf9synchronized \u8f83\u2f24\u4f18\u5316\uff0c\u6240\u4ee5\u73b0\u5728\u7684 synchronized \u9501\u6548\u7387\u4e5f\u4f18\u5316\u5f97\u5f88\u4e0d\u9519\u4e86\u3002JDK1.6\u5bf9\u9501\u7684\u5b9e\u73b0\u5f15\u2f0a\u4e86\u2f24\u91cf\u7684\u4f18\u5316\uff0c\u5982\u2f83\u65cb\u9501\u3001\u9002\u5e94\u6027\u2f83\u65cb\u9501\u3001\u9501\u6d88\u9664\u3001\u9501\u7c97\u5316\u3001\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u7b49\u6280\u672f\u6765\u51cf\u5c11\u9501\u64cd\u4f5c\u7684\u5f00\u9500\u3002\n9.1 \u4e09\u79cd\u4f7f\u7528\u65b9\u5f0f\n\n\u4fee\u9970\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u4f5c\u7528\u4e8e\u5f53\u524d\u5bf9\u8c61\u5b9e\u4f8b\u52a0\u9501\uff0c\u8fdb\u5165\u540c\u6b65\u4ee3\u7801\u524d\u8981\u83b7\u5f97\u5f53\u524d\u5bf9\u8c61\u5b9e\u4f8b\u7684\u9501\n\u4fee\u9970\u9759\u6001\u65b9\u6cd5\uff0c\u4f5c\u7528\u4e8e\u5f53\u524d\u7c7b\u5bf9\u8c61\u52a0\u9501\uff0c\u8fdb\u5165\u540c\u6b65\u4ee3\u7801\u524d\u8981\u83b7\u5f97\u5f53\u524d\u7c7b\u5bf9\u8c61\u7684\u9501 \u3002\u4e5f\u5c31\u662f\u7ed9\u5f53\u524d\u7c7b\u52a0\u9501\uff0c\u4f1a\u4f5c\n\u7528\u4e8e\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u9759\u6001\u6210\u5458\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u662f\u7c7b\u6210\u5458\uff08 static \u8868\u660e\u8fd9\u662f\u8be5\u7c7b\u7684\u4e00\u4e2a\u9759\u6001\n\u8d44\u6e90\uff0c\u4e0d\u7ba1new\u4e86\u591a\u5c11\u4e2a\u5bf9\u8c61\uff0c\u53ea\u6709\u4e00\u4efd\uff0c\u6240\u4ee5\u5bf9\u8be5\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u52a0\u4e86\u9501\uff09\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0bA\u8c03\u7528\u4e00\u4e2a\u5b9e\n\u4f8b\u5bf9\u8c61\u7684\u975e\u9759\u6001 synchronized \u65b9\u6cd5\uff0c\u800c\u7ebf\u7a0bB\u9700\u8981\u8c03\u7528\u8fd9\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u6240\u5c5e\u7c7b\u7684\u9759\u6001 synchronized \u65b9\u6cd5\uff0c\u662f\u5141\n\u8bb8\u7684\uff0c\u4e0d\u4f1a\u53d1\u751f\u4e92\u65a5\u73b0\u8c61\uff0c\u56e0\u4e3a\u8bbf\u95ee\u9759\u6001 synchronized \u65b9\u6cd5\u5360\u7528\u7684\u9501\u662f\u5f53\u524d\u7c7b\u7684\u9501\uff0c\u800c\u8bbf\u95ee\u975e\u9759\u6001\nsynchronized \u65b9\u6cd5\u5360\u7528\u7684\u9501\u662f\u5f53\u524d\u5b9e\u4f8b\u5bf9\u8c61\u9501\u3002\n\u4fee\u9970\u4ee3\u7801\u5757\uff0c\u6307\u5b9a\u52a0\u9501\u5bf9\u8c61\uff0c\u5bf9\u7ed9\u5b9a\u5bf9\u8c61\u52a0\u9501\uff0c\u8fdb\u5165\u540c\u6b65\u4ee3\u7801\u5e93\u524d\u8981\u83b7\u5f97\u7ed9\u5b9a\u5bf9\u8c61\u7684\u9501\u3002 \u548c synchronized \u65b9\n\u6cd5\u4e00\u6837\uff0csynchronized(this)\u4ee3\u7801\u5757\u4e5f\u662f\u9501\u5b9a\u5f53\u524d\u5bf9\u8c61\u7684\u3002synchronized \u5173\u952e\u5b57\u52a0\u5230 static \u9759\u6001\u65b9\u6cd5\u548c\nsynchronized(class)\u4ee3\u7801\u5757\u4e0a\u90fd\u662f\u662f\u7ed9 Class \u7c7b\u4e0a\u9501\u3002\u8fd9\u91cc\u518d\u63d0\u4e00\u4e0b\uff1asynchronized\u5173\u952e\u5b57\u52a0\u5230\u975e static \u9759\u6001\n\u65b9\u6cd5\u4e0a\u662f\u7ed9\u5bf9\u8c61\u5b9e\u4f8b\u4e0a\u9501\u3002\n\n9.2 synchronized\u5e95\u5c42\u5b9e\u73b0\n9.2.1 synchronized \u540c\u6b65\u8bed\u53e5\u5757\u7684\u60c5\u51b5\npublic class SynchronizedDemo {\n public void method() {\n synchronized (this) {\n System.out.println(&quot;synchronized \u4ee3\u7801\u5757&quot;);\n }\n }\n}\n\n\n\u200b       synchronized \u540c\u6b65\u8bed\u53e5\u5757\u7684\u5b9e\u73b0\u4f7f\u2f64\u7684\u662f monitorenter \u548c monitorexit \u6307\u4ee4\uff0c\u5176\u4e2d monitorenter \u6307\u4ee4\u6307\u5411\u540c\u6b65\u4ee3\u7801\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0cmonitorexit \u6307\u4ee4\u5219\u6307\u660e\u540c\u6b65\u4ee3\u7801\u5757\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002 \u5f53\u6267\u2f8f monitorenter \u6307\u4ee4\u65f6\uff0c\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u53d6\u9501\u4e5f\u5c31\u662f\u83b7\u53d6 monitor(monitor\u5bf9\u8c61\u5b58\u5728\u4e8e\u6bcf\u4e2aJava\u5bf9\u8c61\u7684\u5bf9\u8c61 \u5934\u4e2d\uff0csynchronized \u9501\u4fbf\u662f\u901a\u8fc7\u8fd9\u79cd\u2f45\u5f0f\u83b7\u53d6\u9501\u7684\uff0c\u4e5f\u662f\u4e3a\u4ec0\u4e48Java\u4e2d\u4efb\u610f\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u9501\u7684\u539f\u56e0) \u7684\u6301\u6709\u6743\u3002\u5f53\u8ba1\u6570\u5668\u4e3a0\u5219\u53ef\u4ee5\u6210\u529f\u83b7\u53d6\uff0c\u83b7\u53d6\u540e\u5c06\u9501\u8ba1\u6570\u5668\u8bbe\u4e3a1\u4e5f\u5c31\u662f\u52a01\u3002\u76f8\u5e94\u7684\u5728\u6267\u2f8f monitorexit \u6307\u4ee4\u540e\uff0c\u5c06\u9501\u8ba1\u6570\u5668\u8bbe\u4e3a0\uff0c\u8868\u660e\u9501\u88ab\u91ca\u653e\u3002\u5982\u679c\u83b7\u53d6\u5bf9\u8c61\u9501\u5931\u8d25\uff0c\u90a3\u5f53\u524d\u7ebf\u7a0b\u5c31\u8981\u963b\u585e \u7b49\u5f85\uff0c\u76f4\u5230\u9501\u88ab\u53e6\u5916\u2f00\u4e2a\u7ebf\u7a0b\u91ca\u653e\u4e3a\u2f4c\u3002\n9.2.2 synchronized \u4fee\u9970\u2f45\u6cd5\u7684\u7684\u60c5\u51b5\npublic class SynchronizedDemo2 {\n public synchronized void method() {\n System.out.println(&quot;synchronized \u2f45\u6cd5&quot;);\n }\n}\n\n\n\u200b       synchronized \u4fee\u9970\u7684\u2f45\u6cd5\u5e76\u6ca1\u6709 monitorenter \u6307\u4ee4\u548c monitorexit \u6307\u4ee4\uff0c\u53d6\u5f97\u4ee3\u4e4b\u7684\u786e\u5b9e\u662f ACC_SYNCHRONIZED \u6807\u8bc6\uff0c\u8be5\u6807\u8bc6\u6307\u660e\u4e86\u8be5\u2f45\u6cd5\u662f\u2f00\u4e2a\u540c\u6b65\u2f45\u6cd5\uff0cJVM \u901a\u8fc7\u8be5 ACC_SYNCHRONIZED \u8bbf\u95ee \u6807\u5fd7\u6765\u8fa8\u522b\u2f00\u4e2a\u2f45\u6cd5\u662f\u5426\u58f0\u660e\u4e3a\u540c\u6b65\u2f45\u6cd5\uff0c\u4ece\u2f7d\u6267\u2f8f\u76f8\u5e94\u7684\u540c\u6b65\u8c03\u2f64\u3002\n9.3 \u8bf4\u8bf4 JDK1.6 \u4e4b\u540e\u7684synchronized \u5173\u952e\u5b57\u5e95\u5c42\u505a\u4e86\u54ea\u4e9b\u4f18\u5316\uff0c\u53ef\u4ee5\u8be6\u7ec6\u4ecb\u7ecd\u2f00\u4e0b\u8fd9\u4e9b\u4f18\u5316\u5417\n\u53c2\u8003\n\nhttps://gitee.com/SnailClimb/JavaGuide/blob/master/docs/java/Multithread/synchronized.md\n\n\n\u200b       JDK1.6 \u5bf9\u9501\u7684\u5b9e\u73b0\u5f15\u5165\u4e86\u5927\u91cf\u7684\u4f18\u5316\uff0c\u5982\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u3001\u81ea\u65cb\u9501\u3001\u9002\u5e94\u6027\u81ea\u65cb\u9501\u3001\u9501\u6d88\u9664\u3001\u9501\u7c97\u5316\u7b49\u6280\u672f\u6765\u51cf\u5c11\u9501\u64cd\u4f5c\u7684\u5f00\u9500\u3002\n\u9501\u4e3b\u8981\u5b58\u5728\u56db\u4e2d\u72b6\u6001\uff0c\u4f9d\u6b21\u662f\uff1a\n\n\u65e0\u9501\u72b6\u6001\n\u504f\u5411\u9501\u72b6\u6001\n\u8f7b\u91cf\u7ea7\u9501\u72b6\u6001\n\u91cd\u91cf\u7ea7\u9501\u72b6\u6001\n\n\u4ed6\u4eec\u4f1a\u968f\u7740\u7ade\u4e89\u7684\u6fc0\u70c8\u800c\u9010\u6e10\u5347\u7ea7\u3002\u6ce8\u610f\u9501\u53ef\u4ee5\u5347\u7ea7\u4e0d\u53ef\u964d\u7ea7\uff0c\u8fd9\u79cd\u7b56\u7565\u662f\u4e3a\u4e86\u63d0\u9ad8\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501\u7684\u6548\u7387\u3002\n\u2460\u504f\u5411\u9501\n\u5f15\u5165\u504f\u5411\u9501\u7684\u76ee\u7684\u548c\u5f15\u5165\u8f7b\u91cf\u7ea7\u9501\u7684\u76ee\u7684\u5f88\u50cf\uff0c\u4ed6\u4eec\u90fd\u662f\u4e3a\u4e86\u6ca1\u6709\u591a\u7ebf\u7a0b\u7ade\u4e89\u7684\u524d\u63d0\u4e0b\uff0c\u51cf\u5c11\u4f20\u7edf\u7684\u91cd\u91cf\u7ea7\u9501\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u4e92\u65a5\u91cf\u4ea7\u751f\u7684\u6027\u80fd\u6d88\u8017\u3002\u4f46\u662f\u4e0d\u540c\u662f\uff1a\u8f7b\u91cf\u7ea7\u9501\u5728\u65e0\u7ade\u4e89\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 CAS \u64cd\u4f5c\u53bb\u4ee3\u66ff\u4f7f\u7528\u4e92\u65a5\u91cf\u3002\u800c\u504f\u5411\u9501\u5728\u65e0\u7ade\u4e89\u7684\u60c5\u51b5\u4e0b\u4f1a\u628a\u6574\u4e2a\u540c\u6b65\u90fd\u6d88\u9664\u6389\u3002\n\u504f\u5411\u9501\u7684\u201c\u504f\u201d\u5c31\u662f\u504f\u5fc3\u7684\u504f\uff0c\u5b83\u7684\u610f\u601d\u662f\u4f1a\u504f\u5411\u4e8e\u7b2c\u4e00\u4e2a\u83b7\u5f97\u5b83\u7684\u7ebf\u7a0b\uff0c\u5982\u679c\u5728\u63a5\u4e0b\u6765\u7684\u6267\u884c\u4e2d\uff0c\u8be5\u9501\u6ca1\u6709\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\uff0c\u90a3\u4e48\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u5c31\u4e0d\u9700\u8981\u8fdb\u884c\u540c\u6b65\uff01\u5173\u4e8e\u504f\u5411\u9501\u7684\u539f\u7406\u53ef\u4ee5\u67e5\u770b\u300a\u6df1\u5165\u7406\u89e3Java\u865a\u62df\u673a\uff1aJVM\u9ad8\u7ea7\u7279\u6027\u4e0e\u6700\u4f73\u5b9e\u8df5\u300b\u7b2c\u4e8c\u7248\u768413\u7ae0\u7b2c\u4e09\u8282\u9501\u4f18\u5316\u3002\n\u4f46\u662f\u5bf9\u4e8e\u9501\u7ade\u4e89\u6bd4\u8f83\u6fc0\u70c8\u7684\u573a\u5408\uff0c\u504f\u5411\u9501\u5c31\u5931\u6548\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6837\u573a\u5408\u6781\u6709\u53ef\u80fd\u6bcf\u6b21\u7533\u8bf7\u9501\u7684\u7ebf\u7a0b\u90fd\u662f\u4e0d\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u8fd9\u79cd\u573a\u5408\u4e0b\u4e0d\u5e94\u8be5\u4f7f\u7528\u504f\u5411\u9501\uff0c\u5426\u5219\u4f1a\u5f97\u4e0d\u507f\u5931\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u504f\u5411\u9501\u5931\u8d25\u540e\uff0c\u5e76\u4e0d\u4f1a\u7acb\u5373\u81a8\u80c0\u4e3a\u91cd\u91cf\u7ea7\u9501\uff0c\u800c\u662f\u5148\u5347\u7ea7\u4e3a\u8f7b\u91cf\u7ea7\u9501\u3002\n\u2461 \u8f7b\u91cf\u7ea7\u9501\n\u5018\u82e5\u504f\u5411\u9501\u5931\u8d25\uff0c\u865a\u62df\u673a\u5e76\u4e0d\u4f1a\u7acb\u5373\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\uff0c\u5b83\u8fd8\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u8f7b\u91cf\u7ea7\u9501\u7684\u4f18\u5316\u624b\u6bb5(1.6\u4e4b\u540e\u52a0\u5165\u7684)\u3002\u8f7b\u91cf\u7ea7\u9501\u4e0d\u662f\u4e3a\u4e86\u4ee3\u66ff\u91cd\u91cf\u7ea7\u9501\uff0c\u5b83\u7684\u672c\u610f\u662f\u5728\u6ca1\u6709\u591a\u7ebf\u7a0b\u7ade\u4e89\u7684\u524d\u63d0\u4e0b\uff0c\u51cf\u5c11\u4f20\u7edf\u7684\u91cd\u91cf\u7ea7\u9501\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u4e92\u65a5\u91cf\u4ea7\u751f\u7684\u6027\u80fd\u6d88\u8017\uff0c\u56e0\u4e3a\u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501\u65f6\uff0c\u4e0d\u9700\u8981\u7533\u8bf7\u4e92\u65a5\u91cf\u3002\u53e6\u5916\uff0c\u8f7b\u91cf\u7ea7\u9501\u7684\u52a0\u9501\u548c\u89e3\u9501\u90fd\u7528\u5230\u4e86CAS\u64cd\u4f5c\u3002 \u5173\u4e8e\u8f7b\u91cf\u7ea7\u9501\u7684\u52a0\u9501\u548c\u89e3\u9501\u7684\u539f\u7406\u53ef\u4ee5\u67e5\u770b\u300a\u6df1\u5165\u7406\u89e3Java\u865a\u62df\u673a\uff1aJVM\u9ad8\u7ea7\u7279\u6027\u4e0e\u6700\u4f73\u5b9e\u8df5\u300b\u7b2c\u4e8c\u7248\u768413\u7ae0\u7b2c\u4e09\u8282\u9501\u4f18\u5316\u3002\n\u8f7b\u91cf\u7ea7\u9501\u80fd\u591f\u63d0\u5347\u7a0b\u5e8f\u540c\u6b65\u6027\u80fd\u7684\u4f9d\u636e\u662f\u201c\u5bf9\u4e8e\u7edd\u5927\u90e8\u5206\u9501\uff0c\u5728\u6574\u4e2a\u540c\u6b65\u5468\u671f\u5185\u90fd\u662f\u4e0d\u5b58\u5728\u7ade\u4e89\u7684\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u7ecf\u9a8c\u6570\u636e\u3002\u5982\u679c\u6ca1\u6709\u7ade\u4e89\uff0c\u8f7b\u91cf\u7ea7\u9501\u4f7f\u7528 CAS \u64cd\u4f5c\u907f\u514d\u4e86\u4f7f\u7528\u4e92\u65a5\u64cd\u4f5c\u7684\u5f00\u9500\u3002\u4f46\u5982\u679c\u5b58\u5728\u9501\u7ade\u4e89\uff0c\u9664\u4e86\u4e92\u65a5\u91cf\u5f00\u9500\u5916\uff0c\u8fd8\u4f1a\u989d\u5916\u53d1\u751fCAS\u64cd\u4f5c\uff0c\u56e0\u6b64\u5728\u6709\u9501\u7ade\u4e89\u7684\u60c5\u51b5\u4e0b\uff0c\u8f7b\u91cf\u7ea7\u9501\u6bd4\u4f20\u7edf\u7684\u91cd\u91cf\u7ea7\u9501\u66f4\u6162\uff01\u5982\u679c\u9501\u7ade\u4e89\u6fc0\u70c8\uff0c\u90a3\u4e48\u8f7b\u91cf\u7ea7\u5c06\u5f88\u5feb\u81a8\u80c0\u4e3a\u91cd\u91cf\u7ea7\u9501\uff01\n\u2462 \u81ea\u65cb\u9501\u548c\u81ea\u9002\u5e94\u81ea\u65cb\n\u8f7b\u91cf\u7ea7\u9501\u5931\u8d25\u540e\uff0c\u865a\u62df\u673a\u4e3a\u4e86\u907f\u514d\u7ebf\u7a0b\u771f\u5b9e\u5730\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u6302\u8d77\uff0c\u8fd8\u4f1a\u8fdb\u884c\u4e00\u9879\u79f0\u4e3a\u81ea\u65cb\u9501\u7684\u4f18\u5316\u624b\u6bb5\u3002\n\u4e92\u65a5\u540c\u6b65\u5bf9\u6027\u80fd\u6700\u5927\u7684\u5f71\u54cd\u5c31\u662f\u963b\u585e\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6302\u8d77\u7ebf\u7a0b/\u6062\u590d\u7ebf\u7a0b\u7684\u64cd\u4f5c\u90fd\u9700\u8981\u8f6c\u5165\u5185\u6838\u6001\u4e2d\u5b8c\u6210\uff08\u7528\u6237\u6001\u8f6c\u6362\u5230\u5185\u6838\u6001\u4f1a\u8017\u8d39\u65f6\u95f4\uff09\u3002\n\u4e00\u822c\u7ebf\u7a0b\u6301\u6709\u9501\u7684\u65f6\u95f4\u90fd\u4e0d\u662f\u592a\u957f\uff0c\u6240\u4ee5\u4ec5\u4ec5\u4e3a\u4e86\u8fd9\u4e00\u70b9\u65f6\u95f4\u53bb\u6302\u8d77\u7ebf\u7a0b/\u6062\u590d\u7ebf\u7a0b\u662f\u5f97\u4e0d\u507f\u5931\u7684\u3002 \u6240\u4ee5\uff0c\u865a\u62df\u673a\u7684\u5f00\u53d1\u56e2\u961f\u5c31\u8fd9\u6837\u53bb\u8003\u8651\uff1a\u201c\u6211\u4eec\u80fd\u4e0d\u80fd\u8ba9\u540e\u9762\u6765\u7684\u8bf7\u6c42\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u7b49\u5f85\u4e00\u4f1a\u800c\u4e0d\u88ab\u6302\u8d77\u5462\uff1f\u770b\u770b\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u662f\u5426\u5f88\u5feb\u5c31\u4f1a\u91ca\u653e\u9501\u201d\u3002\u4e3a\u4e86\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u7ebf\u7a0b\u6267\u884c\u4e00\u4e2a\u5fd9\u5faa\u73af\uff08\u81ea\u65cb\uff09\uff0c\u8fd9\u9879\u6280\u672f\u5c31\u53eb\u505a\u81ea\u65cb\u3002\n\u767e\u5ea6\u767e\u79d1\u5bf9\u81ea\u65cb\u9501\u7684\u89e3\u91ca\uff1a\n\u4f55\u8c13\u81ea\u65cb\u9501\uff1f\u5b83\u662f\u4e3a\u5b9e\u73b0\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\u800c\u63d0\u51fa\u4e00\u79cd\u9501\u673a\u5236\u3002\u5176\u5b9e\uff0c\u81ea\u65cb\u9501\u4e0e\u4e92\u65a5\u9501\u6bd4\u8f83\u7c7b\u4f3c\uff0c\u5b83\u4eec\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u5bf9\u67d0\u9879\u8d44\u6e90\u7684\u4e92\u65a5\u4f7f\u7528\u3002\u65e0\u8bba\u662f\u4e92\u65a5\u9501\uff0c\u8fd8\u662f\u81ea\u65cb\u9501\uff0c\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u4fdd\u6301\u8005\uff0c\u4e5f\u5c31\u8bf4\uff0c\u5728\u4efb\u4f55\u65f6\u523b\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c\u5355\u5143\u83b7\u5f97\u9501\u3002\u4f46\u662f\u4e24\u8005\u5728\u8c03\u5ea6\u673a\u5236\u4e0a\u7565\u6709\u4e0d\u540c\u3002\u5bf9\u4e8e\u4e92\u65a5\u9501\uff0c\u5982\u679c\u8d44\u6e90\u5df2\u7ecf\u88ab\u5360\u7528\uff0c\u8d44\u6e90\u7533\u8bf7\u8005\u53ea\u80fd\u8fdb\u5165\u7761\u7720\u72b6\u6001\u3002\u4f46\u662f\u81ea\u65cb\u9501\u4e0d\u4f1a\u5f15\u8d77\u8c03\u7528\u8005\u7761\u7720\uff0c\u5982\u679c\u81ea\u65cb\u9501\u5df2\u7ecf\u88ab\u522b\u7684\u6267\u884c\u5355\u5143\u4fdd\u6301\uff0c\u8c03\u7528\u8005\u5c31\u4e00\u76f4\u5faa\u73af\u5728\u90a3\u91cc\u770b\u662f\u5426\u8be5\u81ea\u65cb\u9501\u7684\u4fdd\u6301\u8005\u5df2\u7ecf\u91ca\u653e\u4e86\u9501\uff0c\"\u81ea\u65cb\"\u4e00\u8bcd\u5c31\u662f\u56e0\u6b64\u800c\u5f97\u540d\u3002\n\n\u81ea\u65cb\u9501\u5728 JDK1.6 \u4e4b\u524d\u5176\u5b9e\u5c31\u5df2\u7ecf\u5f15\u5165\u4e86\uff0c\u4e0d\u8fc7\u662f\u9ed8\u8ba4\u5173\u95ed\u7684\uff0c\u9700\u8981\u901a\u8fc7--XX:+UseSpinning\u53c2\u6570\u6765\u5f00\u542f\u3002JDK1.6\u53ca1.6\u4e4b\u540e\uff0c\u5c31\u6539\u4e3a\u9ed8\u8ba4\u5f00\u542f\u7684\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u81ea\u65cb\u7b49\u5f85\u4e0d\u80fd\u5b8c\u5168\u66ff\u4ee3\u963b\u585e\uff0c\u56e0\u4e3a\u5b83\u8fd8\u662f\u8981\u5360\u7528\u5904\u7406\u5668\u65f6\u95f4\u3002\u5982\u679c\u9501\u88ab\u5360\u7528\u7684\u65f6\u95f4\u77ed\uff0c\u90a3\u4e48\u6548\u679c\u5f53\u7136\u5c31\u5f88\u597d\u4e86\uff01\u53cd\u4e4b\uff0c\u76f8\u53cd\uff01\u81ea\u65cb\u7b49\u5f85\u7684\u65f6\u95f4\u5fc5\u987b\u8981\u6709\u9650\u5ea6\u3002\u5982\u679c\u81ea\u65cb\u8d85\u8fc7\u4e86\u9650\u5b9a\u6b21\u6570\u4efb\u7136\u6ca1\u6709\u83b7\u5f97\u9501\uff0c\u5c31\u5e94\u8be5\u6302\u8d77\u7ebf\u7a0b\u3002\u81ea\u65cb\u6b21\u6570\u7684\u9ed8\u8ba4\u503c\u662f10\u6b21\uff0c\u7528\u6237\u53ef\u4ee5\u4fee\u6539--XX:PreBlockSpin\u6765\u66f4\u6539\u3002\n\u53e6\u5916,\u5728 JDK1.6 \u4e2d\u5f15\u5165\u4e86\u81ea\u9002\u5e94\u7684\u81ea\u65cb\u9501\u3002\u81ea\u9002\u5e94\u7684\u81ea\u65cb\u9501\u5e26\u6765\u7684\u6539\u8fdb\u5c31\u662f\uff1a\u81ea\u65cb\u7684\u65f6\u95f4\u4e0d\u5728\u56fa\u5b9a\u4e86\uff0c\u800c\u662f\u548c\u524d\u4e00\u6b21\u540c\u4e00\u4e2a\u9501\u4e0a\u7684\u81ea\u65cb\u65f6\u95f4\u4ee5\u53ca\u9501\u7684\u62e5\u6709\u8005\u7684\u72b6\u6001\u6765\u51b3\u5b9a\uff0c\u865a\u62df\u673a\u53d8\u5f97\u8d8a\u6765\u8d8a\u201c\u806a\u660e\u201d\u4e86\u3002\n\u2463 \u9501\u6d88\u9664\n\u9501\u6d88\u9664\u7406\u89e3\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u5b83\u6307\u7684\u5c31\u662f\u865a\u62df\u673a\u5373\u4f7f\u7f16\u8bd1\u5668\u5728\u8fd0\u884c\u65f6\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u90a3\u4e9b\u5171\u4eab\u6570\u636e\u4e0d\u53ef\u80fd\u5b58\u5728\u7ade\u4e89\uff0c\u90a3\u4e48\u5c31\u6267\u884c\u9501\u6d88\u9664\u3002\u9501\u6d88\u9664\u53ef\u4ee5\u8282\u7701\u6beb\u65e0\u610f\u4e49\u7684\u8bf7\u6c42\u9501\u7684\u65f6\u95f4\u3002\n\u2464 \u9501\u7c97\u5316\n\u539f\u5219\u4e0a\uff0c\u6211\u4eec\u5728\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u603b\u662f\u63a8\u8350\u5c06\u540c\u6b65\u5757\u7684\u4f5c\u7528\u8303\u56f4\u9650\u5236\u5f97\u5c3d\u91cf\u5c0f\uff0c\u2014\u2014\u76f4\u5728\u5171\u4eab\u6570\u636e\u7684\u5b9e\u9645\u4f5c\u7528\u57df\u624d\u8fdb\u884c\u540c\u6b65\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u4f7f\u5f97\u9700\u8981\u540c\u6b65\u7684\u64cd\u4f5c\u6570\u91cf\u5c3d\u53ef\u80fd\u53d8\u5c0f\uff0c\u5982\u679c\u5b58\u5728\u9501\u7ade\u4e89\uff0c\u90a3\u7b49\u5f85\u7ebf\u7a0b\u4e5f\u80fd\u5c3d\u5feb\u62ff\u5230\u9501\u3002\n\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u4e0a\u9762\u7684\u539f\u5219\u90fd\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u662f\u5982\u679c\u4e00\u7cfb\u5217\u7684\u8fde\u7eed\u64cd\u4f5c\u90fd\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u53cd\u590d\u52a0\u9501\u548c\u89e3\u9501\uff0c\u90a3\u4e48\u4f1a\u5e26\u6765\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u6027\u80fd\u6d88\u8017\u3002\n9.4 Synchronized \u548c ReenTrantLock \u7684\u5bf9\u6bd4\n\u2460 \u4e24\u8005\u90fd\u662f\u53ef\u91cd\u5165\u9501\n\u4e24\u8005\u90fd\u662f\u53ef\u91cd\u5165\u9501\u3002\u201c\u53ef\u91cd\u5165\u9501\u201d\u6982\u5ff5\u662f\uff1a\u81ea\u5df1\u53ef\u4ee5\u518d\u6b21\u83b7\u53d6\u81ea\u5df1\u7684\u5185\u90e8\u9501\u3002\u6bd4\u5982\u4e00\u4e2a\u7ebf\u7a0b\u83b7\u5f97\u4e86\u67d0\u4e2a\u5bf9\u8c61\u7684\u9501\uff0c\u6b64\u65f6\u8fd9\u4e2a\u5bf9\u8c61\u9501\u8fd8\u6ca1\u6709\u91ca\u653e\uff0c\u5f53\u5176\u518d\u6b21\u60f3\u8981\u83b7\u53d6\u8fd9\u4e2a\u5bf9\u8c61\u7684\u9501\u7684\u65f6\u5019\u8fd8\u662f\u53ef\u4ee5\u83b7\u53d6\u7684\uff0c\u5982\u679c\u4e0d\u53ef\u9501\u91cd\u5165\u7684\u8bdd\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u9501\u3002\u540c\u4e00\u4e2a\u7ebf\u7a0b\u6bcf\u6b21\u83b7\u53d6\u9501\uff0c\u9501\u7684\u8ba1\u6570\u5668\u90fd\u81ea\u589e1\uff0c\u6240\u4ee5\u8981\u7b49\u5230\u9501\u7684\u8ba1\u6570\u5668\u4e0b\u964d\u4e3a0\u65f6\u624d\u80fd\u91ca\u653e\u9501\u3002\n\u2461 synchronized \u4f9d\u8d56\u4e8e JVM \u800c ReenTrantLock \u4f9d\u8d56\u4e8e API\nsynchronized \u662f\u4f9d\u8d56\u4e8e JVM \u5b9e\u73b0\u7684\uff0c\u524d\u9762\u6211\u4eec\u4e5f\u8bb2\u5230\u4e86 \u865a\u62df\u673a\u56e2\u961f\u5728 JDK1.6 \u4e3a synchronized \u5173\u952e\u5b57\u8fdb\u884c\u4e86\u5f88\u591a\u4f18\u5316\uff0c\u4f46\u662f\u8fd9\u4e9b\u4f18\u5316\u90fd\u662f\u5728\u865a\u62df\u673a\u5c42\u9762\u5b9e\u73b0\u7684\uff0c\u5e76\u6ca1\u6709\u76f4\u63a5\u66b4\u9732\u7ed9\u6211\u4eec\u3002ReenTrantLock \u662f JDK \u5c42\u9762\u5b9e\u73b0\u7684\uff08\u4e5f\u5c31\u662f API \u5c42\u9762\uff0c\u9700\u8981 lock() \u548c unlock \u65b9\u6cd5\u914d\u5408 try/finally \u8bed\u53e5\u5757\u6765\u5b8c\u6210\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u5b83\u7684\u6e90\u4ee3\u7801\uff0c\u6765\u770b\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\n\u2462 ReenTrantLock \u6bd4 synchronized \u589e\u52a0\u4e86\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\n\u76f8\u6bd4synchronized\uff0cReenTrantLock\u589e\u52a0\u4e86\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\u3002\u4e3b\u8981\u6765\u8bf4\u4e3b\u8981\u6709\u4e09\u70b9\uff1a\n\n\u7b49\u5f85\u53ef\u4e2d\u65ad\n\u53ef\u6307\u5b9a\u516c\u5e73\u548c\u975e\u516c\u5e73\u9501\n\u53ef\u5b9e\u73b0\u9009\u62e9\u6027\u901a\u77e5\uff08\u9501\u53ef\u4ee5\u7ed1\u5b9a\u591a\u4e2a\u6761\u4ef6\uff09\n\n\n\nReenTrantLock\u63d0\u4f9b\u4e86\u4e00\u79cd\u80fd\u591f\u4e2d\u65ad\u7b49\u5f85\u9501\u7684\u7ebf\u7a0b\u7684\u673a\u5236\uff0c\u901a\u8fc7lock.lockInterruptibly()\u6765\u5b9e\u73b0\u8fd9\u4e2a\u673a\u5236\u3002\u4e5f\u5c31\u662f\u8bf4\u6b63\u5728\u7b49\u5f85\u7684\u7ebf\u7a0b\u53ef\u4ee5\u9009\u62e9\u653e\u5f03\u7b49\u5f85\uff0c\u6539\u4e3a\u5904\u7406\u5176\u4ed6\u4e8b\u60c5\u3002\nReenTrantLock\u53ef\u4ee5\u6307\u5b9a\u662f\u516c\u5e73\u9501\u8fd8\u662f\u975e\u516c\u5e73\u9501\u3002\u800csynchronized\u53ea\u80fd\u662f\u975e\u516c\u5e73\u9501\u3002\u6240\u8c13\u7684\u516c\u5e73\u9501\u5c31\u662f\u5148\u7b49\u5f85\u7684\u7ebf\u7a0b\u5148\u83b7\u5f97\u9501\u3002 ReenTrantLock\u9ed8\u8ba4\u60c5\u51b5\u662f\u975e\u516c\u5e73\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 ReenTrantLock\u7c7b\u7684ReentrantLock(boolean fair)\u6784\u9020\u65b9\u6cd5\u6765\u5236\u5b9a\u662f\u5426\u662f\u516c\u5e73\u7684\u3002\nsynchronized\u5173\u952e\u5b57\u4e0ewait()\u548cnotify/notifyAll()\u65b9\u6cd5\u76f8\u7ed3\u5408\u53ef\u4ee5\u5b9e\u73b0\u7b49\u5f85/\u901a\u77e5\u673a\u5236\uff0cReentrantLock\u7c7b\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u9700\u8981\u501f\u52a9\u4e8eCondition\u63a5\u53e3\u4e0enewCondition() \u65b9\u6cd5\u3002Condition\u662fJDK1.5\u4e4b\u540e\u624d\u6709\u7684\uff0c\u5b83\u5177\u6709\u5f88\u597d\u7684\u7075\u6d3b\u6027\uff0c\u6bd4\u5982\u53ef\u4ee5\u5b9e\u73b0\u591a\u8def\u901a\u77e5\u529f\u80fd\u4e5f\u5c31\u662f\u5728\u4e00\u4e2aLock\u5bf9\u8c61\u4e2d\u53ef\u4ee5\u521b\u5efa\u591a\u4e2aCondition\u5b9e\u4f8b\uff08\u5373\u5bf9\u8c61\u76d1\u89c6\u5668\uff09\uff0c\u7ebf\u7a0b\u5bf9\u8c61\u53ef\u4ee5\u6ce8\u518c\u5728\u6307\u5b9a\u7684Condition\u4e2d\uff0c\u4ece\u800c\u53ef\u4ee5\u6709\u9009\u62e9\u6027\u7684\u8fdb\u884c\u7ebf\u7a0b\u901a\u77e5\uff0c\u5728\u8c03\u5ea6\u7ebf\u7a0b\u4e0a\u66f4\u52a0\u7075\u6d3b\u3002 \u5728\u4f7f\u7528notify/notifyAll()\u65b9\u6cd5\u8fdb\u884c\u901a\u77e5\u65f6\uff0c\u88ab\u901a\u77e5\u7684\u7ebf\u7a0b\u662f\u7531 JVM \u9009\u62e9\u7684\uff0c\u7528ReentrantLock\u7c7b\u7ed3\u5408Condition\u5b9e\u4f8b\u53ef\u4ee5\u5b9e\u73b0\u201c\u9009\u62e9\u6027\u901a\u77e5\u201d \uff0c\u8fd9\u4e2a\u529f\u80fd\u975e\u5e38\u91cd\u8981\uff0c\u800c\u4e14\u662fCondition\u63a5\u53e3\u9ed8\u8ba4\u63d0\u4f9b\u7684\u3002\u800csynchronized\u5173\u952e\u5b57\u5c31\u76f8\u5f53\u4e8e\u6574\u4e2aLock\u5bf9\u8c61\u4e2d\u53ea\u6709\u4e00\u4e2aCondition\u5b9e\u4f8b\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u6ce8\u518c\u5728\u5b83\u4e00\u4e2a\u8eab\u4e0a\u3002\u5982\u679c\u6267\u884cnotifyAll()\u65b9\u6cd5\u7684\u8bdd\u5c31\u4f1a\u901a\u77e5\u6240\u6709\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\u8fd9\u6837\u4f1a\u9020\u6210\u5f88\u5927\u7684\u6548\u7387\u95ee\u9898\uff0c\u800cCondition\u5b9e\u4f8b\u7684signalAll()\u65b9\u6cd5 \u53ea\u4f1a\u5524\u9192\u6ce8\u518c\u5728\u8be5Condition\u5b9e\u4f8b\u4e2d\u7684\u6240\u6709\u7b49\u5f85\u7ebf\u7a0b\u3002\n\n\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4e0a\u8ff0\u529f\u80fd\uff0c\u90a3\u4e48\u9009\u62e9ReenTrantLock\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\nsynchronized \u5f02\u5e38\u5c31\u4f1a\u91ca\u653e\u9501\uff0c\u800c ReenTrantLock \u5f02\u5e38\u9700\u8981\u5728 finally \u91cc unlock\n\u2463 \u6027\u80fd\u5df2\u4e0d\u662f\u9009\u62e9\u6807\u51c6\n\u200b       \u5728JDK1.6\u4e4b\u524d\uff0csynchronized \u7684\u6027\u80fd\u662f\u6bd4 ReenTrantLock \u5dee\u5f88\u591a\u3002\u5177\u4f53\u8868\u793a\u4e3a\uff1asynchronized \u5173\u952e\u5b57\u541e\u5410\u91cf\u968f\u7ebf\u7a0b\u6570\u7684\u589e\u52a0\uff0c\u4e0b\u964d\u5f97\u975e\u5e38\u4e25\u91cd\u3002\u800cReenTrantLock \u57fa\u672c\u4fdd\u6301\u4e00\u4e2a\u6bd4\u8f83\u7a33\u5b9a\u7684\u6c34\u5e73\u3002\u6211\u89c9\u5f97\u8fd9\u4e5f\u4fa7\u9762\u53cd\u6620\u4e86\uff0c synchronized \u5173\u952e\u5b57\u8fd8\u6709\u975e\u5e38\u5927\u7684\u4f18\u5316\u4f59\u5730\u3002\u540e\u7eed\u7684\u6280\u672f\u53d1\u5c55\u4e5f\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u4e0a\u9762\u4e5f\u8bb2\u4e86\u5728 JDK1.6 \u4e4b\u540e JVM \u56e2\u961f\u5bf9 synchronized \u5173\u952e\u5b57\u505a\u4e86\u5f88\u591a\u4f18\u5316\u3002JDK1.6 \u4e4b\u540e\uff0csynchronized \u548c ReenTrantLock \u7684\u6027\u80fd\u57fa\u672c\u662f\u6301\u5e73\u4e86\u3002\u6240\u4ee5\u7f51\u4e0a\u90a3\u4e9b\u8bf4\u56e0\u4e3a\u6027\u80fd\u624d\u9009\u62e9 ReenTrantLock \u7684\u6587\u7ae0\u90fd\u662f\u9519\u7684\uff01JDK1.6\u4e4b\u540e\uff0c\u6027\u80fd\u5df2\u7ecf\u4e0d\u662f\u9009\u62e9synchronized\u548cReenTrantLock\u7684\u5f71\u54cd\u56e0\u7d20\u4e86\uff01\u800c\u4e14\u865a\u62df\u673a\u5728\u672a\u6765\u7684\u6027\u80fd\u6539\u8fdb\u4e2d\u4f1a\u66f4\u504f\u5411\u4e8e\u539f\u751f\u7684synchronized\uff0c\u6240\u4ee5\u8fd8\u662f\u63d0\u5021\u5728synchronized\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5148\u8003\u8651\u4f7f\u7528synchronized\u5173\u952e\u5b57\u6765\u8fdb\u884c\u540c\u6b65\uff01\u4f18\u5316\u540e\u7684synchronized\u548cReenTrantLock\u4e00\u6837\uff0c\u5728\u5f88\u591a\u5730\u65b9\u90fd\u662f\u7528\u5230\u4e86CAS\u64cd\u4f5c\u3002\n10. volatile\u5173\u952e\u5b57\n\u53c2\u8003\n\nJava\u5e76\u53d1\u7f16\u7a0b\uff1avolatile\u5173\u952e\u5b57\u89e3\u6790\nJava\u9762\u8bd5\u5b98\u6700\u5e38\u95ee\u7684volatile\u5173\u952e\u5b57\n\n\n10.1 \u4e24\u5927\u7279\u6027\n\n\u4fdd\u8bc1\u4e86\u4e0d\u540c\u7ebf\u7a0b\u5bf9\u8be5\u53d8\u91cf\u64cd\u4f5c\u7684\u5185\u5b58\u53ef\u89c1\u6027\n\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f\n\n10.2 Java\u5185\u5b58\u6a21\u578b\u4e0evolatile\n\u200b       \u5728 JDK1.2 \u4e4b\u524d\uff0cJava\u7684\u5185\u5b58\u6a21\u578b\u5b9e\u73b0\u603b\u662f\u4ece\u4e3b\u5b58\uff08\u5373\u5171\u4eab\u5185\u5b58\uff09\u8bfb\u53d6\u53d8\u91cf\uff0c\u662f\u4e0d\u9700\u8981\u8fdb\u2f8f\u7279\u522b\u7684\u6ce8\u610f \u7684\u3002\u2f7d\u5728\u5f53\u524d\u7684 Java \u5185\u5b58\u6a21\u578b\u4e0b\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u628a\u53d8\u91cf\u4fdd\u5b58\u672c\u5730\u5185\u5b58\uff08\u2f50\u5982\u673a\u5668\u7684\u5bc4\u5b58\u5668\uff09\u4e2d\uff0c\u2f7d\u4e0d\u662f\u76f4 \u63a5\u5728\u4e3b\u5b58\u4e2d\u8fdb\u2f8f\u8bfb\u5199\u3002\u8fd9\u5c31\u53ef\u80fd\u9020\u6210\u2f00\u4e2a\u7ebf\u7a0b\u5728\u4e3b\u5b58\u4e2d\u4fee\u6539\u4e86\u2f00\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u2f7d\u53e6\u5916\u2f00\u4e2a\u7ebf\u7a0b\u8fd8\u7ee7\u7eed\u4f7f \u2f64\u5b83\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\u53d8\u91cf\u503c\u7684\u62f7\u2ec9\uff0c\u9020\u6210\u6570\u636e\u7684\u4e0d\u2f00\u81f4\u3002\n\n\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u9700\u8981\u628a\u53d8\u91cf\u58f0\u660e\u4e3avolatile\uff0c\u8fd9\u5c31\u6307\u793a JVM\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u6bcf\u6b21\u4f7f\u2f64\u5b83\u90fd \u5230\u4e3b\u5b58\u4e2d\u8fdb\u2f8f\u8bfb\u53d6\u3002 \u8bf4\u2f69\u4e86\uff0c volatile \u5173\u952e\u5b57\u7684\u4e3b\u8981\u4f5c\u2f64\u5c31\u662f\u4fdd\u8bc1\u53d8\u91cf\u7684\u53ef\u2ec5\u6027\u7136\u540e\u8fd8\u6709\u2f00\u4e2a\u4f5c\u2f64\u662f\u9632\u2f4c\u6307\u4ee4\u91cd\u6392\u5e8f\u3002\n\n10.3 \u5e76\u53d1\u7f16\u7a0b\u7684\u4e09\u4e2a\u91cd\u8981\u7279\u6027\n\n\u539f\u2f26\u6027 : \u2f00\u4e2a\u7684\u64cd\u4f5c\u6216\u8005\u591a\u6b21\u64cd\u4f5c\uff0c\u8981\u4e48\u6240\u6709\u7684\u64cd\u4f5c\u5168\u90e8\u90fd\u5f97\u5230\u6267\u2f8f\u5e76\u4e14\u4e0d\u4f1a\u6536\u5230\u4efb\u4f55\u56e0\u7d20\u7684 \u2f32\u6270\u2f7d\u4e2d\u65ad\uff0c\u8981\u4e48\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u6267\u2f8f\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u2f8f\u3002 synchronized \u53ef\u4ee5\u4fdd\u8bc1\u4ee3\u7801\u2f5a\u6bb5\u7684\u539f\u2f26\u6027\u3002 \n\u53ef\u2ec5\u6027 \uff1a\u5f53\u2f00\u4e2a\u53d8\u91cf\u5bf9\u5171\u4eab\u53d8\u91cf\u8fdb\u2f8f\u4e86\u4fee\u6539\uff0c\u90a3\u4e48\u53e6\u5916\u7684\u7ebf\u7a0b\u90fd\u662f\u2f74\u5373\u53ef\u4ee5\u770b\u5230\u4fee\u6539\u540e\u7684\u6700\u65b0 \u503c\u3002 volatile \u5173\u952e\u5b57\u53ef\u4ee5\u4fdd\u8bc1\u5171\u4eab\u53d8\u91cf\u7684\u53ef\u2ec5\u6027\u3002\n\u6709\u5e8f\u6027 \uff1a\u4ee3\u7801\u5728\u6267\u2f8f\u7684\u8fc7\u7a0b\u4e2d\u7684\u5148\u540e\u987a\u5e8f\uff0cJava \u5728\u7f16\u8bd1\u5668\u4ee5\u53ca\u8fd0\u2f8f\u671f\u95f4\u7684\u4f18\u5316\uff0c\u4ee3\u7801\u7684\u6267\u2f8f\u987a\u5e8f\u672a\u5fc5\u5c31\u662f\u7f16\u5199\u4ee3\u7801\u65f6\u5019\u7684\u987a\u5e8f\u3002 volatile \u5173\u952e\u5b57\u53ef\u4ee5\u7981\u2f4c\u6307\u4ee4\u8fdb\u2f8f\u91cd\u6392\u5e8f\u4f18\u5316\u3002\n\n10.4 \u5185\u5b58\u53ef\u89c1\u6027\n\n11. synchronized | volatile \u5173\u952e\u5b57\u7684\u533a\u522b\n\nvolatile\u5173\u952e\u5b57\u662f\u7ebf\u7a0b\u540c\u6b65\u7684\u8f7b\u91cf\u7ea7\u5b9e\u73b0\uff0c\u6240\u4ee5volatile\u6027\u80fd\u80af\u5b9a\u2f50synchronized\u5173\u952e\u5b57\u8981\u597d\u3002 \u4f46\u662fvolatile\u5173\u952e\u5b57\u53ea\u80fd\u2f64\u4e8e\u53d8\u91cf\u2f7dsynchronized\u5173\u952e\u5b57\u53ef\u4ee5\u4fee\u9970\u2f45\u6cd5\u4ee5\u53ca\u4ee3\u7801\u5757\u3002 synchronized\u5173\u952e\u5b57\u5728JavaSE1.6\u4e4b\u540e\u8fdb\u2f8f\u4e86\u4e3b\u8981\u5305\u62ec\u4e3a\u4e86\u51cf\u5c11\u83b7\u5f97\u9501\u548c\u91ca\u653e\u9501\u5e26\u6765\u7684\u6027\u80fd\u6d88\u8017 \u2f7d\u5f15\u2f0a\u7684\u504f\u5411\u9501\u548c\u8f7b\u91cf\u7ea7\u9501\u4ee5\u53ca\u5176\u5b83\u5404\u79cd\u4f18\u5316\u4e4b\u540e\u6267\u2f8f\u6548\u7387\u6709\u4e86\u663e\u8457\u63d0\u5347\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\u4f7f\u2f64 synchronized \u5173\u952e\u5b57\u7684\u573a\u666f\u8fd8\u662f\u66f4\u591a\u2f00\u4e9b\u3002 \n\u591a\u7ebf\u7a0b\u8bbf\u95eevolatile\u5173\u952e\u5b57\u4e0d\u4f1a\u53d1\u2f63\u963b\u585e\uff0c\u2f7dsynchronized\u5173\u952e\u5b57\u53ef\u80fd\u4f1a\u53d1\u2f63\u963b\u585e \nvolatile\u5173\u952e\u5b57\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u2ec5\u6027\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u539f\u2f26\u6027\u3002synchronized\u5173\u952e\u5b57\u4e24\u8005\u90fd\u80fd \u4fdd\u8bc1\u3002 \nvolatile\u5173\u952e\u5b57\u4e3b\u8981\u2f64\u4e8e\u89e3\u51b3\u53d8\u91cf\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u53ef\u2ec5\u6027\uff0c\u2f7d synchronized\u5173\u952e\u5b57\u89e3\u51b3\u7684\u662f \u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u8bbf\u95ee\u8d44\u6e90\u7684\u540c\u6b65\u6027\u3002\n\n12. Java\u7ebf\u7a0b\u6c60\n12.1 \u597d\u5904\n\n\u964d\u4f4e\u8d44\u6e90\u6d88\u8017\u3002\u901a\u8fc7\u91cd\u590d\u5229\u2f64\u5df2\u521b\u5efa\u7684\u7ebf\u7a0b\u964d\u4f4e\u7ebf\u7a0b\u521b\u5efa\u548c\u9500\u6bc1\u9020\u6210\u7684\u6d88\u8017\u3002 \n\u63d0\u2fbc\u54cd\u5e94\u901f\u5ea6\u3002\u5f53\u4efb\u52a1\u5230\u8fbe\u65f6\uff0c\u4efb\u52a1\u53ef\u4ee5\u4e0d\u9700\u8981\u7684\u7b49\u5230\u7ebf\u7a0b\u521b\u5efa\u5c31\u80fd\u2f74\u5373\u6267\u2f8f\u3002 \n\u63d0\u2fbc\u7ebf\u7a0b\u7684\u53ef\u7ba1\u7406\u6027\u3002\u7ebf\u7a0b\u662f\u7a00\u7f3a\u8d44\u6e90\uff0c\u5982\u679c\u2f46\u9650\u5236\u7684\u521b\u5efa\uff0c\u4e0d\u4ec5\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u8fd8\u4f1a\u964d\u4f4e\u7cfb \u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u4f7f\u2f64\u7ebf\u7a0b\u6c60\u53ef\u4ee5\u8fdb\u2f8f\u7edf\u2f00\u7684\u5206\u914d\uff0c\u8c03\u4f18\u548c\u76d1\u63a7\u3002\n\n12.2 \u521b\u5efa\u7ebf\u7a0b\u6c60\n\u53c2\u8003\n\nhttps://www.cnblogs.com/teach/p/10903164.html\n\n\n\u300a\u963f\u2fa5\u5df4\u5df4Java\u5f00\u53d1\u2f3f\u518c\u300b\u4e2d\u5f3a\u5236\u7ebf\u7a0b\u6c60\u4e0d\u5141\u8bb8\u4f7f\u2f64 Executors \u53bb\u521b\u5efa\uff0c\u2f7d\u662f\u901a\u8fc7 ThreadPoolExecutor \u7684\u2f45\u5f0f\uff0c\u8fd9\u6837\u7684\u5904\u7406\u2f45\u5f0f\u8ba9\u5199\u7684\u540c\u5b66\u66f4\u52a0\u660e\u786e\u7ebf\u7a0b\u6c60\u7684\u8fd0\u2f8f\u89c4\u5219\uff0c\u89c4\u907f\u8d44\u6e90\u8017\u5c3d \u7684\u2edb\u9669\n12.2.1 Executors\u521b\u5efa\u7ebf\u7a0b\u6c60\u5f0a\u7aef\n\nFixedThreadPool \u548c SingleThreadExecutor \uff1a \u5141\u8bb8\u8bf7\u6c42\u7684\u961f\u5217\u2ed3\u5ea6\u4e3a Integer.MAX_VALUE \uff0c\u53ef\u80fd\u5806\u79ef\u2f24\u91cf\u7684\u8bf7\u6c42\uff0c\u4ece\u2f7d\u5bfc\u81f4OOM\u3002 \nCachedThreadPool \u548c ScheduledThreadPool \uff1a \u5141\u8bb8\u521b\u5efa\u7684\u7ebf\u7a0b\u6570\u91cf\u4e3a Integer.MAX_VALUE \uff0c\u53ef\u80fd\u4f1a\u521b\u5efa\u2f24\u91cf\u7ebf\u7a0b\uff0c\u4ece\u2f7d\u5bfc\u81f4OOM\u3002\n\n12.2.2 \u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1aThreadPoolExecutor\u7684\u65b9\u5f0f\n\npublic ThreadPoolExecutor(int corePoolSize,\n                              int maximumPoolSize,\n                              long keepAliveTime,\n                              TimeUnit unit,\n                              BlockingQueue&lt;Runnable&gt; workQueue) {\n        this(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,\n             Executors.defaultThreadFactory(), defaultHandler);\n    }\n\n\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86\u53e6\u5916\u7684\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5373\u4e0a\u56fe\u4e2d\u56db\u4e2a\u6784\u9020\u65b9\u6cd5\u4e2d\u7684\u7b2c\u56db\u4e2a\uff0c\u4ece\u6e90\u7801\u4e2d\u5f97\u77e5\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\u5305\u542b\u7684\u5c5e\u6027\u5171\u6709corePoolSize\u3001maximumPoolSize\u3001keepAliveTime\u3001unit\u3001workQueue\u3001threadFactory\u3001handler\u4e03\u4e2a\n\u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u8bf4\u660e\n\n\n\u5e8f\u53f7\n\u540d\u79f0\n\u7c7b\u578b\n\u542b\u4e49\n\n\n\n\n1\ncorePoolSize\nint\n\u7ebf\u7a0b\u6c60\u7684\u6838\u5fc3\u7ebf\u7a0b\u6570\n\n\n2\nmaximumPoolSize\nint\n\u7ebf\u7a0b\u6c60\u7684\u6700\u5927\u7ebf\u7a0b\u6570\n\n\n3\nkeepAliveTime\nlong\n\u7ebf\u7a0b\u6c60\u7a7a\u95f2\u65f6\u7ebf\u7a0b\u7684\u5b58\u6d3b\u65f6\u957f\n\n\n4\nunit\nTimeUnit\n\u7ebf\u7a0b\u5b58\u6d3b\u65f6\u957f\u65f6\u95f4\u5355\u4f4d\n\n\n5\nworkQueue\nBlockingQueue\n\u7ebf\u7a0b\u7b49\u5f85\u961f\u5217\n\n\n6\nthreadFactory\nThreadFactory\n\u7ebf\u7a0b\u6c60\u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\n\n\n7\nhandler\nRejectedExecutionHandler\n\n\n\n\nhandler\uff1a\u5728\u961f\u5217\uff08workQueue\uff09\u548c\u7ebf\u7a0b\u6c60\u8fbe\u5230\u6700\u5927\u7ebf\u7a0b\u6570\uff08maximumPoolSize\uff09\u5747\u6ee1\u65f6\u4ecd\u6709\u4efb\u52a1\u7684\u60c5\u51b5\u4e0b\u7684\u5904\u7406\u65b9\u5f0f\uff1b\n\n\u6211\u4eec\u518d\u6765\u770b\u4e2d\u95f4\u7684\u4e24\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u548c\u7b2c\u4e00\u4e2a\u7684\u533a\u522b\u5728\u4e8e\uff0c\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u6307\u5b9a\u4e86\u521b\u5efa\u7ebf\u7a0b\u7684\u5de5\u5382\u548c\u7ebf\u7a0b\u6c60\u6ee1\u65f6\u7684\u5904\u7406\u7b56\u7565\u3002\n12.2.3 \u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a\u901a\u8fc7Executor \u6846\u67b6\u7684\u2f2f\u5177\u7c7bExecutors\u6765\u5b9e\u73b0\nFixedThreadPool \uff1a \u8be5\u2f45\u6cd5\u8fd4\u56de\u2f00\u4e2a\u56fa\u5b9a\u7ebf\u7a0b\u6570\u91cf\u7684\u7ebf\u7a0b\u6c60\u3002\u8be5\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u91cf\u59cb\u7ec8\u4e0d \u53d8\u3002\u5f53\u6709\u2f00\u4e2a\u65b0\u7684\u4efb\u52a1\u63d0\u4ea4\u65f6\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u82e5\u6709\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u5219\u2f74\u5373\u6267\u2f8f\u3002\u82e5\u6ca1\u6709\uff0c\u5219\u65b0\u7684\u4efb\u52a1\u4f1a\u88ab \u6682\u5b58\u5728\u2f00\u4e2a\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u5f85\u6709\u7ebf\u7a0b\u7a7a\u95f2\u65f6\uff0c\u4fbf\u5904\u7406\u5728\u4efb\u52a1\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u3002\nSingleThreadExecutor\uff1a \u2f45\u6cd5\u8fd4\u56de\u2f00\u4e2a\u53ea\u6709\u2f00\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\u3002\u82e5\u591a\u4f59\u2f00\u4e2a\u4efb\u52a1\u88ab\u63d0\u4ea4\u5230\u8be5\u7ebf \u7a0b\u6c60\uff0c\u4efb\u52a1\u4f1a\u88ab\u4fdd\u5b58\u5728\u2f00\u4e2a\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u5f85\u7ebf\u7a0b\u7a7a\u95f2\uff0c\u6309\u5148\u2f0a\u5148\u51fa\u7684\u987a\u5e8f\u6267\u2f8f\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u3002\nCachedThreadPool\uff1a \u8be5\u2f45\u6cd5\u8fd4\u56de\u2f00\u4e2a\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574\u7ebf\u7a0b\u6570\u91cf\u7684\u7ebf\u7a0b\u6c60\u3002\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570 \u91cf\u4e0d\u786e\u5b9a\uff0c\u4f46\u82e5\u6709\u7a7a\u95f2\u7ebf\u7a0b\u53ef\u4ee5\u590d\u2f64\uff0c\u5219\u4f1a\u4f18\u5148\u4f7f\u2f64\u53ef\u590d\u2f64\u7684\u7ebf\u7a0b\u3002\u82e5\u6240\u6709\u7ebf\u7a0b\u5747\u5728\u2f2f\u4f5c\uff0c\u2f1c\u6709 \u65b0\u7684\u4efb\u52a1\u63d0\u4ea4\uff0c\u5219\u4f1a\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u5904\u7406\u4efb\u52a1\u3002\u6240\u6709\u7ebf\u7a0b\u5728\u5f53\u524d\u4efb\u52a1\u6267\u2f8f\u5b8c\u6bd5\u540e\uff0c\u5c06\u8fd4\u56de\u7ebf\u7a0b\u6c60\u8fdb \u2f8f\u590d\u2f64\u3002\n\n\npublic static ExecutorService newFixedThreadPool(int nThreads) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue&lt;Runnable&gt;());\n    }\n\n\u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5176\u8fd4\u56de\u7684\u662fThreaPoolExecutor\u5bf9\u8c61\uff0c\u8c03\u7528\u7684\u662fThreaPoolExecutor\u7c7b\u56db\u4e2a\u6784\u9020\u65b9\u6cd5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u3002\n\u603b\u7ed3\uff0c\u4e0a\u9762\u4e24\u79cd\u521b\u5efa\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\uff0c\u5176\u672c\u8d28\u90fd\u662f\u901a\u8fc7ThreaPoolExecutor\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u7684\u65b9\u5f0f\uff0c\u6240\u4ee5ThreaPoolExecutor\u662f\u91cd\u70b9\u3002\n12.3 ThreadPoolExecutor \u7c7b\u5206\u6790\n\u53c2\u8003\n\nhttps://www.jianshu.com/p/c41e942bcd64\n\n\n\n\u200b       \u5f53\u5728execute(Runnable)\u65b9\u6cd5\u4e2d\u63d0\u4ea4\u65b0\u4efb\u52a1\u5e76\u4e14\u5c11\u4e8ecorePoolSize\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u5373\u4f7f\u5176\u4ed6\u5de5\u4f5c\u7ebf\u7a0b\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff0c\u4e5f\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u6765\u5904\u7406\u8be5\u8bf7\u6c42\u3002 \u5982\u679c\u6709\u591a\u4e8ecorePoolSize\u4f46\u5c0f\u4e8emaximumPoolSize\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\uff0c\u5219\u4ec5\u5f53\u961f\u5217\u5df2\u6ee1\u65f6\u624d\u4f1a\u521b\u5efa\u65b0\u7ebf\u7a0b\u3002 \u901a\u8fc7\u8bbe\u7f6ecorePoolSize\u548cmaximumPoolSize\u76f8\u540c\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\u3002 \u901a\u8fc7\u5c06maximumPoolSize\u8bbe\u7f6e\u4e3a\u57fa\u672c\u4e0a\u65e0\u754c\u7684\u503c\uff0c\u4f8b\u5982Integer.MAX_VALUE\uff0c\u60a8\u53ef\u4ee5\u5141\u8bb8\u6c60\u5bb9\u7eb3\u4efb\u610f\u6570\u91cf\u7684\u5e76\u53d1\u4efb\u52a1\u3002 \u901a\u5e38\uff0c\u6838\u5fc3\u548c\u6700\u5927\u6c60\u5927\u5c0f\u4ec5\u5728\u6784\u5efa\u65f6\u8bbe\u7f6e\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f7f\u7528setCorePoolSize\u548csetMaximumPoolSize\u8fdb\u884c\u52a8\u6001\u66f4\u6539\u3002\n12.4 \u7ebf\u7a0b\u6c60\u6267\u884c\u6d41\u7a0b\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "Java-\u591a\u7ebf\u7a0b\u5e76\u53d1", "slug": "Java-\u591a\u7ebf\u7a0b\u5e76\u53d1", "permalink": "/tag/Java-\u591a\u7ebf\u7a0b\u5e76\u53d1/"}]}, {"title": "Linux\u5e38\u7528\u547d\u4ee4", "date": "2020-08-14T16:45:16-00.00", "path": "/archives/Linux\u5e38\u7528\u547d\u4ee4/", "text": "\u83dc\u9e1f\u6559\u7a0bLinux\u547d\u4ee4\u5927\u5168\nhttps://www.runoob.com/linux/linux-command-manual.html\n\n\u7cfb\u7edf\u7ba1\u7406\nuname\uff1a\u663e\u793a\u7cfb\u7edf\u76f8\u5173\u4fe1\u606f\nLinux uname\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u7cfb\u7edf\u4fe1\u606f\u3002\nuname\u53ef\u663e\u793a\u7535\u8111\u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u76f8\u5173\u4fe1\u606f\u3002\n\nuname [-amnrsv][--help][--version]\n\n-a\u6216--all \u3000\u663e\u793a\u5168\u90e8\u7684\u4fe1\u606f\u3002\n-m\u6216--machine \u3000\u663e\u793a\u7535\u8111\u7c7b\u578b\u3002\n-n\u6216-nodename \u3000\u663e\u793a\u5728\u7f51\u7edc\u4e0a\u7684\u4e3b\u673a\u540d\u79f0\u3002\n-r\u6216--release \u3000\u663e\u793a\u64cd\u4f5c\u7cfb\u7edf\u7684\u53d1\u884c\u7f16\u53f7\u3002\n-s\u6216--sysname \u3000\u663e\u793a\u64cd\u4f5c\u7cfb\u7edf\u540d\u79f0\u3002\n-v \u3000\u663e\u793a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\u3002\n--help \u3000\u663e\u793a\u5e2e\u52a9\u3002\n--version \u3000\u663e\u793a\u7248\u672c\u4fe1\u606f\u3002\n\n", "categories": [{"name": "Linux", "slug": "Linux", "permalink": "/category/Linux/"}], "tags": [{"name": "Linux", "slug": "Linux", "permalink": "/tag/Linux/"}]}, {"title": "Java-\u8bbe\u8ba1\u6a21\u5f0f", "date": "2020-08-09T23:57:52-00.00", "path": "/archives/Java-\u8bbe\u8ba1\u6a21\u5f0f/", "text": "Java\u8bbe\u8ba1\u6a21\u5f0f\n\u603b\u89c8\n\u53c2\u8003\n\nhttps://www.runoob.com/design-pattern/design-pattern-intro.html\n\n\n\u6839\u636e\u8bbe\u8ba1\u6a21\u5f0f\u7684\u53c2\u8003\u4e66 Design Patterns - Elements of Reusable Object-Oriented Software\uff08\u4e2d\u6587\u8bd1\u540d\uff1a\u8bbe\u8ba1\u6a21\u5f0f - \u53ef\u590d\u7528\u7684\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u5143\u7d20\uff09 \u4e2d\u6240\u63d0\u5230\u7684\uff0c\u603b\u5171\u6709 23 \u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e09\u5927\u7c7b\uff1a\u521b\u5efa\u578b\u6a21\u5f0f\uff08Creational Patterns\uff09\u3001\u7ed3\u6784\u578b\u6a21\u5f0f\uff08Structural Patterns\uff09\u3001\u884c\u4e3a\u578b\u6a21\u5f0f\uff08Behavioral Patterns\uff09\u3002\u5f53\u7136\uff0c\u6211\u4eec\u8fd8\u4f1a\u8ba8\u8bba\u53e6\u4e00\u7c7b\u8bbe\u8ba1\u6a21\u5f0f\uff1aJ2EE \u8bbe\u8ba1\u6a21\u5f0f\u3002\n\n\u521b\u5efa\u578b\u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u540c\u65f6\u9690\u85cf\u521b\u5efa\u903b\u8f91\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 new \u8fd0\u7b97\u7b26\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5728\u5224\u65ad\u9488\u5bf9\u67d0\u4e2a\u7ed9\u5b9a\u5b9e\u4f8b\u9700\u8981\u521b\u5efa\u54ea\u4e9b\u5bf9\u8c61\u65f6\u66f4\u52a0\u7075\u6d3b\u3002\n\n\n\n\n\u7ed3\u6784\u578b\u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u5173\u6ce8\u7c7b\u548c\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ee7\u627f\u7684\u6982\u5ff5\u88ab\u7528\u6765\u7ec4\u5408\u63a5\u53e3\u548c\u5b9a\u4e49\u7ec4\u5408\u5bf9\u8c61\u83b7\u5f97\u65b0\u529f\u80fd\u7684\u65b9\u5f0f\u3002\n\n\n\n\n\u884c\u4e3a\u578b\u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u5bf9\u8c61\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\n\n\n\n\nJ2EE \u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u8868\u793a\u5c42\u3002\u8fd9\u4e9b\u6a21\u5f0f\u662f\u7531 Sun Java Center \u9274\u5b9a\u7684\u3002\n\n\n\n\u521b\u5efa\u578b\u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u540c\u65f6\u9690\u85cf\u521b\u5efa\u903b\u8f91\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 new \u8fd0\u7b97\u7b26\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5728\u5224\u65ad\u9488\u5bf9\u67d0\u4e2a\u7ed9\u5b9a\u5b9e\u4f8b\u9700\u8981\u521b\u5efa\u54ea\u4e9b\u5bf9\u8c61\u65f6\u66f4\u52a0\u7075\u6d3b\u3002\n\n\u5de5\u5382\u6a21\u5f0f\uff08Factory Pattern\uff09\n\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff08Abstract Factory Pattern\uff09\n\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\n\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09\n\u539f\u578b\u6a21\u5f0f\uff08Prototype Pattern\uff09\n\n\u7ed3\u6784\u578b\u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u5173\u6ce8\u7c7b\u548c\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ee7\u627f\u7684\u6982\u5ff5\u88ab\u7528\u6765\u7ec4\u5408\u63a5\u53e3\u548c\u5b9a\u4e49\u7ec4\u5408\u5bf9\u8c61\u83b7\u5f97\u65b0\u529f\u80fd\u7684\u65b9\u5f0f\u3002\n\n\u9002\u914d\u5668\u6a21\u5f0f\uff08Adapter Pattern\uff09\n\u6865\u63a5\u6a21\u5f0f\uff08Bridge Pattern\uff09\n\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Filter\u3001Criteria Pattern\uff09\n\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\n\u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\n\u5916\u89c2\u6a21\u5f0f\uff08Facade Pattern\uff09\n\u4eab\u5143\u6a21\u5f0f\uff08Flyweight Pattern\uff09\n\u4ee3\u7406\u6a21\u5f0f\uff08Proxy Pattern\uff09\n\n\u884c\u4e3a\u578b\u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u5bf9\u8c61\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\n\n\u8d23\u4efb\u94fe\u6a21\u5f0f\uff08Chain of Responsibility Pattern\uff09\n\u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\n\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter Pattern\uff09\n\u8fed\u4ee3\u5668\u6a21\u5f0f\uff08Iterator Pattern\uff09\n\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff08Mediator Pattern\uff09\n\u5907\u5fd8\u5f55\u6a21\u5f0f\uff08Memento Pattern\uff09\n\u89c2\u5bdf\u8005\u6a21\u5f0f\uff08Observer Pattern\uff09\n\u72b6\u6001\u6a21\u5f0f\uff08State Pattern\uff09\n\u7a7a\u5bf9\u8c61\u6a21\u5f0f\uff08Null Object Pattern\uff09\n\u7b56\u7565\u6a21\u5f0f\uff08Strategy Pattern\uff09\n\u6a21\u677f\u6a21\u5f0f\uff08Template Pattern\uff09\n\u8bbf\u95ee\u8005\u6a21\u5f0f\uff08Visitor Pattern\uff09\n\nJ2EE \u6a21\u5f0f\n\u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u8868\u793a\u5c42\u3002\u8fd9\u4e9b\u6a21\u5f0f\u662f\u7531 Sun Java Center \u9274\u5b9a\u7684\u3002\n\nMVC \u6a21\u5f0f\uff08MVC Pattern\uff09\n\u4e1a\u52a1\u4ee3\u8868\u6a21\u5f0f\uff08Business Delegate Pattern\uff09\n\u7ec4\u5408\u5b9e\u4f53\u6a21\u5f0f\uff08Composite Entity Pattern\uff09\n\u6570\u636e\u8bbf\u95ee\u5bf9\u8c61\u6a21\u5f0f\uff08Data Access Object Pattern\uff09\n\u524d\u7aef\u63a7\u5236\u5668\u6a21\u5f0f\uff08Front Controller Pattern\uff09\n\u62e6\u622a\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Intercepting Filter Pattern\uff09\n\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f\uff08Service Locator Pattern\uff09\n\u4f20\u8f93\u5bf9\u8c61\u6a21\u5f0f\uff08Transfer Object Pattern\uff09\n\n\u5355\u4f8b\u6a21\u5f0f\n\u521b\u5efa\u578b\u6a21\u5f0f\n\u53c2\u8003\n\nhttps://www.runoob.com/design-pattern/singleton-pattern.html\n\n\n\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u662f Java \u4e2d\u6700\u7b80\u5355\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u4e00\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u6700\u4f73\u65b9\u5f0f\u3002\n\u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u8be5\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u5355\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\u3002\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002\n\n1\u3001\u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002\n2\u3001\u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b\u3002\n3\u3001\u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e00\u5b9e\u4f8b\u3002\n\n\u6b65\u9aa4\n\u6b65\u9aa4 1\uff1a\u521b\u5efa\u4e00\u4e2a Singleton \u7c7b\npublic class SingleObject {\n\n   //\u521b\u5efa SingleObject \u7684\u4e00\u4e2a\u5bf9\u8c61\n   private static SingleObject instance = new SingleObject();\n\n   //\u8ba9\u6784\u9020\u51fd\u6570\u4e3a private\uff0c\u8fd9\u6837\u8be5\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316\n   private SingleObject(){}\n\n   //\u83b7\u53d6\u552f\u4e00\u53ef\u7528\u7684\u5bf9\u8c61\n   public static SingleObject getInstance(){\n      return instance;\n   }\n\n   public void showMessage(){\n      System.out.println(&quot;Hello World!&quot;);\n   }\n}\n\n\u6b65\u9aa4 2\uff1a\u4ece singleton \u7c7b\u83b7\u53d6\u552f\u4e00\u7684\u5bf9\u8c61\npublic class SingletonPatternDemo {\n   public static void main(String[] args) {\n\n      //\u4e0d\u5408\u6cd5\u7684\u6784\u9020\u51fd\u6570\n      //\u7f16\u8bd1\u65f6\u9519\u8bef\uff1a\u6784\u9020\u51fd\u6570 SingleObject() \u662f\u4e0d\u53ef\u89c1\u7684\n      //SingleObject object = new SingleObject();\n\n      //\u83b7\u53d6\u552f\u4e00\u53ef\u7528\u7684\u5bf9\u8c61\n      SingleObject object = SingleObject.getInstance();\n\n      //\u663e\u793a\u6d88\u606f\n      object.showMessage();\n   }\n}\n\n\u5b9e\u73b0\u65b9\u5f0f\n1\u3001\u61d2\u6c49\u5f0f\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168\n\u662f\u5426 Lazy \u521d\u59cb\u5316\uff1a\u662f\n\u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168\uff1a\u5426\n\u5b9e\u73b0\u96be\u5ea6\uff1a\u6613\n\u63cf\u8ff0\uff1a\u8fd9\u79cd\u65b9\u5f0f\u662f\u6700\u57fa\u672c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u8fd9\u79cd\u5b9e\u73b0\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u56e0\u4e3a\u6ca1\u6709\u52a0\u9501 synchronized\uff0c\u6240\u4ee5\u4e25\u683c\u610f\u4e49\u4e0a\u5b83\u5e76\u4e0d\u7b97\u5355\u4f8b\u6a21\u5f0f\u3002\n\u8fd9\u79cd\u65b9\u5f0f lazy loading \u5f88\u660e\u663e\uff0c\u4e0d\u8981\u6c42\u7ebf\u7a0b\u5b89\u5168\uff0c\u5728\u591a\u7ebf\u7a0b\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\npublic class Singleton {  \n    private static Singleton instance;  \n    private Singleton (){}  \n\n    public static Singleton getInstance() {  \n    if (instance == null) {  \n        instance = new Singleton();  \n    }  \n    return instance;  \n    }  \n}\n\n2\u3001\u61d2\u6c49\u5f0f\uff0c\u7ebf\u7a0b\u5b89\u5168\n\u662f\u5426 Lazy \u521d\u59cb\u5316\uff1a\u662f\n\u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168\uff1a\u662f\n\u5b9e\u73b0\u96be\u5ea6\uff1a\u6613\n\u63cf\u8ff0\uff1a\u8fd9\u79cd\u65b9\u5f0f\u5177\u5907\u5f88\u597d\u7684 lazy loading\uff0c\u80fd\u591f\u5728\u591a\u7ebf\u7a0b\u4e2d\u5f88\u597d\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\uff0c\u6548\u7387\u5f88\u4f4e\uff0c99% \u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u540c\u6b65\u3002\n\u4f18\u70b9\uff1a\u7b2c\u4e00\u6b21\u8c03\u7528\u624d\u521d\u59cb\u5316\uff0c\u907f\u514d\u5185\u5b58\u6d6a\u8d39\u3002\n\u7f3a\u70b9\uff1a\u5fc5\u987b\u52a0\u9501 synchronized \u624d\u80fd\u4fdd\u8bc1\u5355\u4f8b\uff0c\u4f46\u52a0\u9501\u4f1a\u5f71\u54cd\u6548\u7387\u3002\ngetInstance() \u7684\u6027\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u5f88\u5173\u952e\uff08\u8be5\u65b9\u6cd5\u4f7f\u7528\u4e0d\u592a\u9891\u7e41\uff09\u3002\npublic class Singleton {  \n    private static Singleton instance;  \n    private Singleton (){}  \n    public static synchronized Singleton getInstance() {  \n    if (instance == null) {  \n        instance = new Singleton();  \n    }  \n    return instance;  \n    }  \n}\n\n3\u3001\u997f\u6c49\u5f0f\n\u662f\u5426 Lazy \u521d\u59cb\u5316\uff1a\u5426\n\u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168\uff1a\u662f\n\u5b9e\u73b0\u96be\u5ea6\uff1a\u6613\n\u63cf\u8ff0\uff1a\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u5e38\u7528\uff0c\u4f46\u5bb9\u6613\u4ea7\u751f\u5783\u573e\u5bf9\u8c61\u3002\n\u4f18\u70b9\uff1a\u6ca1\u6709\u52a0\u9501\uff0c\u6267\u884c\u6548\u7387\u4f1a\u63d0\u9ad8\u3002\n\u7f3a\u70b9\uff1a\u7c7b\u52a0\u8f7d\u65f6\u5c31\u521d\u59cb\u5316\uff0c\u6d6a\u8d39\u5185\u5b58\u3002\n\u5b83\u57fa\u4e8e classloader \u673a\u5236\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u540c\u6b65\u95ee\u9898\uff0c\u4e0d\u8fc7\uff0cinstance \u5728\u7c7b\u88c5\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u867d\u7136\u5bfc\u81f4\u7c7b\u88c5\u8f7d\u7684\u539f\u56e0\u6709\u5f88\u591a\u79cd\uff0c\u5728\u5355\u4f8b\u6a21\u5f0f\u4e2d\u5927\u591a\u6570\u90fd\u662f\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c \u4f46\u662f\u4e5f\u4e0d\u80fd\u786e\u5b9a\u6709\u5176\u4ed6\u7684\u65b9\u5f0f\uff08\u6216\u8005\u5176\u4ed6\u7684\u9759\u6001\u65b9\u6cd5\uff09\u5bfc\u81f4\u7c7b\u88c5\u8f7d\uff0c\u8fd9\u65f6\u5019\u521d\u59cb\u5316 instance \u663e\u7136\u6ca1\u6709\u8fbe\u5230 lazy loading \u7684\u6548\u679c\u3002\npublic class Singleton {\n    private static Singleton instance = new Singleton();  \n    private Singleton (){}  \n    public static Singleton getInstance() {  \n    return instance;  \n    }  \n}\n\n4\u3001\u53cc\u68c0\u9501/\u53cc\u91cd\u6821\u9a8c\u9501\uff08DCL\uff0c\u5373 double-checked locking\uff09\nJDK \u7248\u672c\uff1aJDK1.5 \u8d77\n\u662f\u5426 Lazy \u521d\u59cb\u5316\uff1a\u662f\n\u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168\uff1a\u662f\n\u5b9e\u73b0\u96be\u5ea6\uff1a\u8f83\u590d\u6742\n\u63cf\u8ff0\uff1a\u8fd9\u79cd\u65b9\u5f0f\u91c7\u7528\u53cc\u9501\u673a\u5236\uff0c\u5b89\u5168\u4e14\u5728\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u80fd\u4fdd\u6301\u9ad8\u6027\u80fd\u3002\ngetInstance() \u7684\u6027\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5f88\u5173\u952e\u3002\npublic class Singleton {  \n    private volatile static Singleton singleton;  \n    private Singleton (){}  \n    public static Singleton getSingleton() {  \n    if (singleton == null) {  \n        synchronized (Singleton.class) {  \n        if (singleton == null) {  \n            singleton = new Singleton();  \n        }  \n        }  \n    }  \n    return singleton;  \n    }  \n}\n\n\u53e6\u5916\uff0c\u9700\u8981\u6ce8\u610f uniqueInstance \u91c7\u2f64 volatile \u5173\u952e\u5b57\u4fee\u9970\u4e5f\u662f\u5f88\u6709\u5fc5\u8981\u3002 uniqueInstance \u91c7\u2f64 volatile \u5173\u952e\u5b57\u4fee\u9970\u4e5f\u662f\u5f88\u6709\u5fc5\u8981\u7684\uff0c uniqueInstance = new Singleton(); \u8fd9\u6bb5\u4ee3\u7801\u5176\u5b9e\u662f\u5206\u4e3a\u4e09\u6b65\u6267\u2f8f\uff1a\n\n\u4e3a uniqueInstance \u5206\u914d\u5185\u5b58\u7a7a\u95f4 \n\u521d\u59cb\u5316 uniqueInstance \n\u5c06 uniqueInstance \u6307\u5411\u5206\u914d\u7684\u5185\u5b58\u5730\u5740 \n\n\u4f46\u662f\u7531\u4e8e JVM \u5177\u6709\u6307\u4ee4\u91cd\u6392\u7684\u7279\u6027\uff0c\u6267\u2f8f\u987a\u5e8f\u6709\u53ef\u80fd\u53d8\u6210 1&gt;3&gt;2\u3002\u6307\u4ee4\u91cd\u6392\u5728\u5355\u7ebf\u7a0b\u73af\u5883\u4e0b\u4e0d\u4f1a\u51fa \u73b0\u95ee\u9898\uff0c\u4f46\u662f\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u4f1a\u5bfc\u81f4\u2f00\u4e2a\u7ebf\u7a0b\u83b7\u5f97\u8fd8\u6ca1\u6709\u521d\u59cb\u5316\u7684\u5b9e\u4f8b\u3002\u4f8b\u5982\uff0c\u7ebf\u7a0b T1 \u6267\u2f8f\u4e86 1 \u548c 3\uff0c\u6b64\u65f6 T2 \u8c03\u2f64 getUniqueInstance() \u540e\u53d1\u73b0 uniqueInstance \u4e0d\u4e3a\u7a7a\uff0c\u56e0\u6b64\u8fd4\u56de uniqueInstance\uff0c\u4f46\u6b64\u65f6 uniqueInstance \u8fd8\u672a\u88ab\u521d\u59cb\u5316\u3002 \u4f7f\u2f64 volatile \u53ef\u4ee5\u7981\u2f4c JVM \u7684\u6307\u4ee4\u91cd\u6392\uff0c\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u4e5f\u80fd\u6b63\u5e38\u8fd0\u2f8f\u3002\n\u5de5\u5382\u6a21\u5f0f\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "Java\u8bbe\u8ba1\u6a21\u5f0f", "slug": "Java\u8bbe\u8ba1\u6a21\u5f0f", "permalink": "/tag/Java\u8bbe\u8ba1\u6a21\u5f0f/"}]}, {"title": "Java-\u65b9\u6cd5\u6c47\u603b", "date": "2020-08-09T23:56:52-00.00", "path": "/archives/Java-\u65b9\u6cd5\u6c47\u603b/", "text": "1. Java\u96c6\u5408\n1.1 Collection\n1.1.1 \u6392\u5e8f\u64cd\u4f5c\nvoid reverse(List list)//\u53cd\u8f6c\nvoid shuffle(List list)//\u968f\u673a\u6392\u5e8f\nvoid sort(List list)//\u6309\u81ea\u7136\u6392\u5e8f\u7684\u5347\u5e8f\u6392\u5e8f\nvoid sort(List list, Comparator c)//\u5b9a\u5236\u6392\u5e8f\uff0c\u7531Comparator\u63a7\u5236\u6392\u5e8f\u903b\u8f91\nvoid swap(List list, int i , int j)//\u4ea4\u6362\u4e24\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20\nvoid rotate(List list, int distance)//\u65cb\u8f6c\u3002\u5f53distance\u4e3a\u6b63\u6570\u65f6\uff0c\u5c06list\u540edistance\u4e2a\u5143\u7d20\u6574\u4f53\u79fb\u5230\u524d\u9762\u3002\u5f53distance\u4e3a\u8d1f\u6570\u65f6\uff0c\u5c06 list\u7684\u524ddistance\u4e2a\u5143\u7d20\u6574\u4f53\u79fb\u5230\u540e\u9762\u3002\n\n\u793a\u4f8b\u4ee3\u7801\nArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;Integer&gt;();\n        arrayList.add(-1);\n        arrayList.add(3);\n        arrayList.add(3);\n        arrayList.add(-5);\n        arrayList.add(7);\n        arrayList.add(4);\n        arrayList.add(-9);\n        arrayList.add(-7);\n    System.out.println(&quot;\u539f\u59cb\u6570\u7ec4:&quot;);\n    System.out.println(arrayList);\n    // void reverse(List list)\uff1a\u53cd\u8f6c\n        Collections.reverse(arrayList);\n        System.out.println(&quot;Collections.reverse(arrayList):&quot;);\n        System.out.println(arrayList);\n\n\n        Collections.rotate(arrayList, 4);\n        System.out.println(&quot;Collections.rotate(arrayList, 4):&quot;);\n        System.out.println(arrayList);\n\n        // void sort(List list),\u6309\u81ea\u7136\u6392\u5e8f\u7684\u5347\u5e8f\u6392\u5e8f\n        Collections.sort(arrayList);\n        System.out.println(&quot;Collections.sort(arrayList):&quot;);\n        System.out.println(arrayList);\n\n        // void shuffle(List list),\u968f\u673a\u6392\u5e8f\n        Collections.shuffle(arrayList);\n        System.out.println(&quot;Collections.shuffle(arrayList):&quot;);\n        System.out.println(arrayList);\n\n        // void swap(List list, int i , int j),\u4ea4\u6362\u4e24\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u7684\u5143\u7d20\n        Collections.swap(arrayList, 2, 5);\n        System.out.println(&quot;Collections.swap(arrayList, 2, 5):&quot;);\n        System.out.println(arrayList);\n\n        // \u5b9a\u5236\u6392\u5e8f\u7684\u7528\u6cd5\n        Collections.sort(arrayList, new Comparator&lt;Integer&gt;() {\n\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                return o2.compareTo(o1);\n            }\n        });\n        System.out.println(&quot;\u5b9a\u5236\u6392\u5e8f\u540e\uff1a&quot;);\n        System.out.println(arrayList);\n\n1.1.2 \u67e5\u627e,\u66ff\u6362\u64cd\u4f5c\nint binarySearch(List list, Object key)//\u5bf9List\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u8fd4\u56de\u7d22\u5f15\uff0c\u6ce8\u610fList\u5fc5\u987b\u662f\u6709\u5e8f\u7684\nint max(Collection coll)//\u6839\u636e\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\uff0c\u8fd4\u56de\u6700\u5927\u7684\u5143\u7d20\u3002 \u7c7b\u6bd4int min(Collection coll)\nint min(Collection coll)//\u6700\u5c0f\u503c\nint max(Collection coll, Comparator c)//\u6839\u636e\u5b9a\u5236\u6392\u5e8f\uff0c\u8fd4\u56de\u6700\u5927\u5143\u7d20\uff0c\u6392\u5e8f\u89c4\u5219\u7531Comparatator\u7c7b\u63a7\u5236\u3002\u7c7b\u6bd4int min(Collection coll, Comparator c)\nvoid fill(List list, Object obj)//\u7528\u6307\u5b9a\u7684\u5143\u7d20\u4ee3\u66ff\u6307\u5b9alist\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\nint frequency(Collection c, Object o)//\u7edf\u8ba1\u5143\u7d20\u51fa\u73b0\u6b21\u6570\nint indexOfSubList(List list, List target)//\u7edf\u8ba1target\u5728list\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u627e\u4e0d\u5230\u5219\u8fd4\u56de-1\uff0c\u7c7b\u6bd4int lastIndexOfSubList(List source, list target).\nboolean replaceAll(List list, Object oldVal, Object newVal)//\u7528\u65b0\u5143\u7d20\u66ff\u6362\u65e7\u5143\u7d20\n\n\u793a\u4f8b\u4ee3\u7801\nArrayList&lt;Integer&gt; arrayList = new ArrayList&lt;Integer&gt;();\n        arrayList.add(-1);\n        arrayList.add(3);\n        arrayList.add(3);\n        arrayList.add(-5);\n        arrayList.add(7);\n        arrayList.add(4);\n        arrayList.add(-9);\n        arrayList.add(-7);\n        ArrayList&lt;Integer&gt; arrayList2 = new ArrayList&lt;Integer&gt;();\n        arrayList2.add(-3);\n        arrayList2.add(-5);\n        arrayList2.add(7);\n        System.out.println(&quot;\u539f\u59cb\u6570\u7ec4:&quot;);\n        System.out.println(arrayList);\n\n        System.out.println(&quot;Collections.max(arrayList):&quot;);\n        System.out.println(Collections.max(arrayList));\n\n        System.out.println(&quot;Collections.min(arrayList):&quot;);\n        System.out.println(Collections.min(arrayList));\n\n        System.out.println(&quot;Collections.replaceAll(arrayList, 3, -3):&quot;);\n        Collections.replaceAll(arrayList, 3, -3);\n        System.out.println(arrayList);\n\n        System.out.println(&quot;Collections.frequency(arrayList, -3):&quot;);\n        System.out.println(Collections.frequency(arrayList, -3));\n\n        System.out.println(&quot;Collections.indexOfSubList(arrayList, arrayList2):&quot;);\n        System.out.println(Collections.indexOfSubList(arrayList, arrayList2));\n\n        System.out.println(&quot;Collections.binarySearch(arrayList, 7):&quot;);\n        // \u5bf9List\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u8fd4\u56de\u7d22\u5f15\uff0cList\u5fc5\u987b\u662f\u6709\u5e8f\u7684\n        Collections.sort(arrayList);\n        System.out.println(Collections.binarySearch(arrayList, 7));\n\n1.1.3 \u5176\u5b83\u64cd\u4f5c\nList&lt;T&gt; nCopies(int i , T t)//\u6839\u636e\u6cdb\u578bt\u590d\u5236i\u6b21\uff0c\u6700\u540e\u7ec4\u6210\u4e00\u4e2aList&lt;T&gt;\u5e76\u8fd4\u56de\n\nArrayList\n\u5171\u6709\u65b9\u6cd5\n\nboolean add(E e)\n\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\n\n\nboolean addAll(Collection&lt;? extends E&gt; c)\n\u5c06\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6dfb\u52a0\u5230\u5176\u4ed6\u96c6\u5408\u4e2d\n\n\nclear()\n\u66b4\u529b\u6e05\u9664\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\n\n\nboolean contains(Object o)\n\u5224\u65ad\u96c6\u5408\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\uff0c\u5305\u542b\u8fd4\u56detrue\n\n\nboolean isEmpty()\n\u5982\u679c\u6b64\u96c6\u5408\u4e0d\u5305\u542b\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\n\n\nint size()\n\u8fd4\u56de\u96c6\u5408\u4e2a\u6570\n\n\nIterator iterator()\n\u8fed\u4ee3\u5668\uff0c\u8fd4\u56deIterator\u7c7b\u578b\n\n\n\n1.2 List\u7279\u6709\n1.2 Map\n1.2.1 \u589e\u5220\u67e5\u6539\u7c7b\nV put(K key , V value)\n\u5411map\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9\uff0c\u5e76\u8fd4\u56devalue\u503c\uff0c\u5982\u679ckey\u91cd\u590d\uff0c\u5219\u8fd4\u56de\u4e4b\u524d\u7684oldValue\u503c\n///*Integer*/map.put(&quot;1&quot;, 1);//\u5411map\u4e2d\u6dfb\u52a0\u503c(\u8fd4\u56de\u8fd9\u4e2akey\u4ee5\u524d\u7684\u503c,\u5982\u679c\u6ca1\u6709\u8fd4\u56denull)\n         HashMap&lt;String, Integer&gt; map=new HashMap&lt;&gt;();\n         System.out.println(map.put(&quot;1&quot;, 1));//null\n         System.out.println(map.put(&quot;1&quot;, 2));//1\n\nV putIfAbsent(K key , V Value)\nJDK1.8\n\u5982\u679c\u5f53\u524d Map \u4e0d\u5b58\u5728\u952e key \u6216\u8005\u8be5 key \u5173\u8054\u7684\u503c\u4e3a null\uff0c\u90a3\u4e48\u5c31\u6267\u884c put(key, value)\uff1b\u5426\u5219\uff0c\u4fbf\u4e0d\u6267\u884c put \u64cd\u4f5c\u5e76\u8fd4\u56denull\nHashMap&lt;String, Integer&gt; map=new HashMap&lt;&gt;();\n/*boolean*///\u5224\u65admap\u4e2d\u662f\u5426\u5b58\u5728\u8fd9\u4e2akey\nmap.put(&quot;DEMO1&quot;, 1);\nmap.put(&quot;DEMO2&quot;, 2);\nSystem.out.println(map);//{DEMO1=1, DEMO2=2}\nSystem.out.println(map.putIfAbsent(&quot;DEMO1&quot;, 12222));//1\nSystem.out.println(map.putIfAbsent(&quot;DEMO3&quot;, 12222));//null\nSystem.out.println(map);//{DEMO1=1, DEMO2=2,DEMO3=12222}\n\nMap&lt;K , V&gt; putAll(Map&lt;? extends K, ? extends V&gt; m)\nputAll\u53ef\u4ee5\u5408\u5e76\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u7684Map\uff0c\u88ab\u5408\u5e76\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u76f8\u7b49\u6216\u7ee7\u627f\u7684\u7c7b\u578b\uff0c\u53ea\u4e0d\u8fc7\u5982\u679c\u6709\u76f8\u540c\u7684key\u90a3\u4e48\u7528\u88ab\u5408\u5e76\u7684\u8986\u76d6\u524d\u9762\u7684\nHashMap map3=new HashMap();\nmap3.put(&quot;1&quot;, &quot;A&quot;);\n\nHashMap map4 = new HashMap();\nmap4.put(&quot;1&quot;, &quot;B&quot;);\nmap4.put(&quot;3&quot;, &quot;C&quot;);\n\nmap3.putAll(map4);\n\nSystem.out.println(map3);\n//{3=C, 1=B},key\u4e3a1value\u4e3a\u201cA\u201c\u88ab\u8986\u76d6\n\nV get(K key)\n\u5f97\u5230map\u4e2dkey\u76f8\u5bf9\u5e94\u7684value\u7684\u503c,\u4e3a\u7a7a\u8fd4\u56denull\nMap&lt;K , V&gt; clone()\n\u514b\u9686map\nvoid clear()\n\u6e05\u7a7amap\nint Size()\n\u8fd4\u56de\u5927\u5c0f\nV replace(K key , V newValue)\nJDK1.8\u65b0\u65b9\u6cd5\n\u5728\u6307\u5b9a\u7684\u952e\u5df2\u7ecf\u5b58\u5728\u5e76\u4e14\u6709\u4e0e\u4e4b\u76f8\u5173\u7684\u6620\u5c04\u503c\u65f6\u624d\u4f1a\u5c06\u6307\u5b9a\u7684\u952e\u6620\u5c04\u5230\u6307\u5b9a\u7684\u503c\uff08\u65b0\u503c\uff09, \u5e76\u8fd4\u56de\u65e7\u7684oldValue\u503c\n\u5728\u6307\u5b9a\u7684\u952e\u4e0d\u5b58\u5728\u65f6\uff0c\u65b9\u6cd5\u4f1areturn\u56de\u6765\u4e00\u4e2anull\nboolean replace(K key , V oldValue , V newValue)\nJDK1.8\u65b0\u65b9\u6cd5\n\u5f53Map.Entry&lt;key , oldValue&gt;\u5b58\u5728\u65f6\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728key-oldValue\u8fd9\u4e2a\u952e\u503c\u5bf9\u65f6\u624d\u8fdb\u884c\u66ff\u6362\u64cd\u4f5c\n\u6210\u529f\u8fd4\u56detrue\uff0c\u5426\u5219false\nHashMap&lt;String, String&gt; map3=new HashMap();\nmap3.put(&quot;1&quot;, &quot;a&quot;);\nSystem.out.println(map3.replace(&quot;1&quot; , &quot;a&quot; , &quot;b&quot;));//true\nSystem.out.println(map3.replace(&quot;2&quot; , &quot;a&quot; , &quot;b&quot;));//false,key\u4e0d\u540c\uff0cvalue\u76f8\u540c\nSystem.out.println(map3.replace(&quot;1&quot; , &quot;s&quot; , &quot;b&quot;));//false,key\u76f8\u540c\uff0cvalue\u4e0d\u540c\n\nboolean remove(K key)\n\u6839\u636ekey\u5220\u9664\u6b64\u952e\u503c\u5bf9\u4e0b\u7684\u952e\u503c\u5bf9\nboolean remove(K key , V value)\n\u5220\u9664key\u548cvalue\u90fd\u7b26\u5408\u7684\u952e\u503c\u5bf9\nboolean isEmpty()\n\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\nboolean containsKey(K key)\n\u67e5\u770b\u662f\u5426\u5305\u542b\u6b64key\nboolean containsValue(V value)\n\u67e5\u770b\u662f\u5426\u5305\u542b\u6b64value\n1.2.2 \u904d\u5386\u7c7b\nCollection values()\n\u83b7\u53d6map\u4e2d\u6240\u6709\u7684key\u5e76\u8fd4\u56de\u4e3aCollection&lt;V&gt;\u7c7b\u578b\nSet keySet()\n\u83b7\u53d6map\u4e2d\u6240\u6709\u7684key\u5e76\u8fd4\u56deSet&lt;V&gt;\u7c7b\u578b\uff0c\u56e0\u4e3aSet\u7684\u5143\u7d20\u662f\u72ec\u4e00\u65e0\u4e8c\u4e4b\u7684\uff0c\u4e4b\u540e\u53ef\u4ee5\u7528\u8fed\u4ee3\u5668iterator()\u904d\u5386\nIterator ot = map.keySet().iterator();\nwhile (ot.hasNext()){\n  System.out.println(ot.next());\n}\n\nSet&lt;Map.Entry&lt;K,V&gt;&gt; entrySet()\n\u8fd4\u56de\u6240\u6709\u7ed3\u70b9\uff0c\u7c7b\u578b\u4e3aSet&lt;Map.Entry&lt;K,V&gt;&gt;\u3002\u4e5f\u53ef\u4ee5\u8f6c\u6362\u4e3a\u8fed\u4ee3\u5668iterator()\u904d\u5386\nSet&lt;Map.Entry&lt;String,String&gt;&gt; es = map.entrySet();\nIterator&lt;Map.Entry&lt;String,String&gt;&gt; it = es.iterator();\n while(it.hasNext()){\n    Map.Entry&lt;String, String&gt; mey = it.next();\n\n    //getKey()\u548cgetValue\u662f\u63a5\u53e3Map.Entry&lt;K,V&gt;\u4e2d\u7684\u65b9\u6cd5\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u952e\u548c\u5bf9\u5e94\u7684\u503c\n    String key = mey.getKey();\n    String value = mey.getValue();\n    System.out.println(key+&quot;:&quot;+value);\n\n}\n\n2. String\u5b57\u7b26\u4e32\n\u53c2\u8003\n\nhttps://www.cnblogs.com/windbyside/p/9393716.html\n\n\nchar charAt(int index)\n\u8fd4\u56de\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u5b57\u7b26\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.charAt(0));\n//return &quot;S&quot;;\n\nString substring(int beginIndex)\n\u8fd4\u56de\u6307\u5b9a\u8d77\u59cb\u4f4d\u7f6e\u81f3\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u5b57\u7b26\u4e32\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.substring(1));\n//return &quot;tring&quot;;\n\nString substring(int beginIndex, int endIndex)\n\u8fd4\u56de\u6307\u5b9a\u8d77\u59cb\u4f4d\u7f6e\uff08\u542b\uff09\u5230\u7ed3\u675f\u4f4d\u7f6e\uff08\u4e0d\u542b\uff09\u4e4b\u95f4\u7684\u5b57\u7b26\u4e32\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.substring(1, 3));\n//return &quot;tr&quot;;\n\nint indexOf(String str)\n\u8fd4\u56de\u6307\u5b9a\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c \u6ca1\u6709\u5219\u8fd4\u56de-1\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.indexOf(&quot;i&quot;));\n//return &quot;3&quot;;\n\nSystem.out.println(str.indexOf(&quot;ing&quot;));\n//return &quot;3&quot;;\n\nint indexOf(String str, int fromIndex)\n\u8fd4\u56de\u4ece\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6efromIndex\u5f00\u59cb\u7684str\u7684\u7d22\u5f15\u4f4d\u7f6e,\u5982\u679c\u6ca1\u6709\u8fd4\u56de-1\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.indexOf(&quot;ing&quot;, 2));\n//return &quot;3&quot;;\n\nint lastIndexOf(String str)\n\u8fd4\u56de\u5b50\u5b57\u7b26\u4e32\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u6ca1\u6709\u627e\u5230\uff0c\u5219\u8fd4\u56de -1\u3002\nString str = new String(&quot;StringString&quot;);\nSystem.out.println(str.indexOf(&quot;String&quot;));\n//return &quot;6&quot;;\n\nString replace(CharSequence oldString, CharSequence newString):\n\u7528newString\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684oldString\uff0c\u6ce8\u610f\u76f8\u5f53\u4e8enew\u4e86\u4e2a\u65b0\u7684String\uff0c\u539fString\u4e0d\u53d8\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.replace(&quot;g&quot;, &quot;gs&quot;));\n//return &quot;Strings&quot;;\n\nString trim()\n\u8fd4\u56de\u4e00\u4e2a\u53bb\u9664\u4e24\u5934\u7a7a\u683c\u7684\u65b0\u5b57\u7b26\u4e32\nString str1 = new String();\n\u3000\u3000str1 =  &quot; &quot;+&quot;string&quot;+&quot; &quot;;\n\u3000\u3000System.out.println(str1.length());\n\u3000\u3000//return &quot;8&quot;\n\u3000\u3000str1 = str1.trim();\n\u3000\u3000System.out.println(str.length());\n\u3000\u3000//return &quot;6&quot;\n\nString[ ] split(String regex)\n\u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u9694\u7b26\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\nString str2 = new String();\n\u3000\u3000str2 = &quot;A/B/C&quot;;\n\u3000\u3000String s[] = str2.split(&quot;/&quot;);\n\u3000\u3000System.out.println(&quot;s[0] = &quot;+s[0]);\n\u3000\u3000//return&quot;A&quot;\n\u3000\u3000for(String ss: s) {\n\u3000\u3000System.out.print(ss+&quot; &quot;);\n\u3000\u3000}\n\u3000\u3000//return&quot;A B C&quot;\n\nString[ ] split(String regex, int limit)\n\u6307\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u9694\u7b26regex\u548c\u5206\u9694\u4efd\u6570limit\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\nString str2 = new String();\n\u3000\u3000str2 = &quot;A/B/C&quot;;\n\u3000\u3000String s[] = str2.split(&quot;/&quot;, 2);\n\u3000\u3000for(String ss: s) {\n\u3000\u3000System.out.print(ss+&quot; &quot;);\n\u3000\u3000}\n\u3000\u3000//return&quot;A B/C&quot;\n\nString.copyValueOf(char[] charArray)\n\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\nchar[] arr=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;];\nString string =String.copyValueOf(arr);\nSystem.out.println(string);          //abc\n\nString toLowerCase()\n\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u6bcd\nString toUpperCase()\n\u8f6c\u6362\u4e3a\u5927\u5199\u5b57\u6bcd\nString intern()\n\n\u5982\u679c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u5df2\u7ecf\u5305\u542b\u4e00\u4e2a\u7b49\u4e8e\u6b64String\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\uff08\u7528equals(oject)\u65b9\u6cd5\u786e\u5b9a\uff09\uff0c\u5219\u8fd4\u56de\u6c60\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u5f15\u7528\u503c\u3002\n\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5c06\u6b64String\u5bf9\u8c61\u6dfb\u52a0\u5230\u6c60\u4e2d\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u6b64String\u5bf9\u8c61\u7684\u5f15\u7528\n\nJDK 1.7\u540e\uff0cintern\u65b9\u6cd5\u8fd8\u662f\u4f1a\u5148\u53bb\u67e5\u8be2\u5e38\u91cf\u6c60\u4e2d\u662f\u5426\u6709\u5df2\u7ecf\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u5e38\u91cf\u6c60\u4e2d\u7684\u5f15\u7528\uff0c\u8fd9\u4e00\u70b9\u4e0e\u4e4b\u524d\u6ca1\u6709\u533a\u522b\uff0c\u533a\u522b\u5728\u4e8e\uff0c\u5982\u679c\u5728\u5e38\u91cf\u6c60\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u4e0d\u4f1a\u518d\u5c06\u5b57\u7b26\u4e32\u62f7\u8d1d\u5230\u5e38\u91cf\u6c60\uff0c\u800c\u53ea\u662f\u5728\u5e38\u91cf\u6c60\u4e2d\u751f\u6210\u4e00\u4e2a\u5bf9\u539f\u5b57\u7b26\u4e32\u7684\u5f15\u7528\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5f80\u5e38\u91cf\u6c60\u653e\u7684\u4e1c\u897f\u53d8\u4e86\uff1a\u539f\u6765\u5728\u5e38\u91cf\u6c60\u4e2d\u627e\u4e0d\u5230\u65f6\uff0c\u590d\u5236\u4e00\u4e2a\u526f\u672c\u653e\u5230\u5e38\u91cf\u6c60\uff0c1.7\u540e\u5219\u662f\u5c06\u5728\u5806\u4e0a\u7684\u5730\u5740\u5f15\u7528\u590d\u5236\u5230\u5e38\u91cf\u6c60\u3002\nboolean contains(String s)\n\u8be5\u65b9\u6cd5\u662f\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u6709\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6709\u5219\u8fd4\u56detrue\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56defalse\u3002\nboolean startsWith(String prefix)\n\u5982\u679c\u5b57\u7b26\u4e32\u4ee5prefix\u5f00\u5934\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\nboolean endsWith(String suffix)\n\u5982\u679c\u5b57\u7b26\u4e32\u4ee5suffix\u7ed3\u5c3e\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\nboolean equals(Object other)\n\u5982\u679c\u5b57\u7b26\u4e32\u4e0eother\u76f8\u7b49\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\nboolean equalsIgnoreCase(String other)\n\u5982\u679c\u5b57\u7b26\u4e32\u4e0eother\u76f8\u7b49\uff08\u5ffd\u7565\u5927\u5c0f\u5199\uff09\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\nStringBuffer | StringBuilder\n\u901a\u7528\u4e8eStringBuilder,\u666e\u901a\u6a21\u5f0f\u4e0b\u5efa\u8bae\u7528StringBuilder\u975e\u7ebf\u7a0b\u5b89\u5168\u3002\nStringBuilder append(String s)\n\u5c06\u5176\u4ed6\u7c7b\u578b\u62fc\u63a5\u64cd\u4f5c\u3002\u53ef\u7528\u4e8e\u5b57\u7b26\u4e32\u6570\u7ec4\u8f6c\n.jpg)\nString toString()\n\u8f6c\u6362\u4e3aString\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u8fdb\u884c\u8f6c\u6362\nStringBuilder stringBuilder = new StringBuilder(&quot;String&quot;);\nstringBuilder.toString()\n\nStringBuilder reverse()\n\u53cd\u8f6c\u5b57\u7b26\u4e32\nStringBuilder stringBuilder = new StringBuilder(&quot;String&quot;);\nstringBuilder.reverse()\nSystem.out.println(stringBuilder);//&quot;gnirtS&quot;\n\n\u5b57\u7b26\u4e32 | \u6570\u7ec4 | \u5176\u5b83\u7c7b\u578b \u4e92\u8f6c\nchar[] toCharArray()\n\u5b57\u7b26\u4e32 -&gt; \u5b57\u7b26\u6570\u7ec4\nString str = new String(&quot;String&quot;);\nSystem.out.println(str.toCharArray());\n\nString String.copyValueOf(char[] charArray)\n\u5b57\u7b26\u6570\u7ec4 -&gt; \u5b57\u7b26\u4e32\nchar[] arr=[&#39;a&#39;,&#39;b&#39;,&#39;c&#39;];\nString string =String.copyValueOf(arr);\nSystem.out.println(string);          //abc\n\nString String.valueOf(char[] charArray);\n\u5c06\u5176\u5b83\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\n\nString[] split(String s)\n\u5b57\u7b26\u4e32\u8f6c\u5b57\u7b26\u4e32\u6570\u7ec4\u3002split() \u65b9\u6cd5\u6839\u636e\u5339\u914d\u7ed9\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u62c6\u5206\u5b57\u7b26\u4e32\u3002 . \u3001 | \u548c * \u7b49\u8f6c\u4e49\u5b57\u7b26\uff0c\u5fc5\u987b\u5f97\u52a0 \\ \\\u3002\u591a\u4e2a\u5206\u9694\u7b26\uff0c\u53ef\u4ee5\u7528 | \u4f5c\u4e3a\u8fde\u5b57\u7b26\u3002\n// \u5b57\u7b26\u4e32\u8f6c\u6570\u7ec4  java.lang.String\nString str = &quot;0,1,2,3,4,5&quot;;\nString[] arr = str.split(&quot;,&quot;); // \u7528,\u5206\u5272\nSystem.out.println(Arrays.toString(arr)); // [0, 1, 2, 3, 4, 5]\n\n\u5b57\u7b26\u4e32\u6570\u7ec4\u8f6c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528StringBuffer\u7684\u62fc\u63a5\u64cd\u4f5cappend(String s)\u8fdb\u884c\u904d\u5386\u62fc\u63a5\n\nString | StringBuffer/StringBuilder \u4e92\u8f6c\nString \u8f6c StringBuffer/StringBuilder\nString s = &quot;abc&quot;;\n\n//\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\nStringBuffer sb = new StringBuffer(s);\n\n//\u901a\u8fc7append()\u65b9\u6cd5\nStringBuffer sb = new StringBuffer();\nsb.append(s);\n\nStringBuffer/StringBuilder \u8f6c String\nStringBuffer sb = new StringBuffer(&quot;abc&quot;);\n\n//\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\nString s = new String(sb);\n\n//\u901a\u8fc7toString()\u65b9\u6cd5\nString s = sb.toString();\n\n3. \u5c01\u88c5\u7c7b\u578b\n\u9759\u6001\u6210\u5458\u53d8\u91cf\npublic class Demo1 {\n    public static void main(String[] args) {\n        int max = Integer.MAX_VALUE;\n        int min = Integer.MIN_VALUE;\n        System.out.println(&quot;int\u6700\u5927\u503c\u662f\uff1a&quot;+max);\n        System.out.println(&quot;int\u6700\u5c0f\u503c\u662f\uff1a&quot;+min);\n\n        //\u6839\u636e\u4e0a\u9762\u7684\u4f30\u8ba1\u4f60\u5c31\u4f1a\u505a\u51fa\u4e3e\u4e00\u53cd\u4e09\u7684\u52a8\u4f5c\uff0c\u5982\u4e0b\uff1a\n        System.out.println(&quot;Long\u6700\u5927\u503c\u662f\uff1a&quot;+Long.MAX_VALUE);\n        System.out.println(&quot;Long\u6700\u5c0f\u503c\u662f\uff1a&quot;+Long.MIN_VALUE);\n        System.out.println(&quot;Double\u6700\u5927\u503c\u662f\uff1a&quot;+Double.MAX_VALUE);\n        System.out.println(&quot;Double\u6700\u5c0f\u503c\u662f\uff1a&quot;+Double.MIN_VALUE);\n    }\n}\n\n\n\n/*\n\u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\nint\u6700\u5927\u503c\u662f\uff1a2147483647\nint\u6700\u5c0f\u503c\u662f\uff1a-2147483648\nLong\u6700\u5927\u503c\u662f\uff1a9223372036854775807\nLong\u6700\u5c0f\u503c\u662f\uff1a-9223372036854775808\nDouble\u6700\u5927\u503c\u662f\uff1a1.7976931348623157E308\nDouble\u6700\u5c0f\u503c\u662f\uff1a4.9E-324\n*/\n\n3.1 Integer\n\u9759\u6001\u6210\u5458\u53d8\u91cf\nint max = Integer.MAX_VALUE;\nint min = Integer.MIN_VALUE;\nSystem.out.println(&quot;int\u6700\u5927\u503c\u662f\uff1a&quot;+max);\nSystem.out.println(&quot;int\u6700\u5c0f\u503c\u662f\uff1a&quot;+min);\n/*\n\u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\nint\u6700\u5927\u503c\u662f\uff1a2147483647\nint\u6700\u5c0f\u503c\u662f\uff1a-2147483648\n*/\n\n\u6784\u9020\u65b9\u6cd5\nInteger(int i)\nInteger(String str)\n\u5e38\u7528\u7684\u6784\u9020\u65b9\u6cd5Integer(String s)\u662f\u5c06\u6570\u5b57\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f20\u9012\u5230Integer\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u521b\u5efaInteger\u5bf9\u8c61\uff0c\u5305\u88c5\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5c06\u6784\u9020\u65b9\u6cd5\u4e2d\u7684\u5b57\u7b26\u4e32\u8f6c\u6210\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u8c03\u7528\u975e\u9759\u6001\u65b9\u6cd5\u3002\nint intValue()\n\u5c06Integer\u8f6c\u6362\u4e3aint\u7c7b\u578b\nString Integer.toString(int , int radix)\nInteger\u7c7b\u4e2d\u7684\u9759\u6001\u65b9\u6cd5toString()\u8f6c\u6362\u6210\u5b57\u7b26\u4e32,\u5c06int\u6574\u6570\u8f6c\u6210\u6307\u5b9a\u7684\u8fdb\u5236\u6570radix\nint src = 32;\n//\u5c06int\u6574\u6570\u8f6c\u6362\u6210\u6307\u5b9a\u7684\u8fdb\u5236\u6570\nString dest = Integer.toString(src,2);\nSystem.out.println(dest);//100000\n\nint Integer.parseInt(String s)\n\u7528\u4e8e\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u57fa\u672c\u6570\u636e\u7c7b\u578b(int)\uff0c\u8981\u6c42\u5b57\u7b26\u4e32\u5fc5\u987b\u662f\u6570\u5b57\u683c\u5f0f.\nString year = &quot;2018&quot;;\nint i = Integer.parseInt(year);\nSystem.out.println(i/2);//1009\n\nint Integer.parseInt(String s,int radix)\n\u5c06\u5b57\u7b26\u4e32s\u6309\u7167radix\u8fdb\u884c\u8f6c\u6362\u76f8\u5e94\u7684\u8fdb\u5236\u6570\uff0c\u7136\u540e\u8fd0\u884c\u7684\u7ed3\u679c\u90fd\u662f\u4ee5\u5341\u8fdb\u5236\u7684\u5f62\u5f0f\u6253\u5370\u3002\nString year = &quot;1110&quot;;\nString age = &quot;A&quot;;\n//\u6307\u5b9ayear\u7684\u8fdb\u5236\u4e3a2\u8fdb\u5236\nint i = Integer.parseInt(year,2);\n//\u6307\u5b9aage\u7684\u8fdb\u5236\u4e3a16\u8fdb\u5236\nint i2 = Integer.parseInt(age,16);\nSystem.out.println(i);//14\nSystem.out.println(i2);//10\n\n\u5bf9\u4e8e\u8be5\n \n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}]}, {"title": "\u8ba1\u7b97\u673a\u5176\u5b83\u9762\u8bd5\u9898", "date": "2020-08-08T23:29:00-00.00", "path": "/archives/\u8ba1\u7b97\u673a\u5176\u5b83\u9762\u8bd5\u9898/", "text": "\u64cd\u4f5c\u7cfb\u7edf\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4ee5\u53ca\u5b83\u4eec\u7684\u533a\u522b\n\n\u8fdb\u7a0b\u662f\u5bf9\u8fd0\u884c\u65f6\u7a0b\u5e8f\u7684\u5c01\u88c5\uff0c\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u8c03\u5ea6\u548c\u5206\u914d\u7684\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5b9e\u73b0\u4e86\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e76\u53d1\uff1b\n\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u5b50\u4efb\u52a1\uff0c\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u7528\u4e8e\u4fdd\u8bc1\u7a0b\u5e8f\u7684 \u5b9e\u65f6\u6027\uff0c\u5b9e\u73b0\u8fdb\u7a0b\u5185\u90e8\u7684\u5e76\u53d1\uff1b\n\u4e00\u4e2a\u7a0b\u5e8f\u81f3\u5c11\u6709\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u4f9d\u8d56\u4e8e\u8fdb\u7a0b\u800c\u5b58\u5728\uff1b\n\u8fdb\u7a0b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u62e5\u6709\u72ec\u7acb\u7684\u5185\u5b58\u5355\u5143\uff0c\u800c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u5185\u5b58\u3002\n\n\u7ebf\u7a0b\u662f\u8fdb\u7a0b\u5212\u5206\u6210\u7684\u66f4\u2f29\u7684\u8fd0\u2f8f\u5355\u4f4d,\u2f00\u4e2a\u8fdb\u7a0b\u5728\u5176\u6267\u2f8f\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u4ea7\u2f63\u591a\u4e2a\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u548c\u8fdb \u7a0b\u6700\u2f24\u7684\u4e0d\u540c\u5728\u4e8e\u57fa\u672c\u4e0a\u5404\u8fdb\u7a0b\u662f\u72ec\u2f74\u7684\uff0c\u2f7d\u5404\u7ebf\u7a0b\u5219\u4e0d\u2f00\u5b9a\uff0c\u56e0\u4e3a\u540c\u2f00\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u6781\u6709\u53ef\u80fd\u4f1a\u76f8\u4e92 \u5f71\u54cd\u3002\u7ebf\u7a0b\u6267\u2f8f\u5f00\u9500\u2f29\uff0c\u4f46\u4e0d\u5229\u4e8e\u8d44\u6e90\u7684\u7ba1\u7406\u548c\u4fdd\u62a4\uff1b\u2f7d\u8fdb\u7a0b\u6b63\u76f8\u53cd\n\u8fdb\u7a0b\n\u8fdb\u7a0b\u7684\u72b6\u6001\n\n\u521b\u5efa\u72b6\u6001(new) \uff1a\u8fdb\u7a0b\u6b63\u5728\u88ab\u521b\u5efa\uff0c\u5c1a\u672a\u5230\u5c31\u7eea\u72b6\u6001\u3002 \n\u5c31\u7eea\u72b6\u6001(ready) \uff1a\u8fdb\u7a0b\u5df2\u5904\u4e8e\u51c6\u5907\u8fd0\u2f8f\u72b6\u6001\uff0c\u5373\u8fdb\u7a0b\u83b7\u5f97\u4e86\u9664\u4e86\u5904\u7406\u5668\u4e4b\u5916\u7684\u2f00\u5207\u6240\u9700\u8d44\u6e90\uff0c \u2f00\u65e6\u5f97\u5230\u5904\u7406\u5668\u8d44\u6e90(\u5904\u7406\u5668\u5206\u914d\u7684\u65f6\u95f4\u2f5a)\u5373\u53ef\u8fd0\u2f8f\u3002 \n\u8fd0\u2f8f\u72b6\u6001(running) \uff1a\u8fdb\u7a0b\u6b63\u5728\u5904\u7406\u5668\u4e0a\u4e0a\u8fd0\u2f8f(\u5355\u6838 CPU \u4e0b\u4efb\u610f\u65f6\u523b\u53ea\u6709\u2f00\u4e2a\u8fdb\u7a0b\u5904\u4e8e\u8fd0\u2f8f\u72b6 \u6001)\u3002 \n\u963b\u585e\u72b6\u6001(waiting) \uff1a\u2f1c\u79f0\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u67d0\u2f00\u4e8b\u4ef6\u2f7d\u6682\u505c\u8fd0\u2f8f\u5982\u7b49\u5f85\u67d0\u8d44\u6e90\u4e3a\u53ef\u2f64 \u6216\u7b49\u5f85 IO \u64cd\u4f5c\u5b8c\u6210\u3002\u5373\u4f7f\u5904\u7406\u5668\u7a7a\u95f2\uff0c\u8be5\u8fdb\u7a0b\u4e5f\u4e0d\u80fd\u8fd0\u2f8f\u3002 \n\u7ed3\u675f\u72b6\u6001(terminated) \uff1a\u8fdb\u7a0b\u6b63\u5728\u4ece\u7cfb\u7edf\u4e2d\u6d88\u5931\u3002\u53ef\u80fd\u662f\u8fdb\u7a0b\u6b63\u5e38\u7ed3\u675f\u6216\u5176\u4ed6\u539f\u56e0\u4e2d\u65ad\u9000\u51fa\u8fd0 \u2f8f\u3002\n\n\u8fdb\u7a0b\u7684\u4e03\u79cd\u901a\u4fe1\u65b9\u5f0f\n\u53c2\u8003\n\nhttps://www.jianshu.com/p/c1015f5ffa74\n\n\n\n\u7ba1\u9053/\u533f\u540d\u7ba1\u9053(Pipes) \uff1a\u2f64\u4e8e\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u2f57\u2f26\u8fdb\u7a0b\u95f4\u6216\u8005\u5144\u5f1f\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \n\u6709\u540d\u7ba1\u9053(Names Pipes) : \u533f\u540d\u7ba1\u9053\u7531\u4e8e\u6ca1\u6709\u540d\u5b57\uff0c\u53ea\u80fd\u2f64\u4e8e\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u4e3a\u4e86\u514b\u670d \u8fd9\u4e2a\u7f3a\u70b9\uff0c\u63d0\u51fa\u4e86\u6709\u540d\u7ba1\u9053\u3002\u6709\u540d\u7ba1\u9053\u4e25\u683c\u9075\u5faa\u5148\u8fdb\u5148\u51fa(first in first out)\u3002\u6709\u540d\u7ba1\u9053\u4ee5\u78c1 \u76d8\u2f42\u4ef6\u7684\u2f45\u5f0f\u5b58\u5728\uff0c\u53ef\u4ee5\u5b9e\u73b0\u672c\u673a\u4efb\u610f\u4e24\u4e2a\u8fdb\u7a0b\u901a\u4fe1\u3002 \n\u4fe1\u53f7(Signal) \uff1a\u4fe1\u53f7\u662f\u2f00\u79cd\u2f50\u8f83\u590d\u6742\u7684\u901a\u4fe1\u2f45\u5f0f\uff0c\u2f64\u4e8e\u901a\u77e5\u63a5\u6536\u8fdb\u7a0b\u67d0\u4e2a\u4e8b\u4ef6\u5df2\u7ecf\u53d1\u2f63\uff1b \n\u6d88\u606f\u961f\u5217(Message Queuing) \uff1a\u6d88\u606f\u961f\u5217\u662f\u6d88\u606f\u7684\u94fe\u8868,\u5177\u6709\u7279\u5b9a\u7684\u683c\u5f0f,\u5b58\u653e\u5728\u5185\u5b58\u4e2d\u5e76\u7531\u6d88\u606f \u961f\u5217\u6807\u8bc6\u7b26\u6807\u8bc6\u3002\u7ba1\u9053\u548c\u6d88\u606f\u961f\u5217\u7684\u901a\u4fe1\u6570\u636e\u90fd\u662f\u5148\u8fdb\u5148\u51fa\u7684\u539f\u5219\u3002\u4e0e\u7ba1\u9053\uff08\u2f46\u540d\u7ba1\u9053\uff1a\u53ea\u5b58\u5728 \u4e8e\u5185\u5b58\u4e2d\u7684\u2f42\u4ef6\uff1b\u547d\u540d\u7ba1\u9053\uff1a\u5b58\u5728\u4e8e\u5b9e\u9645\u7684\u78c1\u76d8\u4ecb\u8d28\u6216\u8005\u2f42\u4ef6\u7cfb\u7edf\uff09\u4e0d\u540c\u7684\u662f\u6d88\u606f\u961f\u5217\u5b58\u653e\u5728\u5185 \u6838\u4e2d\uff0c\u53ea\u6709\u5728\u5185\u6838\u91cd\u542f(\u5373\uff0c\u64cd\u4f5c\u7cfb\u7edf\u91cd\u542f)\u6216\u8005\u663e\u793a\u5730\u5220\u9664\u2f00\u4e2a\u6d88\u606f\u961f\u5217\u65f6\uff0c\u8be5\u6d88\u606f\u961f\u5217\u624d\u4f1a\u88ab \u771f\u6b63\u7684\u5220\u9664\u3002\u6d88\u606f\u961f\u5217\u53ef\u4ee5\u5b9e\u73b0\u6d88\u606f\u7684\u968f\u673a\u67e5\u8be2,\u6d88\u606f\u4e0d\u2f00\u5b9a\u8981\u4ee5\u5148\u8fdb\u5148\u51fa\u7684\u6b21\u5e8f\u8bfb\u53d6,\u4e5f\u53ef\u4ee5\u6309 \u6d88\u606f\u7684\u7c7b\u578b\u8bfb\u53d6.\u2f50 FIFO \u66f4\u6709\u4f18\u52bf\u3002\u6d88\u606f\u961f\u5217\u514b\u670d\u4e86\u4fe1\u53f7\u627f\u8f7d\u4fe1\u606f\u91cf\u5c11\uff0c\u7ba1\u9053\u53ea\u80fd\u627f\u8f7d\u2f46\u683c\u5f0f \u5b57 \u8282\u6d41\u4ee5\u53ca\u7f13\u51b2\u533a\u2f24\u2f29\u53d7\u9650\u7b49\u7f3a\u3002 \n\u4fe1\u53f7\u91cf(Semaphores) \uff1a\u4fe1\u53f7\u91cf\u662f\u2f00\u4e2a\u8ba1\u6570\u5668\uff0c\u2f64\u4e8e\u591a\u8fdb\u7a0b\u5bf9\u5171\u4eab\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u4fe1\u53f7\u91cf\u7684\u610f\u56fe\u5728 \u4e8e\u8fdb\u7a0b\u95f4\u540c\u6b65\u3002\u8fd9\u79cd\u901a\u4fe1\u2f45\u5f0f\u4e3b\u8981\u2f64\u4e8e\u89e3\u51b3\u4e0e\u540c\u6b65\u76f8\u5173\u7684\u95ee\u9898\u5e76\u907f\u514d\u7ade\u4e89\u6761\u4ef6\u3002\n\u5171\u4eab\u5185\u5b58(Shared memory) \uff1a\u4f7f\u5f97\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u540c\u2f00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u540c\u8fdb\u7a0b\u53ef\u4ee5\u53ca\u65f6\u770b\u5230\u5bf9 \u2f45\u8fdb\u7a0b\u4e2d\u5bf9\u5171\u4eab\u5185\u5b58\u4e2d\u6570\u636e\u7684\u66f4\u65b0\u3002\u8fd9\u79cd\u2f45\u5f0f\u9700\u8981\u4f9d\u9760\u67d0\u79cd\u540c\u6b65\u64cd\u4f5c\uff0c\u5982\u4e92\u65a5\u9501\u548c\u4fe1\u53f7\u91cf\u7b49\u3002\u53ef \u4ee5\u8bf4\u8fd9\u662f\u6700\u6709\u2f64\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u2f45\u5f0f\u3002\n\u5957\u63a5\u5b57(Sockets) : \u6b64\u2f45\u6cd5\u4e3b\u8981\u2f64\u4e8e\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u901a\u8fc7\u2f79\u7edc\u8fdb\u2f8f\u901a\u4fe1\u3002\u5957\u63a5\u5b57\u662f\u2f40\u6301 TCP/IP \u7684\u2f79\u7edc\u901a\u4fe1\u7684\u57fa\u672c\u64cd\u4f5c\u5355\u5143\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u4e0d\u540c\u4e3b\u673a\u4e4b\u95f4\u7684\u8fdb\u7a0b\u8fdb\u2f8f\u53cc\u5411\u901a\u4fe1\u7684\u7aef\u70b9\uff0c\u7b80 \u5355\u7684\u8bf4\u5c31\u662f\u901a\u4fe1\u7684\u4e24\u2f45\u7684\u2f00\u79cd\u7ea6\u5b9a\uff0c\u2f64\u5957\u63a5\u5b57\u4e2d\u7684\u76f8\u5173\u51fd\u6570\u6765\u5b8c\u6210\u901a\u4fe1\u8fc7\u7a0b\u3002\n\n\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b97\u6cd5\n\n\u5148\u5230\u5148\u670d\u52a1(FCFS)\u8c03\u5ea6\u7b97\u6cd5 : \u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u62e9\u2f00\u4e2a\u6700\u5148\u8fdb\u2f0a\u8be5\u961f\u5217\u7684\u8fdb\u7a0b\u4e3a\u4e4b\u5206\u914d\u8d44\u6e90\uff0c\u4f7f \u5b83\u2f74\u5373\u6267\u2f8f\u5e76\u2f00\u76f4\u6267\u2f8f\u5230\u5b8c\u6210\u6216\u53d1\u2f63\u67d0\u4e8b\u4ef6\u2f7d\u88ab\u963b\u585e\u653e\u5f03\u5360\u2f64 CPU \u65f6\u518d\u91cd\u65b0\u8c03\u5ea6\u3002 \n\u77ed\u4f5c\u4e1a\u4f18\u5148(SJF)\u7684\u8c03\u5ea6\u7b97\u6cd5 : \u4ece\u5c31\u7eea\u961f\u5217\u4e2d\u9009\u51fa\u2f00\u4e2a\u4f30\u8ba1\u8fd0\u2f8f\u65f6\u95f4\u6700\u77ed\u7684\u8fdb\u7a0b\u4e3a\u4e4b\u5206\u914d\u8d44\u6e90\uff0c \u4f7f\u5b83\u2f74\u5373\u6267\u2f8f\u5e76\u2f00\u76f4\u6267\u2f8f\u5230\u5b8c\u6210\u6216\u53d1\u2f63\u67d0\u4e8b\u4ef6\u2f7d\u88ab\u963b\u585e\u653e\u5f03\u5360\u2f64 CPU \u65f6\u518d\u91cd\u65b0\u8c03\u5ea6\u3002 \n\u65f6\u95f4\u2f5a\u8f6e\u8f6c\u8c03\u5ea6\u7b97\u6cd5 : \u65f6\u95f4\u2f5a\u8f6e\u8f6c\u8c03\u5ea6\u662f\u2f00\u79cd\u6700\u53e4\u2f7c\uff0c\u6700\u7b80\u5355\uff0c\u6700\u516c\u5e73\u4e14\u4f7f\u2f64\u6700\u2f34\u7684\u7b97\u6cd5\uff0c\u2f1c \u79f0 RR(Round robin)\u8c03\u5ea6\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u88ab\u5206\u914d\u2f00\u4e2a\u65f6\u95f4\u6bb5\uff0c\u79f0\u4f5c\u5b83\u7684\u65f6\u95f4\u2f5a\uff0c\u5373\u8be5\u8fdb\u7a0b\u5141\u8bb8\u8fd0\u2f8f\u7684 \u65f6\u95f4\u3002 \n\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5 \uff1a\u524d\u2faf\u4ecb\u7ecd\u7684\u2f0f\u79cd\u8fdb\u7a0b\u8c03\u5ea6\u7684\u7b97\u6cd5\u90fd\u6709\u2f00\u5b9a\u7684\u5c40\u9650\u6027\u3002\u5982\u77ed\u8fdb\u7a0b\u4f18\u5148\u7684 \u8c03\u5ea6\u7b97\u6cd5\uff0c\u4ec5\u7167\u987e\u4e86\u77ed\u8fdb\u7a0b\u2f7d\u5ffd\u7565\u4e86\u2ed3\u8fdb\u7a0b \u3002\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5\u65e2\u80fd\u4f7f\u2fbc\u4f18\u5148\u7ea7\u7684\u4f5c\u4e1a\u5f97 \u5230\u54cd\u5e94\u2f1c\u80fd\u4f7f\u77ed\u4f5c\u4e1a\uff08\u8fdb\u7a0b\uff09\u8fc5\u901f\u5b8c\u6210\u3002\uff0c\u56e0\u2f7d\u5b83\u662f\u2f6c\u524d\u88ab\u516c\u8ba4\u7684\u2f00\u79cd\u8f83\u597d\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff0c UNIX \u64cd\u4f5c\u7cfb\u7edf\u91c7\u53d6\u7684\u4fbf\u662f\u8fd9\u79cd\u8c03\u5ea6\u7b97\u6cd5\u3002 \n\u4f18\u5148\u7ea7\u8c03\u5ea6 \uff1a \u4e3a\u6bcf\u4e2a\u6d41\u7a0b\u5206\u914d\u4f18\u5148\u7ea7\uff0c\u2fb8\u5148\u6267\u2f8f\u5177\u6709\u6700\u2fbc\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5177\u6709\u76f8\u540c \u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u4ee5 FCFS \u2f45\u5f0f\u6267\u2f8f\u3002\u53ef\u4ee5\u6839\u636e\u5185\u5b58\u8981\u6c42\uff0c\u65f6\u95f4\u8981\u6c42\u6216\u4efb\u4f55\u5176\u4ed6\u8d44\u6e90\u8981\u6c42\u6765\u786e\u5b9a\u4f18\u5148 \u7ea7\u3002\n\n\u7ebf\u7a0b\n\u7ebf\u7a0b\u7684\u72b6\u6001/\u2f63\u547d\u5468\u671f\u548c\u72b6\u6001\n\n\u7ebf\u7a0b\u5728\u2f63\u547d\u5468\u671f\u4e2d\u5e76\u4e0d\u662f\u56fa\u5b9a\u5904\u4e8e\u67d0\u2f00\u4e2a\u72b6\u6001\u2f7d\u662f\u968f\u7740\u4ee3\u7801\u7684\u6267\u2f8f\u5728\u4e0d\u540c\u72b6\u6001\u4e4b\u95f4\u5207\u6362\u3002Java \u7ebf\u7a0b\u72b6 \u6001\u53d8\u8fc1\u5982\u4e0b\u56fe\u6240\u793a\uff08\u56fe\u6e90\u300aJava \u5e76\u53d1\u7f16\u7a0b\u827a\u672f\u300b4.1.4 \u8282\uff09\uff1a\n\n\u7531\u4e0a\u56fe\u53ef\u4ee5\u770b\u51fa\uff1a\u7ebf\u7a0b\u521b\u5efa\u4e4b\u540e\u5b83\u5c06\u5904\u4e8e NEW\uff08\u65b0\u5efa\uff09 \u72b6\u6001\uff0c\u8c03\u2f64 start() \u2f45\u6cd5\u540e\u5f00\u59cb\u8fd0\u2f8f\uff0c\u7ebf\u7a0b \u8fd9\u65f6\u5019\u5904\u4e8e READY\uff08\u53ef\u8fd0\u2f8f\uff09 \u72b6\u6001\u3002\u53ef\u8fd0\u2f8f\u72b6\u6001\u7684\u7ebf\u7a0b\u83b7\u5f97\u4e86 CPU \u65f6\u95f4\u2f5a\uff08timeslice\uff09\u540e\u5c31\u5904\u4e8e RUNNING\uff08\u8fd0\u2f8f\uff09 \u72b6\u6001\u3002\n\u200b       \u5f53\u7ebf\u7a0b\u6267\u2f8f wait() \u2f45\u6cd5\u4e4b\u540e\uff0c\u7ebf\u7a0b\u8fdb\u2f0a WAITING\uff08\u7b49\u5f85\uff09 \u72b6\u6001\u3002\u8fdb\u2f0a\u7b49\u5f85\u72b6\u6001\u7684\u7ebf\u7a0b\u9700\u8981\u4f9d\u9760\u5176\u4ed6 \u7ebf\u7a0b\u7684\u901a\u77e5\u624d\u80fd\u591f\u8fd4\u56de\u5230\u8fd0\u2f8f\u72b6\u6001\uff0c\u2f7d TIME_WAITING(\u8d85\u65f6\u7b49\u5f85) \u72b6\u6001\u76f8\u5f53\u4e8e\u5728\u7b49\u5f85\u72b6\u6001\u7684\u57fa\u7840\u4e0a\u589e\u52a0 \u4e86\u8d85\u65f6\u9650\u5236\uff0c\u2f50\u5982\u901a\u8fc7 sleep\uff08long millis\uff09 \u2f45\u6cd5\u6216 wait\uff08long millis\uff09 \u2f45\u6cd5\u53ef\u4ee5\u5c06 Java \u7ebf\u7a0b\u7f6e\u4e8e TIMED WAITING \u72b6\u6001\u3002\u5f53\u8d85\u65f6\u65f6\u95f4\u5230\u8fbe\u540e Java \u7ebf\u7a0b\u5c06\u4f1a\u8fd4\u56de\u5230 RUNNABLE \u72b6\u6001\u3002\u5f53\u7ebf\u7a0b\u8c03 \u2f64\u540c\u6b65\u2f45\u6cd5\u65f6\uff0c\u5728\u6ca1\u6709\u83b7\u53d6\u5230\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u7ebf\u7a0b\u5c06\u4f1a\u8fdb\u2f0a\u5230 BLOCKED\uff08\u963b\u585e\uff09 \u72b6\u6001\u3002\u7ebf\u7a0b\u5728\u6267\u2f8f Runnable \u7684 run() \u2f45\u6cd5\u4e4b\u540e\u5c06\u4f1a\u8fdb\u2f0a\u5230 TERMINATED\uff08\u7ec8\u2f4c\uff09 \u72b6\u6001\u3002\n\u7ebf\u7a0b\u7b49\u5f85\u7684\u4e24\u79cd\u65b9\u6cd5\n\nsleep() \nwait()\n\n\u76f8\u540c\u4e0d\u540c\u70b9\n\u4e24\u8005\u6700\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\uff1asleep \u2f45\u6cd5\u6ca1\u6709\u91ca\u653e\u9501\uff0c\u2f7d wait \u2f45\u6cd5\u91ca\u653e\u4e86\u9501 \u3002\n\u4e24\u8005\u90fd\u53ef\u4ee5\u6682\u505c\u7ebf\u7a0b\u7684\u6267\u2f8f\u3002 Wait \u901a\u5e38\u88ab\u2f64\u4e8e\u7ebf\u7a0b\u95f4\u4ea4\u4e92/\u901a\u4fe1\uff0csleep \u901a\u5e38\u88ab\u2f64\u4e8e\u6682\u505c\u6267\u2f8f\u3002\nwait() \u2f45\u6cd5\u88ab\u8c03\u2f64\u540e\uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u2f83\u52a8\u82cf\u9192\uff0c\u9700\u8981\u522b\u7684\u7ebf\u7a0b\u8c03\u2f64\u540c\u2f00\u4e2a\u5bf9\u8c61\u4e0a\u7684 notify() \u6216\u8005 notifyAll() \u2f45\u6cd5\u3002\nsleep() \u2f45\u6cd5\u6267\u2f8f\u5b8c\u6210\u540e\uff0c\u7ebf\u7a0b\u4f1a\u2f83\u52a8\u82cf\u9192\u3002\u6216\u8005\u53ef\u4ee5\u4f7f\u2f64 wait(long timeout)\u8d85\u65f6\u540e\u7ebf\u7a0b\u4f1a\u2f83\u52a8\u82cf\u9192\u3002\n\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u7684\u2f45\u5f0f\n\u200b       \u7ebf\u7a0b\u540c\u6b65\u662f\u4e24\u4e2a\u6216\u591a\u4e2a\u5171\u4eab\u5173\u952e\u8d44\u6e90\u7684\u7ebf\u7a0b\u7684\u5e76\u53d1\u6267\u2f8f\u3002\u5e94\u8be5\u540c\u6b65\u7ebf\u7a0b\u4ee5\u907f\u514d\u5173\u952e\u7684\u8d44\u6e90\u4f7f \u2f64\u51b2\u7a81\u3002\u64cd\u4f5c\u7cfb\u7edf\u2f00\u822c\u6709\u4e0b\u2faf\u4e09\u79cd\u7ebf\u7a0b\u540c\u6b65\u7684\u2f45\u5f0f\uff1a\n\n\u4e92\u65a5\u91cf(Mutex)\uff1a\u91c7\u2f64\u4e92\u65a5\u5bf9\u8c61\u673a\u5236\uff0c\u53ea\u6709\u62e5\u6709\u4e92\u65a5\u5bf9\u8c61\u7684\u7ebf\u7a0b\u624d\u6709\u8bbf\u95ee\u516c\u5171\u8d44\u6e90\u7684\u6743\u9650\u3002\u56e0\u4e3a \u4e92\u65a5\u5bf9\u8c61\u53ea\u6709\u2f00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u516c\u5171\u8d44\u6e90\u4e0d\u4f1a\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u3002\u2f50\u5982 Java \u4e2d\u7684 synchronized \u5173\u952e\u8bcd\u548c\u5404\u79cd Lock \u90fd\u662f\u8fd9\u79cd\u673a\u5236\u3002 \n\u4fe1\u53f7\u91cf(Semphares) \uff1a\u5b83\u5141\u8bb8\u540c\u2f00\u65f6\u523b\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u2f00\u8d44\u6e90\uff0c\u4f46\u662f\u9700\u8981\u63a7\u5236\u540c\u2f00\u65f6\u523b\u8bbf\u95ee\u6b64\u8d44 \u6e90\u7684\u6700\u2f24\u7ebf\u7a0b\u6570\u91cf \n\u4e8b\u4ef6(Event) :Wait/Notify\uff1a\u901a\u8fc7\u901a\u77e5\u64cd\u4f5c\u7684\u2f45\u5f0f\u6765\u4fdd\u6301\u591a\u7ebf\u7a0b\u540c\u6b65\uff0c\u8fd8\u53ef\u4ee5\u2f45\u4fbf\u7684\u5b9e\u73b0\u591a\u7ebf\u7a0b \u4f18\u5148\u7ea7\u7684\u2f50\u1afe\u64cd\n\n\u8ba1\u7b97\u673a\u7f51\u7edc\nOSI\u4e0eTCP/IP\u5404\u5c42\u7684\u7ed3\u6784\u4e0e\u529f\u80fd,\u90fd\u6709\u54ea\u4e9b\u534f\u8bae?\nHttp | Https\n\u53c2\u8003\n\nhttps://blog.csdn.net/qq_38289815/article/details/80969419\n\n\nHttp\n\u200b       \u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u662f\u4e00\u4e2a\u57fa\u4e8e\u8bf7\u6c42\u4e0e\u54cd\u5e94\uff0c\u65e0\u72b6\u6001\u7684\uff0c\u5e94\u7528\u5c42\u7684\u534f\u8bae\uff0c\u5e38\u57fa\u4e8eTCP/IP\u534f\u8bae\u4f20\u8f93\u6570\u636e\uff0c\u4e92\u8054\u7f51\u4e0a\u5e94\u7528\u6700\u4e3a\u5e7f\u6cdb\u7684\u4e00\u79cd\u7f51\u7edc\u534f\u8bae,\u6240\u6709\u7684WWW\u6587\u4ef6\u90fd\u5fc5\u987b\u9075\u5b88\u8fd9\u4e2a\u6807\u51c6\u3002\u8bbe\u8ba1HTTP\u7684\u521d\u8877\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u79cd\u53d1\u5e03\u548c\u63a5\u6536HTML\u9875\u9762\u7684\u65b9\u6cd5\u3002\n\u539f\u7406/\u8fc7\u7a0b\n\n\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\u9996\u5148\u8981\u901a\u8fc7\u7f51\u7edc\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\uff0c\u8be5\u8fde\u63a5\u662f\u901a\u8fc7 TCP \u6765\u5b8c\u6210\u7684\uff0c\u4e00\u822c TCP \u8fde\u63a5\u7684\u7aef\u53e3\u53f7\u662f80\u3002 \u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u5ba2\u6237\u673a\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u7ed9\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u65b9\u5f0f\u7684\u683c\u5f0f\u4e3a\uff1a\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff08URL\uff09\u3001\u534f\u8bae\u7248\u672c\u53f7\uff0c\u540e\u8fb9\u662f MIME \u4fe1\u606f\u5305\u62ec\u8bf7\u6c42\u4fee\u9970\u7b26\u3001\u5ba2\u6237\u673a\u4fe1\u606f\u548c\u8bb8\u53ef\u5185\u5bb9\u3002\n\u670d\u52a1\u5668\u63a5\u5230\u8bf7\u6c42\u540e\uff0c\u7ed9\u4e88\u76f8\u5e94\u7684\u54cd\u5e94\u4fe1\u606f\uff0c\u5176\u683c\u5f0f\u4e3a\u4e00\u4e2a\u72b6\u6001\u884c\uff0c\u5305\u62ec\u4fe1\u606f\u7684\u534f\u8bae\u7248\u672c\u53f7\u3001\u4e00\u4e2a\u6210\u529f\u6216\u9519\u8bef\u7684\u4ee3\u7801\uff0c\u540e\u8fb9\u662f MIME \u4fe1\u606f\u5305\u62ec\u670d\u52a1\u5668\u4fe1\u606f\u3001\u5b9e\u4f53\u4fe1\u606f\u548c\u53ef\u80fd\u7684\u5185\u5bb9\u3002\n\n\u7279\u70b9\n\nhttp\u534f\u8bae\u652f\u6301\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u6a21\u5f0f\uff0c\u4e5f\u662f\u4e00\u79cd\u8bf7\u6c42/\u54cd\u5e94\u6a21\u5f0f\u7684\u534f\u8bae\u3002\n\u7b80\u5355\u5feb\u901f\uff1a\u5ba2\u6237\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u670d\u52a1\u65f6\uff0c\u53ea\u9700\u4f20\u9001\u8bf7\u6c42\u65b9\u6cd5\u548c\u8def\u5f84\u3002\u8bf7\u6c42\u65b9\u6cd5\u5e38\u7528\u7684\u6709GET\u3001HEAD\u3001POST\u3002\n\u7075\u6d3b\uff1aHTTP\u5141\u8bb8\u4f20\u8f93\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u5bf9\u8c61\u3002\u4f20\u8f93\u7684\u7c7b\u578b\u7531Content-Type\u52a0\u4ee5\u6807\u8bb0\u3002\n\u65e0\u8fde\u63a5\uff1a\u9650\u5236\u6bcf\u6b21\u8fde\u63a5\u53ea\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u5904\u7406\u5b8c\u8bf7\u6c42\uff0c\u5e76\u6536\u5230\u5ba2\u6237\u7684\u5e94\u7b54\u540e\uff0c\u5373\u65ad\u5f00\u8fde\u63a5\uff0c\u4f46\u662f\u5374\u4e0d\u5229\u4e8e\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4fdd\u6301\u4f1a\u8bdd\u8fde\u63a5\uff0c\u4e3a\u4e86\u5f25\u8865\u8fd9\u79cd\u4e0d\u8db3\uff0c\u4ea7\u751f\u4e86\u4e24\u9879\u8bb0\u5f55http\u72b6\u6001\u7684\u6280\u672f\uff0c\u4e00\u4e2a\u53eb\u505aCookie,\u4e00\u4e2a\u53eb\u505aSession\u3002\n\u65e0\u72b6\u6001\uff1a\u65e0\u72b6\u6001\u662f\u6307\u534f\u8bae\u5bf9\u4e8e\u4e8b\u52a1\u5904\u7406\u6ca1\u6709\u8bb0\u5fc6\uff0c\u540e\u7eed\u5904\u7406\u9700\u8981\u524d\u9762\u7684\u4fe1\u606f\uff0c\u5219\u5fc5\u987b\u91cd\u4f20\u3002\n\nHttps\n\u200b       \u300a\u56fe\u89e3HTTP\u300b\u8fd9\u672c\u4e66\u4e2d\u66fe\u63d0\u8fc7HTTPS\u662f\u8eab\u62abSSL\u5916\u58f3\u7684HTTP\u3002HTTPS\u662f\u4e00\u79cd\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u8fdb\u884c\u5b89\u5168\u901a\u4fe1\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u7ecf\u7531HTTP\u8fdb\u884c\u901a\u4fe1\uff0c\u5229\u7528SSL/TLS\u5efa\u7acb\u5168\u4fe1\u9053\uff0c\u52a0\u5bc6\u6570\u636e\u5305\u3002HTTPS\u4f7f\u7528\u7684\u4e3b\u8981\u76ee\u7684\u662f\u63d0\u4f9b\u5bf9\u7f51\u7ad9\u670d\u52a1\u5668\u7684\u8eab\u4efd\u8ba4\u8bc1\uff0c\u540c\u65f6\u4fdd\u62a4\u4ea4\u6362\u6570\u636e\u7684\u9690\u79c1\u4e0e\u5b8c\u6574\u6027\u3002\u57fa\u4e8eHTTP\u534f\u8bae\uff0c\u901a\u8fc7SSL\u6216TLS\u63d0\u4f9b\u52a0\u5bc6\u5904\u7406\u6570\u636e\u3001\u9a8c\u8bc1\u5bf9\u65b9\u8eab\u4efd\u4ee5\u53ca\u6570\u636e\u5b8c\u6574\u6027\u4fdd\u62a4\n\u539f\u7406/\u8fc7\u7a0b\n\n\u9996\u5148\u670d\u52a1\u7aef\u7ed9\u5ba2\u6237\u7aef\u4f20\u8f93\u8bc1\u4e66,\u8fd9\u4e2a\u8bc1\u4e66\u5c31\u662f\u516c\u94a5,\u53ea\u662f\u5305\u542b\u4e86\u5f88\u591a\u7684\u4fe1\u606f,\u6bd4\u5982\u8bf4\u8bc1\u4e66\u7684\u529e\u6cd5\u673a\u6784,\u8bc1\u4e66\u7684\u8fc7\u671f\u65f6\u95f4\n\u5ba2\u6237\u7aef\u8fdb\u884c\u8bc1\u4e66\u7684\u89e3\u6790,\u6bd4\u5982\u8bf4\u9a8c\u8bc1\u529e\u6cd5\u673a\u6784,\u8fc7\u671f\u65f6\u95f4,\u5982\u679c\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u95ee\u9898,\u5c31\u751f\u6210\u4e00\u4e2a\u968f\u673a\u503c(\u79c1\u94a5),\u7136\u540e\u7528\u8bc1\u4e66\u5bf9\u8fd9\u4e2a\u79c1\u94a5\u8fdb\u884c\u52a0\u5bc6,\u5e76\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\n\u670d\u52a1\u7aef\u4f7f\u7528\u79c1\u94a5\u5c06\u8fd9\u4e2a\u4fe1\u606f\u8fdb\u884c\u89e3\u5bc6,\u5f97\u5230\u5ba2\u6237\u7aef\u7684\u79c1\u94a5,\u7136\u540e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u79c1\u94a5\u8fdb\u884c\u901a\u4fe1\u4e86\n\u670d\u52a1\u7aef\u5c06\u6d88\u606f\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6(\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8bb2\u6d88\u606f\u548c\u79c1\u94a5\u8fdb\u884c\u6df7\u5408,\u9664\u975e\u77e5\u9053\u79c1\u94a5\u5426\u5219\u670d\u52a1\u8fdb\u884c\u89e3\u5bc6),\u79c1\u94a5\u6b63\u597d\u53ea\u6709\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u77e5\u9053,\u6240\u4ee5\u4fe1\u606f\u5c31\u6bd4\u8f83\u5b89\u5168\u4e86\n\u670d\u52a1\u7aef\u5c06\u8fdb\u884c\u5bf9\u79f0\u52a0\u5bc6\u540e\u7684\u6d88\u606f\u8fdb\u884c\u4f20\u9001\n\u5ba2\u6237\u7aef\u4f7f\u7528\u79c1\u94a5\u8fdb\u884c\u4fe1\u606f\u7684\u89e3\u5bc6\n\n\u7279\u70b9\n\n\u6570\u636e\u4fdd\u5bc6\u6027\uff1a\u4fdd\u8bc1\u6570\u636e\u5185\u5bb9\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u7b2c\u4e09\u65b9\u67e5\u770b\u3002\u5c31\u50cf\u5feb\u9012\u5458\u4f20\u9012\u5305\u88f9\u4e00\u6837\uff0c\u90fd\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u522b\u4eba\u65e0\u6cd5\u83b7\u77e5\u91cc\u9762\u88c5\u4e86\u4ec0\u4e48 \u3002\n\u6570\u636e\u5b8c\u6574\u6027\uff1a\u53ca\u65f6\u53d1\u73b0\u88ab\u7b2c\u4e09\u65b9\u7be1\u6539\u7684\u4f20\u8f93\u5185\u5bb9\u3002\u5c31\u50cf\u5feb\u9012\u5458\u867d\u7136\u4e0d\u77e5\u9053\u5305\u88f9\u91cc\u88c5\u4e86\u4ec0\u4e48\u4e1c\u897f\uff0c\u4f46\u4ed6\u6709\u53ef\u80fd\u4e2d\u9014\u6389\u5305\uff0c\u6570\u636e\u5b8c\u6574\u6027\u5c31\u662f\u6307\u5982\u679c\u88ab\u6389\u5305\uff0c\u6211\u4eec\u80fd\u8f7b\u677e\u53d1\u73b0\u5e76\u62d2\u6536 \u3002\n\u8eab\u4efd\u6821\u9a8c\u5b89\u5168\u6027\uff1a\u4fdd\u8bc1\u6570\u636e\u5230\u8fbe\u7528\u6237\u671f\u671b\u7684\u76ee\u7684\u5730\u3002\u5c31\u50cf\u6211\u4eec\u90ae\u5bc4\u5305\u88f9\u65f6\uff0c\u867d\u7136\u662f\u4e00\u4e2a\u5c01\u88c5\u597d\u7684\u672a\u6389\u5305\u7684\u5305\u88f9\uff0c\u4f46\u5fc5\u987b\u786e\u5b9a\u8fd9\u4e2a\u5305\u88f9\u4e0d\u4f1a\u9001\u9519\u5730\u65b9\uff0c\u901a\u8fc7\u8eab\u4efd\u6821\u9a8c\u6765\u786e\u4fdd\u9001\u5bf9\u4e86\u5730\u65b9 \u3002\n\n\u7f3a\u70b9\n\nHTTPS \u534f\u8bae\u63e1\u624b\u9636\u6bb5\u6bd4\u8f83\u8d39\u65f6\uff0c\u4f1a\u4f7f\u9875\u9762\u7684\u52a0\u8f7d\u65f6\u95f4\u5ef6\u957f\u8fd1\u3002\nHTTPS \u8fde\u63a5\u7f13\u5b58\u4e0d\u5982 HTTP \u9ad8\u6548\uff0c\u4f1a\u589e\u52a0\u6570\u636e\u5f00\u9500\uff0c\u751a\u81f3\u5df2\u6709\u7684\u5b89\u5168\u63aa\u65bd\u4e5f\u4f1a\u56e0\u6b64\u800c\u53d7\u5230\u5f71\u54cd\u3002\nHTTPS \u534f\u8bae\u7684\u5b89\u5168\u662f\u6709\u8303\u56f4\u7684\uff0c\u5728\u9ed1\u5ba2\u653b\u51fb\u3001\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u548c\u670d\u52a1\u5668\u52ab\u6301\u7b49\u65b9\u9762\u51e0\u4e4e\u8d77\u4e0d\u5230\u4ec0\u4e48\u4f5c\u7528\u3002\nSSL \u8bc1\u4e66\u901a\u5e38\u9700\u8981\u7ed1\u5b9a IP\uff0c\u4e0d\u80fd\u5728\u540c\u4e00 IP \u4e0a\u7ed1\u5b9a\u591a\u4e2a\u57df\u540d\uff0cIPv4 \u8d44\u6e90\u4e0d\u53ef\u80fd\u652f\u6491\u8fd9\u4e2a\u6d88\u8017\u3002\n\u6210\u672c\u589e\u52a0\u3002\u90e8\u7f72 HTTPS \u540e\uff0c\u56e0\u4e3a HTTPS \u534f\u8bae\u7684\u5de5\u4f5c\u8981\u589e\u52a0\u989d\u5916\u7684\u8ba1\u7b97\u8d44\u6e90\u6d88\u8017\uff0c\u4f8b\u5982 SSL \u534f\u8bae\u52a0\u5bc6\u7b97\u6cd5\u548c SSL \u4ea4\u4e92\u6b21\u6570\u5c06\u5360\u7528\u4e00\u5b9a\u7684\u8ba1\u7b97\u8d44\u6e90\u548c\u670d\u52a1\u5668\u6210\u672c\u3002\nHTTPS \u534f\u8bae\u7684\u52a0\u5bc6\u8303\u56f4\u4e5f\u6bd4\u8f83\u6709\u9650\u3002\u6700\u5173\u952e\u7684\uff0cSSL \u8bc1\u4e66\u7684\u4fe1\u7528\u94fe\u4f53\u7cfb\u5e76\u4e0d\u5b89\u5168\uff0c\u7279\u522b\u662f\u5728\u67d0\u4e9b\u56fd\u5bb6\u53ef\u4ee5\u63a7\u5236 CA \u6839\u8bc1\u4e66\u7684\u60c5\u51b5\u4e0b\uff0c\u4e2d\u95f4\u4eba\u653b\u51fb\u4e00\u6837\u53ef\u884c\u3002\n\nHttp | Https\u7684\u4e0d\u540c\nHttp\u534f\u8bae\u8fd0\u884c\u5728TCP\u4e4b\u4e0a\uff0c\u660e\u6587\u4f20\u8f93\uff0c\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u90fd\u65e0\u6cd5\u9a8c\u8bc1\u5bf9\u65b9\u7684\u8eab\u4efd\uff1bHttps\u662f\u8eab\u62abSSL(Secure Socket Layer)\u5916\u58f3\u7684Http\uff0c\u8fd0\u884c\u4e8eSSL\u4e0a\uff0cSSL\u8fd0\u884c\u4e8eTCP\u4e4b\u4e0a\uff0c\u662f\u6dfb\u52a0\u4e86\u52a0\u5bc6\u548c\u8ba4\u8bc1\u673a\u5236\u7684HTTP\u3002HTTP \u7684\u8fde\u63a5\u5f88\u7b80\u5355\uff0c\u662f\u65e0\u72b6\u6001\u7684\u3002HTTPS \u534f\u8bae\u662f\u7531 SSL+HTTP \u534f\u8bae\u6784\u5efa\u7684\u53ef\u8fdb\u884c\u52a0\u5bc6\u4f20\u8f93\u3001\u8eab\u4efd\u8ba4\u8bc1\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u6bd4 HTTP \u534f\u8bae\u5b89\u5168\u3002(\u65e0\u72b6\u6001\u7684\u610f\u601d\u662f\u5176\u6570\u636e\u5305\u7684\u53d1\u9001\u3001\u4f20\u8f93\u548c\u63a5\u6536\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002\u65e0\u8fde\u63a5\u7684\u610f\u601d\u662f\u6307\u901a\u4fe1\u53cc\u65b9\u90fd\u4e0d\u957f\u4e45\u7684\u7ef4\u6301\u5bf9\u65b9\u7684\u4efb\u4f55\u4fe1\u606f\u3002)\n\n\u7aef\u53e3\u4e0d\u540c\uff1aHttp\u4e0eHttp\u4f7f\u7528\u4e0d\u540c\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u7528\u7684\u7aef\u53e3\u4e5f\u4e0d\u4e00\u6837\uff0c\u524d\u8005\u662f80\uff0c\u540e\u8005\u662f443\uff1b\n\u8d44\u6e90\u6d88\u8017\uff1a\u548cHTTP\u901a\u4fe1\u76f8\u6bd4\uff0cHttps\u901a\u4fe1\u4f1a\u7531\u4e8e\u52a0\u51cf\u5bc6\u5904\u7406\u6d88\u8017\u66f4\u591a\u7684CPU\u548c\u5185\u5b58\u8d44\u6e90\uff1b\n\u5f00\u9500\uff1aHttps\u901a\u4fe1\u9700\u8981\u8bc1\u4e66\uff0c\u800c\u8bc1\u4e66\u4e00\u822c\u9700\u8981\u5411\u8ba4\u8bc1\u673a\u6784\u8d2d\u4e70\uff1b\n\nTCP | UDP\nTCP/IP\u7f51\u7edc\u6a21\u578b\n\u200b       \u8ba1\u7b97\u673a\u4e0e\u7f51\u7edc\u8bbe\u5907\u8981\u76f8\u4e92\u901a\u4fe1\uff0c\u53cc\u65b9\u5c31\u5fc5\u987b\u57fa\u4e8e\u76f8\u540c\u7684\u65b9\u6cd5\u3002\u6bd4\u5982\uff0c\u5982\u4f55\u63a2\u6d4b\u5230\u901a\u4fe1\u76ee\u6807\u3001\u7531\u54ea\u4e00\u8fb9\u5148\u53d1\u8d77\u901a\u4fe1\u3001\u4f7f\u7528\u54ea\u79cd\u8bed\u8a00\u8fdb\u884c\u901a\u4fe1\u3001\u600e\u6837\u7ed3\u675f\u901a\u4fe1\u7b49\u89c4\u5219\u90fd\u9700\u8981\u4e8b\u5148\u786e\u5b9a\u3002\u4e0d\u540c\u7684\u786c\u4ef6\u3001\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6240\u6709\u7684\u8fd9\u4e00\u5207\u90fd\u9700\u8981\u4e00\u79cd\u89c4\u5219\u3002\u800c\u6211\u4eec\u5c31\u628a\u8fd9\u79cd\u89c4\u5219\u79f0\u4e3a\u534f\u8bae\uff08protocol\uff09\u3002\nTCP/IP \u662f\u4e92\u8054\u7f51\u76f8\u5173\u7684\u5404\u7c7b\u534f\u8bae\u65cf\u7684\u603b\u79f0\uff0c\u6bd4\u5982\uff1aTCP\uff0cUDP\uff0cIP\uff0cFTP\uff0cHTTP\uff0cICMP\uff0cSMTP \u7b49\u90fd\u5c5e\u4e8e TCP/IP \u65cf\u5185\u7684\u534f\u8bae\u3002\nTCP/IP\u6a21\u578b\u662f\u4e92\u8054\u7f51\u7684\u57fa\u7840\uff0c\u5b83\u662f\u4e00\u7cfb\u5217\u7f51\u7edc\u534f\u8bae\u7684\u603b\u79f0\u3002\u8fd9\u4e9b\u534f\u8bae\u53ef\u4ee5\u5212\u5206\u4e3a\u56db\u5c42\uff0c\u5206\u522b\u4e3a\u94fe\u8def\u5c42\u3001\u7f51\u7edc\u5c42\u3001\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u3002\n\n\u94fe\u8def\u5c42\uff1a\u8d1f\u8d23\u5c01\u88c5\u548c\u89e3\u5c01\u88c5IP\u62a5\u6587\uff0c\u53d1\u9001\u548c\u63a5\u53d7ARP/RARP\u62a5\u6587\u7b49\u3002\n\u7f51\u7edc\u5c42\uff1a\u8d1f\u8d23\u8def\u7531\u4ee5\u53ca\u628a\u5206\u7ec4\u62a5\u6587\u53d1\u9001\u7ed9\u76ee\u6807\u7f51\u7edc\u6216\u4e3b\u673a\u3002\n\u4f20\u8f93\u5c42\uff1a\u8d1f\u8d23\u5bf9\u62a5\u6587\u8fdb\u884c\u5206\u7ec4\u548c\u91cd\u7ec4\uff0c\u5e76\u4ee5TCP\u6216UDP\u534f\u8bae\u683c\u5f0f\u5c01\u88c5\u62a5\u6587\u3002\n\u5e94\u7528\u5c42\uff1a\u8d1f\u8d23\u5411\u7528\u6237\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982HTTP\u3001FTP\u3001Telnet\u3001DNS\u3001SMTP\u7b49\u3002\n\nTCP\n\u200b       \u5f53\u4e00\u53f0\u8ba1\u7b97\u673a\u60f3\u8981\u4e0e\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u901a\u8baf\u65f6\uff0c\u4e24\u53f0\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1\u9700\u8981\u7545\u901a\u4e14\u53ef\u9760\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6b63\u786e\u6536\u53d1\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5f53\u4f60\u60f3\u67e5\u770b\u7f51\u9875\u6216\u67e5\u770b\u7535\u5b50\u90ae\u4ef6\u65f6\uff0c\u5e0c\u671b\u5b8c\u6574\u4e14\u6309\u987a\u5e8f\u67e5\u770b\u7f51\u9875\uff0c\u800c\u4e0d\u4e22\u5931\u4efb\u4f55\u5185\u5bb9\u3002\u5f53\u4f60\u4e0b\u8f7d\u6587\u4ef6\u65f6\uff0c\u5e0c\u671b\u83b7\u5f97\u7684\u662f\u5b8c\u6574\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6587\u4ef6\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u5982\u679c\u6570\u636e\u4e22\u5931\u6216\u4e71\u5e8f\uff0c\u90fd\u4e0d\u662f\u4f60\u5e0c\u671b\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u4e8e\u662f\u5c31\u7528\u5230\u4e86TCP\u3002\n\u200b       TCP\u534f\u8bae\u5168\u79f0\u662f\u4f20\u8f93\u63a7\u5236\u534f\u8bae\u662f\u4e00\u79cd\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u3001\u57fa\u4e8e\u5b57\u8282\u6d41\u7684\u4f20\u8f93\u5c42\u901a\u4fe1\u534f\u8bae\uff0c\u7531 IETF \u7684RFC 793\u5b9a\u4e49\u3002TCP \u662f\u9762\u5411\u8fde\u63a5\u7684\u3001\u53ef\u9760\u7684\u6d41\u534f\u8bae\u3002\u6d41\u5c31\u662f\u6307\u4e0d\u95f4\u65ad\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u6392\u6c34\u7ba1\u4e2d\u7684\u6c34\u6d41\u3002\nTCP\u8fde\u63a5\uff1a\u4e09\u6b21\u63e1\u624b\n\u200b       \u4e09\u6b21\u63e1\u2f3f\u7684\u2f6c\u7684\u662f\u5efa\u2f74\u53ef\u9760\u7684\u901a\u4fe1\u4fe1\u9053\uff0c\u8bf4\u5230\u901a\u8baf\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6570\u636e\u7684\u53d1\u9001\u4e0e\u63a5\u6536\uff0c\u2f7d\u4e09\u6b21\u63e1\u2f3f\u6700\u4e3b \u8981\u7684\u2f6c\u7684\u5c31\u662f\u53cc\u2f45\u786e\u8ba4\u2f83\u2f30\u4e0e\u5bf9\u2f45\u7684\u53d1\u9001\u4e0e\u63a5\u6536\u662f\u6b63\u5e38\u7684\u3002\u53d1\u9001SYN\u7528\u6765\u8bf7\u6c42\u8fde\u63a5\uff0c\u53d1\u9001ACK\u8868\u793a\u53d1\u8fc7\u6765\u7684SYN\u5df2\u63a5\u6536\uff0c\u4ece\u53d1\u9001SYN\u7aef\u5230\u53d1\u9001ACK\u7aef\u8fd9\u8fb9\u7684\u901a\u4fe1\u6b63\u5e38\n\n\n\u7b2c\u4e00\u6b21\u63e1\u624b\uff1aSYN-SENT\n\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u548csyn=1\u8bf7\u6c42\u6807\u5fd7\u3002\u8be5\u62a5\u6587\u6bb5\u4e2d\u5305\u542b\u81ea\u8eab\u7684\u6570\u636e\u901a\u8baf\u521d\u59cb\u5e8f\u53f7\u3002\u8bf7\u6c42\u53d1\u9001\u540e\uff0c\u5ba2\u6237\u7aef\u4fbf\u8fdb\u5165 SYN-SENT \u72b6\u6001\u3002\n\n\n\n\u7b2c\u4e8c\u6b21\u63e1\u624b\uff1aSYN-RECEIVED\n\u670d\u52a1\u7aef\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u540e\uff0c\u5982\u679c\u540c\u610f\u8fde\u63a5\uff0c\u5219\u4f1a\u53d1\u9001\u4e00\u4e2a\u5e94\u7b54\uff0c\u8be5\u5e94\u7b54\u4e2d\u4e5f\u4f1a\u5305\u542b\u81ea\u8eab\u7684\u6570\u636e\u901a\u8baf\u521d\u59cb\u5e8f\u53f7\uff0c\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u6807\u5fd7syn\uff0c\u53d1\u9001\u786e\u8ba4\u6807\u5fd7ACK\uff0c\u53d1\u9001\u81ea\u5df1\u7684\u5e8f\u53f7seq=y\uff0c\u53d1\u9001\u5ba2\u6237\u7aef\u7684\u786e\u8ba4\u5e8f\u53f7ack=x+1\uff0c\u53d1\u9001\u5b8c\u6210\u540e\u4fbf\u8fdb\u5165 SYN-RECEIVED \u72b6\u6001\u3002\n\n\n\n\u7b2c\u4e09\u6b21\u63e1\u624b\uff1aESTABLISHED\n\u5f53\u5ba2\u6237\u7aef\u6536\u5230\u8fde\u63a5\u540c\u610f\u7684\u5e94\u7b54\u540e\uff0c\u8fd8\u8981\u5411\u670d\u52a1\u7aef\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u62a5\u6587\uff0c\u5ba2\u6237\u7aef\u53d1\u9001ACK\u786e\u8ba4\u53f7\uff0c\u53d1\u9001\u81ea\u5df1\u7684\u5e8f\u53f7seq=x+1\uff0c\u53d1\u9001\u5bf9\u65b9\u7684\u786e\u8ba4\u53f7ack=y+1\u3002\u5ba2\u6237\u7aef\u53d1\u5b8c\u8fd9\u4e2a\u62a5\u6587\u6bb5\u540e\u4fbf\u8fdb\u5165 ESTABLISHED \u72b6\u6001\uff0c\u670d\u52a1\u7aef\u6536\u5230\u8fd9\u4e2a\u5e94\u7b54\u540e\u4e5f\u8fdb\u5165 ESTABLISHED \u72b6\u6001\uff0c\u6b64\u65f6\u8fde\u63a5\u5efa\u7acb\u6210\u529f\u3002\n\n\n\u4e3a\u4ec0\u4e48\u8981\u4f20\u56de SYN\n\u63a5\u6536\u7aef\u4f20\u56de\u53d1\u9001\u7aef\u6240\u53d1\u9001\u7684 SYN \u662f\u4e3a\u4e86\u544a\u8bc9\u53d1\u9001\u7aef\uff0c\u6211\u63a5\u6536\u5230\u7684\u4fe1\u606f\u786e\u5b9e\u5c31\u662f\u4f60\u6240\u53d1\u9001\u7684\u4fe1\u53f7\u4e86\u3002\nSYN \u662f TCP/IP \u5efa\u2f74\u8fde\u63a5\u65f6\u4f7f\u2f64\u7684\u63e1\u2f3f\u4fe1\u53f7\u3002\u5728\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5efa\u2f74\u6b63\u5e38\u7684 TCP \u2f79\u7edc\u8fde\u63a5\u65f6\uff0c \u5ba2\u6237\u673a\u2fb8\u5148\u53d1\u51fa\u2f00\u4e2a SYN \u6d88\u606f\uff0c\u670d\u52a1\u5668\u4f7f\u2f64 SYN-ACK \u5e94\u7b54\u8868\u793a\u63a5\u6536\u5230\u4e86\u8fd9\u4e2a\u6d88\u606f\uff0c\u6700\u540e\u5ba2\u6237\u673a\u518d \u4ee5 ACK(Acknowledgement[\u6c49\u8bd1\uff1a\u786e\u8ba4\u5b57\u7b26 ,\u5728\u6570\u636e\u901a\u4fe1\u4f20\u8f93\u4e2d\uff0c\u63a5\u6536\u7ad9\u53d1\u7ed9\u53d1\u9001\u7ad9\u7684\u2f00\u79cd\u4f20\u8f93\u63a7\u5236 \u5b57\u7b26\u3002\u5b83\u8868\u793a\u786e\u8ba4\u53d1\u6765\u7684\u6570\u636e\u5df2\u7ecf\u63a5\u53d7\u2f46\u8bef\u3002 ]\uff09\u6d88\u606f\u54cd\u5e94\u3002\u8fd9\u6837\u5728\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u624d\u80fd\u5efa\u2f74 \u8d77\u53ef\u9760\u7684TCP\u8fde\u63a5\uff0c\u6570\u636e\u624d\u53ef\u4ee5\u5728\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u9012\u3002\n\n\u4f20\u4e86 SYN,\u4e3a\u5565\u8fd8\u8981\u4f20 ACK\n\u53cc\u2f45\u901a\u4fe1\u2f46\u8bef\u5fc5\u987b\u662f\u4e24\u8005\u4e92\u76f8\u53d1\u9001\u4fe1\u606f\u90fd\u2f46\u8bef\u3002\u4f20\u4e86 SYN\uff0c\u8bc1\u660e\u53d1\u9001\u2f45\u5230\u63a5\u6536\u2f45\u7684\u901a\u9053\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f \u63a5\u6536\u2f45\u5230\u53d1\u9001\u2f45\u7684\u901a\u9053\u8fd8\u9700\u8981 ACK \u4fe1\u53f7\u6765\u8fdb\u2f8f\u9a8c\u8bc1\u3002\nTCP\u65ad\u5f00\uff1a\u56db\u6b21\u6325\u624b\n\n\n\u7b2c\u4e00\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u91ca\u653eFIN=1\uff0c\u81ea\u5df1\u5e8f\u5217\u53f7seq=u\uff0c\u8fdb\u5165FIN-WAIT-1\u72b6\u6001\n\u7b2c\u4e8c\u6b21\u6325\u624b\uff1a\u670d\u52a1\u5668\u6536\u5230\u5ba2\u6237\u7aef\u7684\u540e\uff0c\u53d1\u51faACK=1\u786e\u8ba4\u6807\u5fd7\u548c\u5ba2\u6237\u7aef\u7684\u786e\u8ba4\u53f7ack=u+1\uff0c\u81ea\u5df1\u7684\u5e8f\u5217\u53f7seq=v\uff0c\u8fdb\u5165CLOSE-WAIT\u72b6\u6001\n\u7b2c\u4e09\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u786e\u8ba4\u7ed3\u679c\u540e\uff0c\u8fdb\u5165FIN-WAIT-2\u72b6\u6001\u3002\u6b64\u65f6\u670d\u52a1\u5668\u53d1\u9001\u91ca\u653eFIN=1\u4fe1\u53f7\uff0c\u786e\u8ba4\u6807\u5fd7ACK=1\uff0c\u786e\u8ba4\u5e8f\u53f7ack=u+1\uff0c\u81ea\u5df1\u5e8f\u53f7seq=w\uff0c\u670d\u52a1\u5668\u8fdb\u5165LAST-ACK\uff08\u6700\u540e\u786e\u8ba4\u6001\uff09\n\u7b2c\u56db\u6b21\u6325\u624b\uff1a\u5ba2\u6237\u7aef\u6536\u5230\u56de\u590d\u540e\uff0c\u53d1\u9001\u786e\u8ba4ACK=1\uff0cack=w+1\uff0c\u81ea\u5df1\u7684seq=u+1\uff0c\u5ba2\u6237\u7aef\u8fdb\u5165TIME-WAIT\uff08\u65f6\u95f4\u7b49\u5f85\uff09\u3002\u5ba2\u6237\u7aef\u7ecf\u8fc72\u4e2a\u6700\u957f\u62a5\u6587\u6bb5\u5bff\u547d\u540e\uff0c\u5ba2\u6237\u7aefCLOSE\uff1b\u670d\u52a1\u5668\u6536\u5230\u786e\u8ba4\u540e\uff0c\u7acb\u523b\u8fdb\u5165CLOSE\u72b6\u6001\u3002\n\n\u4e3a\u4ec0\u4e48 TCP \u5efa\u7acb\u8fde\u63a5\u9700\u8981\u4e09\u6b21\u63e1\u624b\uff0c\u800c\u4e0d\u662f\u4e24\u6b21\uff1f\n\n\u4e3a\u4e86\u5b9e\u73b0\u53ef\u9760\u6570\u636e\u4f20\u8f93\uff0c TCP \u534f\u8bae\u7684\u901a\u4fe1\u53cc\u65b9\uff0c \u90fd\u5fc5\u987b\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\u53f7\uff0c \u4ee5\u6807\u8bc6\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u5305\u4e2d\uff0c \u54ea\u4e9b\u662f\u5df2\u7ecf\u88ab\u5bf9\u65b9\u6536\u5230\u7684\u3002 \u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b\u5373\u662f\u901a\u4fe1\u53cc\u65b9\u76f8\u4e92\u544a\u77e5\u5e8f\u5217\u53f7\u8d77\u59cb\u503c\uff0c \u5e76\u786e\u8ba4\u5bf9\u65b9\u5df2\u7ecf\u6536\u5230\u4e86\u5e8f\u5217\u53f7\u8d77\u59cb\u503c\u7684\u5fc5\u7ecf\u6b65\u9aa4\n\u5982\u679c\u53ea\u662f\u4e24\u6b21\u63e1\u624b\uff0c \u81f3\u591a\u53ea\u6709\u8fde\u63a5\u53d1\u8d77\u65b9\u7684\u8d77\u59cb\u5e8f\u5217\u53f7\u80fd\u88ab\u786e\u8ba4\uff0c \u53e6\u4e00\u65b9\u9009\u62e9\u7684\u5e8f\u5217\u53f7\u5219\u5f97\u4e0d\u5230\u786e\u8ba4\n\nTCP\u534f\u8bae\u5982\u4f55\u4fdd\u8bc1\u53ef\u9760\u4f20\u8f93\n\n\u5e94\u7528\u6570\u636e\u88ab\u5206\u5272\u6210TCP\u8ba4\u4e3a\u6700\u9002\u5408\u53d1\u9001\u7684\u6570\u636e\u5757\u3002\n\u8d85\u65f6\u91cd\u4f20\uff1a\u5f53TCP\u53d1\u51fa\u4e00\u4e2a\u6bb5\u540e\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u7b49\u5f85\u76ee\u7684\u7aef\u786e\u8ba4\u6536\u5230\u8fd9\u4e2a\u62a5\u6587\u6bb5\u3002\u5982\u679c\u4e0d\u80fd\u53ca\u65f6\u6536\u5230\u4e00\u4e2a\u786e\u8ba4\uff0c\u5c06\u91cd\u53d1\u8fd9\u4e2a\u62a5\u6587\u6bb5\u3002\nTCP\u7ed9\u53d1\u9001\u7684\u6bcf\u4e00\u4e2a\u5305\u8fdb\u884c\u7f16\u53f7\uff0c\u63a5\u6536\u65b9\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u6392\u5e8f\uff0c\u628a\u6709\u5e8f\u6570\u636e\u4f20\u9001\u7ed9\u5e94\u7528\u5c42\u3002\n\u6821\u9a8c\u548c\uff1aTCP\u5c06\u4fdd\u6301\u5b83\u9996\u90e8\u548c\u6570\u636e\u7684\u68c0\u9a8c\u548c\u3002\u8fd9\u662f\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u68c0\u9a8c\u548c\uff0c\u76ee\u7684\u662f\u68c0\u6d4b\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u4efb\u4f55\u53d8\u5316\u3002\u5982\u679c\u6536\u5230\u6bb5\u7684\u68c0\u9a8c\u548c\u6709\u5dee\u9519\uff0cTCP\u5c06\u4e22\u5f03\u8fd9\u4e2a\u62a5\u6587\u6bb5\u548c\u4e0d\u786e\u8ba4\u6536\u5230\u6b64\u62a5\u6587\u6bb5\u3002\nTCP\u7684\u63a5\u6536\u7aef\u4f1a\u4e22\u5f03\u91cd\u590d\u7684\u6570\u636e\u3002\n\u6d41\u91cf\u63a7\u5236\uff1aTCP\u8fde\u63a5\u7684\u6bcf\u4e00\u65b9\u90fd\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u7a7a\u95f4\uff0cTCP\u7684\u63a5\u6536\u7aef\u53ea\u5141\u8bb8\u53d1\u9001\u7aef\u53d1\u9001\u63a5\u6536\u7aef\u7f13\u51b2\u533a\u80fd\u63a5\u7eb3\u7684\u6211\u6570\u636e\u3002\u5f53\u63a5\u6536\u65b9\u6765\u4e0d\u53ca\u5904\u7406\u53d1\u9001\u65b9\u7684\u6570\u636e\uff0c\u80fd\u63d0\u793a\u53d1\u9001\u65b9\u964d\u4f4e\u53d1\u9001\u7684\u901f\u7387\uff0c\u9632\u6b62\u5305\u4e22\u5931\u3002TCP\u4f7f\u7528\u7684\u6d41\u91cf\u63a7\u5236\u534f\u8bae\u662f\u53ef\u53d8\u5927\u5c0f\u7684\u6ed1\u52a8\u7a97\u53e3\u534f\u8bae\u3002\n\u62e5\u585e\u63a7\u5236\uff1a\u5f53\u7f51\u7edc\u62e5\u585e\u65f6\uff0c\u51cf\u5c11\u6570\u636e\u7684\u53d1\u9001\u3002\n\nTCP\u6ed1\u52a8\u7a97\u2f1d\u548c\u6d41\u91cf\u63a7\u5236\n\u53c2\u8003\n\nhttps://blog.csdn.net/qq_37653144/article/details/82765098\n\n\n\u200b       TCP \u5229\u2f64\u6ed1\u52a8\u7a97\u2f1d\u5b9e\u73b0\u6d41\u91cf\u63a7\u5236\u3002\u6d41\u91cf\u63a7\u5236\u662f\u4e3a\u4e86\u63a7\u5236\u53d1\u9001\u2f45\u53d1\u9001\u901f\u7387\uff0c\u4fdd\u8bc1\u63a5\u6536\u2f45\u6765\u5f97\u53ca\u63a5\u6536\u3002 \u63a5 \u6536\u2f45\u53d1\u9001\u7684\u786e\u8ba4\u62a5\u2f42\u4e2d\u7684\u7a97\u2f1d\u5b57\u6bb5\u53ef\u4ee5\u2f64\u6765\u63a7\u5236\u53d1\u9001\u2f45\u7a97\u2f1d\u2f24\u2f29\uff0c\u4ece\u2f7d\u5f71\u54cd\u53d1\u9001\u2f45\u7684\u53d1\u9001\u901f\u7387\u3002\u5c06\u7a97\u2f1d \u5b57\u6bb5\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u53d1\u9001\u2f45\u4e0d\u80fd\u53d1\u9001\u6570\u636e\u3002\nUDP\n\u200b       UDP\u534f\u8bae\u5168\u79f0\u662f\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff0c\u5728\u7f51\u7edc\u4e2d\u5b83\u4e0eTCP\u534f\u8bae\u4e00\u6837\u7528\u4e8e\u5904\u7406\u6570\u636e\u5305\uff0c\u662f\u4e00\u79cd\u65e0\u8fde\u63a5\u7684\u534f\u8bae\u3002\u5728OSI\u6a21\u578b\u4e2d\uff0c\u5728\u7b2c\u56db\u5c42\u2014\u2014\u4f20\u8f93\u5c42\uff0c\u5904\u4e8eIP\u534f\u8bae\u7684\u4e0a\u4e00\u5c42\u3002UDP\u6709\u4e0d\u63d0\u4f9b\u6570\u636e\u5305\u5206\u7ec4\u3001\u7ec4\u88c5\u548c\u4e0d\u80fd\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u6392\u5e8f\u7684\u7f3a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u62a5\u6587\u53d1\u9001\u4e4b\u540e\uff0c\u662f\u65e0\u6cd5\u5f97\u77e5\u5176\u662f\u5426\u5b89\u5168\u5b8c\u6574\u5230\u8fbe\u7684\u3002\n\u7279\u70b9\n\n\u9762\u5411\u65e0\u8fde\u63a5\n\n\u9996\u5148 UDP \u662f\u4e0d\u9700\u8981\u548c TCP\u4e00\u6837\u5728\u53d1\u9001\u6570\u636e\u524d\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\u5efa\u7acb\u8fde\u63a5\u7684\uff0c\u60f3\u53d1\u6570\u636e\u5c31\u53ef\u4ee5\u5f00\u59cb\u53d1\u9001\u4e86\u3002\u5e76\u4e14\u4e5f\u53ea\u662f\u6570\u636e\u62a5\u6587\u7684\u642c\u8fd0\u5de5\uff0c\u4e0d\u4f1a\u5bf9\u6570\u636e\u62a5\u6587\u8fdb\u884c\u4efb\u4f55\u62c6\u5206\u548c\u62fc\u63a5\u64cd\u4f5c\u3002\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\uff1a\n\n\u5728\u53d1\u9001\u7aef\uff0c\u5e94\u7528\u5c42\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u4f20\u8f93\u5c42\u7684 UDP \u534f\u8bae\uff0cUDP \u53ea\u4f1a\u7ed9\u6570\u636e\u589e\u52a0\u4e00\u4e2a UDP \u5934\u6807\u8bc6\u4e0b\u662f UDP \u534f\u8bae\uff0c\u7136\u540e\u5c31\u4f20\u9012\u7ed9\u7f51\u7edc\u5c42\u4e86\n\u5728\u63a5\u6536\u7aef\uff0c\u7f51\u7edc\u5c42\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u4f20\u8f93\u5c42\uff0cUDP \u53ea\u53bb\u9664 IP \u62a5\u6587\u5934\u5c31\u4f20\u9012\u7ed9\u5e94\u7528\u5c42\uff0c\u4e0d\u4f1a\u4efb\u4f55\u62fc\u63a5\u64cd\u4f5c\n\n\n\u6709\u5355\u64ad\uff0c\u591a\u64ad\uff0c\u5e7f\u64ad\u7684\u529f\u80fd\n\nUDP \u4e0d\u6b62\u652f\u6301\u4e00\u5bf9\u4e00\u7684\u4f20\u8f93\u65b9\u5f0f\uff0c\u540c\u6837\u652f\u6301\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\u7684\u65b9\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4 UDP \u63d0\u4f9b\u4e86\u5355\u64ad\uff0c\u591a\u64ad\uff0c\u5e7f\u64ad\u7684\u529f\u80fd\u3002\n\nUDP\u662f\u9762\u5411\u62a5\u6587\u7684\n\n\u53d1\u9001\u65b9\u7684UDP\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e0b\u6765\u7684\u62a5\u6587\uff0c\u5728\u6dfb\u52a0\u9996\u90e8\u540e\u5c31\u5411\u4e0b\u4ea4\u4ed8IP\u5c42\u3002UDP\u5bf9\u5e94\u7528\u5c42\u4ea4\u4e0b\u6765\u7684\u62a5\u6587\uff0c\u65e2\u4e0d\u5408\u5e76\uff0c\u4e5f\u4e0d\u62c6\u5206\uff0c\u800c\u662f\u4fdd\u7559\u8fd9\u4e9b\u62a5\u6587\u7684\u8fb9\u754c\u3002\u56e0\u6b64\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u9009\u62e9\u5408\u9002\u5927\u5c0f\u7684\u62a5\u6587\n\n\u4e0d\u53ef\u9760\u6027\n\n\u9996\u5148\u4e0d\u53ef\u9760\u6027\u4f53\u73b0\u5728\u65e0\u8fde\u63a5\u4e0a\uff0c\u901a\u4fe1\u90fd\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5\uff0c\u60f3\u53d1\u5c31\u53d1\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u80af\u5b9a\u4e0d\u53ef\u9760\u3002\n\u5e76\u4e14\u6536\u5230\u4ec0\u4e48\u6570\u636e\u5c31\u4f20\u9012\u4ec0\u4e48\u6570\u636e\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u5907\u4efd\u6570\u636e\uff0c\u53d1\u9001\u6570\u636e\u4e5f\u4e0d\u4f1a\u5173\u5fc3\u5bf9\u65b9\u662f\u5426\u5df2\u7ecf\u6b63\u786e\u63a5\u6536\u5230\u6570\u636e\u4e86\u3002\n\u518d\u8005\u7f51\u7edc\u73af\u5883\u65f6\u597d\u65f6\u574f\uff0c\u4f46\u662f UDP \u56e0\u4e3a\u6ca1\u6709\u62e5\u585e\u63a7\u5236\uff0c\u4e00\u76f4\u4f1a\u4ee5\u6052\u5b9a\u7684\u901f\u5ea6\u53d1\u9001\u6570\u636e\u3002\u5373\u4f7f\u7f51\u7edc\u6761\u4ef6\u4e0d\u597d\uff0c\u4e5f\u4e0d\u4f1a\u5bf9\u53d1\u9001\u901f\u7387\u8fdb\u884c\u8c03\u6574\u3002\u8fd9\u6837\u5b9e\u73b0\u7684\u5f0a\u7aef\u5c31\u662f\u5728\u7f51\u7edc\u6761\u4ef6\u4e0d\u597d\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e22\u5305\uff0c\u4f46\u662f\u4f18\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u5728\u67d0\u4e9b\u5b9e\u65f6\u6027\u8981\u6c42\u9ad8\u7684\u573a\u666f\uff08\u6bd4\u5982\u7535\u8bdd\u4f1a\u8bae\uff09\u5c31\u9700\u8981\u4f7f\u7528 UDP \u800c\u4e0d\u662f TCP\u3002\n\n\u5934\u90e8\u5f00\u9500\u5c0f\uff0c\u4f20\u8f93\u6570\u636e\u62a5\u6587\u65f6\u662f\u5f88\u9ad8\u6548\u7684\u3002\n\nTCP | UDP \u533a\u522b\n\n\n\nUDP\nTCP\n\n\n\n\n\u662f\u5426\u8fde\u63a5\n\u65e0\u8fde\u63a5\n\u9762\u5411\u8fde\u63a5\n\n\n\u662f\u5426\u53ef\u9760\n\u4e0d\u53ef\u9760\u4f20\u8f93\uff0c\u4e0d\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\n\u53ef\u9760\u4f20\u8f93\uff0c\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u548c\u62e5\u585e\u63a7\u5236\n\n\n\u8fde\u63a5\u5bf9\u8c61\u4e2a\u6570\n\u652f\u6301\u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u4e00\u548c\u591a\u5bf9\u591a\u4ea4\u4e92\u901a\u4fe1\n\u53ea\u80fd\u662f\u4e00\u5bf9\u4e00\u901a\u4fe1\n\n\n\u4f20\u8f93\u65b9\u5f0f\n\u9762\u5411\u62a5\u6587\n\u9762\u5411\u5b57\u8282\u6d41\n\n\n\u9996\u90e8\u5f00\u9500\n\u9996\u90e8\u5f00\u9500\u5c0f\uff0c\u4ec58\u5b57\u8282\n\u9996\u90e8\u6700\u5c0f20\u5b57\u8282\uff0c\u6700\u592760\u5b57\u8282\n\n\n\u9002\u7528\u573a\u666f\n\u9002\u7528\u4e8e\u5b9e\u65f6\u5e94\u7528\uff08IP\u7535\u8bdd\u3001\u89c6\u9891\u4f1a\u8bae\u3001\u76f4\u64ad\u7b49\uff09\n\u9002\u7528\u4e8e\u8981\u6c42\u53ef\u9760\u4f20\u8f93\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u6587\u4ef6\u4f20\u8f93\n\n\n\n\nTCP\u5411\u4e0a\u5c42\u63d0\u4f9b\u9762\u5411\u8fde\u63a5\u7684\u53ef\u9760\u670d\u52a1 \uff0cUDP\u5411\u4e0a\u5c42\u63d0\u4f9b\u65e0\u8fde\u63a5\u4e0d\u53ef\u9760\u670d\u52a1\u3002\n\u867d\u7136 UDP \u5e76\u6ca1\u6709 TCP \u4f20\u8f93\u6765\u7684\u51c6\u786e\uff0c\u4f46\u662f\u4e5f\u80fd\u5728\u5f88\u591a\u5b9e\u65f6\u6027\u8981\u6c42\u9ad8\u7684\u5730\u65b9\u6709\u6240\u4f5c\u4e3a\n\u5bf9\u6570\u636e\u51c6\u786e\u6027\u8981\u6c42\u9ad8\uff0c\u901f\u5ea6\u53ef\u4ee5\u76f8\u5bf9\u8f83\u6162\u7684\uff0c\u53ef\u4ee5\u9009\u7528TCP\n\nSSL\u63e1\u624b\u534f\u8bae\n\u53c2\u8003\n\nhttp://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html\nhttps://www.cnblogs.com/sunfb/p/3443221.html\n\n\nSSL\u7684\u63e1\u624b\u8fc7\u7a0b\u4e25\u683c\u8bf4\u662fSSL\u534f\u8bae\u7684\u5b50\u534f\u8bae\uff0cRFC5246(SSL V1.2\uff09\u5206\u4e3a\u4e09\u4e2a\u5b50\u534f\u8bae\uff0c\u63e1\u624b\u534f\u8bae\uff0c\u8bb0\u5f55\u534f\u8bae\uff08\u52a0\u5bc6\u4f20\u8f93\u6570\u636e\uff09\u548c\u544a\u8b66\u534f\u8bae\uff08\u7528\u4e8e\u544a\u8b66\u548c\u5173\u95ed\u8fde\u63a5\uff09\u3002\u63e1\u624b\u8fc7\u7a0b\u5b9e\u9645\u5c31\u662f\u63e1\u624b\u534f\u8bae\u7684\u5185\u5bb9\u3002\n\n\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u9700\u8981\u5c31\u4e00\u7ec4\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u7684\u7b97\u6cd5\u8fbe\u6210\u4e00\u81f4\uff1b\n\u5b83\u4eec\u9700\u8981\u786e\u7acb\u4e00\u7ec4\u7531\u90a3\u4e9b\u7b97\u6cd5\u6240\u4f7f\u7528\u7684\u52a0\u5bc6\u5bc6\u94a5\uff1b\n\u63e1\u624b\u8fd8\u53ef\u4ee5\u9009\u62e9\u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u8ba4\u8bc1\u3002\n\n1. Client Hello\n\u5ba2\u6237\u7aef\u53d1\u8d77\u4f1a\u8bdd\uff0c\u91cc\u9762\u6709\u4ee5\u4e0b\u4e24\u4e2a\u4fe1\u606f\u6700\u4e3a\u91cd\u8981\n\n\u5ba2\u6237\u7aef\u968f\u673a\u6570\uff0c\u7528\u4e8e\u751f\u6210\u4e3b\u5bc6\u94a5\uff1b\n\u5ba2\u6237\u7aef\u652f\u6301\u7684\u5bc6\u7801\u5957\u4ef6\u5217\u8868\uff0c\u5177\u4f53\u4e0d\u5c55\u5f00\uff0c\u63d0\u4f9b\u5f88\u591a\u5185\u5bb9\uff0c\u5173\u952e\u770b\u670d\u52a1\u5668\u7aef\u9009\u54ea\u4e2a\u7ec4\u5408\u3002\n\n2. Server Hello\n\u670d\u52a1\u7aef\u4ea7\u751f\u7b2c\u4e00\u6b21\u5e94\u7b54\uff0c\u91cc\u9762\u540c\u6837\u6709\u4e24\u4e2a\u4fe1\u606f\u5f88\u91cd\u8981\n\n\u670d\u52a1\u7aef\u968f\u673a\u6570\uff0c\u7528\u4e8e\u751f\u6210\u4e3b\u5bc6\u94a5\uff1b\n\u786e\u5b9a\u5bc6\u7801\u5957\u4ef6\uff08\u4e0b\u56fe\u7ea2\u6846\u6240\u793a\uff09\uff0c\u8fd9\u91cc\u5c31\u770b\u51fa\u670d\u52a1\u5668\u5c06\u4f7f\u7528DH\u7b97\u6cd5\u4f5c\u4e3a\u5bc6\u94a5\u4ea4\u6362\u7b97\u6cd5\uff0c\u8fd9\u5728\u63e1\u624b\u8fc7\u7a0b\u4e2d\u4f1a\u548cRSA\u6709\u6240\u533a\u522b\uff0c\u6ce8\u610f\u8fd9\u4e0d\u662f\u52a0\u5bc6\u7b97\u6cd5\uff0cAES_128_GCM\u624d\u662f\uff0c\u4e0d\u5728\u672c\u6587\u8ba8\u8bba\u8303\u56f4\u5185\u3002\n\n3. Certificate\n\u670d\u52a1\u7aef\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u81ea\u5df1\u7684\u8bc1\u4e66\uff0c\u5f53\u524d\u663e\u793a\u8fd9\u662f\u4e00\u4e2a\u81ea\u7b7e\u7684\u8bc1\u4e66\uff08keytool\u5de5\u5177\u751f\u6210\uff09\u8bc1\u4e66\u66f4\u591a\u7684\u662f\u9a8c\u8bc1\u8eab\u4efd\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u516c\u94a5\uff0c\u53ef\u7528\u4e8eRSA\u5bc6\u94a5\u4ea4\u6362\u7b97\u6cd5\u7684\u52a0\u5bc6\u3002\n\u5e38\u89c1\u7684HTTP\u72b6\u6001\u7801\u4ee5\u53ca\u5176\u4ee3\u8868\u7684\u542b\u4e49\n\u53c2\u8003\n\nhttps://www.cnblogs.com/wpf1913/articles/http-state.html\n\n\n\u6210\u529f2\u00d7\u00d7\uff1a\u6210\u529f\u5904\u7406\u4e86\u8bf7\u6c42\u7684\u72b6\u6001\u7801\u3002\n200            \u670d\u52a1\u5668\u5df2\u6210\u529f\u5904\u7406\u4e86\u8bf7\u6c42\u5e76\u63d0\u4f9b\u4e86\u8bf7\u6c42\u7684\u7f51\u9875\u3002\n204            \u670d\u52a1\u5668\u6210\u529f\u5904\u7406\u4e86\u8bf7\u6c42\uff0c\u4f46\u6ca1\u6709\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u3002\n\u200b\n\u91cd\u5b9a\u54113\u00d7\u00d7\uff1a\u6bcf\u6b21\u8bf7\u6c42\u4e2d\u4f7f\u7528\u91cd\u5b9a\u5411\u4e0d\u8981\u8d85\u8fc7 5 \u6b21\u3002\n301            \u8bf7\u6c42\u7684\u7f51\u9875\u5df2\u6c38\u4e45\u79fb\u52a8\u5230\u65b0\u4f4d\u7f6e\u3002\u5f53URLs\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4f7f\u7528301\u4ee3\u7801\u3002\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u4e2d\u4fdd\u5b58\u65b0\u7684URL\u3002\n302            \u8bf7\u6c42\u7684\u7f51\u9875\u4e34\u65f6\u79fb\u52a8\u5230\u65b0\u4f4d\u7f6e\u3002\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u4e2d\u4fdd\u5b58\u539f\u6765\u7684URL\u3002\n304            \u5982\u679c\u7f51\u9875\u81ea\u8bf7\u6c42\u8005\u4e0a\u6b21\u8bf7\u6c42\u540e\u6ca1\u6709\u66f4\u65b0\uff0c\u5219\u7528304\u4ee3\u7801\u544a\u8bc9\u641c\u7d22\u5f15\u64ce\u673a\u5668\u4eba\uff0c\u53ef\u8282\u7701\u5e26\u5bbd\u548c\u5f00\u9500\u3002\n\u5ba2\u6237\u7aef\u9519\u8bef4\u00d7\u00d7\uff1a\u8868\u793a\u8bf7\u6c42\u53ef\u80fd\u51fa\u9519\uff0c\u59a8\u788d\u4e86\u670d\u52a1\u5668\u7684\u5904\u7406\u3002\n400             \u670d\u52a1\u5668\u4e0d\u7406\u89e3\u8bf7\u6c42\u7684\u8bed\u6cd5\u3002\n403             \u670d\u52a1\u5668\u62d2\u7edd\u8bf7\u6c42\u3002\n404             \u670d\u52a1\u5668\u627e\u4e0d\u5230\u8bf7\u6c42\u7684\u7f51\u9875\u3002\u670d\u52a1\u5668\u4e0a\u4e0d\u5b58\u5728\u7684\u7f51\u9875\u7ecf\u5e38\u4f1a\u8fd4\u56de\u6b64\u4ee3\u7801\u3002\n410             \u8bf7\u6c42\u7684\u8d44\u6e90\u6c38\u4e45\u5220\u9664\u540e\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u6b64\u54cd\u5e94\u3002\u8be5\u4ee3\u7801\u4e0e 404\uff08\u672a\u627e\u5230\uff09\u4ee3\u7801\u76f8\u4f3c\uff0c\u4f46\u5728\u8d44\u6e90\u4ee5\u524d\u5b58\u5728\u800c\u73b0\u5728\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u65f6\u7528\u6765\u66ff\u4ee3404 \u4ee3\u7801\u3002\u5982\u679c\u8d44\u6e90\u5df2\u6c38\u4e45\u5220\u9664\uff0c\u5e94\u5f53\u4f7f\u7528 301 \u6307\u5b9a\u8d44\u6e90\u7684\u65b0\u4f4d\u7f6e\u3002\n\u670d\u52a1\u5668\u9519\u8bef5\u00d7\u00d7\uff1a\u8868\u793a\u670d\u52a1\u5668\u5728\u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u5185\u90e8\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u662f\u670d\u52a1\u5668\u672c\u8eab\u7684\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u8bf7\u6c42\u51fa\u9519\u3002\n500              \u670d\u52a1\u5668\u9047\u5230\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\u3002\n503              \u670d\u52a1\u5668\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\uff08\u7531\u4e8e\u8d85\u8f7d\u6216\u505c\u673a\u7ef4\u62a4\uff09\u3002\u901a\u5e38\uff0c\u8fd9\u53ea\u662f\u6682\u65f6\u72b6\u6001\u3002\n\u6570\u636e\u7ed3\u6784\n01.\u5047\u8bbe\u6574\u6570\u4e58\u6cd5\u8fd0\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c \u8ba1\u7b97\u6574\u6570\u7684 n \u6b21\u5e42( n&gt;0)\uff0c \u6700\u5feb\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\nO(logn)\n\n\u4f7f\u7528\u5feb\u901f\u5e42\nLinux\n", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}]}, {"title": "Mysql&Redis\u6570\u636e\u5e93\u9762\u8bd5\u9898", "date": "2020-08-08T23:26:48-00.00", "path": "/archives/Mysql&Redis\u6570\u636e\u5e93\u9762\u8bd5\u9898/", "text": "Mysql&amp;Redis\u6570\u636e\u5e93\u9762\u8bd5\u9898\n", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}, {"name": "Mysql", "slug": "Mysql", "permalink": "/tag/Mysql/"}]}, {"title": "Spring\u6846\u67b6\u9762\u8bd5\u9898", "date": "2020-08-08T23:25:58-00.00", "path": "/archives/Spring\u6846\u67b6\u9762\u8bd5\u9898/", "text": "1 Spring\n1.1 \u4ec0\u4e48\u662f Spring \u6846\u67b6?\n\u200b       spring\u662f\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7\u6846\u67b6\u3002\u6211\u4eec\u2f00\u822c\u8bf4 Spring \u6846\u67b6\u6307\u7684\u90fd\u662f Spring Framework\uff0c\u5b83\u662f\u5f88\u591a\u6a21\u5757\u7684\u96c6\u5408\uff0c\u4f7f\u2f64\u8fd9\u4e9b\u6a21\u5757\u53ef\u4ee5\u5f88\u2f45 \u4fbf\u5730\u534f\u52a9\u6211\u4eec\u8fdb\u2f8f\u5f00\u53d1\u3002\u8fd9\u4e9b\u6a21\u5757\u662f\uff1a\u6838\u2f3c\u5bb9\u5668\u3001\u6570\u636e\u8bbf\u95ee/\u96c6\u6210,\u3001Web\u3001AOP\uff08\u2faf\u5411\u5207\u2faf\u7f16\u7a0b\uff09\u3001\u2f2f \u5177\u3001\u6d88\u606f\u548c\u6d4b\u8bd5\u6a21\u5757\u3002\u2f50\u5982\uff1aCore Container \u4e2d\u7684 Core \u7ec4\u4ef6\u662fSpring \u6240\u6709\u7ec4\u4ef6\u7684\u6838\u2f3c\uff0cBeans \u7ec4\u4ef6 \u548c Context \u7ec4\u4ef6\u662f\u5b9e\u73b0IOC\u548c\u4f9d\u8d56\u6ce8\u2f0a\u7684\u57fa\u7840\uff0cAOP\u7ec4\u4ef6\u2f64\u6765\u5b9e\u73b0\u2faf\u5411\u5207\u2faf\u7f16\u7a0b\u3002\nSpring \u5b98\u2f79\u5217\u51fa\u7684 Spring \u7684 6 \u4e2a\u7279\u5f81:\n\n\u6838\u2f3c\u6280\u672f \uff1a\u4f9d\u8d56\u6ce8\u2f0a(DI)\uff0cAOP\uff0c\u4e8b\u4ef6(events)\uff0c\u8d44\u6e90\uff0ci18n\uff0c\u9a8c\u8bc1\uff0c\u6570\u636e\u7ed1\u5b9a\uff0c\u7c7b\u578b\u8f6c\u6362\uff0c SpEL\u3002\n\u6d4b\u8bd5 \uff1a\u6a21\u62df\u5bf9\u8c61\uff0cTestContext\u6846\u67b6\uff0cSpring MVC \u6d4b\u8bd5\uff0cWebTestClient\u3002 \n\u6570\u636e\u8bbf\u95ee \uff1a\u4e8b\u52a1\uff0cDAO\u2f40\u6301\uff0cJDBC\uff0cORM\uff0c\u7f16\u7ec4XML\u3002 \nWeb\u2f40\u6301 : Spring MVC\u548cSpring WebFlux Web\u6846\u67b6\u3002 \n\u96c6\u6210 \uff1a\u8fdc\u7a0b\u5904\u7406\uff0cJMS\uff0cJCA\uff0cJMX\uff0c\u7535\u2f26\u90ae\u4ef6\uff0c\u4efb\u52a1\uff0c\u8c03\u5ea6\uff0c\u7f13\u5b58\u3002 \n\u8bed\u2f94 \uff1aKotlin\uff0cGroovy\uff0c\u52a8\u6001\u8bed\u2f94\u3002\n\n\u7279\u70b9\uff1a\n\n\u65b9\u4fbf\u89e3\u8026\uff0c\u7b80\u5316\u5f00\u53d1\n\n\u3000\u3000\u901a\u8fc7Spring\u63d0\u4f9b\u7684IoC\u5bb9\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u4ea4\u7531Spring\u8fdb\u884c\u63a7\u5236\uff0c\u907f\u514d\u786c\u7f16\u7801\u6240\u9020\u6210\u7684\u8fc7\u5ea6\u7a0b\u5e8f\u8026\u5408\u3002\u6709\u4e86Spring\uff0c\u7528\u6237\u4e0d\u5fc5\u518d\u4e3a\u5355\u5b9e\u4f8b\u6a21\u5f0f\u7c7b\u3001\u5c5e\u6027\u6587\u4ef6\u89e3\u6790\u7b49\u8fd9\u4e9b\u5f88\u5e95\u5c42\u7684\u9700\u6c42\u7f16\u5199\u4ee3\u7801\uff0c\u53ef\u4ee5\u66f4\u4e13\u6ce8\u4e8e\u4e0a\u5c42\u7684\u5e94\u7528\u3002\n\nAOP\u7f16\u7a0b\u7684\u652f\u6301\n\n\u3000\u3000\u901a\u8fc7Spring\u63d0\u4f9b\u7684AOP\u529f\u80fd\uff0c\u65b9\u4fbf\u8fdb\u884c\u9762\u5411\u5207\u9762\u7684\u7f16\u7a0b\uff0c\u8bb8\u591a\u4e0d\u5bb9\u6613\u7528\u4f20\u7edfOOP\u5b9e\u73b0\u7684\u529f\u80fd\u53ef\u4ee5\u901a\u8fc7AOP\u8f7b\u677e\u5e94\u4ed8\u3002\n\n\u58f0\u660e\u4e8b\u7269\u7684\u652f\u6301\n\n\u3000\u3000\u5728Spring\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5355\u8c03\u70e6\u95f7\u7684\u4e8b\u52a1\u7ba1\u7406\u4ee3\u7801\u4e2d\u89e3\u8131\u51fa\u6765\uff0c\u901a\u8fc7\u58f0\u660e\u5f0f\u65b9\u5f0f\u7075\u6d3b\u5730\u8fdb\u884c\u4e8b\u52a1\u7684\u7ba1\u7406\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u548c\u8d28\u91cf\u3002\n\n\u65b9\u4fbf\u7a0b\u5e8f\u7684\u6d4b\u8bd5\n\n\u3000\u3000\u53ef\u4ee5\u7528\u975e\u5bb9\u5668\u4f9d\u8d56\u7684\u7f16\u7a0b\u65b9\u5f0f\u8fdb\u884c\u51e0\u4e4e\u6240\u6709\u7684\u6d4b\u8bd5\u5de5\u4f5c\uff0c\u5728Spring\u91cc\uff0c\u6d4b\u8bd5\u4e0d\u518d\u662f\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u800c\u662f\u968f\u624b\u53ef\u505a\u7684\u4e8b\u60c5\u3002\u4f8b\u5982\uff1aSpring\u5bf9Junit4\u652f\u6301\uff0c\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3\u65b9\u4fbf\u7684\u6d4b\u8bd5Spring\u7a0b\u5e8f\u3002\n\n\u65b9\u4fbf\u96c6\u6210\u5404\u79cd\u4f18\u79c0\u6846\u67b6\n\n\u3000\u3000Spring\u4e0d\u6392\u65a5\u5404\u79cd\u4f18\u79c0\u7684\u5f00\u6e90\u6846\u67b6\uff0c\u76f8\u53cd\uff0cSpring\u53ef\u4ee5\u964d\u4f4e\u5404\u79cd\u6846\u67b6\u7684\u4f7f\u7528\u96be\u5ea6\uff0cSpring\u63d0\u4f9b\u4e86\u5bf9\u5404\u79cd\u4f18\u79c0\u6846\u67b6\uff08\u5982Struts,Hibernate\u3001Hessian\u3001Quartz\uff09\u7b49\u7684\u76f4\u63a5\u652f\u6301\u3002\n\n\u964d\u4f4eJava EE API\u7684\u4f7f\u7528\u96be\u5ea6\n\n\u3000\u3000Spring\u5bf9\u5f88\u591a\u96be\u7528\u7684Java EE API\uff08\u5982JDBC\uff0cJavaMail\uff0c\u8fdc\u7a0b\u8c03\u7528\u7b49\uff09\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8584\u8584\u7684\u5c01\u88c5\u5c42\uff0c\u901a\u8fc7Spring\u7684\u7b80\u6613\u5c01\u88c5\uff0c\u8fd9\u4e9bJava EE API\u7684\u4f7f\u7528\u96be\u5ea6\u5927\u4e3a\u964d\u4f4e\u3002\n\nJava \u6e90\u7801\u662f\u7ecf\u5178\u5b66\u4e60\u8303\u4f8b\n\n\u3000\u3000\u3000\u3000Spring\u7684\u6e90\u7801\u8bbe\u8ba1\u7cbe\u5999\u3001\u7ed3\u6784\u6e05\u6670\u3001\u5320\u5fc3\u72ec\u7528\uff0c\u5904\u5904\u4f53\u73b0\u7740\u5927\u5e08\u5bf9Java\u8bbe\u8ba1\u6a21\u5f0f\u7075\u6d3b\u8fd0\u7528\u4ee5\u53ca\u5bf9Java\u6280\u672f\u7684\u9ad8\u6df1\u9020\u8be3\u3002Spring\u6846\u67b6\u6e90\u7801\u65e0\u7591\u662fJava\u6280\u672f\u7684\u6700\u4f73\u5b9e\u8df5\u8303\u4f8b\u3002\u5982\u679c\u60f3\u5728\u77ed\u65f6\u95f4\u5185\u8fc5\u901f\u63d0\u9ad8\u81ea\u5df1\u7684Java\u6280\u672f\u6c34\u5e73\u548c\u5e94\u7528\u5f00\u53d1\u6c34\u5e73\uff0c\u5b66\u4e60\u548c\u7814\u7a76Spring\u6e90\u7801\u5c06\u4f1a\u4f7f\u4f60\u6536\u5230\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\u3002\n1.2 AOP\u548cIOC\nAOP(Aspect-Oriented Programming\uff0c\u9762\u5411\u5207\u9762\u7f16\u7a0b)\n\u53c2\u8003\n\nSpring\u4e4bAOP\n\u8f7b\u677e\u7406\u89e3AOP\u601d\u60f3(\u9762\u5411\u5207\u9762\u7f16\u7a0b)\nAOP \u90a3\u70b9\u4e8b\u513f\nOOP\u7684\u5b8c\u7f8e\u70b9\u7f00\u2014AOP\u4e4bSpringAOP\u5b9e\u73b0\u539f\u7406\nSpring\u4e4bAOP\n\n\n\u200b       \u9762\u5411\u5207\u9762\u7f16\u7a0b\uff0c\u901a\u8fc7\u9884\u7f16\u8bd1\u65b9\u5f0f\u548c\u8fd0\u884c\u671f\u52a8\u6001\u4ee3\u7406\u5b9e\u73b0\u7a0b\u5e8f\u529f\u80fd\u7684\u7edf\u4e00\u7ef4\u62a4\u7684\u4e00\u79cd\u6280\u672f\u3002AOP\u662fOOP\u7684\u5ef6\u7eed\uff0c\u662f\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u4e00\u4e2a \u70ed\u70b9\uff0c\u4e5f\u662fSpring\u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u5185\u5bb9\uff0c\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4e00\u79cd\u884d\u751f\u8303\u578b\u3002\u5229\u7528AOP\u53ef\u4ee5\u5bf9\u4e1a\u52a1\u903b\u8f91 \u7684\u5404\u4e2a\u90e8\u5206\u8fdb\u884c\u9694\u79bb\uff0c\u4ece\u800c\u4f7f\u5f97\u4e1a\u52a1\u903b\u8f91\u5404\u90e8\u5206\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\u964d\u4f4e\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u53ef\u91cd\u7528\u6027\uff0c\u540c\u65f6\u63d0\u9ad8 \u4e86\u5f00\u53d1\u7684\u6548\u7387\u3002\n\u200b       \u8981\u7406\u89e3\u5207\u9762\u7f16\u7a0b\uff0c\u5c31\u9700\u8981\u5148\u7406\u89e3\u4ec0\u4e48\u662f\u5207\u9762\u3002\u7528\u5200\u628a\u4e00\u4e2a\u897f\u74dc\u5206\u6210\u4e24\u74e3\uff0c\u5207\u5f00\u7684\u5207\u53e3\u5c31\u662f\u5207\u9762\uff1b\u7092\u83dc\uff0c\u9505\u4e0e\u7089\u5b50\u5171\u540c\u6765\u5b8c\u6210\u7092\u83dc\uff0c\u9505\u4e0e\u7089\u5b50\u5c31\u662f\u5207\u9762\u3002web\u5c42\u7ea7\u8bbe\u8ba1\u4e2d\uff0cweb\u5c42-&gt;\u7f51\u5173\u5c42-&gt;\u670d\u52a1\u5c42-&gt;\u6570\u636e\u5c42\uff0c\u6bcf\u4e00\u5c42\u4e4b\u95f4\u4e5f\u662f\u4e00\u4e2a\u5207\u9762\u3002\u7f16\u7a0b\u4e2d\uff0c\u5bf9\u8c61\u4e0e\u5bf9\u8c61\u4e4b\u95f4\uff0c\u65b9\u6cd5\u4e0e\u65b9\u6cd5\u4e4b\u95f4\uff0c\u6a21\u5757\u4e0e\u6a21\u5757\u4e4b\u95f4\u90fd\u662f\u4e00\u4e2a\u4e2a\u5207\u9762\u3002\n\u5b9e\u4f8b\u7406\u89e3\uff1a\n1.\u6211\u4eec\u4e00\u822c\u505a\u6d3b\u52a8\u7684\u65f6\u5019\uff0c\u4e00\u822c\u5bf9\u6bcf\u4e00\u4e2a\u63a5\u53e3\u90fd\u4f1a\u505a\u6d3b\u52a8\u7684\u6709\u6548\u6027\u6821\u9a8c\uff08\u662f\u5426\u5f00\u59cb\u3001\u662f\u5426\u7ed3\u675f\u7b49\u7b49\uff09\u3001\u4ee5\u53ca\u8fd9\u4e2a\u63a5\u53e3\u662f\u4e0d\u662f\u9700\u8981\u7528\u6237\u767b\u5f55\u3002\n\n2.\u8fd9\u6709\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u6709\u591a\u5c11\u63a5\u53e3\uff0c\u5c31\u8981\u591a\u5c11\u6b21\u4ee3\u7801copy\u3002\u5bf9\u4e8e\u4e00\u4e2a\u201c\u61d2\u4eba\u201d\uff0c\u8fd9\u662f\u4e0d\u53ef\u5bb9\u5fcd\u7684\u3002\u597d\uff0c\u63d0\u51fa\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\uff0c\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6765\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\u3002\u8fd9\u91cc\u6709\u70b9\u5207\u9762\u7684\u5473\u9053\u4e86\u3002\n\n3.\u540c\u6837\u6709\u4e2a\u95ee\u9898\uff0c\u6211\u867d\u7136\u4e0d\u7528\u6bcf\u6b21\u90fdcopy\u4ee3\u7801\u4e86\uff0c\u4f46\u662f\uff0c\u6bcf\u4e2a\u63a5\u53e3\u603b\u5f97\u8981\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5427\u3002\u4e8e\u662f\u5c31\u6709\u4e86\u5207\u9762\u7684\u6982\u5ff5\uff0c\u6211\u5c06\u65b9\u6cd5\u6ce8\u5165\u5230\u63a5\u53e3\u8c03\u7528\u7684\u67d0\u4e2a\u5730\u65b9\uff08\u5207\u70b9\uff09\u3002\u8fd9\u6837\u63a5\u53e3\u53ea\u9700\u8981\u5173\u5fc3\u5177\u4f53\u7684\u4e1a\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u5173\u6ce8\u5176\u4ed6\u975e\u8be5\u63a5\u53e3\u5173\u6ce8\u7684\u903b\u8f91\u6216\u5904\u7406\u3002\n\n\u6982\u5ff5&amp;\u5173\u952e\u8bcd\n\n\u8fde\u63a5\u70b9\uff08Join point\uff09\uff1a\u7a0b\u5e8f\u6267\u884c\u7684\u67d0\u4e2a\u7279\u5b9a\u4f4d\u7f6e\uff1a\u5982\u7c7b\u5f00\u59cb\u521d\u59cb\u5316\u4e4b\u524d\u3001\u7c7b\u521d\u59cb\u5316\u4e4b\u540e\u3001\u7c7b\u67d0\u4e2a\u65b9\u6cd5\u8c03\u7528\u524d\u3001\u8c03\u7528\u540e\u7b49\uff1b\u4e00\u4e2a\u7c7b\u6216\u4e00\u6bb5\u7a0b\u5e8f\u4ee3\u7801\u62e5\u6709\u4e00\u4e9b\u5177\u6709\u8fb9\u754c\u6027\u8d28\u7684\u7279\u5b9a\u70b9\uff0c\u8fd9\u4e9b\u4ee3\u7801\u4e2d\u7684\u7279\u5b9a\u70b9\u5c31\u6210\u4e3a\u201c\u8fde\u63a5\u70b9\u201d\uff0cSpring\u4ec5\u652f\u6301\u65b9\u6cd5\u7684\u8fde\u63a5\u70b9\uff0c\u5373\u4ec5\u80fd\u5728\u65b9\u6cd5\u8c03\u7528\u524d\u3001\u65b9\u6cd5\u8c03\u7528\u540e\u4ee5\u53ca\u65b9\u6cd5\u8c03\u7528\u524d\u540e\u7684\u8fd9\u4e9b\u7a0b\u5e8f\u6267\u884c\u70b9\u7ec7\u5165\u589e\u5f3a\u3002\u6bd4\u5982\uff1a\u9ed1\u5ba2\u653b\u51fb\u7cfb\u7edf\u9700\u8981\u627e\u5230\u7a81\u7834\u53e3\uff0c\u6ca1\u6709\u7a81\u7834\u53e3\u5c31\u6ca1\u6709\u529e\u6cd5\u653b\u51fb\uff0c\u4ece\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6765\u8bf4\uff0cAOP\u5c31\u662f\u4e00\u4e2a\u9ed1\u5ba2\uff0c\u8fde\u63a5\u70b9\u5c31\u662fAOP\u5411\u76ee\u6807\u7c7b\u653b\u51fb\u7684\u5019\u9009\u70b9\u3002\n\u5207\u70b9\uff08Point cut\uff09\uff1a\u6bcf\u4e2a\u7a0b\u5e8f\u7c7b\u90fd\u62e5\u6709\u8bb8\u591a\u8fde\u63a5\u70b9\uff0c\u5982\u4e00\u4e2a\u62e5\u6709\u4e24\u4e2a\u65b9\u6cd5\u7684\u7c7b\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u662f\u8fde\u63a5\u70b9\uff0c\u5373\u8fde\u63a5\u70b9\u662f\u7a0b\u5e8f\u7c7b\u4e2d\u5ba2\u89c2\u5b58\u5728\u7684\u4e8b\u7269\u3002\u4f46\u5728\u4e3a\u6570\u4f17\u591a\u7684\u8fde\u63a5\u70b9\u4e2d\uff0c\u5982\u4f55\u5b9a\u4f4d\u5230\u67d0\u4e2a\u8fde\u63a5\u70b9\u4e0a\u5462\uff1fAOP\u901a\u8fc7\u5207\u70b9\u5b9a\u4f4d\u7279\u5b9a\u8fde\u63a5\u70b9\u3002\u901a\u8fc7\u6570\u636e\u5e93\u67e5\u8be2\u7684\u6982\u5ff5\u6765\u7406\u89e3\u5207\u70b9\u548c\u8fde\u63a5\u70b9\uff1a\u8fde\u63a5\u70b9\u76f8\u5f53\u4e8e\u6570\u636e\u5e93\u8868\u4e2d\u7684\u8bb0\u5f55\uff0c\u800c\u5207\u70b9\u76f8\u5f53\u4e8e\u67e5\u8be2\u6761\u4ef6\u3002\u8fde\u63a5\u70b9\u548c\u5207\u70b9\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u4e00\u4e2a\u5207\u70b9\u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u8fde\u63a5\u70b9\u3002\n\n\nSpringCloud\n\u200b       \u5fae\u670d\u52a1\u67b6\u6784\u5c31\u662f\u5c06\u5355\u4f53\u7684\u5e94\u7528\u7a0b\u5e8f\u5206\u6210\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f,\u8fd9\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5c31\u6210\u4e3a\u5fae\u670d\u52a1,\u6bcf\u4e2a\u5fae\u670d\u52a1\u8fd0\u884c\u5728\u81ea\u5df1\u7684\u8fdb\u7a0b\u4e2d,\u5e76\u4f7f\u7528\u8f7b\u91cf\u7ea7\u7684\u673a\u5236\u901a\u4fe1\u3002\u8fd9\u4e9b\u670d\u52a1\u56f4\u7ed5\u4e1a\u52a1\u80fd\u529b\u6765\u5212\u5206,\u5e76\u901a\u8fc7\u81ea\u52a8\u5316\u90e8\u7f72\u673a\u5236\u6765\u72ec\u7acb\u90e8\u7f72\u3002\u8fd9\u4e9b\u670d\u52a1\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00,\u4e0d\u540c\u6570\u636e\u5e93,\u4ee5\u4fdd\u8bc1\u6700\u4f4e\u9650\u5ea6\u7684\u96c6\u4e2d\u5f0f\u7ba1\u7406\u3002\n\nSpringCloud\u4f18\u7f3a\u70b9\n\u4f18\u70b9\n\n\u670d\u52a1\u62c6\u5206\u7c92\u5ea6\u66f4\u7ec6\uff0c\u6709\u5229\u4e8e\u8d44\u6e90\u91cd\u590d\u5229\u7528\uff0c\u6709\u5229\u4e8e\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\n\u53ef\u4ee5\u66f4\u7cbe\u51c6\u7684\u5236\u5b9a\u4f18\u5316\u670d\u52a1\u65b9\u6848\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u7ef4\u62a4\u6027\n\u5fae\u670d\u52a1\u67b6\u6784\u91c7\u7528\u53bb\u4e2d\u5fc3\u5316\u601d\u60f3\uff0c\u670d\u52a1\u4e4b\u95f4\u91c7\u7528Restful\u7b49\u8f7b\u91cf\u7ea7\u901a\u8baf\uff0c\u6bd4ESB\u66f4\u8f7b\u91cf\n\u9002\u4e8e\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u4ea7\u54c1\u8fed\u4ee3\u5468\u671f\u66f4\u77ed\n\n\u7f3a\u70b9\n\n\u5fae\u670d\u52a1\u8fc7\u591a\uff0c\u6cbb\u7406\u6210\u672c\u9ad8\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4\u7cfb\u7edf\n\u5206\u5e03\u5f0f\u7cfb\u7edf\u5f00\u53d1\u7684\u6210\u672c\u9ad8\uff08\u5bb9\u9519\uff0c\u5206\u5e03\u5f0f\u4e8b\u52a1\u7b49\uff09\u5bf9\u56e2\u961f\u6311\u6218\u5927\n\n\u603b\u7684\u6765\u8bf4\u4f18\u70b9\u5927\u8fc7\u4e8e\u7f3a\u70b9\uff0c\u76ee\u524d\u770b\u6765SpringCloud\u662f\u4e00\u5957\u975e\u5e38\u5b8c\u5584\u7684\u5206\u5e03\u5f0f\u6846\u67b6\uff0c\u76ee\u524d\u5f88\u591a\u4f01\u4e1a\u5f00\u59cb\u7528\u5fae\u670d\u52a1\nSpringBoot\u548cSpringCloud\u533a\u522b\n\nSpringCloud\u7ec4\u6210\n\nSpringCloud Eureka\uff1a\u670d\u52a1\u53d1\u73b0\u4e0e\u6ce8\u518c\nSpringCloud Hystrix\uff1a\u7194\u65ad\u5668\nSpringCloud Ribbon\uff1a\u8d1f\u8f7d\u5747\u8861\nSpringCloud Zuul\uff1a\u8def\u7531\u7f51\u5173\nSpringCloud Config\uff1a\u5206\u5e03\u5f0f\u7edf\u4e00\u914d\u7f6e\nSpringCloud Feign\uff1a\u58f0\u660e\u6027\u7684Web\u670d\u52a1\u5ba2\u6237\u7aef\n\n\u7b4920\u591a\u4e2a\u5f00\u6e90\u6846\u67b6\n", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}, {"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/tag/Spring/"}]}, {"title": "Java-\u57fa\u7840\u9762\u8bd5\u9898", "date": "2020-08-08T23:24:32-00.00", "path": "/archives/Java-\u57fa\u7840\u9762\u8bd5\u9898/", "text": "\u5b66\u4e60\u8def\u7ebf\n\nJDK\u548cJRE\u533a\u522b\n\nJDK\uff08Java Development Kit\uff09\u662f\u9488\u5bf9Java\u5f00\u53d1\u5458\u7684\u4ea7\u54c1\uff0c\u662f\u6574\u4e2aJava\u7684\u6838\u5fc3\uff0c\u5305\u62ec\u4e86Java\u8fd0\u884c\u73af\u5883JRE\u3001Java\u5de5\u5177\u548cJava\u57fa\u7840\u7c7b\u5e93\u3002\nJava Runtime Environment\uff08JRE\uff09\u662f\u8fd0\u884cJAVA\u7a0b\u5e8f\u6240\u5fc5\u987b\u7684\u73af\u5883\u7684\u96c6\u5408\uff0c\u5305\u542bJVM\u6807\u51c6\u5b9e\u73b0\u53caJava\u6838\u5fc3\u7c7b\u5e93\u3002\nJava Virtual Machine\uff08Java\u865a\u62df\u673aJVM\uff09\u7684\u7f29\u5199\uff0c\u662f\u6574\u4e2ajava\u5b9e\u73b0\u8de8\u5e73\u53f0\u7684\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u80fd\u591f\u8fd0\u884c\u4ee5Java\u8bed\u8a00\u5199\u4f5c\u7684\u8f6f\u4ef6\u7a0b\u5e8f\u3002\n\n\nJDK\uff08Java Development Kit\uff09\n\nJDK\u4e2d\u5305\u542bJRE\uff0c\u5728JDK\u7684\u5b89\u88c5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a\u540d\u4e3ajre\u7684\u76ee\u5f55\uff0c\u91cc\u9762\u6709\u4e24\u4e2a\u6587\u4ef6\u5939bin\u548clib\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u8ba4\u4e3abin\u91cc\u7684\u5c31\u662fjvm\uff0clib\u4e2d\u5219\u662fjvm\u5de5\u4f5c\u6240\u9700\u8981\u7684\u7c7b\u5e93\uff0c\u800cjvm\u548c lib\u548c\u8d77\u6765\u5c31\u79f0\u4e3ajre\u3002\nJDK\u662f\u6574\u4e2aJAVA\u7684\u6838\u5fc3\uff0c\u5305\u62ec\u4e86Java\u8fd0\u884c\u73af\u5883JRE\uff08Java Runtime Envirnment\uff09\u3001\u4e00\u5806Java\u5de5\u5177\uff08javac/java/jdb\u7b49\uff09\u548cJava\u57fa\u7840\u7684\u7c7b\u5e93\uff08\u5373Java API \u5305\u62ecrt.jar\uff09\u3002\n\n\u7c7b\u578b\n\nSE(J2SE)\uff0cstandard edition\uff0c\u6807\u51c6\u7248\uff0c\u662f\u6211\u4eec\u901a\u5e38\u7528\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u4eceJDK 5.0\u5f00\u59cb\uff0c\u6539\u540d\u4e3aJava SE\u3002\nEE(J2EE)\uff0centerprise edition\uff0c\u4f01\u4e1a\u7248\uff0c\u4f7f\u7528\u8fd9\u79cdJDK\u5f00\u53d1J2EE\u5e94\u7528\u7a0b\u5e8f\uff0c\u4eceJDK 5.0\u5f00\u59cb\uff0c\u6539\u540d\u4e3aJava EE\u3002\nME(J2ME)\uff0cmicro edition\uff0c\u4e3b\u8981\u7528\u4e8e\u79fb\u52a8\u8bbe\u5907\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e0a\u7684java\u5e94\u7528\u7a0b\u5e8f\uff0c\u4eceJDK 5.0\u5f00\u59cb\uff0c\u6539\u540d\u4e3aJava ME\u3002\n\nJRE\uff08Java Runtime Environment\uff09\n\u200b       \u662f\u8fd0\u884c\u57fa\u4e8eJava\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u6240\u4e0d\u53ef\u7f3a\u5c11\u7684\u8fd0\u884c\u73af\u5883\u3002RE\u4e2d\u5305\u542b\u4e86Java virtual machine\uff08JVM\uff09\uff0cruntime class libraries\u548cJava application launcher\uff0c\u8fd9\u4e9b\u662f\u8fd0\u884cJava\u7a0b\u5e8f\u7684\u5fc5\u8981\u7ec4\u4ef6\u3002\u4f46\u662f\u5728\u8fd0\u884c\u7f16\u8bd1\u597d\u7684\u7a0b\u5e8f\u4e2d\u5305\u542bServlet\u65f6\uff0c\u9700\u8981JDK\nJVM\uff08Java Virtual Machine\uff09\n\u200b       \u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684java\u865a\u62df\u673a\uff0c\u5b83\u662f\u6574\u4e2ajava\u5b9e\u73b0\u8de8\u5e73\u53f0\u7684\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u6240\u6709\u7684java\u7a0b\u5e8f\u4f1a\u9996\u5148\u88ab\u7f16\u8bd1\u4e3a.class\u7684\u7c7b\u6587\u4ef6\uff0c\u8fd9\u79cd\u7c7b\u6587\u4ef6\u53ef\u4ee5\u5728\u865a\u62df\u673a\u4e0a\u6267\u884c\u3002\n\u4e5f\u5c31\u662f\u8bf4class\u5e76\u4e0d\u76f4\u63a5\u4e0e\u673a\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5bf9\u5e94\uff0c\u800c\u662f\u7ecf\u8fc7\u865a\u62df\u673a\u95f4\u63a5\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\uff0c\u7531\u865a\u62df\u673a\u5c06\u7a0b\u5e8f\u89e3\u91ca\u7ed9\u672c\u5730\u7cfb\u7edf\u6267\u884c\u3002\n\u53ea\u6709JVM\u8fd8\u4e0d\u80fd\u6210class\u7684\u6267\u884c\uff0c\u56e0\u4e3a\u5728\u89e3\u91caclass\u7684\u65f6\u5019JVM\u9700\u8981\u8c03\u7528\u89e3\u91ca\u6240\u9700\u8981\u7684\u7c7b\u5e93lib\uff0c\u800cjre\u5305\u542blib\u7c7b\u5e93\u3002\nJVM\u5c4f\u853d\u4e86\u4e0e\u5177\u4f53\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u4f7fJava\u7a0b\u5e8f\u53ea\u9700\u751f\u6210\u5728Java\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u7684\u76ee\u6807\u4ee3\u7801\uff08\u5b57\u8282\u7801\uff09,\u5c31\u53ef\u4ee5\u5728\u591a\u79cd\u5e73\u53f0\u4e0a\u4e0d\u52a0\u4fee\u6539\u5730\u8fd0\u884c\u3002JVM\u5728\u6267\u884c\u5b57\u8282\u7801\u65f6\uff0c\u5b9e\u9645\u4e0a\u6700\u7ec8\u8fd8\u662f\u628a\u5b57\u8282\u7801\u89e3\u91ca\u6210\u5177\u4f53\u5e73\u53f0\u4e0a\u7684\u673a\u5668\u6307\u4ee4\u6267\u884c\u3002\n\u91cd\u8f7d\u548c\u91cd\u5199\n\u91cd\u8f7d(Overload)\n\n\u91cd\u8f7dOverload\u662f\u4e00\u4e2a\u7c7b\u4e2d\u591a\u6001\u6027\u7684\u4e00\u79cd\u8868\u73b0\u6216\u8005\u4e00\u4e2a\u7c7b\u4e2d\u591a\u4e2a\u6784\u9020\u5668\u7684\u5b9e\u73b0\n\u91cd\u8f7d\u8981\u6c42\u540c\u540d\u65b9\u6cd5\u7684\u53c2\u6570\u5217\u8868\u4e0d\u540c(\u53c2\u6570\u7c7b\u578b\uff0c\u53c2\u6570\u4e2a\u6570\u751a\u81f3\u662f\u53c2\u6570\u987a\u5e8f)\n\u91cd\u8f7d\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u53ef\u4ee5\u76f8\u540c\u4e5f\u53ef\u4ee5\u4e0d\u76f8\u540c\u3002\u65e0\u6cd5\u4ee5\u8fd4\u56de\u578b\u522b\u4f5c\u4e3a\u91cd\u8f7d\u51fd\u6570\u7684\u533a\u5206\u6807\u51c6\n\npublic class Father {\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Father s = new Father();\n        s.sayHello();\n        s.sayHello(&quot;wintershii&quot;);\n\n    }\n\n    public void sayHello() {\n        System.out.println(&quot;Hello&quot;);\n    }\n\n    public void sayHello(String name) {\n        System.out.println(&quot;Hello&quot; + &quot; &quot; + name);\n    }\n}\n\n\u91cd\u5199(Override)\n\n\u53d1\u751f\u5728\u7236\u7c7b\u4e0e\u5b50\u7c7b\u4e4b\u95f4\n\u65b9\u6cd5\u540d\uff0c\u53c2\u6570\u5217\u8868\uff0c\u8fd4\u56de\u7c7b\u578b\uff08\u9664\u8fc7\u5b50\u7c7b\u4e2d\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u662f\u7236\u7c7b\u4e2d\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\uff09\u5fc5\u987b\u76f8\u540c\n\u8bbf\u95ee\u4fee\u9970\u7b26\u7684\u9650\u5236\u4e00\u5b9a\u8981\u5927\u4e8e\u88ab\u91cd\u5199\u65b9\u6cd5\u7684\u8bbf\u95ee\u4fee\u9970\u7b26\uff08public&gt;protected&gt;default&gt;private)\n\u91cd\u5199\u65b9\u6cd5\u4e00\u5b9a\u4e0d\u80fd\u629b\u51fa\u65b0\u7684\u68c0\u67e5\u5f02\u5e38\u6216\u8005\u6bd4\u88ab\u91cd\u5199\u65b9\u6cd5\u7533\u660e\u66f4\u52a0\u5bbd\u6cdb\u7684\u68c0\u67e5\u578b\u5f02\u5e38\n\npublic class Father {\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Son s = new Son();\n        s.sayHello();\n    }\n\n    public void sayHello() {\n        System.out.println(&quot;Hello&quot;);\n    }\n}\n\nclass Son extends Father{\n\n    @Override\n    public void sayHello() {\n        // TODO Auto-generated method stub\n        System.out.println(&quot;hello by &quot;);\n    }\n\n}\n\n\u91cd\u8f7d\uff08Overload\uff09\u548c\u91cd\u5199\uff08Override\uff09\u7684\u533a\u522b\n\u200b       \u65b9\u6cd5\u7684\u91cd\u8f7d\u548c\u91cd\u5199\u90fd\u662f\u5b9e\u73b0\u591a\u6001\u7684\u65b9\u5f0f\uff0c\u533a\u522b\u5728\u4e8e\u524d\u8005\u5b9e\u73b0\u7684\u662f\u7f16\u8bd1\u65f6\u7684\u591a\u6001\u6027\uff0c\u800c\u540e\u8005\u5b9e\u73b0\u7684\u662f\u8fd0\u884c\u65f6\u7684\u591a\u6001\u6027\u3002\u91cd\u8f7d\u53d1\u751f\u5728\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u540c\u540d\u7684\u65b9\u6cd5\u5982\u679c\u6709\u4e0d\u540c\u7684\u53c2\u6570\u5217\u8868\uff08\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u3001\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u6216\u8005\u4e8c\u8005\u90fd\u4e0d\u540c\uff09\u5219\u89c6\u4e3a\u91cd\u8f7d\uff1b\u91cd\u5199\u53d1\u751f\u5728\u5b50\u7c7b\u4e0e\u7236\u7c7b\u4e4b\u95f4\uff0c\u91cd\u5199\u8981\u6c42\u5b50\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u4e0e\u7236\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u6709\u76f8\u540c\u7684\u53c2\u6570\u5217\u8868\uff0c\u6709\u517c\u5bb9\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u6bd4\u7236\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u66f4\u597d\u8bbf\u95ee\uff0c\u4e0d\u80fd\u6bd4\u7236\u7c7b\u88ab\u91cd\u5199\u65b9\u6cd5\u58f0\u660e\u66f4\u591a\u7684\u5f02\u5e38\uff08\u91cc\u6c0f\u4ee3\u6362\u539f\u5219\uff09\u3002\u91cd\u8f7d\u5bf9\u8fd4\u56de\u7c7b\u578b\u6ca1\u6709\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u4e0d\u80fd\u6839\u636e\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u533a\u5206\u3002\n\u6784\u9020\u5668Constructor\u662f\u5426\u53ef\u88abOverride(\u91cd\u5199)\n\u200b       \u6784\u9020\u5668Constructor\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64\u4e0d\u80fd\u88ab\u91cd\u5199(Override)\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff08Overload\uff09\u3002\u5982\u679c\u7236\u7c7b\u81ea\u5b9a\u4e49\u4e86\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0c\u5219\u5b50\u7c7b\u65e0\u8bba\u5b9a\u4e49\u6784\u9020\u51fd\u6570\u4e0e\u5426\uff0c\u5b9a\u4e49\u6709\u53c2\u6784\u9020\u51fd\u6570\u4e0e\u5426\uff0c\u90fd\u4f1a\u62a5\u9519\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u662f\u5728\u5b50\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u6dfb\u4e0asuper\uff08\u53c2\u6570\uff09\uff0c\u4ee5\u8868\u660e\u5b50\u7c7b\u6784\u9020\u4e4b\u524d\u5148\u6784\u9020\u7236\u7c7b\uff0c\u800c\u8fd9\u53e5\u8bdd\u5fc5\u987b\u653e\u5728\u7b2c\u4e00\u53e5\uff0c\u5426\u5219\u62a5\"Constructor call must be the first statement in a constructor\"\u7684\u9519\u8bef\u3002\n\u7c7b\u7684\u52a0\u8f7d\u987a\u5e8f\n\n\u7236\u7c7b\u7684\u9759\u6001\u4ee3\u7801\u5757/\u521d\u59cb\u5316\u9759\u6001\u53d8\u91cf\uff08\u4e24\u8005\u4f18\u5148\u7ea7\u76f8\u540c\uff09\n\u6267\u884c\u5b50\u7c7b\u7684\u9759\u6001\u4ee3\u7801/\u521d\u59cb\u5316\u9759\u6001\u53d8\u91cf\uff08\u4e24\u8005\u4f18\u5148\u7ea7\u76f8\u540c\uff0c\u8c01\u5199\u5728\u524d\u9762\u8c01\u5148\u6267\u884c\uff09\n\u521d\u59cb\u5316\u7236\u7c7b\u6210\u5458\u53d8\u91cf/\u6267\u884c\u4ee3\u7801\u5757{}\uff08\u4e24\u8005\u4f18\u5148\u7ea7\u76f8\u540c\uff09\uff0c\u7236\u7c7b\u7684\u6784\u9020\u5668\n\u5b50\u7c7b\u7684\u6210\u5458\u53d8\u91cf/\u4ee3\u7801\u5757\uff0c\u6700\u540e\u5b50\u7c7b\u7684\u6784\u9020\u5668\u3002\n\n\u4f8b\u5982\uff1a\npublic class Test {\n    Person person = new Person(&quot;Test&quot;);\n    static{\n        System.out.println(&quot;test static&quot;);\n    }\n\n    public Test() {\n        System.out.println(&quot;test constructor&quot;);\n    }\n\n    public static void main(String[] args) {\n        new MyClass();\n    }\n}\n\nclass Person{\n    static{\n        System.out.println(&quot;person static&quot;);\n    }\n    public Person(String str) {\n        System.out.println(&quot;person &quot;+str);\n    }\n}\n\n\nclass MyClass extends Test {\n    Person person = new Person(&quot;MyClass&quot;);\n    static{\n        System.out.println(&quot;myclass static&quot;);\n    }\n\n    public MyClass() {\n        System.out.println(&quot;myclass constructor&quot;);\n    }\n}\n\n\u7ed3\u679c\uff1a\n\ntest static\nmyclass static\nperson static\nperson Test\ntest constructor\nperson MyClass\nmyclass constructor\n\n\n\u987a\u5e8f\u89e3\u6790\uff1a\n\n\u9996\u5148\u52a0\u8f7dTest\u7c7b\uff0c\u56e0\u6b64\u4f1a\u6267\u884cTest\u7c7b\u4e2d\u7684static\u5757\u3002\n\u63a5\u7740\u6267\u884cnew MyClass()\uff0c\u800cMyClass\u7c7b\u8fd8\u6ca1\u6709\u88ab\u52a0\u8f7d\uff0c\u56e0\u6b64\u9700\u8981\u52a0\u8f7dMyClass\u7c7b\u3002\u5728\u52a0\u8f7dMyClass\u7c7b\u7684\u65f6\u5019\uff0c\u53d1\u73b0MyClass\u7c7b\u7ee7\u627f\u81eaTest\u7c7b\uff0c\u4f46\u662f\u7531\u4e8eTest\u7c7b\u5df2\u7ecf\u88ab\u52a0\u8f7d\u4e86\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u52a0\u8f7dMyClass\u7c7b\uff0c\u90a3\u4e48\u5c31\u4f1a\u6267\u884cMyClass\u7c7b\u7684\u4e2d\u7684static\u5757\u3002\n\u5728\u52a0\u8f7d\u5b8c\u4e4b\u540e\uff0c\u5c31\u901a\u8fc7\u6784\u9020\u5668\u6765\u751f\u6210\u5bf9\u8c61\u3002\u800c\u5728\u751f\u6210\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u5148\u521d\u59cb\u5316\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u56e0\u6b64\u4f1a\u6267\u884cTest\u4e2d\u7684Person person = new Person()\uff0c\u800cPerson\u7c7b\u8fd8\u6ca1\u6709\u88ab\u52a0\u8f7d\u8fc7\uff0c\u56e0\u6b64\u4f1a\u5148\u52a0\u8f7dPerson\u7c7b\u5e76\u6267\u884cPerson\u7c7b\u4e2d\u7684static\u5757\uff0c\n\u63a5\u7740\u6267\u884c\u7236\u7c7b\u7684\u6784\u9020\u5668\uff0c\u5b8c\u6210\u4e86\u7236\u7c7b\u7684\u521d\u59cb\u5316\uff0c\u7136\u540e\u5c31\u6765\u521d\u59cb\u5316\u81ea\u8eab\u4e86\uff0c\u56e0\u6b64\u4f1a\u63a5\u7740\u6267\u884cMyClass\u4e2d\u7684Person person = new Person()\uff0c\u6700\u540e\u6267\u884cMyClass\u7684\u6784\u9020\u5668\u3002\n\n\n\u4e09\u5927\u7279\u6027\u5c01\u88c5\u7ee7\u627f\u591a\u6001\n\n\u5c01\u88c5\n\u200b       \u5c01\u88c5\uff08Encapsulation\uff09\u662f\u9762\u5411\u5bf9\u8c61\u65b9\u6cd5\u7684\u91cd\u8981\u539f\u5219\uff0c\u5c31\u662f\u628a\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u64cd\u4f5c\uff08\u6216\u670d\u52a1\uff09\u7ed3\u5408\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u6574\u4f53\uff0c\u5e76\u5c3d\u53ef\u80fd\u9690\u85cf\u5bf9\u8c61\u7684\u5185\u90e8\u5b9e\u73b0\u7ec6\u8282\u3002\u5b9e\u4f53\u7c7b\u90a3\u4e9b\u5c5e\u6027\u5c31\u662f\u88ab\u5c01\u88c5\n\n\u5c06\u7c7b\u7684\u67d0\u4e9b\u4fe1\u606f\u9690\u85cf\u5728\u7c7b\u7684\u5185\u90e8\uff0c\u4e0d\u5141\u8bb8\u5916\u90e8\u7a0b\u5e8f\u8fdb\u884c\u76f4\u63a5\u7684\u8bbf\u95ee\u8c03\u7528\u3002\n\u901a\u8fc7\u8be5\u7c7b\u63d0\u4f9b\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u5bf9\u9690\u85cf\u4fe1\u606f\u7684\u64cd\u4f5c\u548c\u8bbf\u95ee\u3002\n\u9690\u85cf\u5bf9\u8c61\u7684\u4fe1\u606f\u3002\n\u7559\u51fa\u8bbf\u95ee\u7684\u5bf9\u5916\u63a5\u53e3\u3002\n\n\u7ee7\u627f\n\u200b       \u7ee7\u627f\u5c31\u662f\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u7279\u5f81\u548c\u884c\u4e3a\uff0c\u4f7f\u5f97\u5b50\u7c7b\u5bf9\u8c61\uff08\u5b9e\u4f8b\uff09\u5177\u6709\u7236\u7c7b\u7684\u5b9e\u4f8b\u57df\u548c\u65b9\u6cd5\uff0c\u6216\u5b50\u7c7b\u4ece\u7236\u7c7b\u7ee7\u627f\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5b50\u7c7b\u5177\u6709\u7236\u7c7b\u76f8\u540c\u7684\u884c\u4e3a\u3002\u5f53\u7136\uff0c\u5982\u679c\u5728\u7236\u7c7b\u4e2d\u62e5\u6709\u79c1\u6709\u5c5e\u6027(private\u4fee\u9970)\uff0c\u5219\u5b50\u7c7b\u662f\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u3002\n\u53ea\u652f\u6301\u5355\u7ee7\u627f\uff0c\u5373\u4e00\u4e2a\u5b50\u7c7b\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u7236\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u73b0\u591a\u7ea7\u7ee7\u627f\uff0c\u53ca\u5b50\u7c7b\u62e5\u6709\u552f\u4e00\u7684\u7236\u7c7b\uff0c\u800c\u7236\u7c7b\u8fd8\u53ef\u4ee5\u518d\u7ee7\u627f\u3002\n\n\u5b50\u7c7b\u53ef\u4ee5\u62e5\u6709\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\n\u5b50\u7c7b\u53ef\u4ee5\u62e5\u6709\u81ea\u5df1\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\n\u5b50\u7c7b\u53ef\u4ee5\u91cd\u5199\u8986\u76d6\u7236\u7c7b\u7684\u65b9\u6cd5\u3002\n\n\u4f7f\u7528\n\u5728\u7236\u5b50\u7c7b\u5173\u7cfb\u7ee7\u627f\u4e2d\uff0c\u5982\u679c\u6210\u5458\u53d8\u91cf\u91cd\u540d\uff0c\u5219\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u8bbf\u95ee\u6709\u4e24\u79cd\u65b9\u5f0f\u3002\n\n\u76f4\u63a5\u901a\u8fc7\u5b50\u7c7b\u5bf9\u8c61\u8bbf\u95ee\u6210\u5458\u53d8\u91cf\n\u7b49\u53f7\u5de6\u8fb9\u662f\u8c01\uff0c\u5c31\u4f18\u5148\u4f7f\u7528\u8c01\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5411\u4e0a\u627e\u3002\n\n\u95f4\u63a5\u901a\u8fc7\u6210\u5458\u65b9\u6cd5\u8bbf\u95ee\u6210\u5458\u53d8\u91cf\n\u8be5\u65b9\u6cd5\u5c5e\u4e8e\u8c01\uff0c\u8c01\u5c31\u4f18\u5148\u4f7f\u7528\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5411\u4e0a\u627e\u3002\n\n\npublic class FU {\n    int numFU = 10;\n    int num = 100;\n    public void method(){\n        System.out.println(&quot;\u7236\u7c7b\u6210\u5458\u53d8\u91cf\uff1a&quot;+numFU);\n    }\n    public void methodFU(){\n        System.out.println(&quot;\u7236\u7c7b\u6210\u5458\u65b9\u6cd5!&quot;);\n    }\n}\n\npublic class Zi extends FU{\n    int numZi = 20;\n    int num = 200;\n    public void method(){\n        System.out.println(&quot;\u5b50\u7c7b\u6210\u5458\u53d8\u91cf\uff1a&quot;+numFU);\n    }\n    public void methodZi(){\n        System.out.println(&quot;\u5b50\u7c7b\u65b9\u6cd5\uff01&quot;);\n    }\n}\n\npublic class ExtendDemo {\n    public static void main(String[] args) {\n        FU fu = new FU();\n        // \u7236\u7c7b\u7684\u5b9e\u4f53\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\n        System.out.println(&quot;\u7236\u7c7b\uff1a&quot; + fu.numFU);   // \u7ed3\u679c\uff1a10\n\n        Zi zi = new Zi();\n        System.out.println(&quot;\u8c03\u7528\u7236\u7c7b\uff1a&quot; + zi.numFU); // \u7ed3\u679c\uff1a10\n        System.out.println(&quot;\u5b50\u7c7b\uff1a&quot; + zi.numZi);   // \u7ed3\u679c\uff1a20\n\n        /** \u8f93\u51fa\u7ed3\u679c\u4e3a200\uff0c\u8bc1\u660e\u5728\u91cd\u540d\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5b50\u7c7b\u4e2d\u5b58\u5728\u5219\u4f18\u5148\u4f7f\u7528\uff0c\n         *  \u5982\u679c\u4e0d\u5b58\u5728\u5219\u53bb\u7236\u7c7b\u67e5\u627e\uff0c\u4f46\u5982\u679c\u7236\u7c7b\u4e5f\u6ca1\u6709\u90a3\u4e48\u7f16\u8bd1\u671f\u5c31\u4f1a\u62a5\u9519\u3002\n         */\n        System.out.println(zi.num); // \u7ed3\u679c\uff1a200\n        /**\n         * \u901a\u8fc7\u6210\u5458\u65b9\u6cd5\u8c03\u7528\u6210\u5458\u53d8\u91cf\n         */\n        zi.method();    // \u7ed3\u679c\uff1a10\n    }\n}\n\n\u591a\u6001\n\u6307\u5141\u8bb8\u4e0d\u540c\u7c7b\u7684\u5bf9\u8c61\u5bf9\u540c\u4e00\u6d88\u606f\u505a\u51fa\u54cd\u5e94\u3002\u5373\u540c\u4e00\u6d88\u606f\u53ef\u4ee5\u6839\u636e\u53d1\u9001\u5bf9\u8c61\u7684\u4e0d\u540c\u800c\u91c7\u7528\u591a\u79cd\u4e0d\u540c\u7684\u884c\u4e3a\u65b9\u5f0f\u3002\u52a8\u6001\u7ed1\u5b9a\uff08dynamic binding\uff09\uff0c\u662f\u6307\u5728\u6267\u884c\u671f\u95f4\u5224\u65ad\u6240\u5f15\u7528\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\uff0c\u6839\u636e\u5176\u5b9e\u9645\u7684\u7c7b\u578b\u8c03\u7528\u5176\u76f8\u5e94\u7684\u65b9\u6cd5\u3002\n\u5b9e\u73b0\u65b9\u5f0f\n\n\u63a5\u53e3\u591a\u6001\u6027\u3002\n\u7ee7\u627f\u591a\u6001\u6027\u3002\n\u901a\u8fc7\u62bd\u8c61\u7c7b\u5b9e\u73b0\u7684\u591a\u6001\u6027\u3002\n\n\u5411\u4e0a\u8f6c\u578b\npublic class MultiDemo {\n       public static void main(String[] args) {\n           // \u591a\u6001\u7684\u5f15\u7528\uff0c\u5c31\u662f\u5411\u4e0a\u8f6c\u578b\uff0c\u6b64\u65f6\u65e0\u6cd5\u4f7f\u7528\u4e4b\u7c7b\u4e2d\u7236\u7c7b\u6ca1\u6709\u7684\u65b9\u6cd5\n           Animals dog = new Dog();\n           dog.eat();//\u72d7\u5728\u5403\u9aa8\u5934\uff01\n\n           Animals cat = new Cat();\n           cat.eat();//\u732b\u5728\u5403\u9c7c\uff01\n\n           // \u5982\u679c\u8981\u8c03\u7528\u7236\u7c7b\u4e2d\u6ca1\u6709\u7684\u65b9\u6cd5\uff0c\u5219\u8981\u5411\u4e0b\u8f6c\u578b\n           Dog dogDown = (Dog)dog;\n           dogDown.watchDoor();\n\n       }\n   }\n   class Animals {\n       public void eat(){\n           System.out.println(&quot;\u52a8\u7269\u5403\u996d\uff01&quot;);\n       }\n   }\n   class Dog extends Animals{\n       public void eat(){\n           System.out.println(&quot;\u72d7\u5728\u5403\u9aa8\u5934\uff01&quot;);\n       }\n       public void watchDoor(){\n           System.out.println(&quot;\u72d7\u770b\u95e8\uff01&quot;);\n       }\n   }\n   class Cat extends Animals{\n       public void eat(){\n           System.out.println(&quot;\u732b\u5728\u5403\u9c7c\uff01&quot;);\n       }\n   }\n\n\nthis | super | final | static\u5173\u952e\u5b57\nthis\n\n\u672c\u7c7b\u6210\u5458\u65b9\u6cd5\u4e2d\uff0c\u8bbf\u95ee\u672c\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002\n\u672c\u7c7b\u6210\u5458\u65b9\u6cd5\u4e2d\uff0c\u8bbf\u95ee\u672c\u7c7b\u7684\u53e6\u4e00\u4e2a\u6210\u5458\u65b9\u6cd5\u3002\n\u672c\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u8bbf\u95ee\u672c\u7c7b\u7684\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\u3002\n\n\nsuper\n\n\u5b50\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u4e2d\uff0c\u8bbf\u95ee\u7236\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u3002\n\u5b50\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u4e2d\uff0c\u8bbf\u95ee\u7236\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u3002\n\u5b50\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u8bbf\u95ee\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u3002\n\n\n\u6ce8\u610f\n\nthis\u5173\u952e\u5b57\u540csuper\u4e00\u6837\uff0c\u5fc5\u987b\u5728\u6784\u9020\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\uff0c\u4e14\u662f\u552f\u4e00\u7684\u3002\nthis\u4e0esuper\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\u3002\n\nfinal\n\n\nstatic\n\nJava\u4e2d\u662f\u5426\u53ef\u4ee5\u8986\u76d6(override)\u4e00\u4e2aprivate\u6216\u8005\u662fstatic\u7684\u65b9\u6cd5\uff1f\njava\u4e2d\u4e5f\u4e0d\u53ef\u4ee5\u8986\u76d6private\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3aprivate\u4fee\u9970\u7684\u53d8\u91cf\u548c\u65b9\u6cd5\u53ea\u80fd\u5728\u5f53\u524d\u7c7b\u4e2d\u4f7f\u7528\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7684\u7c7b\u7ee7\u627f\u5f53\u524d\u7c7b\u662f\u4e0d\u80fd\u8bbf\u95ee\u5230private\u53d8\u91cf\u6216\u65b9\u6cd5\u7684\uff0c\u5f53\u7136\u4e5f\u4e0d\u80fd\u8986\u76d6\u3002\n\u662f\u5426\u53ef\u4ee5\u5728static\u73af\u5883\u4e2d\u8bbf\u95ee\u975estatic\u53d8\u91cf\uff1f\nstatic\u53d8\u91cf\u5728Java\u4e2d\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u5b83\u5728\u6240\u6709\u7684\u5b9e\u4f8b\u4e2d\u7684\u503c\u662f\u4e00\u6837\u7684\u3002\u5f53\u7c7b\u88abJava\u865a\u62df\u673a\u8f7d\u5165\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9static\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5982\u679c\u4f60\u7684\u4ee3\u7801\u5c1d\u8bd5\u4e0d\u7528\u5b9e\u4f8b\u6765\u8bbf\u95ee\u975estatic\u7684\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u53d8\u91cf\u8fd8\u6ca1\u6709\u88ab\u521b\u5efa\u51fa\u6765\uff0c\u8fd8\u6ca1\u6709\u8ddf\u4efb\u4f55\u5b9e\u4f8b\u5173\u8054\u4e0a\u3002\nString StringBuffer \u548c StringBuilder \u7684\u533a\u522b\u662f\u4ec0\u4e48? String \u4e3a\u4ec0\u4e48\u662f\u4e0d\u53ef\u53d8\u7684?\nJava String \u7c7b\uff1aString\u5b57\u7b26\u4e32\u5e38\u91cf\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cString\u7684\u503c\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6bcf\u6b21\u5bf9String\u7684\u64cd\u4f5c\u90fd\u4f1a\u751f\u6210\u65b0\u7684String\u5bf9\u8c61\uff0c\u8fd9\u6837\u4e0d\u4ec5\u6548\u7387\u4f4e\u4e0b\uff0c\u800c\u4e14\u5927\u91cf\u6d6a\u8d39\u6709\u9650\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u5f20\u5bf9String\u64cd\u4f5c\u65f6\u5185\u5b58\u53d8\u5316\u7684\u56fe\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u521d\u59cbString\u503c\u4e3a\u201chello\u201d\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u52a0\u4e0a\u65b0\u7684\u5b57\u7b26\u4e32\u201cworld\u201d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u9700\u8981\u91cd\u65b0\u5728\u6808\u5806\u5185\u5b58\u4e2d\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4\u7684\uff0c\u6700\u7ec8\u5f97\u5230\u4e86\u201chello world\u201d\u5b57\u7b26\u4e32\u4e5f\u76f8\u5e94\u7684\u9700\u8981\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4\uff0c\u8fd9\u6837\u77ed\u77ed\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5374\u9700\u8981\u5f00\u8f9f\u4e09\u6b21\u5185\u5b58\u7a7a\u95f4\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u8fd9\u662f\u5bf9\u5185\u5b58\u7a7a\u95f4\u7684\u6781\u5927\u6d6a\u8d39\u3002\u4e3a\u4e86\u5e94\u5bf9\u7ecf\u5e38\u6027\u7684\u5b57\u7b26\u4e32\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u5c31\u9700\u8981\u4f7f\u7528Java\u63d0\u4f9b\u7684\u5176\u4ed6\u4e24\u4e2a\u64cd\u4f5c\u5b57\u7b26\u4e32\u7684\u7c7b\u2014\u2014StringBuffer\u7c7b\u548cStringBuild\u7c7b\u6765\u5bf9\u6b64\u79cd\u53d8\u5316\u5b57\u7b26\u4e32\u8fdb\u884c\u5904\u7406\u3002\nStringBuffer \u548c StringBuilder \u7c7b\u2014\u2014StringBuffer\u3001StringBuilder\u5b57\u7b26\u4e32\u53d8\u91cf\n\n\u5f53\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u4fee\u6539\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528 StringBuffer(\u7ebf\u7a0b\u5b89\u5168) \u548c StringBuilder(\u7ebf\u7a0b\u4e0d\u5b89\u5168) \u7c7b\u3002\n\u548c String \u7c7b\u4e0d\u540c\u7684\u662f\uff0cStringBuffer \u548c StringBuilder \u7c7b\u7684\u5bf9\u8c61\u80fd\u591f\u88ab\u591a\u6b21\u7684\u4fee\u6539\uff0c\u5e76\u4e14\u4e0d\u4ea7\u751f\u65b0\u7684\u672a\u4f7f\u7528\u5bf9\u8c61\u3002\nStringBuilder \u7c7b\u5728 Java 5 \u4e2d\u88ab\u63d0\u51fa\uff0c\u5b83\u548c StringBuffer \u4e4b\u95f4\u7684\u6700\u5927\u4e0d\u540c\u5728\u4e8e StringBuilder \u7684\u65b9\u6cd5\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff08\u4e0d\u80fd\u540c\u6b65\u8bbf\u95ee\uff09\u3002\n\u7531\u4e8e StringBuilder \u76f8\u8f83\u4e8e StringBuffer \u6709\u901f\u5ea6\u4f18\u52bf\uff0c\u6240\u4ee5\u591a\u6570\u60c5\u51b5\u4e0b\u5efa\u8bae\u4f7f\u7528 StringBuilder \u7c7b\u3002\u7136\u800c\u5728\u5e94\u7528\u7a0b\u5e8f\u8981\u6c42\u7ebf\u7a0b\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\uff0c\u5219\u5fc5\u987b\u4f7f\u7528 StringBuffer \u7c7b\u3002\n\n\u533a\u522b\n\nString\uff1a\u4e0d\u53ef\u53d8\u5b57\u7b26\u4e32\uff1b\nStringBuffer\uff1a\u53ef\u53d8\u5b57\u7b26\u4e32\u3001\u6548\u7387\u4f4e\u3001\u7ebf\u7a0b\u5b89\u5168\uff1b\nStringBuilder\uff1a\u53ef\u53d8\u5b57\u7b26\u5e8f\u5217\u3001\u6548\u7387\u9ad8\u3001\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff1b\n\n\u521d\u59cb\u5316\u4e0a\u7684\u533a\u522b\uff0cString\u53ef\u4ee5\u7a7a\u8d4b\u503c\uff0c\u540e\u8005\u4e0d\u884c\uff0c\u62a5\u9519\n\n\n\u88c5\u7bb1\u4e0e\u62c6\u7bb1\nhttps://www.cnblogs.com/dolphin0520/p/3780005.html\n\n\n\u9762\u8bd5\u9898\n\n\u200b       \u4ece\u8fd92\u6bb5\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u901a\u8fc7valueOf\u65b9\u6cd5\u521b\u5efaInteger\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5982\u679c\u6570\u503c\u5728[-128,127]\u4e4b\u95f4\uff0c\u4fbf\u8fd4\u56de\u6307\u5411IntegerCache.cache\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff1b\u5426\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Integer\u5bf9\u8c61\u3002\n\u200b       \u4e0a\u9762\u7684\u4ee3\u7801\u4e2di1\u548ci2\u7684\u6570\u503c\u4e3a100\uff0c\u56e0\u6b64\u4f1a\u76f4\u63a5\u4ececache\u4e2d\u53d6\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5i1\u548ci2\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800ci3\u548ci4\u5219\u662f\u5206\u522b\u6307\u5411\u4e0d\u540c\u7684\u5bf9\u8c61\u3002\n\n\n\u5728 Java \u4e2d\u5b9a\u4e49\u2f00\u4e2a\u4e0d\u505a\u4e8b\u4e14\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u2f45\u6cd5\u7684\u4f5c\u2f64\n\u200b       Java \u7a0b\u5e8f\u5728\u6267\u2f8f\u2f26\u7c7b\u7684\u6784\u9020\u2f45\u6cd5\u4e4b\u524d\uff0c\u5982\u679c\u6ca1\u6709\u2f64 super() \u6765\u8c03\u2f64\u2f57\u7c7b\u7279\u5b9a\u7684\u6784\u9020\u2f45\u6cd5\uff0c\u5219\u4f1a\u8c03\u2f64 \u2f57\u7c7b\u4e2d\u201c\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u2f45\u6cd5\u201d\u3002\u56e0\u6b64\uff0c\u5982\u679c\u2f57\u7c7b\u4e2d\u53ea\u5b9a\u4e49\u4e86\u6709\u53c2\u6570\u7684\u6784\u9020\u2f45\u6cd5\uff0c\u2f7d\u5728\u2f26\u7c7b\u7684\u6784\u9020\u2f45\u6cd5\u4e2d \u2f1c\u6ca1\u6709\u2f64 super() \u6765\u8c03\u2f64\u2f57\u7c7b\u4e2d\u7279\u5b9a\u7684\u6784\u9020\u2f45\u6cd5\uff0c\u5219\u7f16\u8bd1\u65f6\u5c06\u53d1\u2f63\u9519\u8bef\uff0c\u56e0\u4e3a Java \u7a0b\u5e8f\u5728\u2f57\u7c7b\u4e2d\u627e \u4e0d\u5230\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u2f45\u6cd5\u53ef\u4f9b\u6267\u2f8f\u3002\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u2f57\u7c7b\u2fa5\u52a0\u4e0a\u2f00\u4e2a\u4e0d\u505a\u4e8b\u4e14\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u2f45\u6cd5\u3002\n\u63a5\u2f1d\u548c\u62bd\u8c61\u7c7b\n\n\n\n\u6210\u5458\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf\u7684\u533a\u522b\u6709\u54ea\u4e9b\uff1f\n\n\u9759\u6001\u2f45\u6cd5\u548c\u5b9e\u4f8b\u2f45\u6cd5\u6709\u4f55\u4e0d\u540c\n\n\u5728\u5916\u90e8\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\"\u7c7b\u540d.\u65b9\u6cd5\u540d\"\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\"\u5bf9\u8c61\u540d.\u65b9\u6cd5\u540d\"\u7684\u65b9\u5f0f\u3002\u800c\u5b9e\u4f8b\u65b9\u6cd5\u53ea\u6709\u540e\u9762\u8fd9\u79cd\u65b9\u5f0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8c03\u7528\u9759\u6001\u65b9\u6cd5\u53ef\u4ee5\u65e0\u9700\u521b\u5efa\u5bf9\u8c61\u3002\n\u9759\u6001\u65b9\u6cd5\u5728\u8bbf\u95ee\u672c\u7c7b\u7684\u6210\u5458\u65f6\uff0c\u53ea\u5141\u8bb8\u8bbf\u95ee\u9759\u6001\u6210\u5458\uff08\u5373\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\uff09\uff0c\u800c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u5b9e\u4f8b\u6210\u5458\u53d8\u91cf\u548c\u5b9e\u4f8b\u65b9\u6cd5\uff1b\u5b9e\u4f8b\u65b9\u6cd5\u5219\u65e0\u6b64\u9650\u5236\u3002\n\n==\u4e0eequals()\n\nhashcode()\u4e0eequals()\n\u53c2\u8003\n\nequals()\u548chashCode()\u4e4b\u95f4\u7684\u5173\u7cfb\nhttps://www.cnblogs.com/skywang12345/p/3324958.html\n\n\n\u7b2c\u4e00\u79cd \u4e0d\u4f1a\u521b\u5efa\u201c\u7c7b\u5bf9\u5e94\u7684\u6563\u5217\u8868\u201d\n\u4e3a\u4ec0\u4e48 Java \u4e2d\u53ea\u6709\u503c\u4f20\u9012\uff1f\n\u53c2\u8003\nhttps://blog.csdn.net/bjweimengshu/article/details/79799485\n\nJava\u4e2d\u5f02\u5e38\u5904\u7406\n\u53c2\u8003\nhttps://blog.csdn.net/sugar_no1/article/details/88593255\n\n\n\n\n\n\u5f02\u5e38\u5904\u7406\u7684\u4e09\u79cd\u65b9\u5f0f\n\u53c2\u8003\n\nhttps://blog.csdn.net/qq_22067469/article/details/82930798\n\n\n1. \u7cfb\u7edf\u81ea\u52a8\u629b\u51fa\u5f02\u5e38\n\u5f53\u7a0b\u5e8f\u8bed\u53e5\u51fa\u73b0\u4e00\u4e9b\u903b\u8f91\u9519\u8bef\u3001\u4e3b\u4e49\u9519\u8bef\u6216\u8005\u7c7b\u578b\u8f6c\u6362\u9519\u8bef\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u629b\u51fa\u5f02\u5e38\npublic static void main(String[] args) {\n    int a = 5;\n    int b = 0;\n    System.out.println( a / b);\n}\n\n\u8fd0\u884c\u7ed3\u679c\nException in thread &quot;main&quot; java.lang.ArithmeticException: / by zero\n    at io.renren.modules.sys.controller.SysUserController.main(SysUserController.java:154)\n\n3. try{ } catch{}\u629b\u51fa\u5f02\u5e38\n\u5728try\u4e2d\u653e\u5165\u5f85\u6267\u884c\u4ee3\u7801\uff0c\u5982\u679c\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u5c31\u4f1a\u6267\u884ctry\u4e2d\u7684\u4ee3\u7801\uff0c\u5982\u679c\u51fa\u73b0\u5f02\u5e38\uff0c\u5c31\u4f1a\u6267\u884ccatch\u4e2d\u7684\u4ee3\u7801\uff0c\u5f53\u7136\uff0ctry\u540e\u9762\u53ef\u4ee5\u8ddf\u591a\u4e2acatch\uff0c\u5f53\u901a\u8fc7try catch\u8fd9\u79cd\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u7684\u65f6\u5019\u8981\u6ce8\u610f\u629b\u51fa\u5f02\u5e38\u7684\u987a\u5e8f\uff0c\u5f02\u5e38\u8303\u56f4\u5c0f\u7684\u653e\u5728\u524d\u9762\uff0c\u5f02\u5e38\u8303\u56f4\u5927\u7684\u653e\u5728\u540e\u9762\uff0c\u5728\u8fd9\u91cc\u4e3e\u4e2a\u4f8b\u5b50\uff1a\ntry{\n                  //\u5f85\u6267\u884c\u7684\u4ee3\u7801\n        } catch (FileNotFoundException e) {\n            System.out.println(&quot;\u627e\u4e0d\u5230\u6587\u4ef6&quot;);\n        } catch (IOException e) {\n            System.out.println(&quot;IO\u64cd\u4f5c\u5931\u8d25&quot;);\n        }\n\n4. throw\nthrow\u662f\u8bed\u53e5\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u4e00\u822c\u662f\u5728\u4ee3\u7801\u7684\u5185\u90e8\uff0c\u5f53\u7a0b\u5e8f\u51fa\u73b0\u67d0\u79cd\u903b\u8f91\u9519\u8bef\u65f6\u540c\u7a0b\u5e8f\u4e3b\u52a8\u629b\u51fa\u67d0\u79cd\u7279\u5b9a\u7c7b\u578b\u7684\u5f02\u5e38\npublic static void main(String[] args) {\n    String str = &quot;NBA&quot;;\n    if (str.equals(&quot;NBA&quot;)) {\n        throw new NumberFormatException();\n    } else {\n        System.out.println(str);\n    }\n}\n\n5. throws\nthrows\u662f\u65b9\u6cd5\u53ef\u80fd\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38(\u7528\u5728\u58f0\u660e\u65b9\u6cd5\u65f6\uff0c\u8868\u793a\u8be5\u65b9\u6cd5\u53ef\u80fd\u8981\u629b\u51fa\u5f02\u5e38),\u5f53\u67d0\u4e2a\u65b9\u6cd5\u53ef\u80fd\u4f1a\u629b\u51fa\u67d0\u79cd\u5f02\u5e38\u65f6\u7528\u4e8ethrows \u58f0\u660e\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u7136\u540e\u4ea4\u7ed9\u4e0a\u5c42\u8c03\u7528\u5b83\u7684\u65b9\u6cd5\u7a0b\u5e8f\u5904\u7406\npublic static void testThrows() throws NumberFormatException {\n    String str = &quot;NBA&quot;;\n    System.out.println(Integer.parseInt(str));\n}\n\npublic static void main(String[] args) {\n    try {\n        testThrows();\n    } catch (NumberFormatException e) {\n        e.printStackTrace();\n        System.out.println(&quot;\u975e\u6570\u76f4\u7c7b\u578b\u4e0d\u80fd\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362&quot;);\n    }\n}\n\nthrow\u4e0ethrows\u7684\u6bd4\u8f83\n\nthrows\u51fa\u73b0\u5728\u65b9\u6cd5\u51fd\u6570\u5934\uff0c\u800cthrow\u51fa\u73b0\u5728\u51fd\u6570\u4f53\u3002\nthrows\u8868\u793a\u51fa\u73b0\u5f02\u5e38\u7684\u4e00\u79cd\u53ef\u80fd\u6027\uff0c\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u53d1\u751f\u8fd9\u4e9b\u5f02\u5e38\uff0cthrow\u5219\u662f\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u6267\u884cthrow\u5219\u4e00\u5b9a\u629b\u51fa\u4e86\u67d0\u79cd\u5f02\u5e38\u5bf9\u8c61\u3002\n\u4e24\u8005\u90fd\u662f\u6d88\u6781\u5904\u7406\u5f02\u5e38\u7684\u65b9\u5f0f\uff08\u8fd9\u91cc\u7684\u6d88\u6781\u5e76\u4e0d\u662f\u8bf4\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u597d\uff09\uff0c\u53ea\u662f\u629b\u51fa\u6216\u8005\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\uff0c\u4f46\u4e0d\u4f1a\u7531\u51fd\u6570\u53bb\u5904\u7406\u5f02\u5e38\uff0c\u771f\u6b63\u7684\u5904\u7406\u5f02\u5e38\u7531\u51fd\u6570\u7684\u4e0a\u5c42\u8c03\u7528\u5904\u7406\u3002\n\n\u7f16\u7a0b\u4e60\u60ef\n\n\u5728\u5199\u7a0b\u5e8f\u65f6\uff0c\u5bf9\u53ef\u80fd\u4f1a\u51fa\u73b0\u5f02\u5e38\u7684\u90e8\u5206\u901a\u5e38\u8981\u7528try{\u2026}catch{\u2026}\u53bb\u6355\u6349\u5b83\u5e76\u5bf9\u5b83\u8fdb\u884c\u5904\u7406\uff1b\n\u7528try{\u2026}catch{\u2026}\u6355\u6349\u4e86\u5f02\u5e38\u4e4b\u540e\u4e00\u5b9a\u8981\u5bf9\u5728catch{\u2026}\u4e2d\u5bf9\u5176\u8fdb\u884c\u5904\u7406\uff0c\u90a3\u6015\u662f\u6700\u7b80\u5355\u7684\u4e00\u53e5\u8f93\u51fa\u8bed\u53e5\uff0c\u6216\u6808\u8f93\u5165e.printStackTrace();\n\u5982\u679c\u662f\u6355\u6349IO\u8f93\u5165\u8f93\u51fa\u6d41\u4e2d\u7684\u5f02\u5e38\uff0c\u4e00\u5b9a\u8981\u5728try{\u2026}catch{\u2026}\u540e\u52a0finally{\u2026}\u628a\u8f93\u5165\u8f93\u51fa\u6d41\u5173\u95ed\uff1b\n\u5982\u679c\u5728\u51fd\u6570\u4f53\u5185\u7528throw\u629b\u51fa\u4e86\u67d0\u79cd\u5f02\u5e38\uff0c\u6700\u597d\u8981\u5728\u51fd\u6570\u540d\u4e2d\u52a0throws\u629b\u5f02\u5e38\u58f0\u660e\uff0c\u7136\u540e\u4ea4\u7ed9\u8c03\u7528\u5b83\u7684\u4e0a\u5c42\u51fd\u6570\u8fdb\u884c\u5904\u7406\u3002\n\n\u83b7\u53d6\u2f64\u952e\u76d8\u8f93\u2f0a\u5e38\u2f64\u7684\u4e24\u79cd\u2f45\u6cd5\n\n\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\nScanner input = new Scanner(System.in);\nchar c = input.next().charAt(0);\n\nnext()\u548cnextLine()\n\nnext()\uff1a\u4e0d\u53ef\u4ee5\u8bfb\u53d6\u7a7a\u683c\u3002\u5b83\u4e0d\u80fd\u8bfb\u4e24\u4e2a\u7531\u7a7a\u683c\u6216\u7b26\u53f7\u9694\u5f00\u7684\u5355\u8bcd\u3002\u6b64\u5916\uff0cnext()\u5728\u8bfb\u53d6\u8f93\u5165\u540e\u5c06\u5149\u6807\u653e\u5728\u540c\u4e00\u884c\u4e2d\u3002(next()\u53ea\u8bfb\u7a7a\u683c\u4e4b\u524d\u7684\u6570\u636e,\u5e76\u4e14\u5149\u6807\u6307\u5411\u672c\u884c)\nnextLine()\uff1a\u53ef\u4ee5\u8bfb\u53d6\u7a7a\u683c\uff0c\u5305\u62ec\u5355\u8bcd\u4e4b\u95f4\u7684\u7a7a\u683c\u548c\u9664\u56de\u8f66\u4ee5\u5916\u7684\u6240\u6709\u7b26\u53f7(\u5373\u3002\u5b83\u8bfb\u5230\u884c\u5c3e)\u3002\u8bfb\u53d6\u8f93\u5165\u540e\uff0cnextLine()\u5c06\u5149\u6807\u5b9a\u4f4d\u5728\u4e0b\u4e00\u884c\u3002\n\n\u6cdb\u578b\u4f7f\u7528\n\u53c2\u8003\nhttps://www.cnblogs.com/jpfss/p/9928747.html\n\n\u6d45\u62f7\u8d1d | \u6df1\u62f7\u8d1d\n\n\u6d45\u62f7\u8d1d\uff08shallowCopy\uff09\u53ea\u662f\u589e\u52a0\u4e86\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5df2\u5b58\u5728\u7684\u5185\u5b58\u5730\u5740\n\u6df1\u62f7\u8d1d\uff08deepCopy\uff09\u662f\u589e\u52a0\u4e86\u4e00\u4e2a\u6307\u9488\u5e76\u4e14\u7533\u8bf7\u4e86\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\uff0c\u4f7f\u8fd9\u4e2a\u589e\u52a0\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u5185\u5b58\n\nString\nString\u5e38\u7528\u65b9\u6cd5\n\nString\u5e38\u7528\u65b9\u6cd5\n\n\n\u4e24\u79cd\u65b9\u5f0f\u521b\u5efa\u7684\u5e95\u5c42\u539f\u7406\u548c\u5b57\u7b26\u4e32\u5e38\u91cf\n\n\u7b2c\u4e00\u79cd\u662f\u901a\u8fc7\u201c\u5b57\u9762\u91cf\u201d\u8d4b\u503c\nString str=&quot;hello&quot;\n\n\n\u7b2c\u4e8c\u79cd\u662f\u901a\u8fc7new\u5173\u952e\u5b57\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u5728\u5185\u5b58\u4e2d\u7528\u6784\u9020\u5668\u521b\u5efa\u65b0\u5bf9\u8c61\u5f62\u5f0f\nString str=new String(&quot;hello&quot;)\n\n\n\n\u6848\u4f8b\u4e00\uff1a\u901a\u8fc7\u5b57\u9762\u91cf\u6765\u521b\u5efaString\nString s1 = &quot;abc&quot;;\nString s2 = &quot;abc&quot;;\nSystem.out.println(s1 == s2); // True\nSystem.out.println(s1.equals(s2)); // True\n\n\u91c7\u7528\u5b57\u9762\u503c\u7684\u65b9\u5f0f\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0cJVM\u9996\u5148\u4f1a\u53bb\u5b57\u7b26\u4e32\u6c60\u4e2d\u67e5\u627e\u662f\u5426\u5b58\u5728\"abc\"\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u6b64\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\n\n\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u521b\u5efa\"abc\"\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u6c60\u4e2d\"abc\"\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u5730\u5740\u8fd4\u56de\u7ed9\"abc\"\u5bf9\u8c61\u7684\u5f15\u7528s1\uff0c\u8fd9\u6837s1\u4f1a\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\"abc\"\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1b\n\u5982\u679c\u5b58\u5728\uff0c\u5219\u4e0d\u521b\u5efa\u4efb\u4f55\u5bf9\u8c61\uff0c\u76f4\u63a5\u5c06\u6c60\u4e2d\"abc\"\u8fd9\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\u8fd4\u56de\uff0c\u8d4b\u7ed9\u5f15\u7528s2\u3002\u56e0\u4e3as1\u3001s2\u90fd\u662f\u6307\u5411\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6c60\u4e2d\u7684\"abc\"\u5bf9\u8c61\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3atrue\u3002\n\n\u5f53\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u88ab\u521b\u5efa\u591a\u6b21\uff0c\u5185\u5b58\u4e2d\u53ea\u4fdd\u5b58\u4e00\u4efd\u5b57\u7b26\u4e32\u5e38\u91cf\u503c\uff0c\u8fd9\u5c31\u662f\u5b57\u7b26\u4e32\u7684\"\u9a7b\u7559\"\n\u6848\u4f8b\u4e8c\uff1a\u901a\u8fc7new\u5bf9\u8c61\u5f62\u5f0f\nString s3 = new String(&quot;xyz&quot;);\nString s4 = new String(&quot;xyz&quot;);\nSystem.out.println(s3 == s4); // False\nSystem.out.println(s3.equals(s4)); // True\n\n\u91c7\u7528new\u5173\u952e\u5b57\u65b0\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\u65f6\uff0cJVM\u9996\u5148\u5728\u5b57\u7b26\u4e32\u6c60\u4e2d\u67e5\u627e\u6709\u6ca1\u6709\"xyz\"\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\n\n\u5982\u679c\u6709\uff1a\u5219\u4e0d\u5728\u6c60\u4e2d\u518d\u53bb\u521b\u5efa\"xyz\"\u8fd9\u4e2a\u5bf9\u8c61\u4e86\uff0c\u76f4\u63a5\u5728\u5806\u4e2d\u521b\u5efa\u4e00\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5806\u4e2d\u7684\u8fd9\u4e2a\"xyz\"\u5bf9\u8c61\u7684\u5730\u5740\u8fd4\u56de\u8d4b\u7ed9\u5f15\u7528s3\uff0c\u8fd9\u6837\uff0cs3\u5c31\u6307\u5411\u4e86\u5806\u4e2d\u521b\u5efa\u7684\u8fd9\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\uff1b\n\u5982\u679c\u6ca1\u6709\uff1a\u5219\u9996\u5148\u5728\u5b57\u7b26\u4e32\u6c60\u4e2d\u521b\u5efa\u4e00\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u5728\u5806\u4e2d\u521b\u5efa\u4e00\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5806\u4e2d\u8fd9\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\u7684\u5730\u5740\u8fd4\u56de\u8d4b\u7ed9s3\u5f15\u7528\uff0c\u8fd9\u6837\uff0cs3\u6307\u5411\u4e86\u5806\u4e2d\u521b\u5efa\u7684\u8fd9\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002s4\u5219\u6307\u5411\u4e86\u5806\u4e2d\u521b\u5efa\u7684\u53e6\u4e00\u4e2a\"xyz\"\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002s3 \u3001s4\u662f\u4e24\u4e2a\u6307\u5411\u4e0d\u540c\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u7ed3\u679c\u5f53\u7136\u662ffalse\u3002\n\n\u6848\u4f8b\u4e09\uff1a\u521b\u5efa\u4e86\u591a\u5c11\u5bf9\u8c61\nString s = new String(\u201cxyz\u201d);\n\n\u4ea7\u751f\u51e0\u4e2a\u5bf9\u8c61\uff1f\u4e00\u4e2a\u6216\u4e24\u4e2a\uff0c\u5982\u679c\u5e38\u91cf\u6c60\u4e2d\u539f\u6765\u6ca1\u6709 \u201dxyz\u201d, \u5c31\u662f\u4e24\u4e2a\u3002\n\n\u5e38\u91cf\u6c60\u4e2d\u6ca1\u6709 \u201dxyz\u201d\uff1a\u5c31\u5148\u53bb\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u521b\u5efa\uff0c\u7136\u540e\u518d\u53bb\u5806\u4e2d\u521b\u5efa\u5b9e\u4f8b\uff0c\u6240\u4ee5\u4f1a\u521b\u5efa\u4e24\u4e2a\u5bf9\u8c61\n\u5e38\u91cf\u6c60\u4e2d\u6709 \u201dxyz\u201d\uff1a\u5c31\u76f4\u63a5\u53bb\u5806\u4e2d\u521b\u5efa\u5b9e\u4f8b\uff0c\u6240\u4ee5\u4f1a\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\n\nintern\u7684\u5b9e\u73b0\u539f\u7406\uff08JDK1.8\uff09\n\u53c2\u8003\n\nhttps://tech.meituan.com/2014/03/06/in-depth-understanding-string-intern.html\n\n\npublic native String intern();\n\nJDK6\u7684intern()\n.png)\nJDK7\u7684intern()\n.png)\n\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e00\u4e2a native \u7684\u65b9\u6cd5\uff0c\u4f46\u6ce8\u91ca\u5199\u7684\u975e\u5e38\u660e\u4e86\u3002\u5f53\u8c03\u7528 intern\u65b9\u6cd5\u65f6\uff1a\n\n\u5982\u679c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u5df2\u7ecf\u5305\u542b\u4e00\u4e2a\u7b49\u4e8e\u6b64String\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\uff08\u503c\u6bd4\u8f83\u7528equals(oject)\u65b9\u6cd5\u786e\u5b9a\uff09\uff0c\u5219\u8fd4\u56de\u6c60\u4e2d\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u7684\u5730\u5740\u3002\n\u5982\u679c\u4e0d\u5305\u542b\uff0c\u5c06\u6b64String\u5bf9\u8c61\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u4e3a\u65b0\u7684String\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u6b64\u65b0\u7684String\u5bf9\u8c61\u7684\u5f15\u7528\n\nJDK 1.7\u540e\uff0cintern\u65b9\u6cd5\u8fd8\u662f\u4f1a\u5148\u53bb\u67e5\u8be2\u5e38\u91cf\u6c60\u4e2d\u662f\u5426\u6709\u5df2\u7ecf\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u5e38\u91cf\u6c60\u4e2d\u7684\u5f15\u7528\uff0c\u8fd9\u4e00\u70b9\u4e0e\u4e4b\u524d\u6ca1\u6709\u533a\u522b\uff0c\u533a\u522b\u5728\u4e8e\uff0c\u5982\u679c\u5728\u5e38\u91cf\u6c60\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u4e0d\u4f1a\u518d\u5c06\u5b57\u7b26\u4e32\u62f7\u8d1d\u5230\u5e38\u91cf\u6c60\uff0c\u800c\u53ea\u662f\u5728\u5e38\u91cf\u6c60\u4e2d\u751f\u6210\u4e00\u4e2a\u5bf9\u539f\u5b57\u7b26\u4e32\u7684\u5f15\u7528\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u5f80\u5e38\u91cf\u6c60\u653e\u7684\u4e1c\u897f\u53d8\u4e86\uff1a\u539f\u6765\u5728\u5e38\u91cf\u6c60\u4e2d\u627e\u4e0d\u5230\u65f6\uff0c\u590d\u5236\u4e00\u4e2a\u526f\u672c\u653e\u5230\u5e38\u91cf\u6c60\uff0c1.7\u540e\u5219\u662f\u5c06\u5728\u5806\u4e0a\u7684\u5730\u5740\u5f15\u7528\u590d\u5236\u5230\u5e38\u91cf\u6c60\u3002\n\u4e3e\u4f8b\nString str2 = new String(&quot;str&quot;) + new String(&quot;01&quot;);//\u521b\u5efa\u4e86&quot;str&quot;\u548c&quot;01&quot;\u5e38\u91cf\uff0c\u4f46\u662f\u6ca1\u6709\u521b\u5efa&quot;str01&quot;\u5e38\u91cf\nstr2.intern();\nString str1 = &quot;str01&quot;;\nSystem.out.println(str2==str1);//true\n\n\n\u7b2c\u4e00\u884c\uff1a\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u751f\u6210\"str\"\u548c\"01\"\uff0c\u5728\u5806\u4e2d\u521b\u5efa\u4e24\u4e2aString\u5bf9\u8c61\uff0c\u76f8\u52a0\u540e\u8fd4\u56de\u5728\u5806\u4e3a\"str01\"\u7684\u65b0\u7684String\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u6b64\u65f6\u5e38\u91cf\u6c60\u6ca1\u6709\"str01\"\u5bf9\u8c61\uff0c\u53ea\u6709\"str\"\u548c\"01\"\n\u7b2c\u4e8c\u884c\uff1a\u8c03\u7528intern()\u540e\uff0c\u7531\u4e8e\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u4e0d\u5b58\u5728\"str01\"\uff0c\u6240\u4ee5\u590d\u5236str2\u5730\u5740\u5f15\u7528\u5230\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60(1.7\u540e\u7684\u6539\u52a8)\n\u7b2c\u4e09\u884c\uff1a\u7531\u4e8e\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u5df2\u5b58\u5728\"str01\"\uff0c\u6240\u4ee5str1\u6307\u5411\u5df2\u5b58\u5728\u7684\uff0c\u5373st2\u6240\u6307\u5411\u7684\u5bf9\u8c61\n\u7b2c\u56db\u884c\uff1a\u4e24\u4e2a\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u6240\u4ee5\u7ed3\u679c\u4e3atrue\n\n\nString str2 = new String(&quot;str&quot;)+new String(&quot;01&quot;);\nString str1 = &quot;str01&quot;;\nstr2.intern();\nSystem.out.println(str2==str1);//false\n\n\n\u7b2c\u4e00\u884c\uff1a\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u751f\u6210\"str\"\u548c\"01\"\uff0c\u5728\u5806\u4e2d\u521b\u5efa\u4e24\u4e2aString\u5bf9\u8c61\uff0c\u76f8\u52a0\u540e\u8fd4\u56de\u503c\u4e3a\"str01\"\u7684\u65b0\u7684String\u5bf9\u8c61\n\u7b2c\u4e8c\u884c\uff1a\u7531\u4e8e\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e0d\u5b58\u5728\"str01\"\uff0c\u6240\u4ee5\u6b64\u65f6\u5728\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\n\u7b2c\u4e09\u884c\uff1a\u7531\u4e8e\u5df2\u7ecf\u5b58\u5728\"str01\"\uff0c\u6240\u4ee5\u4e0d\u4f1a\u628astr2\u5730\u5740\u5f15\u7528\u5230\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\uff0c\u800c\u662f\u8fd4\u56de\u5df2\u7ecf\u5b58\u5728\u7684\"str01\"\u5bf9\u8c61\u7684\u5730\u5740\n\u7b2c\u56db\u884c\uff1a\u7531\u4e8estr1\u6307\u5411\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u5bf9\u8c61\uff0cstr2\u6307\u5411\u5806\u4e2d\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd4\u56defalse\n\n\n\u5b57\u7b26\u4e32\u76f8\u52a0\u539f\u7406\n\u53c2\u8003\n\nhttps://blog.csdn.net/u010775025/article/details/86507090\n\n\n\u4e09\u79cd\u60c5\u51b5\n\n\u4e24\u4e2a\u6216\u8005\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5b57\u7b26\u4e32\u5e38\u91cf\u76f8\u52a0\uff0c\u5728\u9884\u7f16\u8bd1\u7684\u65f6\u5019\u201c+\u201d\u4f1a\u88ab\u4f18\u5316\uff0c\u76f8\u5f53\u4e8e\u628a\u5b57\u7b26\u4e32\u5e38\u91cf\u81ea\u52a8\u5408\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\n\u5b57\u7b26\u4e32\u5bf9\u8c61\u7684+\u64cd\u4f5c\u5176\u672c\u8d28\u662fnew\u4e86StringBuilder\u5bf9\u8c61\u8fdb\u884cappend\u64cd\u4f5c\uff0c\u62fc\u63a5\u540e\u8c03\u7528toString()\u8fd4\u56deString\u5bf9\u8c61\nfinal\u4fee\u9970\u7684String\u5728\u76f8\u52a0\u7684\u65f6\u5019\u7b49\u540c\u4e8e\u5b57\u7b26\u4e32\u5e38\u91cf\u76f4\u63a5\u76f8\u52a0\uff0c\u5728\u7f16\u8bd1\u540e\u4f1a\u76f4\u63a5\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u503c\n\nString s1 = &quot;Programming&quot;;\nString s2 = new String(&quot;Programming&quot;);\nString s3 = &quot;Program&quot;;\nString s4 = &quot;ming&quot;;\nString s5 = &quot;Program&quot; + &quot;ming&quot;;\nString s6 = s3 + s4;\nString s7 = s3 + &quot;ming&quot;;\nSystem.out.println(s1 == s2);\nSystem.out.println(s1 == s5);\nSystem.out.println(s1 == s6);\nSystem.out.println(s1 == s7);\n\n\n\u5e38\u91cf\u76f8\u52a0\uff1a\u5168\u90fd\u662f\u5e38\u91cf\u76f8\u52a0\u65f6\uff0c\u4f1a\u5728\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u5728\u5806\u4e2d\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\n\n\u7b2c20~22\u884c\uff0c\u6211\u4eec\u901a\u8fc7\u5bf9\u6bd4\u77e5\u9053\uff0cString s5 = \"Program\" + \"ming\";\u5728\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\u6210\u4e86String s5 = \"Programming\";\n\u4e5f\u53ef\u4ee5\u5f97\u51fa\u5b57\u7b26\u4e32\u5e38\u91cf\u76f8\u52a0\uff0c\u4e0d\u4f1a\u7528\u5230StringBuilder\u5bf9\u8c61\uff0c\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5b57\u7b26\u4e32\u5e38\u91cf\u548c\u5b57\u7b26\u4e32\u662f\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u50a8\u5b58\u4e8e\u65b9\u6cd5\u533a\uff0c\u800c\u5b57\u7b26\u4e32\u50a8\u5b58\u4e8e\u5806(heap)\u3002\n\n\n\n\u5305\u542bString\u5bf9\u8c61\u7684\u76f8\u52a0\uff1a\u64cd\u4f5c\u5176\u672c\u8d28\u662fnew\u4e86StringBuilder\u5bf9\u8c61\u8fdb\u884cappend\u64cd\u4f5c\uff0c\u62fc\u63a5\u540e\u8c03\u7528toString()\u8fd4\u56de\u65b0\u7684String\u5bf9\u8c61\n\n\n\u7b2c24\u884c\uff1a\u4f7f\u7528new \u4e86 StringBuider\u5bf9\u8c61\n\u7b2c25\u884c\uff1a\u8fdb\u884cStringBuider\u5bf9\u8c61\u521d\u59cb\u5316\n\u7b2c26\u884c\uff1a\u4f7f\u7528append() \u65b9\u6cd5\u62fc\u63a5s3\u7684\u5185\u5bb9\n\u7b2c27\u884c\uff1a\u518d\u4f7f\u7528append() \u65b9\u6cd5\u62fc\u63a5s4\u7684\u5185\u5bb9\n\u7b2c28\u884c\uff1a\u6700\u540e\u8c03\u7528toString() \u8fd4\u56deString\u5bf9\u8c61\n\n\n\n\n\u7279\u6b8a\u60c5\u51b5\nString s2 = new StringBuilder(&quot;ja&quot;).append(&quot;va&quot;).toString();\nSystem.out.println(s2.intern() == s2);//false\n\n\u5e38\u7406\u8ba4\u4e3a\uff0c\u5728\u6267\u884cs2.intern()\u65f6\uff0c\u7531\u4e8e\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u4f1a\u590d\u5236\u5f15\u7528s2\u5230\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u53bb\uff0c\u6700\u540e\u5bf9\u6bd4\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u5730\u5740\u4e3atrue\uff0c\u4f46\u4e8b\u5b9e\u4e0a\"java\"\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5728\u6267\u884c\u6b64\u8bed\u53e5\u4e4b\u524d\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u6c60\u4e2d\u5df2\u7ecf\u5b58\u5728\u6b64\u5b57\u7b26\u4e32\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}, {"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}]}, {"title": "Java-\u57fa\u7840\u77e5\u8bc6\u7b14\u8bb0", "date": "2020-08-08T12:39:22-00.00", "path": "/archives/Java-\u57fa\u7840\u77e5\u8bc6\u7b14\u8bb0/", "text": "\u53c2\u8003\n\nJavaSchool\n\n\n1 \u6570\u636e\u7c7b\u578b\nJava\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\n\n\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a\u5305\u62ec \u6574\u6570 \u3001 \u6d6e\u70b9\u6570 \u3001 \u5b57\u7b26 \u3001 \u5e03\u5c14 \u3002\n\n\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff1a\u5305\u62ec \u7c7b \u3001 \u6570\u7ec4 \u3001 \u63a5\u53e3 \u3002\n\n\n\n\n1.1 \u6574\u578b\n\u6574\u578b\u7528\u4e8e\u8868\u793a\u6ca1\u6709\u5c0f\u6570\u90e8\u5206\u7684\u6570\u503c\uff0c \u5b83\u5141\u8bb8\u662f\u8d1f\u6570\u3002Java \u63d0\u4f9b\u4e86 4 \u79cd\u6574\u578b\uff0c\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\n\n1.2 \u6d6e\u70b9\u7c7b\u578b\n\u6d6e\u70b9\u7c7b\u578b\u7528\u4e8e\u8868\u793a\u6709\u5c0f\u6570\u90e8\u5206\u7684\u6570\u503c\u3002\u5728 Java \u4e2d\u6709\u4e24\u79cd\u6d6e\u70b9\u7c7b\u578b\n\n\u200b       double \u8868\u793a\u8fd9\u79cd\u7c7b\u578b\u7684\u6570\u503c\u7cbe\u5ea6\u662f float \u7c7b\u578b\u7684\u4e24\u500d\uff08\u6709\u4eba\u79f0\u4e4b\u4e3a\u53cc\u7cbe\u5ea6\u6570\u503c)\u3002\u7edd\u5927\u90e8\u5206\u5e94\u7528\u7a0b\u5e8f\u90fd\u91c7\u7528 double \u7c7b\u578b\u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0cfloat \u7c7b\u578b\u7684\u7cbe\u5ea6\u5f88\u96be\u6ee1\u8db3\u9700\u6c42\u3002\u5b9e\u9645\u4e0a\uff0c\u53ea \u6709\u5f88\u5c11\u7684\u60c5\u51b5\u9002\u5408\u4f7f\u7528 float \u7c7b\u578b\uff0c\u4f8b\u5982\uff0c\u9700\u8981\u5355\u7cbe\u5ea6\u6570\u636e\u7684\u5e93\uff0c \u6216\u8005\u9700\u8981\u5b58\u50a8\u5927\u91cf\u6570\u636e\u3002 float \u7c7b\u578b\u7684\u6570\u503c\u6709\u4e00\u4e2a\u540e\u7f00 F \u6216 f (\u4f8b\u5982\uff0c3.14F\u3002) \u6ca1\u6709\u540e\u7f00 F \u7684\u6d6e\u70b9\u6570\u503c\uff08\u5982 3.14 ) \u9ed8 \u8ba4\u4e3a double \u7c7b\u578b\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u5728\u6d6e\u70b9\u6570\u503c\u540e\u9762\u6dfb\u52a0\u540e\u7f00 D \u6216 d (\u4f8b\u5982\uff0c3.14D) \u3002\n1.3 char\u7c7b\u578b\n\u200b       char \u7c7b\u578b\u539f\u672c\u7528\u4e8e\u8868\u793a\u5355\u4e2a\u5b57\u7b26\u3002\u4e0d\u8fc7\uff0c\u73b0\u5728\u60c5\u51b5\u5df2\u7ecf\u6709\u6240\u53d8\u5316\u3002 \u5982\u4eca\uff0c\u6709\u4e9b Unicode \u5b57\u7b26\u53ef\u4ee5\u7528\u4e00\u4e2a chai\u2022\u503c\u63cf\u8ff0\uff0c\u53e6\u5916\u4e00\u4e9b Unicode \u5b57\u7b26\u5219\u9700\u8981\u4e24\u4e2a char \u503c\u3002\u6709\u5173\u7684\u8be6\u7ec6\u4fe1\u606f\u8bf7 \u9605\u8bfb\u4e0b\u4e00\u8282\u3002 char \u7c7b\u578b\u7684\u5b57\u9762\u91cf\u503c\u8981\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u3002\u4f8b\u5982\uff1aW \u662f\u7f16\u7801\u503c\u4e3a 65 \u6240\u5bf9\u5e94\u7684\u5b57\u7b26\u5e38\u91cf\u3002 \u5b83\u4e0e \"A\" \u4e0d\u540c\uff0c\"A\" \u662f\u5305\u542b\u4e00\u4e2a\u5b57\u7b26 A \u7684\u5b57\u7b26\u4e32, char \u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u8868\u793a\u4e3a\u5341\u516d\u8fdb\u5236\u503c\uff0c\u5176 \u8303\u56f4\u4ece \\u0000 \u5230 \\Uffff\u3002\u4f8b\u5982\uff1aW2122 \u8868\u793a\u6ce8\u518c\u7b26\u53f7 ( ), \\u03C0 \u8868\u793a\u5e0c\u814a\u5b57\u6bcd it\u3002 \u9664\u4e86\u8f6c\u4e49\u5e8f\u5217 \\u \u4e4b\u5916\uff0c \u8fd8\u6709\u4e00\u4e9b\u7528\u4e8e\u8868\u793a\u7279\u6b8a\u5b57\u7b26\u7684\u8f6c\u4e49\u5e8f\u5217\uff0c \u8bf7\u53c2\u770b\u8868 3-3\u3002\u6240\u6709\u8fd9 \u4e9b\u8f6c\u4e49\u5e8f\u5217\u90fd\u53ef\u4ee5\u51fa\u73b0\u5728\u52a0\u5f15\u53f7\u7684\u5b57\u7b26\u5b57\u9762\u91cf\u6216\u5b57\u7b26\u4e32\u4e2d\u3002\u4f8b\u5982\uff0c\u2019 \\02\u4e2822' \u6216 \"1 110\\11\u201d\u3002\u8f6c \u4e49\u5e8f\u5217 \\u\u8fd8\u53ef\u4ee5\u51fa\u73b0\u5728\u52a0\u5f15\u53f7\u7684\u5b57\u7b26\u5e38\u91cf\u6216\u5b57\u7b26\u4e32\u4e4b\u5916\uff08\u800c\u5176\u4ed6\u6240\u6709\u8f6c\u4e49\u5e8f\u5217\u4e0d\u53ef\u4ee5\uff09\u3002\u4f8b \u5982\uff1a public static void main(String\\u005B\\ u00SD args) \u5c31\u5b8c\u5168\u7b26\u5408\u8bed\u6cd5\u89c4\u5219\uff0c \\u005B \u548c \\u005D \u662f [ \u548c ] \u7684\u7f16\u7801\n\n1.4 boolean\u7c7b\u578b\nboolean (\u5e03\u5c14\uff09\u7c7b\u578b\u6709\u4e24\u4e2a\u503c\uff1afalse \u548c true, \u7528\u6765\u5224\u5b9a\u903b\u8f91\u6761\u4ef6 \u6574\u578b\u503c\u548c\u5e03\u5c14\u503c\u4e4b\u95f4 \u4e0d\u80fd\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\u3002\n2 \u8fd0\u7b97\u7b26\n2.1 \u7b97\u672f\u8fd0\u7b97\u7b26\n\nJava\u4e2d\uff0c\u6574\u6570\u4f7f\u7528\u4ee5\u4e0a\u8fd0\u7b97\u7b26\uff0c\u65e0\u8bba\u600e\u4e48\u8ba1\u7b97\uff0c\u4e5f\u4e0d\u4f1a\u5f97\u5230\u5c0f\u6570\u3002\n\n++ \u8fd0\u7b97\uff0c\u53d8\u91cf\u81ea\u5df1\u589e\u957f1\u3002\u53cd\u4e4b\uff0c -- \u8fd0\u7b97\uff0c\u53d8\u91cf\u81ea\u5df1\u51cf\u5c111\uff0c\u7528\u6cd5\u4e0e ++ \u4e00\u81f4\u3002\n\n\u72ec\u7acb\u8fd0\u7b97\uff1a\n\n\u53d8\u91cf\u5728\u72ec\u7acb\u8fd0\u7b97\u65f6\uff0c \u524d++ \u548c \u540e++ \u6ca1\u6709\u533a\u522b \u3002 \n\u53d8\u91cf \u524d++ \uff1a\u4f8b\u5982 ++i \u3002 \n\u53d8\u91cf \u540e++ \uff1a\u4f8b\u5982 i++ \u3002\n\n\n\u6df7\u5408\u8fd0\u7b97\uff1a\n\n\u548c\u5176\u4ed6\u53d8\u91cf\u653e\u5728\u4e00\u8d77\uff0c \u524d++ \u548c \u540e++ \u5c31\u4ea7\u751f\u4e86\u4e0d\u540c\u3002\n\n\n\u53d8\u91cf \u524d++ \uff1a\u53d8\u91cfa\u81ea\u5df1\u52a01\uff0c\u5c06\u52a01\u540e\u7684\u7ed3\u679c\u8d4b\u503c\u7ed9b\uff0c\u4e5f\u5c31\u662f\u8bf4a\u5148\u8ba1\u7b97\u3002a\u548cb\u7684\u7ed3\u679c\u90fd\u662f2\u3002\n\n\n\n\n\n\u5728 Java \u4e2d\uff0c\u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u7b26 + \u3001-\u3001 * \u3001/ \u8868\u793a\u52a0\u3001\u51cf\u3001 \u4e58\u3001\u9664\u8fd0\u7b97\u3002 \u5f53\u53c2\u4e0e / \u8fd0\u7b97\u7684\u4e24\u4e2a \u64cd\u4f5c\u6570\u90fd\u662f\u6574\u6570\u65f6\uff0c \u8868\u793a\u6574\u6570\u9664\u6cd5\uff1b\u5426\u5219\uff0c \u8868\u793a\u6d6e\u70b9\u9664\u6cd5\u3002 \u6574\u6570\u7684\u6c42\u4f59\u64cd\u4f5c\uff08\u6709\u65f6\u79f0\u4e3a\u53d6\u6a21) \u7528 \uff05 \u8868\u793a\u3002\u4f8b\u5982\uff0c15/2 \u7b49\u4e8e \uff0c7 15%2 \u7b49\u4e8e 1 , 15.0/2 \u7b49\u4e8e 7.50 \u9700\u8981\u6ce8\u610f\uff0c \u6574\u6570\u88ab 0 \u9664\u5c06\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f02\u5e38\uff0c \u800c\u6d6e\u70b9\u6570\u88ab 0 \u9664\u5c06\u4f1a\u5f97\u5230\u65e0\u7a77\u5927\u6216 NaN \u7ed3\u679c\u3002\n2.2 \u8d4b\u503c\u8fd0\u7b97\u7b26\n\n\n2.3 \u6bd4\u8f83\u8fd0\u7b97\u7b26\n\n\n2.4 \u903b\u8f91\u8fd0\u7b97\u7b26\n\n\n2.5 \u4e09\u5143\u8fd0\u7b97\u7b26\n\u4e09\u5143\u8fd0\u7b97\u7b26\u683c\u5f0f\uff1a\n\n\u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d = \u5e03\u5c14\u7c7b\u578b\u8868\u8fbe\u5f0f\uff1f\u7ed3\u679c1\uff1a\u7ed3\u679c2\n\u4e09\u5143\u8fd0\u7b97\u7b26\u8ba1\u7b97\u65b9\u5f0f\uff1a\n\n\u5e03\u5c14\u7c7b\u578b\u8868\u8fbe\u5f0f\u7ed3\u679c\u662ftrue\uff0c\u4e09\u5143\u8fd0\u7b97\u7b26\u6574\u4f53\u7ed3\u679c\u4e3a\u7ed3\u679c1\uff0c\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002\n\u5e03\u5c14\u7c7b\u578b\u8868\u8fbe\u5f0f\u7ed3\u679c\u662ffalse\uff0c\u4e09\u5143\u8fd0\u7b97\u7b26\u6574\u4f53\u7ed3\u679c\u4e3a\u7ed3\u679c2\uff0c\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002\n\n\n2.6 \u4f4d\u8fd0\u7b97\u7b26\n\n&amp;\uff1a\u6309\u4f4d\u4e0e\u3002\u5f53\u4e24\u4f4d\u540c\u65f6\u4e3a1\u65f6\u624d\u8fd4\u56de1\u3002\n|\uff1a\u6309\u4f4d\u6216\u3002\u53ea\u8981\u6709\u4e00\u4f4d\u4e3a1\u5373\u53ef\u8fd4\u56de1\u3002\n~\uff1a\u6309\u4f4d\u975e\u3002\u5355\u76ee\u8fd0\u7b97\u7b26\uff0c\u5c06\u64cd\u4f5c\u6570\u7684\u6bcf\u4e2a\u4f4d\uff08\u5305\u62ec\u7b26\u53f7\u4f4d\uff09\u5168\u90e8\u53d6\u53cd\u3002\n^\uff1a\u6309\u4f4d\u5f02\u6216\u3002\u5f53\u4e24\u4f4d\u76f8\u540c\u65f6\u8fd4\u56de0\uff0c\u4e0d\u540c\u65f6\u8fd4\u56de1\u3002\n&lt;&lt;\uff1a\u5de6\u79fb\u8fd0\u7b97\u7b26\u3002\n&gt;&gt;\uff1a\u53f3\u79fb\u8fd0\u7b97\u7b26\u3002\n&gt;&gt;&gt;\uff1a\u65e0\u7b26\u53f7\u53f3\u79fb\u8fd0\u7b97\u7b26\u3002\n\n\n\n\u7b26\u53f7\n\n\n\n\n\n&amp;\uff1a\u6309\u4f4d\u4e0e\n\u5f53\u4e24\u4f4d\u540c\u65f6\u4e3a1\u65f6\u624d\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\n\n|\uff1a\u6309\u4f4d\u6216\n\u53ea\u8981\u6709\u4e00\u4f4d\u4e3a1\u5373\u53ef\u8fd4\u56de1\n\n\n~\uff1a\u6309\u4f4d\u975e\n\u5355\u76ee\u8fd0\u7b97\u7b26\uff0c\u5c06\u64cd\u4f5c\u6570\u7684\u6bcf\u4e2a\u4f4d\uff08\u5305\u62ec\u7b26\u53f7\u4f4d\uff09\u5168\u90e8\u53d6\u53cd\n\n\n^\uff1a\u6309\u4f4d\u5f02\u6216\n\u5f53\u4e24\u4f4d\u76f8\u540c\u65f6\u8fd4\u56de0\uff0c\u4e0d\u540c\u65f6\u8fd4\u56de1\n\n\n&lt;&lt;\uff1a\u5de6\u79fb\u8fd0\u7b97\u7b26\n\u5de6\u79fb\u8fd0\u7b97\u7b26\n\n\n&gt;&gt;\uff1a\u53f3\u79fb\u8fd0\u7b97\u7b26\n\u53f3\u79fb\u8fd0\u7b97\u7b26\uff0c\u4f8b\u5982 &gt;&gt; 2\u5219\u4ee3\u8868\u9664\u4e8e2\n\n\n&gt;&gt;&gt;\uff1a\u65e0\u7b26\u53f7\u53f3\u79fb\u8fd0\u7b97\u7b26\n\u65e0\u7b26\u53f7\u53f3\u79fb\u8fd0\u7b97\u7b26\n\n\n\n2.7 \u6570\u5b66\u51fd\u6570\u4e0e\u5e38\u91cfMath\n\u5728 Math\u7c7b\u4e2d\uff0c\u5305\u542b\u4e86\u5404\u79cd\u5404\u6837\u7684\u6570\u5b66\u51fd\u6570\u3002\u5728\u7f16\u5199\u4e0d\u540c\u7c7b\u522b\u7684\u7a0b\u5e8f\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u7684\u51fd\u6570\u4e5f\u4e0d\u540c\u3002\n\n\n/**\n         *Math.sqrt()//\u8ba1\u7b97\u5e73\u65b9\u6839\n         *Math.cbrt()//\u8ba1\u7b97\u7acb\u65b9\u6839\n         *Math.pow(a, b)//\u8ba1\u7b97a\u7684b\u6b21\u65b9\n         *Math.max( , );//\u8ba1\u7b97\u6700\u5927\u503c\n         *Math.min( , );//\u8ba1\u7b97\u6700\u5c0f\u503c\n         */\n\n        System.out.println(Math.sqrt(16));   //4.0\n        System.out.println(Math.cbrt(8));    //2.0\n        System.out.println(Math.pow(3,2));     //9.0\n        System.out.println(Math.max(2.3,4.5));//4.5\n        System.out.println(Math.min(2.3,4.5));//2.3\n\n        /**\n         * abs\u6c42\u7edd\u5bf9\u503c\n         */\n        System.out.println(Math.abs(-10.4));    //10.4\n        System.out.println(Math.abs(10.1));     //10.1\n\n        /**\n         * ceil\u5929\u82b1\u677f\u7684\u610f\u601d\uff0c\u5c31\u662f\u8fd4\u56de\u5927\u7684\u503c\n         */\n        System.out.println(Math.ceil(-10.1));   //-10.0\n        System.out.println(Math.ceil(10.7));    //11.0\n        System.out.println(Math.ceil(-0.7));    //-0.0\n        System.out.println(Math.ceil(0.0));     //0.0\n        System.out.println(Math.ceil(-0.0));    //-0.0\n        System.out.println(Math.ceil(-1.7));    //-1.0\n\n        /**\n         * floor\u5730\u677f\u7684\u610f\u601d\uff0c\u5c31\u662f\u8fd4\u56de\u5c0f\u7684\u503c\n         */\n        System.out.println(Math.floor(-10.1));  //-11.0\n        System.out.println(Math.floor(10.7));   //10.0\n        System.out.println(Math.floor(-0.7));   //-1.0\n        System.out.println(Math.floor(0.0));    //0.0\n        System.out.println(Math.floor(-0.0));   //-0.0\n\n        /**\n         * random \u53d6\u5f97\u4e00\u4e2a\u5927\u4e8e\u6216\u8005\u7b49\u4e8e0.0\u5c0f\u4e8e\u4e0d\u7b49\u4e8e1.0\u7684\u968f\u673a\u6570\n         */\n        System.out.println(Math.random());  //\u5c0f\u4e8e1\u5927\u4e8e0\u7684double\u7c7b\u578b\u7684\u6570\n        System.out.println(Math.random()*2);//\u5927\u4e8e0\u5c0f\u4e8e1\u7684double\u7c7b\u578b\u7684\u6570\n        System.out.println(Math.random()*2+1);//\u5927\u4e8e1\u5c0f\u4e8e2\u7684double\u7c7b\u578b\u7684\u6570\n\n        /**\n         * rint \u56db\u820d\u4e94\u5165\uff0c\u8fd4\u56dedouble\u503c\n         * \u6ce8\u610f.5\u7684\u65f6\u5019\u4f1a\u53d6\u5076\u6570    \u5f02\u5e38\u7684\u5c34\u5c2c=\u3002=\n         */\n        System.out.println(Math.rint(10.1));    //10.0\n        System.out.println(Math.rint(10.7));    //11.0\n        System.out.println(Math.rint(11.5));    //12.0\n        System.out.println(Math.rint(10.5));    //10.0\n        System.out.println(Math.rint(10.51));   //11.0\n        System.out.println(Math.rint(-10.5));   //-10.0\n        System.out.println(Math.rint(-11.5));   //-12.0\n        System.out.println(Math.rint(-10.51));  //-11.0\n        System.out.println(Math.rint(-10.6));   //-11.0\n        System.out.println(Math.rint(-10.2));   //-10.0\n\n        /**\n         * round \u56db\u820d\u4e94\u5165\uff0cfloat\u65f6\u8fd4\u56deint\u503c\uff0cdouble\u65f6\u8fd4\u56delong\u503c\n         */\n        System.out.println(Math.round(10.1));   //10\n        System.out.println(Math.round(10.7));   //11\n        System.out.println(Math.round(10.5));   //11\n        System.out.println(Math.round(10.51));  //11\n        System.out.println(Math.round(-10.5));  //-10\n        System.out.println(Math.round(-10.51)); //-11\n        System.out.println(Math.round(-10.6));  //-11\n        System.out.println(Math.round(-10.2));  //-10\n\n3 \u6570\u636e\u7c7b\u578b\u8f6c\u6362\nJava\u7a0b\u5e8f\u4e2d\u8981\u6c42\u53c2\u4e0e\u7684\u8ba1\u7b97\u7684\u6570\u636e\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1\u6570\u636e\u7c7b\u578b\u7684\u4e00\u81f4\u6027\uff0c\u5982\u679c\u6570\u636e\u7c7b\u578b\u4e0d\u4e00\u81f4\u5c06\u53d1\u751f\u7c7b\u578b\u7684\u8f6c\u6362\u3002\n\n\u81ea\u52a8\uff08\u9690\u5f0f\uff09\u7c7b\u578b\u8f6c\u6362\uff1a\u4ece\u5c0f\u7c7b\u578b\u5230\u5927\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u5f3a\u5236\u8f6c\u6362\u7b26\n\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a\u4ece\u5927\u7c7b\u578b\u5230\u5c0f\u7c7b\u578b\uff0c\u9700\u8981\u5f3a\u5236\u8f6c\u6362\u7b26\u5b9e\u73b0\u5f3a\u5236\u8f6c\u6362\uff0c\u5f3a\u5236\u8f6c\u6362\u7b26\uff1a\uff08\u9700\u8981\u8f6c\u6362\u6210\u7684\u7c7b\u578b\uff09\u53d8\u91cf\n\n3.1 \u81ea\u52a8\uff08\u9690\u5f0f\uff09\u8f6c\u6362\n\u4ece\u5c0f\u7c7b\u578b\u5230\u5927\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u5f3a\u5236\u8f6c\u6362\u7b26\n\n\u8f6c\u6362\u539f\u7406\u56fe\u89e3\n\u200b   byte \u7c7b\u578b\u5185\u5b58\u5360\u67091\u4e2a\u5b57\u8282\uff0c\u5728\u548c int \u7c7b\u578b\u8fd0\u7b97\u65f6\u4f1a\u63d0\u5347\u4e3a int \u7c7b\u578b \uff0c\u81ea\u52a8\u8865\u51453\u4e2a\u5b57\u8282\uff0c\u56e0\u6b64\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u8fd8\u662f int \u7c7b \u578b\u3002\n\n\u8f6c\u6362\u89c4\u5219\n\u200b       \u8303\u56f4\u5c0f\u7684\u7c7b\u578b\u5411\u8303\u56f4\u5927\u7684\u7c7b\u578b\u63d0\u5347\uff0c byte\u3001short\u3001char \u8fd0\u7b97\u65f6\u76f4\u63a5\u63d0\u5347\u4e3a int \u3002\n\n3.2 \u5f3a\u5236\uff08\u663e\u793a\uff09\u8f6c\u6362\n\n\u8f6c\u6362\u539f\u7406\u56fe\u89e3\n\n\u5f3a\u70c8\u6ce8\u610f\n\n\u5173\u4e8e+=\u8fd0\u7b97\npublic static void main(String[] args){\n    short s = 1;\n    s+=1;\n    System.out.println(s);\n}\n\n\u5206\u6790\uff1a s += 1 \u903b\u8f91\u4e0a\u770b\u4f5c\u662f s = s + 1 \u8ba1\u7b97\u7ed3\u679c\u88ab\u63d0\u5347\u4e3aint\u7c7b\u578b\uff0c\u518d\u5411short\u7c7b\u578b\u8d4b\u503c\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u56e0\u4e3a\u4e0d\u80fd\u5c06\u53d6\u503c\u8303\u56f4\u5927\u7684\u7c7b\u578b\u8d4b\u503c\u5230\u53d6\u503c\u8303\u56f4\u5c0f\u7684\u7c7b\u578b\u3002\u4f46\u662f\uff0c s=s+1\u8fdb\u884c\u4e24\u6b21\u8fd0\u7b97 \uff0c += \u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u53ea\u8fd0\u7b97\u4e00\u6b21\uff0c\u5e76\u5e26\u6709\u5f3a\u5236\u8f6c\u6362\u7684\u7279\u70b9\uff0c \u4e5f\u5c31\u662f\u8bf4 s += 1 \u5c31\u662f s = (short)(s + 1) \uff0c\u56e0\u6b64\u7a0b\u5e8f\u6ca1\u6709\u95ee\u9898\u7f16\u8bd1\u901a\u8fc7\uff0c\u8fd0\u884c\u7ed3\u679c\u662f2.\n\u5173\u4e8e\u5e38\u91cf\u53d8\u91cf\u7684\u8ba1\u7b97\npublic classMain {\n\u00a0 \u00a0 \u00a0public static void main(String[] args) {\n\u00a0 \u00a0 \u00a0byte a =4;\n\u00a0 \u00a0 \u00a0byte b =6;\n\u00a0 \u00a0 \u00a0byte c = a + b;\n    }\n}\n\n\n\u4e3a\u4ec0\u4e48byte a = 4\uff1b\u5c31\u4e0d\u4f1a\u62a5\u9519\uff1f\n\u56e0\u4e3abyte\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u516b\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u6b64\u65f6\u5176\u8303\u56f4\u4e3a-128 ~ +127\uff0c\u6240\u4ee54\u5728\u5176\u8303\u56f4\u5185\uff0c\u6240\u4ee5\u53ef\u4ee5\u88ab\u8d4b\u503c\u3002\u4e00\u65e6\u8fd9\u4e2a\u6570\u503c\u8d85\u8fc7\u4e86127\uff0c\u90a3\u4e48\u7f16\u8bd1\u5c31\u4f1a\u62a5\u9519\u4e86\u3002\n\n\n\u4e3a\u4ec0\u4e48byte c = a + b;\u5c31\u62a5\u9519\u5462\uff1f\n\u8fd9\u662fjava\u7684\u673a\u5236\u5bfc\u81f4\u7684\uff0cjava\u5728\u5bf9byte\u8fd9\u79cd\u7c7b\u578b\u8fdb\u884c\u201c\u8fd0\u7b97\u201d\u65f6\uff0c\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3aint\u7c7b\u578b\uff0c\u4e24\u4e2aint\u7c7b\u578b\u76f8\u52a0\uff0c\u8d4b\u503c\u7ed9byte\u7c7b\u578b\u80af\u5b9a\u4f1a\u62a5\u9519\u7684\u3002\n\n\n\u4e3a\u4ec0\u4e48byte = 3 + 4\uff1b\u53c8\u4e0d\u4f1a\u62a5\u9519\u5462\uff1f\n\u8ddfbyte a = 4\u4e00\u6837\uff0c3+4\u662f\u5e38\u91cf\u7684\u8ba1\u7b97\uff0c\u4f1a\u4f18\u5148\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u518d\u8d4b\u503c\u7ed9byte\uff0c\u6b64\u65f6\u5224\u65ad\u6570\u503c\u662f\u5426\u6ee1\u8db3\u8be5\u7c7b\u578b\u8303\u56f4\uff0c\u6ee1\u8db3\u5c31\u76f4\u63a5\u8d4b\u503c\u4e86\u3002\n\n\n\n\u603b\u7ed3\n\n\u4e24\u4e2a\u53d8\u91cf\u76f8\u52a0\uff0c\u5148\u5bf9\u7c7b\u578b\u8fdb\u884c\u63d0\u5347\uff0c\u7136\u540e\u8fd0\u7b97\uff0c\u518d\u5c06\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u3002\n\u4e24\u4e2a\u5e38\u91cf\u76f8\u52a0\uff0c\u5148\u8ba1\u7b97\u5e38\u91cf\u6570\u503c\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u7c7b\u578b\u8303\u56f4\uff0c\u518d\u8d4b\u503c\u3002\n\n3.3 ASCII\u7f16\u7801\u8868\npublic static void main(String[] args) {\n    //\u5b57\u7b26\u7c7b\u578b\u53d8\u91cf\n    char c = &#39;a&#39;;\n    int i = 1;\n    //\u5b57\u7b26\u7c7b\u578b\u548cint\u7c7b\u578b\u8ba1\u7b97\n    System.out.println(c+i);//\u8f93\u51fa\u7ed3\u679c\u662f98\n}\n\n\n4 \u65b9\u6cd5\nJShell\u5de5\u5177\n\u200b       \u4ec0\u4e48\u65f6\u5019\u4f1a\u7528\u5230 JShell \u5de5\u5177\u5462\uff0c\u5f53\u6211\u4eec\u7f16\u5199\u7684\u4ee3\u7801\u975e\u5e38\u5c11\u7684\u65f6\u5019\uff0c\u800c\u53c8\u4e0d\u613f\u610f\u7f16\u5199\u7c7b\uff0cmain\u65b9\u6cd5\uff0c\u4e5f\u4e0d\u613f\u610f\u53bb\u7f16\u8bd1\u548c\u8fd0 \u884c\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528JShell\u5de5\u5177\u3002 \u542f\u52a8JShell\u5de5\u5177\uff0c\u5728DOS\u547d\u4ee4\u884c\u76f4\u63a5\u8f93\u5165JShell\u547d\u4ee4\u3002\n\u63a5\u4e0b\u6765\u53ef\u4ee5\u7f16\u5199Java\u4ee3\u7801\uff0c\u65e0\u9700\u5199\u7c7b\u548c\u65b9\u6cd5\uff0c\u76f4\u63a5\u5199\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\u5373\u53ef\uff0c\u540c\u65f6\u65e0\u9700\u7f16\u8bd1\u548c\u8fd0\u884c\uff0c\u76f4\u63a5\u56de\u8f66\u5373\u53ef\n\n5 \u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\n5.1 if-else\n\n5.2 for\u5faa\u73af\n\u683c\u5f0f\nfor(\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u2460; \u5e03\u5c14\u8868\u8fbe\u5f0f\u2461; \u6b65\u8fdb\u8868\u8fbe\u5f0f\u2463){\n    \u5faa\u73af\u4f53\u2462\n}\n\n\u6267\u884c\u6d41\u7a0b\n\u6267\u884c\u987a\u5e8f\u2460\u2461\u2462\u2463&gt;\u2461\u2462\u2463&gt;\u2461\u2462\u2463\u2026\u2461\u4e0d\u6ee1\u8db3\u4e3a\u6b62\u3002\n\n\u2460\u8d1f\u8d23\u5b8c\u6210\u5faa\u73af\u53d8\u91cf\u521d\u59cb\u5316 \n\u2461\u8d1f\u8d23\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5faa\u73af\u6761\u4ef6\uff0c\u4e0d\u6ee1\u8db3\u5219\u8df3\u51fa\u5faa\u73af\n\u2462\u5177\u4f53\u6267\u884c\u7684\u8bed\u53e5 \n\u2463\u5faa\u73af\u540e\uff0c\u5faa\u73af\u6761\u4ef6\u6240\u6d89\u53ca\u53d8\u91cf\u7684\u53d8\u5316\u60c5\u51b5\n\n\u5176\u5b83\u5faa\u73af\nfor(Object x : ArrayList){\n    \u5faa\u73af\u4f53\n}\n\n5.3 \u8df3\u51fa\u8bed\u53e5\nbreak\uff1a\u7ec8\u6b62switch\u6216\u8005\u5faa\u73af\n\n\u5728\u9009\u62e9\u7ed3\u6784switch\u8bed\u53e5\u4e2d \n\u5728\u5faa\u73af\u8bed\u53e5\u4e2d \n\u79bb\u5f00\u4f7f\u7528\u573a\u666f\u7684\u5b58\u5728\u662f\u6ca1\u6709\u610f\u4e49\u7684\n\ncontinue\uff1a\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u7684\u5faa\u73af\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/tag/\u7b14\u8bb0/"}]}, {"title": "\u5b9e\u9a8c\u5ba4\u51fa\u5165\u7ba1\u7406\u5c0f\u7a0b\u5e8f", "date": "2020-08-07T00:24:30-00.00", "path": "/archives/MyProject-AttendanceMiniprogram/", "text": "\u539f\u6587\u94fe\u63a5\nhttps://wiki.lifeisgg.online/archives/MyProject-AttendanceMiniprogram/\n\nGithub\nhttps://github.com/LifeAlsoIsGG/MyProject-AttendanceMiniprogram-2.0\n\n\u4e00.\u5c0f\u7a0b\u5e8f\u4e8c\u7ef4\u7801\n\u6b64\u5c0f\u7a0b\u5e8f\u83b7\u5f97\u4e862020\u4e2d\u56fd\u5fae\u4fe1\u5b98\u65b9\u5c0f\u7a0b\u5e8f\u5927\u8d5b\u534e\u5357\u8d5b\u533a\u4e8c\u7b49\u5956\ud83c\udf89\n\u8d5b\u533a\u5956\u9879\u6bd4\u4f8b\n\n\u4e00\u7b49\u5956\uff1a5%\n\u4e8c\u7b49\u5956\uff1a10%\n\u4e09\u7b49\u5956\uff1a15\n\n\n\u4e8c.\u5728\u5f00\u53d1\u4e4b\u524d\n\u200b   \u8fd9\u4e2a\u9879\u76ee\u539f\u672c\u662f\u7ed3\u5408\u7269\u8054\u7f51\u786c\u4ef6\u6307\u7eb9\u548c\u4eba\u8138\u8bc6\u522b\u7684\u4e00\u6b3e\u5b9e\u9a8c\u5ba4\u51fa\u5165\u7ba1\u7406\u7684\u9879\u76ee\uff0c\u4e3b\u8981\u4e5f\u662f\u4e3a\u8bf8\u5982\u4e2d\u56fd\u5927\u5b66\u751f\u8ba1\u7b97\u673a\u8bbe\u8ba1\u5927\u8d5b\uff0c\u6311\u6218\u676f\uff0c\u4e92\u8054\u7f51+\u7b49\u6bd4\u8d5b\u51c6\u5907\u7684\u3002\u6211\u5728\u4e09\u4eba\u56e2\u961f\u4e2d\u62c5\u4efb\u7684\u804c\u8d23\u662f\u5c0f\u7a0b\u5e8f\u524d\u540e\u7aef\u5f00\u53d1\uff0c\u4e4b\u540e\u6070\u5de7\u770b\u5230\u8fd9\u4e2a\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u6bd4\u8d5b\u7684\u65f6\u5019\u5c31\u60f3\u7740\u62ff\u6765\u53c2\u8d5b\u4e86\uff0c\u5f53\u7136\u7ebf\u4e0b\u7684\u786c\u4ef6\u53ea\u80fd\u7528\u6a21\u62df\u7684\u65b9\u5f0f\u53bb\u8fdb\u884c\u3002\n\u4e09.\u5173\u4e8e\u5c0f\u7a0b\u5e8f&amp;\u9700\u6c42\u5206\u6790\n\u200b   \u5b9e\u9a8c\u5ba4\u4f5c\u4e3a\u5b89\u5168\u6027\u8f83\u9ad8\u7684\u91cd\u8981\u5c01\u95ed\u573a\u6240\uff0c\u5bf9\u4e8e\u5176\u5b83\u8bf8\u5982\u516c\u5171\u5c01\u95ed\u573a\u6240\u6559\u5ba4\uff0c\u529e\u516c\u5ba4\u7b49\u573a\u6240\uff0c\u5b9e\u9a8c\u5ba4\u7684\u5b89\u5168\u6027\uff0c\u4eba\u5458\u9650\u5236\u6027\uff0c\u4eba\u5458\u51fa\u5165\u7ba1\u7406\u66f4\u4e3a\u91cd\u8981\u3002\u67d0\u4e9b\u5b9e\u9a8c\u5ba4\u8fd8\u662f\u7528\u7740\u53e4\u8001\u7684\u4eba\u5458\u767b\u8bb0\u8868\u548c\u8fdb\u5165\u524d\u63d0\u524d\u62a5\u5907\u7ba1\u7406\u5458\uff0c\u6240\u4ee5\u4e3a\u4e86\u4f7f\u5b9e\u9a8c\u5ba4\u7684\u7ba1\u7406\uff0c\u900f\u660e\u5316\uff0c\u667a\u80fd\u5316\uff0c\u65b9\u4fbf\u5316\uff0c\u6211\u4eec\u5c06\u7ba1\u7406\u7cfb\u7edf\u653e\u5728\u79fb\u52a8\u7aef\u5c0f\u7a0b\u5e8f\u4e0a\uff0c\u65e0\u8bba\u662f\u53d1\u5e03\u516c\u544a\uff0c\u7ba1\u7406\u4eba\u5458\uff0c\u63a7\u5236\u5b9e\u9a8c\u5ba4\u5f00\u5173\uff0c\u67e5\u770b\u5b9e\u9a8c\u5ba4\u4eba\u5458\u60c5\u51b5\u7b49\u90fd\u80fd\u5feb\u901f\u638c\u63e1\u3002\n\u200b   \u5bf9\u4e8e\u666e\u901a\u7528\u6237\u6765\u8bf4\uff0c\u67e5\u770b\u5b9e\u9a8c\u5ba4\u5f00\u653e\u72b6\u6001\uff0c\u7533\u8bf7\u8fdb\u5165\u5b9e\u9a8c\u5ba4\uff0c\u67e5\u770b\u5728\u67d0\u95f4\u5b9e\u9a8c\u5ba4\u7684\u65f6\u957f\u548c\u5b9e\u9a8c\u5ba4\u516c\u544a\uff0c\u67e5\u770b\u81ea\u5df1\u7684\u65e5\u5fd7\uff0c\u4ee5\u53ca\u65f6\u957f\u6392\u884c\u699c\u7b49\u3002\n\u200b   \u5728\u5b89\u5168\u6027\u65b9\u9762\uff0c\u5b9e\u9a8c\u5ba4\u51fa\u5165\u91c7\u7528\u6307\u7eb9\u548c\u4eba\u8138\u8bc6\u522b\uff0c\u751f\u7269\u8bc6\u522b\u4e2d\u7684\u4eba\u8138\u8bc6\u522b\u53ca\u6307\u7eb9\u8bc6\u522b\uff0c\u5229\u7528\u5176\u552f\u4e00\u6027\uff0c\u53ef\u91c7\u96c6\u6027\u548c\u7a33\u5b9a\u6027\u3002\u552f\u4e00\u6027\u6307\u7684\u662f\u7279\u5f81\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u6bcf\u4e2a\u4eba\u6240\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684\u552f\u4e00\u5c5e\u6027\uff1b\u53ef\u91c7\u96c6\u6027\u6307\u7684\u662f\u6613\u4e8e\u88ab\u91c7\u96c6\uff1b\u7a33\u5b9a\u6027\u6307\u7684\u662f\u4e0d\u4f1a\u8f7b\u6613\u5730\u88ab\u5916\u5728\u6216\u5185\u5728\u56e0\u7d20\u6539\u53d8\u3002\u5176\u7279\u5f81\u66f4\u5177\u6709\u5b89\u5168\u6027\u3001\u53ef\u9760\u6027\u548c\u6709\u6548\u6027\u3002\n\u200b   \u5728\u56fd\u5185\u5df2\u6709\u7c7b\u4f3c\u7684\u901a\u8fc7\u6307\u7eb9\u53ca\u4eba\u8138\u7b49\u6280\u672f\uff0c\u5bf9\u5f00\u53d1\u6027\u6d3b\u52a8\u5ba4\u6216\u5b9e\u9a8c\u5ba4\u5b9e\u73b0\u667a\u80fd\u5316\u7684\u7ba1\u7406\uff0c\u7c7b\u4f3c\u7684\u7814\u7a76\u5df2\u8d8b\u8fd1\u6210\u719f\uff0c\u4f46\u662f\u505a\u6210H5\u7aef\u548cAPP\u4e0d\u591f\u65b9\u4fbf\uff0c\u4e14\u5927\u6750\u5c0f\u7528\uff0c\u76f8\u5bf9\u5c0f\u7a0b\u5e8f\u8fd9\u79cd\u8f7b\u91cf\u7ea7\u7684\u8fd8\u662f\u4e0d\u8db3\u3002\n\u4e09.\u6280\u672f\u65b9\u6848\n3.1\u524d\u7aef(\u5c0f\u7a0b\u5e8f\u7aef)\n\n\u4f7f\u7528\u4e86\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u5e93ColorUi,uView\u7ec4\u4ef6\u4f5c\u4e3a\u524d\u7aef\u8bbe\u8ba1\u7684\u7ec4\u4ef6\u5e93\nIDE\uff1a\u5fae\u4fe1\u5f00\u53d1\u8005\u5de5\u5177\uff0cHbuilderX\n\u6846\u67b6\uff1auniapp(\u4e00\u6b3e\u80fd\u53d1\u5e03\u5230\u591a\u7aef\u7684Vue\u6846\u67b6)\uff0c\u5e76\u6ca1\u6709\u7528\u5f00\u53d1\u8005\u5de5\u5177\u53bb\u5199\uff0c\u56e0\u4e3a\u5f00\u53d1\u8005\u5de5\u5177\u7684\u8bed\u6cd5\u5fae\u4fe1\u81ea\u5b9a\u4e49\u592a\u591a\u4e86\uff0c\u6309\u7167uniapp\u5b98\u65b9\u539f\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u4e0d\u4f26\u4e0d\u7c7b\u7684\u8bed\u6cd5\uff0c\u4e24\u4e2a\u6211\u90fd\u6709\u8bd5\u8fc7\uff0c\u81ea\u5df1\u7684\u786e\u66f4\u559c\u6b22\u63a5\u8fd1Vue\u539f\u751f\u7684\u8bed\u6cd5\u3002\u5728HbuilderX\u5199\u597d\u540e\u80fd\u81ea\u52a8\u7f16\u8bd1\u5728\u5f00\u53d1\u8005\u5de5\u5177\u3002\n\n\n3.2\u540e\u7aef\n\n\u670d\u52a1\u5668\uff1a\u963f\u91cc\u4e91\uff0c\u817e\u8baf\u4e91\n\u6846\u67b6\uff1aSpringBoot\uff0cSpringCloud\u7b80\u5355\u90e8\u7f72\uff0cMybatis\n\u4e91\u51fd\u6570\uff1a\u817e\u8baf\u4e91\u4e91\u5f00\u53d1(\u83b7\u53d6openid\uff0c\u53d1\u9001\u817e\u8baf\u4e91\u77ed\u4fe1\uff0c\u53d1\u9001\u8ba2\u9605\u6d88\u606f\u7b49)\n\u6570\u636e\u5e93\uff1aMysql5.7\n\u73af\u5883\uff1ajava1.8\nIDE\uff1aIDEA\n\n\n\u200b   \u540e\u7aef\u91c7\u7528\u7684SSM\u6846\u67b6\u548cspring\u7684\u5fae\u670d\u52a1\u4f7f\u4e1a\u52a1\u6a21\u5757\u5316\u3002\u800c\u4f7f\u7528\u4e91\u51fd\u6570\u662f\u4e3a\u4e86\u65b9\u4fbf\u5730\u83b7\u53d6\u7528\u6237openid\u4ee5\u53ca\u53d1\u9001\u8ba2\u9605\u6d88\u606f\n\u83b7\u53d6openid\n\u8ba2\u9605\u6d88\u606f\n3.3\u786c\u4ef6\n\n\u6811\u8393\u6d3e\uff0cArduino\u5e73\u53f0\uff0c\u6307\u7eb9\u5668\uff0c\u6444\u50cf\u5934\n\u817e\u8baf\u4e91\u7269\u8054\u7f51\u5f00\u53d1\u5e73\u53f0\n\n\n4.\u9875\u9762\u529f\u80fd\u5c55\u793a\u8bf4\u660e\n\u200b   \u5171\u67095\u4e2a\u9875\u9762\uff0c\u4e0e\u5e95\u90e8dock\u680f\u4e00\u4e00\u5bf9\u5e94\n\n\u9996\u9875\n\u65e5\u5fd7\n\u4eea\u8868\u76d8\n\u6392\u884c\u699c\n\u6211\u7684\n\n\n\u67b6\u6784\u56fe\n 4.1\u9996\u9875Home\n\u5f53\u8fdb\u5165\u9875\u9762\u65f6\u4f1a\u5224\u65ad\u4f60\u5f53\u524d\u5728\u54ea\u4e2a\u5b9e\u9a8c\u5ba4\uff0c\u5982\u679c\u4e0d\u5728\u5219\u53ef\u4ee5\u6a21\u62df\u9009\u62e9\u6559\u5ba4\u8fdb\u5165\uff0c\u6a21\u62df\u8fdb\u5165\u540e\u4f1a\u53d1\u9001\u6253\u5361\u901a\u77e5\n              \u5982\u679c\u4f60\u5728\u8fdb\u5165\u5b9e\u9a8c\u5ba4\u540e\u70b9\u51fb\u6253\u5f00\u901a\u77e5\uff0c\u5219\u5c55\u793a\u76ee\u524d\u6240\u5728\u5b9e\u9a8c\u5ba4\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u67e5\u770b\u5982\u4e0b\n\n\u9876\u90e8\u53ef\u4ee5\u67e5\u770b\u5728\u7ebf\u65f6\u957f\n\u8fd9\u95f4\u6559\u5ba4\u7684\u51fa\u5165\u65e5\u5fd7\uff0c\u516c\u544a\uff0c\u6587\u4ef6\uff0c\u6982\u89c8\u7b49\n\u5b9e\u9a8c\u5ba4\u6210\u5458(\u5df2\u8fdb\u5165\u4eba\u5458\uff0c\u5df2\u79bb\u5f00\u6210\u5458\uff0c\u7ba1\u7406\u5458)\n\u8fd8\u6709\u63d0\u9192\u5728\u5b9e\u9a8c\u5ba4\u65f6\u957f\u8d85\u8fc7\u516d\u5c0f\u65f6\n\n                                  \u4e4b\u540e\u70b9\u51fb\u53f3\u4e0b\u89d2\u7684\u6309\u94ae\u5219\u53ef\u4ee5\u6a21\u62df\u9000\u51fa\u5b9e\u9a8c\u5ba4\uff0c\u6210\u529f\u540e\u4e5f\u4f1a\u53d1\u9001\u6253\u5361\u901a\u77e5\n              4.2\u65e5\u5fd7Log\n\u5728\u8fd9\u91cc\u53ef\u4ee5\u67e5\u770b\u81ea\u5df1\u8fdb\u51fa\u5b9e\u9a8c\u5ba4\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0c\u65e5\u5fd7\u8bb0\u5f55\u91c7\u7528\u9006\u5e8f\u663e\u793a\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u65f6\u95f4\u9009\u62e9\u533a\u6bb5\u67e5\u770b\n              \u70b9\u51fbTab\u680f\u4e2d\u6211\u7684\u5b9e\u9a8c\u5ba4\u53ef\u4ee5\u67e5\u770b\u6211\u53bb\u8fc7\u7684\u5b9e\u9a8c\u5ba4\uff0c\u70b9\u51fb\u5b9e\u9a8c\u5ba4\u5361\u7247\u53ef\u4ee5\u770b\u5230\u6211\u5728\u8fd9\u95f4\u5b9e\u9a8c\u5ba4\u7684\u65e5\u5fd7\n              4.3\u63a7\u5236\u53f0Dashboard\n\u63a7\u5236\u53f0\u6d89\u53ca\u6bd4\u8f83\u591a\u7684CURD\u4e8b\u52a1\uff0c\u4e5f\u662f\u5c0f\u7a0b\u5e8f\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u4e3a\u4e86\u5c06\u590d\u6742\u7b28\u91cd\u7684\u7ba1\u7406\u7cfb\u7edf\u79fb\u690d\u5230\u5c0f\u7a0b\u5e8f\u4e0a\uff0c\u505a\u4e86\u8bb8\u591a\u9875\u9762\u7b80\u5316\u5904\u7406\u548c\u53cb\u597d\u7684\u7528\u6237\u4ea4\u4e92\u4f53\u9a8c(\u4f46\u8c8c\u4f3c\u8fd8\u662f\u8fc7\u4e8e\u7b28\u91cd\ud83c\udfc3)\n\n\n\u6743\u9650/\u8eab\u4efd\n\u8d85\u7ba1\n\u666e\u901a\u7528\u6237\n\n\n\n\n\u67e5\u770b\u5b9e\u9a8c\u5ba4\u8be6\u7ec6\n\u6240\u6709\u5b9e\u9a8c\u5ba4\n\u81ea\u5df1\u7ba1\u7406\u7684\n\n\n\u5173\u95ed/\u5f00\u653e\u5b9e\u9a8c\u5ba4\n\u6240\u6709\u5b9e\u9a8c\u5ba4\n\u81ea\u5df1\u7ba1\u7406\u7684\n\n\n\u6dfb\u52a0\u5b9e\u9a8c\u5ba4\n\u2714\ufe0f\n\u274c\n\n\n\u6dfb\u52a0/\u5220\u9664\u5b9e\u9a8c\u5ba4\u7ba1\u7406\u5458\n\u2714\ufe0f\n\u274c\n\n\n\u6dfb\u52a0/\u5220\u9664\u5b9e\u9a8c\u5ba4\u516c\u544a\n\u6240\u6709\u5b9e\u9a8c\u5ba4\n\u81ea\u5df1\u7ba1\u7406\u7684\n\n\n\u67e5\u770b\u7528\u6237/\u7528\u6237\u8be6\u7ec6\n\u2714\ufe0f\n\u274c\n\n\n\u67e5\u770b\u6240\u6709\u7528\u6237\u65e5\u5fd7\n\u2714\ufe0f\n\u274c\n\n\n\n\n\u8d85\u7ea7\u7ba1\u7406\u5458\uff1a\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u5b9e\u9a8c\u5ba4\uff0c\u7528\u6237\uff0c\u65e5\u5fd7\uff0c\u589e\u52a0\u5173\u95ed\u6559\u5ba4\uff0c\u8d4b\u4e88\u7528\u6237\u4e3a\u67d0\u4e2a\u5b9e\u9a8c\u5ba4\u7684\u7ba1\u7406\u5458\uff0c\u64a4\u9500\u67d0\u4e2a\u5b9e\u9a8c\u5ba4\u7684\u7ba1\u7406\u5458\u7b49\u7b49\n\u7ba1\u7406\u5458\uff1a\u80fd\u67e5\u770b\u81ea\u5df1\u7ba1\u7406\u7684\u5b9e\u9a8c\u5ba4\u65e5\u5fd7\u7528\u6237\u7b49\uff0c\u80fd\u53d1\u5e03\u516c\u544a\u5728\u81ea\u5df1\u7ba1\u7406\u7684\u5b9e\u9a8c\u5ba4\uff0c\u603b\u4e4b\u57fa\u4e8e\u81ea\u5df1\u7ba1\u7406\u7684\u5b9e\u9a8c\u5ba4\u3002\n\u666e\u901a\u7528\u6237\uff1a\u5176\u5b9e\u5c31\u7406\u89e3\u4e3a\u6ca1\u6709\u7ba1\u7406\u5b9e\u9a8c\u5ba4\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u67e5\u770b\u81ea\u5df1\u7684\u65e5\u5fd7\uff0c\u81ea\u5df1\u6240\u5728\u6559\u5ba4\u7684\u52a8\u6001\u4ee5\u53ca\u6d3b\u8dc3\u65f6\u957f\u6392\u884c\u699c\n\n\n\n\u63a7\u5236\u53f0\u67e5\u770b\u5b9e\u9a8c\u5ba4\uff0c\u70b9\u51fb\u5361\u7247\u53ef\u4ee5\u67e5\u770b\u5b9e\u9a8c\u5ba4\u8be6\u60c5\uff0c\u8d85\u7ba1\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u5b9e\u9a8c\u5ba4\u8be6\u60c5\uff0c\u666e\u901a\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7ba1\u7406\u7684\n\n              \u5728\u6982\u89c8\u9875\u9762\n\n\u8d85\u7ba1\uff1a\u67e5\u770b\u76d1\u63a7(TODO)\uff0c\u5173\u95ed\u5f00\u653e\u5b9e\u9a8c\u5ba4(\u5982\u679c\u5b9e\u9a8c\u5ba4\u6709\u4eba\u4f1a\u63d0\u9192)\uff0c\u6dfb\u52a0\u5220\u9664\u6b64\u623f\u95f4\u7ba1\u7406\u5458\uff0c\u8d85\u7ba1\u9ed8\u8ba4\u4e3a\u7ba1\u7406\u5458\uff0c\u6ca1\u5206\u914d\u65f6\u4e0d\u4f1a\u663e\u793a\uff0c\u5206\u914d\u540e\u4f1a\u5934\u50cf\u4f1a\u663e\u793a\u8d85\u7ba1\n\u7ba1\u7406\u5458\uff1a\u67e5\u770b\u76d1\u63a7(TODO)\uff0c\u5173\u95ed\u5f00\u653e\u5b9e\u9a8c\u5ba4(\u5982\u679c\u5b9e\u9a8c\u5ba4\u6709\u4eba\u4f1a\u63d0\u9192)\n\n              4.4\u6392\u884c\u699cRank\n\u6392\u884c\u699c\u7c7b\u4f3c\u5fae\u4fe1\u8fd0\u52a8\uff0c\u53ef\u4ee5\u67e5\u770b\u76ee\u524d\u8c01\u7684\u6d3b\u8dc3\u65f6\u957f\u6700\u9ad8\uff0c\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u5468\u548c\u5f53\u524d\u6708\u7684\u6d3b\u8dc3\u5ea6\u6392\u884c\u699c\ud83d\udcaf\nTODO\uff1a\u56fe\u8868\u663e\u793a\uff0c\u5386\u53f2\u5468\u548c\u5386\u53f2\u6708\u6392\u540d\n\n              4.5\u6211\u7684Profile\n\u6211\u7684\u754c\u9762\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u5b9e\u540d\u624b\u673a\u7ed1\u5b9a\uff0c\u5728\u5b66\u6821\u7528\u57fa\u672c\u8c03\u7528\u63a5\u53e3\u8f93\u5165\u5b66\u53f7\u5bc6\u7801\uff0c\u4f46\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u53ea\u80fd\u6a21\u62df\u7528\u624b\u673a\u7ed1\u5b9a\u3002\u5728\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4e3b\u52a8\u7533\u8bf7\u670d\u52a1\u6d88\u606f\u7684\u6253\u5361\u901a\u77e5\uff0c\u6ed1\u52a8\u63a5\u6536\u6d88\u606f\u7684Switch\u5373\u53ef\u3002\n              \u70b9\u51fb\u6700\u4e0b\u65b9\u7684\u4ecb\u7ecd&amp;\u4f7f\u7528\u624b\u518c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u66f4\u5feb\u5730\u4e86\u89e3\u5e76\u4f7f\u7528\u5c0f\u7a0b\u5e8f\u3002\n         \u4e94.\u540e\u8bb0\n\u200b   \u7531\u4e8e\u5c0f\u7a0b\u5e8f\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u4e5f\u9020\u6210\u4e86\u8bc4\u59d4\u4f53\u9a8c\u65f6\u5bf9\u6211\u7684\u5c0f\u7a0b\u5e8f\u6709\u70b9\u61f5\u7684\u72b6\u51b5\uff0c\u5728\u5927\u5bb6\u5728\u7fa4\u91cc\u90fd\u5f00\u59cb\u8bc4\u5ba1\u7684\u65f6\u5019\u6211\u7684\u5c0f\u7a0b\u5e8f\u8001\u5e08\u53ea\u662f\u6765\u8e29\u4e86\u8e29\u70b9\u4fbf\u6ca1\u4e86\u52a8\u9759\uff0c\u5f97\u4e8f\u6211\u53cd\u9988\u5e76\u8bf4\u660e\u540e\u624d\u6709\u8001\u5e08\u4f7f\u7528\uff0c\u540e\u6765\u5728\u7fa4\u91cc\u4e5f\u770b\u5230\u6709\u51e0\u4e2a\u4eba\u8bf4\u5c0f\u7a0b\u5e8f\u6ca1\u6709\u88ab\u8bc4\u5ba1\u3002\u4e3b\u529e\u65b9\u90a3\u8fb9\u4e5f\u7b97\u633a\u8d1f\u8d23\uff0c\u53ca\u65f6\u7ec4\u7ec7\u8bc4\u59d4\u53bb\u4f7f\u7528\u53ea\u662f\u8e29\u4e86\u8e29\u70b9\u7684\u5c0f\u7a0b\u5e8f\u3002\u9664\u4e86\u8bc4\u59d4\u8001\u5e08\u53ef\u80fd\u758f\u6f0f\u7684\u539f\u56e0(\u4f5c\u54c1\u6570\u8fd8\u662f\u6bd4\u8f83\u591a\u7684)\uff0c\u6211\u4e5f\u5438\u53d6\u4e86\u6559\u8bad\uff0c\u5c31\u662f\u4e00\u5f00\u59cb\u7684\u7528\u6237\u4f53\u9a8c\u548c\u5f15\u5bfc\u975e\u5e38\u91cd\u8981\uff0c\u80fd\u505a\u5230\u624b\u628a\u624b\u6559\u90a3\u79cd\u66f4\u597d\uff0c\u907f\u514d\u4e00\u4e0a\u6765\u5c31\u8981\u767b\u5f55\u6216\u8005\u586b\u5199\u4e00\u5927\u63a8\u8868\u5355\u7684\u60c5\u51b5\uff08\u771f\u7684\u4f1a\u8ba9\u4eba\u77ac\u95f4\u611f\u5230\u70e6\u8e81\uff09\u3002\u8fd8\u6709\u5c31\u662f\u8981\u7b26\u5408\u5c0f\u7a0b\u5e8f\u8f7b\u91cf\uff0c\u65b9\u4fbf\u7684\u7279\u70b9\uff0c\u6709\u4e9b\u5730\u65b9\u505a\u505a\u51cf\u6cd5\u53cd\u800c\u6548\u679c\u66f4\u597d(\u6211\u4e5f\u53c2\u8003\u4e86\u90a3\u4e9b\u5165\u56f4\u5168\u56fd\u6bd4\u8d5b\u7684\u5c0f\u7a0b\u5e8f)\u3002\u4f46\u8fd9\u4e9b\u5c5e\u4e8e\u524d\u7aef\u7684\u7075\u9b42\u7684\u4e1c\u897f\uff0c\u5305\u62ec\u72ec\u7279\u7684UI\u8bbe\u8ba1\u90a3\u4e9b\uff0c\u5bf9\u4e8e\u4f5c\u4e3a\u540e\u7aef\u72d7\u7684\u6211\u6765\u8bf4\u8c8c\u4f3c\u4e0d\u592a\u611f\u5192\u3002\u6211\u5728\u60f3\uff0c\u6216\u8bb8\u90a3\u4e9b\u4f18\u96c5\u7684\u7528\u6237\u4f53\u9a8c\u524d\u7aef\u8bbe\u8ba1\u7684\u80cc\u540e\u4e00\u5b9a\u662f\u4e00\u4e2a\u6e29\u67d4\u7ec6\u81f4\u4f53\u8d34\u7684\u4eba\u5427\ud83d\ude07\u3002\n\u200b   \u6700\u540e\u8fd8\u662f\u60f3\u8bf4\uff0c\u8fd9\u4e2a\u6bd4\u8d5b\u6709\u4e00\u5b9a\u7684\u6c34\u5206\uff0c\u81ea\u5df1\u4e5f\u770b\u4e86\u770b\u83b7\u5956\u7684\u5c0f\u7a0b\u5e8f\uff0c\u6709\u4e9b\u771f\u7684\u662f\u8fc7\u4e8e\u7b80\u5355\uff0c\u6bd4\u5982\u8c03\u7528\u7b2c\u4e09\u65b9\u63a5\u53e3\u8bc6\u56fe\uff0c\u8fd8\u6709\u90a3\u4e9b\u7efc\u5408\u79d1\u666e\u4fe1\u606f\u5c55\u793a\u7b54\u9898\u7c7b\uff0c\u66f4\u591a\u7684\u662f\u7eaf\u9759\u6001\u4fe1\u606f\u663e\u793a\uff0c\u5e76\u6ca1\u6709\u591a\u5c11\u96be\u5ea6\uff0c\u6bd4\u8d5b\u7ed3\u679c\u540e\u4e5f\u6ca1\u6709\u5206\u6570\u3002\u518d\u8005\uff0c\u6709\u4e9b\u5c0f\u7a0b\u5e8f\u80cc\u9760\u56e2\u961f\u4f01\u4e1a\u8d44\u6e90\uff0c\u540d\u6821\u503e\u5411\u5565\u7684\u6211\u4e5f\u4e0d\u8c08\u3002\u5728\u7b54\u8fa9\u8fc7\u7a0b\u4e2d\u51c6\u5907\u7684PPT\u90a3\u4e9b\u5546\u4e1a\u8ba1\u5212\u5565\u7684\u51c6\u5907\u7684\u5f88\u5b8c\u6574\uff0c\u800c\u6bd4\u8d5b\u89c4\u5b9a\u4e2d\u6709\u4e00\u6761\u662f\u6ca1\u6709\u53c2\u52a0\u8fc7\u5176\u4ed6\u7701\u7ea7\u4ee5\u4e0a\u6bd4\u8d5b\u7684\u9879\u76ee\uff0c\u800c\u8fd9\u4e9b\u5374\u5f88\u96be\u53bb\u6c42\u8bc1\u4e86\u3002\u518d\u8005\u8fd8\u6709\u6761\u89c4\u5b9a\uff0c\u6838\u5fc3\u529f\u80fd\u572819\u5e749\u6708\u4efd\u524d\u5f00\u53d1\u7684\u5c0f\u7a0b\u5e8f\u7b97\u8fdd\u89c4\uff0c\u8fd9\u4e9b\u4e5f\u5f88\u96be\u53bb\u6c42\u8bc1\u4e86\u3002\u4f46\u662f\u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\uff0c\u6bd4\u8d5b\u65b9\u7684\u6001\u5ea6\u90fd\u5f88\u597d\uff0c\u4e5f\u90fd\u6709\u8010\u5fc3\u56de\u7b54\u6211\u4eec\u7684\u95ee\u9898\uff0c\u7fa4\u91cc\u9762\u4e5f\u6709\u4eba\u5c55\u793a\u5c0f\u7a0b\u5e8f\u7136\u540e\u4e00\u8d77\u8ba8\u8bba\uff0c\u4e5f\u7b97\u4e0d\u9519\u7684\u6bd4\u8d5b\u4f53\u9a8c\u4e86\u3002\u6700\u540e\u62ff\u4e86\u4e2a\u534e\u5357\u8d5b\u533a\u4e8c\u7b49\u5956\u4e5f\u7b97\u662f\u5bf9\u6211\u90a3\u51e0\u4e2a\u661f\u671f\u71ac\u591c\u7684\u6170\u95ee\u4e86\u5427(\u4e5f\u4e0d\u77e5\u9053\u5bf9\u627e\u5de5\u4f5c\u6709\u6ca1\u6709\u7528\ud83d\ude02)\u3002\n", "categories": [{"name": "My Project", "slug": "My Project", "permalink": "/category/My Project/"}], "tags": [{"name": "My Project", "slug": "My Project", "permalink": "/tag/My Project/"}, {"name": "Vue", "slug": "Vue", "permalink": "/tag/Vue/"}, {"name": "uni-app", "slug": "uni-app", "permalink": "/tag/uni-app/"}]}, {"title": "\u5b57\u8282\u8df3\u52a8\u9762\u8bd5", "date": "2020-07-17T00:03:24-00.00", "path": "/archives/\u5b57\u8282\u8df3\u52a8\u9762\u8bd5/", "text": "1.Java GC(\u5783\u573e\u56de\u6536)\n\u4e3b\u8981\u4efb\u52a1\n\n\u5206\u914d\u5185\u5b58\n\u786e\u4fdd\u88ab\u5f15\u7528\u5bf9\u8c61\u7684\u5185\u5b58\u4e0d\u88ab\u9519\u8bef\u5730\u56de\u6536\n\u56de\u6536\u4e0d\u518d\u88ab\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\n\n\n1.1Minor Gc \u548c Full GC \u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1f\n\u76ee\u524d\u4e3b\u6d41\u7684\u5783\u573e\u6536\u96c6\u5668\u90fd\u4f1a\u91c7\u7528\u5206\u4ee3\u56de\u6536\u7b97\u6cd5\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u5806\u5185\u5b58\u5206\u4e3a\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u5404\u4e2a\u5e74\u4ee3\u7684\u7279\u70b9\u9009\u62e9\u5408\u9002\u7684\u5783\u573e\u6536\u96c6\u7b97\u6cd5\u3002\n\u65b0\u751f\u4ee3 GC\uff08Minor GC\uff09: \u6307\u53d1\u751f\u65b0\u751f\u4ee3\u7684\u7684\u5783\u573e\u6536\u96c6\u52a8\u4f5c\uff0cMinor GC \u975e\u5e38\u9891\u7e41\uff0c\u56de\u6536\u901f\u5ea6\u4e00\u822c\u4e5f\u6bd4\u8f83\u5feb\u3002\n\u8001\u5e74\u4ee3 GC\uff08Major GC/Full GC\uff09: \u6307\u53d1\u751f\u5728\u8001\u5e74\u4ee3\u7684 GC\uff0c\u51fa\u73b0\u4e86 Major GC \u7ecf\u5e38\u4f1a\u4f34\u968f\u81f3\u5c11\u4e00\u6b21\u7684 Minor GC\uff08\u5e76\u975e\u7edd\u5bf9\uff09\uff0cMajor GC \u7684\u901f\u5ea6\u4e00\u822c\u4f1a\u6bd4 Minor GC \u7684\u6162 10 \u500d\u4ee5\u4e0a\u3002\n", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}]}, {"title": "Javaweb\u5927\u5b66\u6d3b\u52a8\u7ba1\u7406\u7cfb\u7edf", "date": "2020-07-12T01:34:30-00.00", "path": "/archives/ActivitySystem/", "text": "ActivitySystem\n", "categories": [{"name": "My Project", "slug": "My Project", "permalink": "/category/My Project/"}], "tags": [{"name": "My Project", "slug": "My Project", "permalink": "/tag/My Project/"}, {"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}, {"name": "Javaweb", "slug": "Javaweb", "permalink": "/tag/Javaweb/"}]}, {"title": "Java Swing-\u8d85\u5e02\u7cfb\u7edf", "date": "2020-07-12T01:27:13-00.00", "path": "/archives/MyProject-SupermarketSystem/", "text": "\u94fe\u63a5\nGithub\uff1ahttps://github.com/LifeAlsoIsGG/MyProject-SupermarketSystem\n\u5199\u5728\u524d\u9762\n\u521d\u6b21\u5f15\u5165\u53ef\u80fd\u4f1a\u62a5\u9519\uff0c\u6240\u4ee5\u98df\u7528\u524d\u8bf7\u91cd\u65b0\u5f15\u5165\u597d\u4e09\u4e2ajar\u5305\uff0c\u90fd\u5728lib\u76ee\u5f55\u4e0b\n\n\u5176\u5b83\u4fee\u6539\n\n\u4fee\u6539config/jdbc.properties\u91cc\u9762\u8fde\u63a5mysql\u6570\u636e\u5e93\u7684\u5c5e\u6027\u503c\u4e3a\u81ea\u5df1\u7684\u3002\n\n\u8fdb\u8d27\u529f\u80fd\u7684\u90ae\u4ef6\u53d1\u9001\u65b9\u9762\uff0c\u8c03\u7528\u7684\u7c7b\u4e3acom.lingnan.supermarket.util/SendQQMailUtil.java\uff0c\u5728com.lingnan.supermarket.view/InView.java\u4e0b\u8c03\u7528\uff0c\u5982\u56fe\uff0c\u7167\u7740SendQQMailUtil.java\u7684\u5c5e\u6027\u4fee\u6539\u5373\u53ef\uff0c\u524d\u63d0\u8981\u5f00\u901aQQEmail\u7684SMTP\u670d\u52a1(\u81ea\u884c\u767e\u5ea6),\u8c03\u7528\u4f4d\u7f6e\u5982\u56fe\u3002\u8bf7\u52a1\u5fc5\u4f7f\u7528\u81ea\u5df1\u7684SMTP\u670d\u52a1\u65b9\u4fbf\u90ae\u4ef6\u7684\u53d1\u9001\u4e0e\u63a5\u6536\uff0c\u5982\u679c\u4f60\u5b9e\u5728\u8981\u7528\u6211\u7684\u8bf7\u52a1\u5fc5\u5c06\u6536\u4ef6\u4eba\u90ae\u7bb1\u6539\u4e3a\u81ea\u5df1\u7684\uff0c\u5426\u5219\u4f60\u8fd9\u8fb9\u662f\u770b\u4e0d\u5230\u90ae\u4ef6\u662f\u5426\u53d1\u9001\u6210\u529f(\u4fee\u6539\u4e0b\u9762\u7b2c\u4e09\u4e2a\u53c2\u6570\u7684\u90ae\u7bb1\u4e3a\u81ea\u5df1\u7684\u5373\u53ef)\uff01\uff01\uff01\n\n\n\n\n\u6574\u4e2a\u9879\u76ee\u7684\u8fd0\u884c\u5165\u53e3\u5728com.lingnan.supermarket.view/LoginView.java\u4e0b\u5373main\u51fd\u6570\u653e\u7684\u5730\u65b9\n\u5de5\u5177&amp;\u73af\u5883tools\n\n\u6570\u636e\u5e93\uff1aMysql5.7\njava\u73af\u5883\uff1aJava1.8\n\u7f16\u8f91\u5668\uff1aEclipse\n\u670d\u52a1\u5668\uff1aTomcat8\n\n\n\u9996\u9875home\n\u4eba\u5458\u7ba1\u7406manage\n\u6743\u96500\u4e3a\u8d85\u7ba1\uff0c1\u4e3a\u6536\u8d27\u5458\uff0c2\u4e3a\u8fdb\u8d27\u5458\n\u8fdb\u8d27\u7cfb\u7edfimport\n\u8fd9\u91cc\u5728\u6dfb\u52a0\u8981\u8fdb\u8d27\u7269\u65f6\u5077\u4e86\u61d2\u53ea\u6709\u9009\u62e9\u7f16\u53f7\u52a0\u5165\u3002\u53f3\u4e0a\u89d2\u6dfb\u52a0\u6309\u94ae\u5373\u53ef\u6dfb\u52a0\u8981\u8fdb\u7684\u8d27\uff0c\u53f3\u4e0b\u89d2\u7b2c\u4e00\u4e2a\u6309\u94ae\u5c31\u662f\u786e\u8ba4\u8fdb\u8d27\uff0c\u70b9\u51fb\u540e\u4f1a\u53d1\u9001\u90ae\u4ef6\u7ed9\u76f8\u5e94\u7684\u4ed3\u5e93\uff0c\u516c\u53f8\u7b49\uff0c\u8fd9\u91cc\u53ea\u662f\u6a21\u62df\u3002\n\u8fdb\u8d27\u6d41\u7a0b\u5c31\u662f(\u7406\u60f3\u60c5\u51b5\uff0c\u5b9e\u9645\u8fd8\u9700\u770b\u9700\u6c42)\n\n\u8fdb\u8d27\u5458\u6dfb\u52a0\u8fdb\u8d27\u5546\u54c1\n\u786e\u8ba4\u8fdb\u8d27\u8ba2\u5355\u540e\u4f1a\u53d1\u9001\u90ae\u4ef6\n\u4f9b\u8d27\u65b9\u6536\u5230\u90ae\u4ef6\u540e\u51c6\u5907\u8fdb\u8d27\n\u5546\u573a\u6536\u5230\u8d27\uff0c\u8fdb\u8d27\u5458\u7ebf\u4e0b\u6e05\u70b9\u597d\u540e\u66f4\u6539\u8ba2\u5355\u72b6\u6001\u4e3a\u5df2\u5165\u5e93\n\u7cfb\u7edf\u5e93\u5b58\u81ea\u52a8\u589e\u52a0\n\n\n\u6dfb\u52a0\u8fdb\u8d27\n\u66f4\u6539\u8fdb\u8d27\u6570\u91cf\n\u786e\u8ba4\u8fdb\u8d27\u8ba2\u5355&amp;\u53d1\u9001\u8fdb\u8d27\u90ae\u4ef6\n\n  \n    \n  \n    \n    \n\u4f9b\u8d27\u65b9\u67e5\u770b\u90ae\u4ef6\u5185\u5bb9\n\u6ca1\u6709\u7528\u5230\u8868\u683c\u6216html\uff0c\u53ea\u662f\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u6392\u7248\n\u66f4\u6539\u8fdb\u8d27\u8ba2\u5355\u72b6\u6001\n\u6a21\u62df\u5f53\u8fdb\u8d27\u6210\u529f\u540e\uff0c==\u4fee\u6539\u8ba2\u5355\u72b6\u6001==\u4e3a\u5df2\u5165\u5e93\u6216\u8005\u5df2\u53d6\u6d88\uff0c\u5982\u679c\u5df2\u5165\u5e93\u540e\u5e93\u5b58\u6570\u91cf\u4f1a\u81ea\u52a8\u589e\u52a0\n\n  \n    \n  \n    \n    \n\u6536\u94f6\u7cfb\u7edfcashier\n\u4e5f\u662f\u6ca1\u626b\u63cf\u673a\u5668\uff0c\u6240\u4ee5\u53ea\u80fd\u6a21\u62df\u3002\n\u6536\u94f6\u6d41\u7a0b\u5982\u4e0b\n\n\u6dfb\u52a0\u5546\u54c1\uff0c\u5982\u679c\u5e93\u5b58\u4e0d\u591f\u4f1a\u63d0\u793a\n(\u624b\u52a8)\u786e\u8ba4\u7ed3\u8d26\n\u652f\u4ed8\u6210\u529f\u540e\u5e93\u5b58\u51cf\u5c11\n\n\n\u6dfb\u52a0\u5546\u54c1\n\u5e93\u5b58\u4e0d\u591f\u63d0\u793a\n\u6536\u94f6\u7ed3\u8d26&amp;\u652f\u4ed8\u6210\u529f\n\n  \n    \n  \n    \n    \n\u9996\u9875\u66f4\u65b0\n\u5546\u54c1\u5e93\u5b58storage\n\u603b\u89c8\n\u5e93\u5b58\u65e5\u5fd7\n\u8fdb\u8d27\u5e93\u5b58\u65e5\u5fd7\n\n  \n    \n  \n    \n    \n\u6536\u94f6\u5e93\u5b58\u65e5\u5fd7\n\n  \n    \n  \n    \n    \n\u4f9b\u5e94\u5546supplier\n\u5546\u54c1\u76ee\u5f55catalog\n\u8054\u7cfbcontact\nemail\uff1a1138312802@qq.com\nwechat\uff1aa1138312802\n\u5199\u5728\u6700\u540elast\n\u8fd9\u4e2a\u9879\u76ee\u662f\u51e0\u4e2a\u4eba\u4e00\u7ec4\u505a\u7684\u3002\u524d\u7aef\u7528\u7684\u662fjava\u672c\u8eab\u7684\u7a97\u53e3\u90a3\u4e9b\u7c7bJModel,JTable,JPanel\u7b49\uff0c\u9996\u5148\u96be\u770b\uff0c\u5176\u6b21\u4e5f\u4e0d\u597d\u5199\u3002\u5f53\u65f6\u60f3\u7740\u5c71\u4e0d\u5728\u9ad8\uff0c\u6709\u4ed9\u5219\u7075\uff0c\u5148\u628a\u6838\u5fc3\u529f\u80fd\u5b9e\u73b0\u518d\u8bf4\uff0c\u7136\u540e\u5230\u540e\u9762\u65f6\u95f4\u6709\u9650\u548c\u809d\u4e0d\u52a8\u4e86\u9042\u53ea\u80fd\u8fd9\u6837\u3002\u7ed3\u675f\u540e\u60f3\u4f18\u5316\u524d\u7aef\u548c\u540e\u53f0\u903b\u8f91\u7684\u65f6\u5019\u5374\u53d1\u73b0\u91cc\u9762\u5f88\u4e71\u9042\u4e0d\u4e86\u4e86\u4e4b\u3002\u6bcf\u6b21\u770b\u5230\u8fd9\u4e2a\u4f5c\u54c1\u90fd\u5728\u8b66\u793a\u7740\u6211\u8981\u52a0\u5f3a\u5927\u5c40\u89c2\u548c\u64b8\u4ee3\u7801\u7684\u7d20\u517b(\u53c8\u6216\u8bb8\u662f\u5f00\u53d1\u7ecf\u9a8c\u4e0d\u8db3\u5427)\u3002\n\u8bdd\u8bf4\u8981\u662f\u80fd\u6298\u817e\u4e0b\u8fd9\u5957\u7cfb\u7edf\u6240\u5bf9\u5e94\u7684\u7ebf\u4e0b\u7684\u8bbe\u5907\uff0c\u6bd4\u5982\u626b\u8d27\u673a\uff0c\u6536\u94f6\u53f0\u5565\u7684\u7b49\uff0c\u6211\u8fd8\u662f\u5f88\u613f\u610f\u518d\u6298\u817e\u7684\uff0c\u867d\u7136\u53ea\u662f\u8d85\u5e02\u7cfb\u7edf\u800c\u975e\u9ad8\u5927\u4e0a\u521b\u65b0\u7684\u9879\u76ee\u3002\u4f46\u5728\u8fd9\u4e4b\u524d\uff0c\u8fd9\u4e2a\u4f5c\u54c1\u8d77\u7801\u662f\u6211\u7b2c\u4e8c\u4e2a\u6bd4\u8f83\u5b8c\u6574\u5730Java\u5e94\u7528\uff0c\u7b97\u662f\u4ea4\u4ee3\u4e86\u6211\u5927\u4e8c\u7684\u5b66\u4e60\u6210\u679c\u5427\uff0c\u53cd\u6b63\u6c34\u6ca1\u6c34\u5b66\u4e1a\u62c9\u51fa\u6765\u6e9c\u6e9c\u5c31\u77e5\u9053\u4e86\u3002\n", "categories": [{"name": "My Project", "slug": "My Project", "permalink": "/category/My Project/"}], "tags": [{"name": "My Project", "slug": "My Project", "permalink": "/tag/My Project/"}, {"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}]}, {"title": "Promise\u5f02\u6b65\u8c03\u7528", "date": "2020-07-11T22:10:38-00.00", "path": "/archives/Promise\u5f02\u6b65\u8c03\u7528/", "text": "\u5b98\u65b9\u6587\u6863\nhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\n\n\u962e\u4e00\u5cf0ES6\u6587\u6863\nhttps://es6.ruanyifeng.com/#docs/promise\n\n\u57fa\u672c\u4f7f\u7528\n\u7b2c\u4e00\u79cd\u65b9\u6cd5\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot; /&gt;\n        &lt;title&gt;&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script src=&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&gt;\n        &lt;/script&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt;\n            $(document).ready(function() {\n                var form = {\n                    username: &#39;admin&#39;,\n                    password: &#39;macro123&#39;\n                }\n\n                /*\u521b\u5efapromise\u5bf9\u8c61*/\n                const promise = new Promise((resolve, reject) =&gt; {\n                    $.ajax({\n                        type: &#39;post&#39;,\n                        url: &#39;http://118.89.176.28:8080/admin/login&#39;,\n                        dataType: &#39;json&#39;,\n                        contentType: &#39;application/json;charset=UTF-8&#39;,\n                        data: JSON.stringify(form),\n                        success: function(res) {\n                            console.log(res)\n                            resolve(res)\n                        }\n                    });\n                })\n\n                /*\u4f7f\u7528promise\u7684then\u65b9\u6cd5*/\n                promise.then((res) =&gt; {\n                    let token = res.data.tokenHead + res.data.token\n                    console.log(token)\n                    $.ajax({\n                        headers: {\n                            &quot;Authorization&quot;: token\n                        },\n                        type: &#39;get&#39;,\n                        url: &#39;http://118.89.176.28:8080/admin/info&#39;,\n                        success: function(res) {\n                            console.log(res);\n                        }\n                    });\n                })\n            });\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot; /&gt;\n        &lt;title&gt;&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script src=&quot;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&gt;\n        &lt;/script&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt;\n            $(document).ready(function() {\n                var form = {\n                    username: &#39;admin&#39;,\n                    password: &#39;macro123&#39;\n                }\n\n        /*\u521b\u5efapromise\u5bf9\u8c61*/\n                const promise = new Promise((resolve, reject) =&gt; {\n                    $.ajax({\n                        type: &#39;post&#39;,\n                        url: &#39;http://118.89.176.28:8080/admin/login&#39;,\n                        dataType: &#39;json&#39;,\n                        contentType: &#39;application/json;charset=UTF-8&#39;,\n                        data: JSON.stringify(form),\n\n            /*\u5c06\u7ed3\u679c\u66b4\u9732\u5728then\u65b9\u6cd5\u91cc*/\n                    }).then((res) =&gt; {\n                        console.log(res)\n                        let token = res.data.tokenHead + res.data.token\n                        console.log(token)\n                        $.ajax({\n                            headers: {\n                                &quot;Authorization&quot;: token\n                            },\n                            type: &#39;get&#39;,\n                            url: &#39;http://118.89.176.28:8080/admin/info&#39;,\n                            success: function(res2) {\n                                console.log(res2);\n                            }\n                        });\n                    })\n                })\n            });\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n", "categories": [{"name": "\u524d\u7aef", "slug": "\u524d\u7aef", "permalink": "/category/\u524d\u7aef/"}], "tags": [{"name": "JavaScript", "slug": "JavaScript", "permalink": "/tag/JavaScript/"}]}, {"title": "\u540e\u7aef\u9762\u8bd5\u9898", "date": "2020-07-07T10:31:21-00.00", "path": "/archives/\u540e\u7aef\u9762\u8bd5\u9898/", "text": "SpringBoot\u7cfb\u5217\n1.\u4ec0\u4e48\u662fSpring Boot\uff1f\n\u200b Spring Boot\u662f\u7531Pivotal\u56e2\u961f\u63d0\u4f9b\u7684\u5168\u65b0\u6846\u67b6\uff0c\u5176\u8bbe\u8ba1\u76ee\u7684\u662f\u7528\u6765\u7b80\u5316\u65b0Spring\u5e94\u7528\u7684\u521d\u59cb\u642d\u5efa\u4ee5\u53ca\u5f00\u53d1\u8fc7\u7a0b\u3002\u800c\u4e14\u8fd8\u901a\u8fc7\u7b80\u5316\u914d\u7f6e\u6765\u8fdb\u4e00\u6b65\u7b80\u5316\u4e86Spring\u5e94\u7528\u7684\u6574\u4e2a\u642d\u5efa\u548c\u5f00\u53d1\u8fc7\u7a0b\u3002\u53e6\u5916SpringBoot\u901a\u8fc7\u96c6\u6210\u5927\u91cf\u7684\u6846\u67b6\u4f7f\u5f97\u4f9d\u8d56\u5305\u7684\u7248\u672c\u51b2\u7a81\uff0c\u4ee5\u53ca\u5f15\u7528\u7684\u4e0d\u7a33\u5b9a\u6027\u7b49\u95ee\u9898\u5f97\u5230\u4e86\u5f88\u597d\u7684\u89e3\u51b3\u3002\u5176\u5b9e\u4ed6\u662f\u7684\u57fa\u672c\u539f\u6765\u662fMaven\u4f9d\u8d56\u5173\u7cfb\uff0cMaven\u7684\u96c6\u6210\uff0c\u5b8c\u5168\u91c7\u7528\u6ce8\u89e3\u5316\uff0c\u7b80\u5316XML\u914d\u7f6e\uff0c\u5185\u5d4cHTTP\u670d\u52a1\u5668\uff08Tomcate\uff0cjetty\uff09\uff0c\u9ed8\u8ba4\u5d4c\u5165Tomcate\uff0c\u6700\u7ec8\u4ee5Java\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6267\u884c\u3002\n\n2.Spring Boot\u6709\u54ea\u4e9b\u4f18\u70b9\uff1f\n\n\u4f7f\u7528JavaConfig\u6709\u52a9\u4e8e\u907f\u514d\u4f7f\u7528 XML\n\u907f\u514d\u5927\u91cf\u7684 Maven \u5bfc\u5165\u548c\u5404\u79cd\u7248\u672c\u51b2\u7a81\n\u6ca1\u6709\u5355\u72ec\u7684 Web \u670d\u52a1\u5668\u9700\u8981\u3002\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u518d\u9700\u8981\u542f\u52a8 Tomcat\uff0cGlassfish\u6216\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\n\u51c6\u751f\u4ea7\u73af\u5883\u7684\u8fd0\u884c\u5e94\u7528\u76d1\u63a7\n\u7b80\u5316\u914d\u7f6e\u548c\u6613\u4e8e\u7ba1\u7406\u7684\u7248\u672c\u63a7\u5236\n\n\n3.\u4ec0\u4e48\u662f JavaConfig\uff1f\nSpring JavaConfig \u662f Spring \u793e\u533a\u7684\u4ea7\u54c1\uff0c\u5b83\u63d0\u4f9b\u4e86\u914d\u7f6e Spring IoC \u5bb9\u5668\u7684\u7eafJava \u65b9\u6cd5\u3002\u56e0\u6b64\u5b83\u6709\u52a9\u4e8e\u907f\u514d\u4f7f\u7528 XML \u914d\u7f6e\u3002\u4f7f\u7528 JavaConfig \u7684\u4f18\u70b9\u5728\u4e8e\uff1a\n\n\u9762\u5411\u5bf9\u8c61\u7684\u914d\u7f6e\u3002\u7531\u4e8e\u914d\u7f6e\u88ab\u5b9a\u4e49\u4e3a JavaConfig \u4e2d\u7684\u7c7b\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u5145\u5206\u5229\u7528 Java \u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u529f\u80fd\u3002\u4e00\u4e2a\u914d\u7f6e\u7c7b\u53ef\u4ee5\u7ee7\u627f\u53e6\u4e00\u4e2a\uff0c\u91cd\u5199\u5b83\u7684@Bean \u65b9\u6cd5\u7b49\u3002\n\u51cf\u5c11\u6216\u6d88\u9664 XML \u914d\u7f6e\u3002\u57fa\u4e8e\u4f9d\u8d56\u6ce8\u5165\u539f\u5219\u7684\u5916\u5316\u914d\u7f6e\u7684\u597d\u5904\u5df2\u88ab\u8bc1\u660e\u3002\u4f46\u662f\uff0c\u8bb8\u591a\u5f00\u53d1\u4eba\u5458\u4e0d\u5e0c\u671b\u5728 XML \u548c Java \u4e4b\u95f4\u6765\u56de\u5207\u6362\u3002JavaConfig \u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u4e00\u79cd\u7eaf Java \u65b9\u6cd5\u6765\u914d\u7f6e\u4e0e XML \u914d\u7f6e\u6982\u5ff5\u76f8\u4f3c\u7684 Spring \u5bb9\u5668\u3002\u4ece\u6280\u672f\u89d2\u5ea6\u6765\u8bb2\uff0c\u53ea\u4f7f\u7528 JavaConfig \u914d\u7f6e\u7c7b\u6765\u914d\u7f6e\u5bb9\u5668\u662f\u53ef\u884c\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u591a\u4eba\u8ba4\u4e3a\u5c06JavaConfig \u4e0e XML \u6df7\u5408\u5339\u914d\u662f\u7406\u60f3\u7684\u3002\n\u7c7b\u578b\u5b89\u5168\u548c\u91cd\u6784\u53cb\u597d\u3002JavaConfig \u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u578b\u5b89\u5168\u7684\u65b9\u6cd5\u6765\u914d\u7f6e Spring\u5bb9\u5668\u3002\u7531\u4e8e Java 5.0 \u5bf9\u6cdb\u578b\u7684\u652f\u6301\uff0c\u73b0\u5728\u53ef\u4ee5\u6309\u7c7b\u578b\u800c\u4e0d\u662f\u6309\u540d\u79f0\u68c0\u7d22 bean\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u5f3a\u5236\u8f6c\u6362\u6216\u57fa\u4e8e\u5b57\u7b26\u4e32\u7684\u67e5\u627e\u3002\n\n\n4.\u5982\u4f55\u91cd\u65b0\u52a0\u8f7d Spring Boot \u4e0a\u7684\u66f4\u6539\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\u670d\u52a1\u5668\uff1f\n\u200b \u8fd9\u53ef\u4ee5\u4f7f\u7528 DEV \u5de5\u5177\u6765\u5b9e\u73b0\u3002\u901a\u8fc7\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u60a8\u53ef\u4ee5\u8282\u7701\u4efb\u4f55\u66f4\u6539\uff0c\u5d4c\u5165\u5f0ftomcat \u5c06\u91cd\u65b0\u542f\u52a8\u3002Spring Boot \u6709\u4e00\u4e2a\u5f00\u53d1\u5de5\u5177\uff08DevTools\uff09\u6a21\u5757\uff0c\u5b83\u6709\u52a9\u4e8e\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\u3002Java \u5f00\u53d1\u4eba\u5458\u9762\u4e34\u7684\u4e00\u4e2a\u4e3b\u8981\u6311\u6218\u662f\u5c06\u6587\u4ef6\u66f4\u6539\u81ea\u52a8\u90e8\u7f72\u5230\u670d\u52a1\u5668\u5e76\u81ea\u52a8\u91cd\u542f\u670d\u52a1\u5668\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u91cd\u65b0\u52a0\u8f7d Spring Boot \u4e0a\u7684\u66f4\u6539\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\u670d\u52a1\u5668\u3002\u8fd9\u5c06\u6d88\u9664\u6bcf\u6b21\u624b\u52a8\u90e8\u7f72\u66f4\u6539\u7684\u9700\u8981\u3002Spring Boot \u5728\u53d1\u5e03\u5b83\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u65f6\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd\u3002\u8fd9\u662f\u5f00\u53d1\u4eba\u5458\u6700\u9700\u8981\u7684\u529f\u80fd\u3002DevTools \u6a21\u5757\u5b8c\u5168\u6ee1\u8db3\u5f00\u53d1\u4eba\u5458\u7684\u9700\u6c42\u3002\u8be5\u6a21\u5757\u5c06\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u88ab\u7981\u7528\u3002\u5b83\u8fd8\u63d0\u4f9b H2 \u6570\u636e\u5e93\u63a7\u5236\u53f0\u4ee5\u66f4\u597d\u5730\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\u52a0\u5165\u4f9d\u8d56\n&lt;dependency&gt;\n&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\n&lt;optional&gt;true&lt;/optional&gt;\n\n5.Spring Boot \u4e2d\u7684\u76d1\u89c6\u5668\u662f\u4ec0\u4e48\uff1f\n\u200b Spring boot actuator \u662f spring \u542f\u52a8\u6846\u67b6\u4e2d\u7684\u91cd\u8981\u529f\u80fd\u4e4b\u4e00\u3002Spring boot \u76d1\u89c6\u5668\u53ef\u5e2e\u52a9\u60a8\u8bbf\u95ee\u751f\u4ea7\u73af\u5883\u4e2d\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5f53\u524d\u72b6\u6001\u3002\u6709\u51e0\u4e2a\u6307\u6807\u5fc5\u987b\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8fdb\u884c\u68c0\u67e5\u548c\u76d1\u63a7\u3002\u5373\u4f7f\u4e00\u4e9b\u5916\u90e8\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u6b63\u5728\u4f7f\u7528\u8fd9\u4e9b\u670d\u52a1\u6765\u5411\u76f8\u5173\u4eba\u5458\u89e6\u53d1\u8b66\u62a5\u6d88\u606f\u3002\u76d1\u89c6\u5668\u6a21\u5757\u516c\u5f00\u4e86\u4e00\u7ec4\u53ef\u76f4\u63a5\u4f5c\u4e3a HTTP URL \u8bbf\u95ee\u7684REST \u7aef\u70b9\u6765\u68c0\u67e5\u72b6\u6001\u3002\n\n6.\u5982\u4f55\u5728 Spring Boot \u4e2d\u7981\u7528 Actuator \u7aef\u70b9\u5b89\u5168\u6027\uff1f\n\u200b \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u654f\u611f\u7684 HTTP \u7aef\u70b9\u90fd\u662f\u5b89\u5168\u7684\uff0c\u53ea\u6709\u5177\u6709 ACTUATOR \u89d2\u8272\u7684\u7528\u6237\u624d\u80fd\u8bbf\u95ee\u5b83\u4eec\u3002\u5b89\u5168\u6027\u662f\u4f7f\u7528\u6807\u51c6\u7684 HttpServletRequest.isUserInRole \u65b9\u6cd5\u5b9e\u65bd\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6765\u7981\u7528\u5b89\u5168\u6027\u3002\u53ea\u6709\u5728\u6267\u884c\u673a\u6784\u7aef\u70b9\u5728\u9632\u706b\u5899\u540e\u8bbf\u95ee\u65f6\uff0c\u624d\u5efa\u8bae\u7981\u7528\u5b89\u5168\u6027\u3002\n\n7.\u5982\u4f55\u5728\u81ea\u5b9a\u4e49\u7aef\u53e3\u4e0a\u8fd0\u884c Spring Boot \u5e94\u7528\u7a0b\u5e8f\uff1f\n\u60a8\u53ef\u4ee5\u5728application.properties \u4e2d\u6307\u5b9a\u7aef\u53e3\u3002server.port = 8090\n\n8.\u4ec0\u4e48\u662f YAML\uff1f\n\u200b YAML \u662f\u4e00\u79cd\u4eba\u7c7b\u53ef\u8bfb\u7684\u6570\u636e\u5e8f\u5217\u5316\u8bed\u8a00\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u3002\u4e0e\u5c5e\u6027\u6587\u4ef6\u76f8\u6bd4\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u590d\u6742\u7684\u5c5e\u6027\uff0cYAML \u6587\u4ef6\u5c31\u66f4\u52a0\u7ed3\u6784\u5316\uff0c\u800c\u4e14\u66f4\u5c11\u6df7\u6dc6\u3002\u53ef\u4ee5\u770b\u51fa YAML \u5177\u6709\u5206\u5c42\u914d\u7f6e\u6570\u636e\u3002\n\n9.\u5982\u4f55\u5b9e\u73b0 Spring Boot \u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\uff1f\n\u200b \u4e3a\u4e86\u5b9e\u73b0 Spring Boot \u7684\u5b89\u5168\u6027\uff0c\u6211\u4eec\u4f7f\u7528 spring-boot-starter-security \u4f9d\u8d56\u9879\uff0c\u5e76\u4e14\u5fc5\u987b\u6dfb\u52a0\u5b89\u5168\u914d\u7f6e\u3002\u5b83\u53ea\u9700\u8981\u5f88\u5c11\u7684\u4ee3\u7801\u3002\u914d\u7f6e\u7c7b\u5c06\u5fc5\u987b\u6269\u5c55WebSecurityConfigurerAdapter \u5e76\u8986\u76d6\u5176\u65b9\u6cd5\u3002\n\n10.\u5982\u4f55\u4f7f\u7528 Spring Boot \u5b9e\u73b0\u5206\u9875\u548c\u6392\u5e8f\uff1f\n\u200b \u4f7f\u7528 Spring Boot \u5b9e\u73b0\u5206\u9875\u975e\u5e38\u7b80\u5355\u3002\u4f7f\u7528 Spring Data-JPA \u53ef\u4ee5\u5b9e\u73b0\u5c06\u53ef\u5206\u9875\u7684\u4f20\u9012\u7ed9\u5b58\u50a8\u5e93\u65b9\u6cd5\u3002\n\n11.\u4ec0\u4e48\u662f Swagger\uff1f\n\u200b Swagger \u5e7f\u6cdb\u7528\u4e8e\u53ef\u89c6\u5316 API\uff0c\u4f7f\u7528 Swagger UI \u4e3a\u524d\u7aef\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u5728\u7ebf\u6c99\u7bb1\u3002Swagger \u662f\u7528\u4e8e\u751f\u6210 RESTful Web \u670d\u52a1\u7684\u53ef\u89c6\u5316\u8868\u793a\u7684\u5de5\u5177\uff0c\u89c4\u8303\u548c\u5b8c\u6574\u6846\u67b6\u5b9e\u73b0\u3002\u5b83\u4f7f\u6587\u6863\u80fd\u591f\u4ee5\u4e0e\u670d\u52a1\u5668\u76f8\u540c\u7684\u901f\u5ea6\u66f4\u65b0\u3002\u5f53\u901a\u8fc7 Swagger \u6b63\u786e\u5b9a\u4e49\u65f6\uff0c\u6d88\u8d39\u8005\u53ef\u4ee5\u4f7f\u7528\u6700\u5c11\u91cf\u7684\u5b9e\u73b0\u903b\u8f91\u6765\u7406\u89e3\u8fdc\u7a0b\u670d\u52a1\u5e76\u4e0e\u5176\u8fdb\u884c\u4ea4\u4e92\u3002\u56e0\u6b64\uff0cSwagger\u6d88\u9664\u4e86\u8c03\u7528\u670d\u52a1\u65f6\u7684\u731c\u6d4b\u3002\n\n12.\u4ec0\u4e48\u662f Spring Profiles\uff1f\n\u200b Spring Profiles \u5141\u8bb8\u7528\u6237\u6839\u636e\u914d\u7f6e\u6587\u4ef6\uff08dev\uff0ctest\uff0cprod \u7b49\uff09\u6765\u6ce8\u518c bean\u3002\u56e0\u6b64\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u5728\u5f00\u53d1\u4e2d\u8fd0\u884c\u65f6\uff0c\u53ea\u6709\u67d0\u4e9b bean \u53ef\u4ee5\u52a0\u8f7d\uff0c\u800c\u5728 PRODUCTION\u4e2d\uff0c\u67d0\u4e9b\u5176\u4ed6 bean \u53ef\u4ee5\u52a0\u8f7d\u3002\u5047\u8bbe\u6211\u4eec\u7684\u8981\u6c42\u662f Swagger \u6587\u6863\u4ec5\u9002\u7528\u4e8e QA \u73af\u5883\uff0c\u5e76\u4e14\u7981\u7528\u6240\u6709\u5176\u4ed6\u6587\u6863\u3002\u8fd9\u53ef\u4ee5\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6765\u5b8c\u6210\u3002Spring Boot \u4f7f\u5f97\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u975e\u5e38\u7b80\u5355\u3002\n\n13.\u4ec0\u4e48\u662f Spring Batch\uff1f\n\u200b Spring Boot Batch \u63d0\u4f9b\u53ef\u91cd\u7528\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u5904\u7406\u5927\u91cf\u8bb0\u5f55\u65f6\u975e\u5e38\u91cd\u8981\uff0c\u5305\u62ec\u65e5\u5fd7/\u8ddf\u8e2a\uff0c\u4e8b\u52a1\u7ba1\u7406\uff0c\u4f5c\u4e1a\u5904\u7406\u7edf\u8ba1\u4fe1\u606f\uff0c\u4f5c\u4e1a\u91cd\u65b0\u542f\u52a8\uff0c\u8df3\u8fc7\u548c\u8d44\u6e90\u7ba1\u7406\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u66f4\u5148\u8fdb\u7684\u6280\u672f\u670d\u52a1\u548c\u529f\u80fd\uff0c\u901a\u8fc7\u4f18\u5316\u548c\u5206\u533a\u6280\u672f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6781\u9ad8\u6279\u91cf\u548c\u9ad8\u6027\u80fd\u6279\u5904\u7406\u4f5c\u4e1a\u3002\u7b80\u5355\u4ee5\u53ca\u590d\u6742\u7684\u5927\u6279\u91cf\u6279\u5904\u7406\u4f5c\u4e1a\u53ef\u4ee5\u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u65b9\u5f0f\u5229\u7528\u6846\u67b6\u5904\u7406\u91cd\u8981\u5927\u91cf\u7684\u4fe1\u606f\u3002\n\n14.\u5982\u4f55\u4f7f\u7528 Spring Boot \u5b9e\u73b0\u5f02\u5e38\u5904\u7406\uff1f\n\u200b Spring \u63d0\u4f9b\u4e86\u4e00\u79cd\u4f7f\u7528 ControllerAdvice \u5904\u7406\u5f02\u5e38\u7684\u975e\u5e38\u6709\u7528\u7684\u65b9\u6cd5\u3002 \u6211\u4eec\u901a\u8fc7\u5b9e\u73b0\u4e00\u4e2a ControlerAdvice \u7c7b\uff0c\u6765\u5904\u7406\u63a7\u5236\u5668\u7c7b\u629b\u51fa\u7684\u6240\u6709\u5f02\u5e38\u3002\n\n15.\u60a8\u4f7f\u7528\u4e86\u54ea\u4e9b starter maven \u4f9d\u8d56\u9879\uff1f\n\nspring-boot-starter-parent\uff1aSpring Boot\u7684\u7236\u7ea7\u4f9d\u8d56\uff0c\u5b83\u7528\u6765\u63d0\u4f9b\u76f8\u5173\u7684Maven\u9ed8\u8ba4\u4f9d\u8d56\u3002\u4f7f\u7528\u5b83\u4e4b\u540e\uff0c\u5e38\u7528\u7684\u5305\u4f9d\u8d56\u53ef\u4ee5\u7701\u53bbversion\u6807\u7b7e\nspring-boot-starter\uff1a\u6838\u5fc3Spring Boot starter\uff0c\u5305\u62ec\u81ea\u52a8\u914d\u7f6e\u652f\u6301\uff0c\u65e5\u5fd7\u548cYAML\nspring-boot-starter-web\uff1a\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u76f4\u63a5\u53ef\u6267\u884c\u7684 Web \u5e94\u7528\uff0c\u5f53\u524d\u9879\u76ee\u4e0b\u8fd0\u884c mvn spring-boot\uff1arun \u5c31\u53ef\u4ee5\u76f4\u63a5\u542f\u52a8\u4e00\u4e2a\u4f7f\u7528\u4e86\u5d4c\u5165\u5f0f tomcat \u670d\u52a1\u8bf7\u6c42\u7684 Web \u5e94\u7528\uff0c\u53ea\u4e0d\u8fc7\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u670d\u52a1 Web \u8bf7\u6c42\u7684 Controller\uff0c\u6240\u4ee5\uff0c\u8bbf\u95ee\u4efb\u4f55\u8def\u5f84\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a SpringBoot \u9ed8\u8ba4\u63d0\u4f9b\u7684\u9519\u8bef\u9875\u9762\uff08\u4e00\u822c\u79f0\u5176\u4e3a whitelabel error page\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5f53\u524d\u9879\u76ee\u4e0b\u65b0\u5efa\u4e00\u4e2a\u670d\u52a1\u6839\u8def\u5f84 Web \u8bf7\u6c42\u7684 Controller \u5b9e\u73b0\uff1a\n\n\n", "categories": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/category/\u9762\u8bd5/"}], "tags": [{"name": "\u9762\u8bd5", "slug": "\u9762\u8bd5", "permalink": "/tag/\u9762\u8bd5/"}, {"name": "\u540e\u7aef", "slug": "\u540e\u7aef", "permalink": "/tag/\u540e\u7aef/"}]}, {"title": "\u670d\u52a1\u5668\u4e0a\u90e8\u7f72SpringBoot", "date": "2020-07-05T13:33:29-00.00", "path": "/archives/\u670d\u52a1\u5668\u4e0a\u90e8\u7f72SpringBoot/", "text": "\u7b2c\u4e00\u79cd:\u6253\u5305\u4e3ajar\u5305\n1.pom.xml\u914d\u7f6e\n\u5728pom.xml\u91cc\u9762\u914d\u7f6e\u5982\u4e0b\n&lt;package&gt;jar&lt;/package&gt;\n\n2.\u6253\u5305\u4e3ajar\u5305\n\u70b9\u51fb\u53f3\u8fb9\u7684Maven\u7684clean\uff0cpackage\u540e\u5e76\u8fd0\u884c\u4f1a\u6253\u5305\u6210jar\u5305\u5728target\u4e0b\n\n\u6253\u5305\u6210\u529f\u540e\u7684\u8def\u5f84\u5982\u4e0b\n\n3.\u67e5\u770b\u8981\u4f7f\u7528\u7684\u670d\u52a1\u5668\u7aef\u53e3\u662f\u5426\u88ab\u5360\u7528\nlsof -i tcp:8885\n\n\n\u4e0a\u65b9\u662f\u5df2\u7ecf\u8fd0\u884c\u7684springboot\u9879\u76ee\u57288885\u7aef\u53e3\n\u5982\u679c\u7aef\u53e3\u88ab\u5360\u7528\uff0c\u5c31\u9700\u8981\u6740\u6b7b\u8fdb\u7a0b(\u4e5f\u53ef\u7528\u4e8e\u5173\u95edspirngboot\u9879\u76ee)\uff0c\u4f46\u5efa\u8bae\u4e00\u5f00\u59cb\u5c31\u5bfb\u627e\u7a7a\u7aef\u53e3\u5e76\u5728springboot\u9879\u76ee\u914d\u7f6e\nkill -9 18689 #\u8fdb\u7a0bPID\n\n4.\u5c06jar\u5305\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u5e76\u8fd0\u884c\u4e0b\u9762Linux\u547d\u4ee4\u6c38\u4e45\u542f\u52a8\nnohup java -jar XXX.jar &gt;/dev/null 2&gt;&amp;1 &amp;\n\n\u5982\u679c\u4ec5\u4ec5\u662f\u7528java\u547d\u4ee4\u8fd0\u884cjar\u5305\uff0c\u5728\u9000\u51fa\u8fdc\u7a0b\u8fde\u63a5\u65f6\u9879\u76ee\u4f1a\u5173\u95ed\n\n5.\u5c06\u57df\u540d\u6307\u5411\u7aef\u53e3\u53f7\n\u53ef\u4ee5\u914d\u7f6e\u572880\u7aef\u53e3\u8fd9\u6837\u9ed8\u8ba4\u57df\u540d\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u901a\u8fc7\u540e\u9762\u52a0\u7aef\u53e3\u53f7\nTODO:\u6307\u5b9a\u5728\u5176\u5b83\u7aef\u53e3\u4f7f\u7528\u57df\u540d\u6307\u5411\n\n\u7b2c\u4e8c\u79cd:\u6253\u5305\u4e3awar\u5305\n1.pom.xml\u914d\u7f6e\n&lt;package&gt;war&lt;/package&gt;\n\n&lt;!-- \u627e\u5230spring-boot-starter-web\u4f9d\u8d56\u8282\u70b9 --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n    &lt;!-- \u79fb\u9664\u5d4c\u5165\u5f0ftomcat\u63d2\u4ef6 --&gt;\n    &lt;exclusions&gt;\n        &lt;exclusion&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;\n        &lt;/exclusion&gt;\n    &lt;/exclusions&gt;\n&lt;/dependency&gt;\n\n&lt;!-- \u6dfb\u52a0tomcat\u4f9d\u8d56 --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;\n &lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n\n2.\u4fee\u6539\u542f\u52a8\u7c7b\uff0c\u5e76\u91cd\u5199\u521d\u59cb\u5316\u65b9\u6cd5\n@SpringBootApplication\npublic class Application extends SpringBootServletInitializer {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n        System.out.println(&quot;\u30fe(\u25cd\u00b0\u2207\u00b0\u25cd)\uff89\uff9e    bootdo\u542f\u52a8\u6210\u529f      \u30fe(\u25cd\u00b0\u2207\u00b0\u25cd)\uff89\uff9e\\n&quot; +\n                &quot; ______                    _   ______            \\n&quot; +\n                &quot;|_   _ \\\\                  / |_|_   _ `.          \\n&quot; +\n                &quot;  | |_) |   .--.    .--. `| |-&#39; | | `. \\\\  .--.   \\n&quot; +\n                &quot;  |  __&#39;. / .&#39;`\\\\ \\\\/ .&#39;`\\\\ \\\\| |   | |  | |/ .&#39;`\\\\ \\\\ \\n&quot; +\n                &quot; _| |__) || \\\\__. || \\\\__. || |, _| |_.&#39; /| \\\\__. | \\n&quot; +\n                &quot;|_______/  &#39;.__.&#39;  &#39;.__.&#39; \\\\__/|______.&#39;  &#39;.__.&#39;  &quot;);\n    }\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n        // \u6ce8\u610f\u8fd9\u91cc\u8981\u6307\u5411\u539f\u5148\u7528main\u65b9\u6cd5\u6267\u884c\u7684Application\u542f\u52a8\u7c7b\n        return builder.sources(Application.class);\n    }\n}\n\n3.\u6253\u5305\u4e3awar\u5305\n\u4e0e\u4e0a\u9762\u76f8\u540c\n\n\u6253\u5305\u6210\u529f\u540e\u7684\u8def\u5f84\u5982\u4e0b\n\n4.\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a\u7684Tomcat\u91cc\u7684webapps\u5373\u53ef\n\u8fd9\u65f6\u5019\u53ef\u4ee5\u7528\u57df\u540d\u6307\u5411\u9879\u76ee\u800c\u65e0\u9700\u6307\u5b9a\u7aef\u53e3\n", "categories": [{"name": "Spring", "slug": "Spring", "permalink": "/category/Spring/"}, {"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/category/SpringBoot/"}], "tags": [{"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/tag/SpringBoot/"}]}, {"title": "\u5927\u4e09\u4e0b\u5b9e\u8bad\u671f\u672b\u4f5c\u4e1a", "date": "2020-06-30T10:43:30-00.00", "path": "/archives/\u5927\u4e09\u4e0b\u5b9e\u8bad\u671f\u672b\u4f5c\u4e1a/", "text": "\u6d3b\u52a8\u5ba4\u6307\u7eb9\u8003\u52e4\u7ba1\u7406\u7cfb\u7edf\n\u6210\u5458\uff1a\u9648\u9f99\n\u7f51\u9875\u7aef\u6d4f\u89c8\uff1ahttps://wiki.lifeisgg.online/archives/\u5927\u4e09\u4e0b\u5b9e\u8bad\u671f\u672b\u4f5c\u4e1a/\n\u9879\u76eeGithub\u5730\u5740\uff1ahttps://github.com/LifeAlsoIsGG/springcloud-demo\n\u4e00\u3001\u9700\u6c42\u5206\u6790\u2002\u2002\n1.\u9700\u6c42\u5206\u6790\u2002\u2002\n1.\u7ba1\u7406\u65b9\u9762\uff1a\u8fd1\u51e0\u5e74\u6765\uff0c\u968f\u7740\u5927\u5b66\u751f\u793e\u56e2\u6d3b\u52a8\u7684\u4e30\u5bcc\uff0c\u793e\u56e2\u6d3b\u52a8\u5ba4\u7684\u7ba1\u7406\u95ee\u9898\u4e5f\u65e5\u76ca\u660e\u663e\u3002\u793e\u56e2\u6d3b\u52a8\u5ba4\u901a\u5e38\u662f\u81ea\u7531\u5f00\u653e\u7ba1\u7406\u65b9\u5f0f\uff0c\u4f1a\u5458\u53ef\u81ea\u7531\u8fdb\u51fa\u6d3b\u52a8\u5ba4\u5b66\u4e60\uff0c\u5f88\u96be\u5bf9\u5176\u4f1a\u5458\u7684\u6d3b\u8dc3\u5ea6\u3001\u5b9e\u65f6\u5728\u573a\u4eba\u5458\u60c5\u51b5\u7b49\u8fdb\u884c\u7ba1\u7406\uff0c\u800c\u5728\u793e\u56e2\u8fdb\u884c\u6362\u5c4a\u548c\u62db\u65b0\u7684\u671f\u95f4\uff0c\u4eba\u5458\u53d8\u52a8\u5f88\u9891\u7e41\uff0c\u4f1a\u5458\u4fe1\u606f\u66f4\u65b0\u5de5\u4f5c\u91cf\u5927\u3002\u672c\u9879\u76ee\u901a\u8fc7\u6307\u7eb9\u548c\u4eba\u8138\u8bc6\u522b\u591a\u79cd\u8bc6\u522b\u65b9\u5f0f\uff0c\u5b9e\u65f6\u8bb0\u5f55\u5b58\u50a8\u767b\u8bb0\u4f1a\u5458\u6bcf\u4e00\u6b21\u7684\u8fdb\u51fa\u65f6\u95f4\uff0c\u4ece\u800c\u5b9e\u73b0\u51fa\u52e4\u65f6\u95f4\u7684\u81ea\u52a8\u7edf\u8ba1\uff0c\u81ea\u52a8\u5c06\u4f1a\u5458\u7684\u6d3b\u8dc3\u65f6\u957f\u6309\u6708\u548c\u5468\u5b9e\u65f6\u663e\u793a\u5728\u5c0f\u7a0b\u5e8f\u7aef\uff0c\u8fd8\u80fd\u5b9e\u65f6\u663e\u793a\u5f53\u524d\u5728\u6d3b\u52a8\u5ba4\u7684\u6210\u5458\u53ca\u5176\u8054\u7cfb\u65b9\u5f0f\uff0c\u793e\u56e2\u8d1f\u8d23\u4eba\u53ef\u968f\u65f6\u8054\u7cfb\u5728\u6d3b\u52a8\u5ba4\u7684\u4f1a\u5458\u3002\n2.\u5b89\u5168\u65b9\u9762\uff1a\u667a\u80fd\u6307\u7eb9\u53ca\u4eba\u8138\u8bc6\u522b\u597d\u5728\u201c\u667a\u80fd\u3001\u5b89\u5168\u3001\u4fbf\u6377\u201d\uff0c\u5341\u5206\u9002\u7528\u4e8e\u793e\u56e2\u6d3b\u52a8\u5ba4\u7b49\u7684\u4eba\u5458\u6d41\u52a8\u8bb0\u5f55\u7ba1\u7406\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4eba\u5de5\u8bb0\u5f55\u7684\u7e41\u7410\uff0c\u53c8\u514d\u9664\u4e86\u5fc5\u987b\u643a\u5e26\u94a5\u5319\u6216\u95e8\u7981\u5361\u7684\u9ebb\u70e6\uff0c\u666e\u901a\u94a5\u5319\u6216\u95e8\u7981\u5361\u7ba1\u7406\u65b9\u5f0f\u5bb9\u6613\u4e22\u5931\u6216\u590d\u5236\uff0c\u9020\u6210\u5b89\u5168\u9690\u60a3\u3002\u800c\u4f20\u7edf\u5bc6\u7801\u9501\u7684\u8bdd\u65f6\u95f4\u4e00\u957f\u4e5f\u5bb9\u6613\u6cc4\u9732\uff0c\u4e0d\u9002\u7528\u4e8e\u4eba\u6d41\u91cf\u5927\u7684\u793e\u56e2\u6d3b\u52a8\u5ba4\u3002\u53e6\u5916\u6307\u7eb9\u8bc6\u522b\u5bf9\u73af\u5883\u548c\u6253\u5361\u4eba\u5458\u76ae\u80a4\u7684\u8981\u6c42\u90fd\u5f88\u9ad8\uff0c\u5f53\u7a7a\u6c14\u5e72\u71e5\u3001\u76ae\u80a4\u810f\u3001\u8715\u76ae\u7b49\u60c5\u51b5\u5c31\u65e0\u6cd5\u8bc6\u522b\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u4eba\u8138\u8bc6\u522b\u8fdb\u884c\u6253\u5361\uff0c\u591a\u79cd\u6253\u5361\u65b9\u5f0f\u5bb9\u9519\u7387\u66f4\u9ad8\u3002\u6240\u4ee5\u793e\u56e2\u6d3b\u52a8\u5ba4\u5c06\u91c7\u7528\u6307\u7eb9\u53ca\u4eba\u8138\u8bc6\u522b\u4e24\u79cd\u65b9\u5f0f\u7ed3\u5408\u6765\u8fdb\u884c\u793e\u56e2\u6d3b\u52a8\u5ba4\u7684\u7ba1\u7406\u3002\u2002\n2.\u601d\u7ef4\u5bfc\u56fe\n\n\u4e8c\u3001\u6570\u636e\u5e93\u7ed3\u6784\n1.ER\u56fe\n\n2.\u8868\u7ed3\u6784\uff087\u4e2a\u8868\uff09\nwxuser\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nuId\nint(11)\n\u5426\n\u662f\n\u81ea\u52a8\u589e\u957f\n\n\nopenId\nvarchar(30)\n\u5426\n\n\u5fae\u4fe1\u53f7\n\n\nnickName\nvarchar(20)\n\u5426\n\n\u5fae\u4fe1\u6635\u79f0\n\n\navatrUrl\ntext\n\u5426\n\n\u5934\u50cf\u5730\u5740\n\n\nactivity\nint(11)\n\u662f\n\n\u8fdb\u5165\u623f\u95f4\n\n\nsSuper\nint(11)\n\u5426\n\n\u6743\u9650\uff0c\u9ed8\u8ba4\u4e3a1\n\n\n\nrealname\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nuId\nint(11)\n\u5426\n\n\u7528\u6237ID\n\n\nsId\nvarchar(20)\n\u5426\n\u662f\n\u5b66\u53f7\n\n\npassword\nvarchar(30)\n\u5426\n\n\u5bc6\u7801\n\n\npNumber\nvarchar(20)\n\u5426\n\n\u53f7\u7801\n\n\nemail\nvarchar(30)\n\u5426\n\n\u90ae\u7bb1\n\n\n\ntime\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nuId\nint(11)\n\u5426\n\n\u7528\u6237ID\n\n\nrId\nint(11)\n\u5426\n\n\u8fdb\u8fc7\u7684\u623f\u95f4ID\n\n\ntime\nint(11)\n\u5426\n\n\u6d3b\u8dc3\u65f6\u95f4\n\n\n\nroom\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nrId\nint(11)\n\u5426\n\u662f\n\u81ea\u52a8\u589e\u957f\n\n\nrName\nvarchar(20)\n\u5426\n\n\u6559\u5ba4\u540d\n\n\naddress\nvarchar(50)\n\u5426\n\n\u6559\u5ba4\u4f4d\u7f6e\n\n\ndel\nint(11)\n\n\n\u72b6\u6001\uff0c\u9ed8\u8ba4\u4e3a1\n\n\n\nroomAdmin\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nrId\nint(11)\n\n\n\u6559\u5ba4\u7f16\u53f7\n\n\nuId\nint(11)\n\n\n\u7ba1\u7406\u5458\u7f16\u53f7\n\n\naDate\ndatetime\n\n\n\u901a\u77e5\u6d88\u606f\n\n\ndel\nint(11)\n\n\n\u72b6\u6001\uff0c\u9ed8\u8ba4\u4e3a1\n\n\n\nroomNotice\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nrId\nint(11)\n\n\n\u623f\u95f4\u7f16\u53f7\n\n\nuId\nint(11)\n\n\n\u7528\u6237ID\n\n\nnotice\ntext\n\n\n\u516c\u544a\u4fe1\u606f\n\n\ncDate\ndatetime\n\n\n\u66f4\u6539\u4fe1\u606f\n\n\n\nLog\u8868\n\n\n\u540d\u79f0\n\u7c7b\u578b\n\u662f\u5426\u4e3a\u7a7a\n\u4e3b\u952e\n\u5907\u6ce8\n\n\n\n\nlId\nint(11)\n\u5426\n\u662f\n\u81ea\u52a8\u589e\u957f\n\n\nuId\nint(11)\n\u5426\n\n\u7ba1\u7406\u5458\u7f16\u53f7\n\n\nrId\nint(11)\n\u5426\n\n\u6559\u5ba4\u7f16\u53f7\n\n\nstate\nint(11)\n\u5426\n\n\u8fdb\u51fa\u72b6\u6001\n\n\nlDate\ndate\n\u5426\n\n\u8fdb\u51fa\u65f6\u95f4\n\n\n\n\u4e09\u3001\u7ec4\u5458\u5de5\u4f5c\u5212\u5206\n\u9648\u9f99\uff1a\u8d1f\u8d23wxuser\u8868realname\u8868\uff0cLog\u8868\u7684\u540e\u53f0\u529f\u80fd\u5b9e\u73b0\uff0c\u5305\u62ec\u589e\u5220\u67e5\u6539\u7b49\u529f\u80fd\uff1b\u5c0f\u7a0b\u5e8f\u524d\u7aef\u7684\u5f00\u53d1\u5b9e\u73b0\uff1b\u670d\u52a1\u5668\u7684\u90e8\u7f72\n\u7f57\u5bb6\u6653\uff1a\u8d1f\u8d23roomadmin\uff0croom\u8868\u540e\u53f0\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u5305\u62ec\u589e\u5220\u67e5\u6539\u7b49\u529f\u80fd\u7684\u5b9e\u73b0\uff1b\u5c0f\u7a0b\u5e8f\u524d\u7aef\u7684\u5f00\u53d1\u5b9e\u73b0\u3002\n\u5434\u4f73\u6d9b\uff1a\u8d1f\u8d23roomnotice\uff0ctime\u8868\u540e\u53f0\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u5305\u62ec\u589e\u5220\u67e5\u6539\u529f\u80fd\u7684\u5b9e\u73b0\uff1b\u6570\u636e\u5e93\u8868\u7684\u8bbe\u8ba1\u4e0e\u4fee\u6539\u3002\n\u56db\u3001\u4ee3\u7801\u6574\u5408\u5de5\u5177\n\u5c0f\u7ec4\u91c7\u7528Github\u5de5\u5177\u8fdb\u884c\u6574\u5408\uff0c\u6bcf\u5929\u505a\u5b8c\u9879\u76ee\u540e\u5404\u81ea\u5c06\u81ea\u5df1\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u81ea\u5df1\u7684\u5206\u652f\u4e0a\uff0c\u7136\u540e\u5728\u4e3b\u5206\u652f\u8fdb\u884c\u6574\u5408\uff0c\u6bcf\u5929\u9879\u76ee\u5f00\u53d1\u524d\u62c9\u53d6\u6628\u665a\u6574\u5408\u597d\u7684\u4ee3\u7801\u3002\n\u5de5\u7a0b\u76ee\u5f55\nimage-20200114103618253\nimage-20200114103627082\n\u4e94\u3001POM.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n  &lt;groupId&gt;org.example&lt;/groupId&gt;\n  &lt;artifactId&gt;attendance&lt;/artifactId&gt;\n  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  &lt;packaging&gt;war&lt;/packaging&gt;\n\n  &lt;name&gt;attendance Maven Webapp&lt;/name&gt;\n  &lt;!-- FIXME change it to the project&#39;s website --&gt;\n  &lt;url&gt;http://www.example.com&lt;/url&gt;\n\n  &lt;properties&gt;\n    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;\n    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;\n    &lt;spring.version&gt;5.2.2.RELEASE&lt;/spring.version&gt;\n    &lt;mysql.version&gt;5.1.47&lt;/mysql.version&gt;\n    &lt;mybatis.version&gt;3.5.3&lt;/mybatis.version&gt;\n    &lt;junit.version&gt;4.12&lt;/junit.version&gt;\n    &lt;mybatis.gen.version&gt;1.4.0&lt;/mybatis.gen.version&gt;\n    &lt;slf4j.version&gt;1.7.6&lt;/slf4j.version&gt;\n    &lt;mybatis.spring.version&gt;2.0.3&lt;/mybatis.spring.version&gt;\n    &lt;aspectjweaver.version&gt;1.9.1&lt;/aspectjweaver.version&gt;\n  &lt;/properties&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n      &lt;version&gt;2.9.5&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n      &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n      &lt;version&gt;2.9.5&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n      &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;\n      &lt;version&gt;2.9.5&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;mysql&lt;/groupId&gt;\n      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n      &lt;version&gt;${mysql.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n      &lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n      &lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;\n      &lt;version&gt;${spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n      &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n      &lt;version&gt;${mybatis.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;junit&lt;/groupId&gt;\n      &lt;artifactId&gt;junit&lt;/artifactId&gt;\n      &lt;version&gt;${junit.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;\n      &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;\n      &lt;version&gt;${mybatis.gen.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;\n      &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;\n      &lt;version&gt;${slf4j.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n      &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n      &lt;version&gt;${mybatis.spring.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.aspectj&lt;/groupId&gt;\n      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;\n      &lt;version&gt;${aspectjweaver.version}&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;\n      &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;\n      &lt;version&gt;1.4&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;commons-io&lt;/groupId&gt;\n      &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n      &lt;version&gt;2.6&lt;/version&gt;\n    &lt;/dependency&gt;\n\n\n\n  &lt;/dependencies&gt;\n\n  &lt;build&gt;\n    &lt;finalName&gt;attendance&lt;/finalName&gt;\n    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;\n      &lt;plugins&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.1.0&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.0.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.8.0&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n          &lt;version&gt;2.22.1&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;\n          &lt;version&gt;3.2.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;\n          &lt;version&gt;2.5.2&lt;/version&gt;\n        &lt;/plugin&gt;\n        &lt;plugin&gt;\n          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;\n          &lt;version&gt;2.8.2&lt;/version&gt;\n        &lt;/plugin&gt;\n      &lt;/plugins&gt;\n    &lt;/pluginManagement&gt;\n  &lt;/build&gt;\n&lt;/project&gt;\n\nweb.xml\n&lt;!DOCTYPE web-app PUBLIC\n        &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;\n        &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;\n\n&lt;web-app&gt;\n  &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;\n\n\n\n  &lt;!--\u6ce8\u518cspringmvc\u7684serlvet\uff0c\u5373\u524d\u7aef\u63a7\u5236\u5668\uff0c\u5904\u7406\u8bf7\u6c42--&gt;\n  &lt;servlet&gt;\n    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\n    &lt;!--servlet-class\u4e2d\u7684\u503c\u662fspring-webmvc\u5305\u63d0\u4f9b\u7684\u7c7b\uff0c\u5373\u524d\u7aef\u63a7\u5236\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u6240\u6709\u8bf7\u6c42 --&gt;\n    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\n    &lt;init-param&gt;\n      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n      &lt;!---\u52a0\u8f7d\u914d\u7f6e--&gt;\n      &lt;param-value&gt;classpath:application-context.xml&lt;/param-value&gt;\n    &lt;/init-param&gt;\n  &lt;/servlet&gt;\n\n  &lt;servlet-mapping&gt;\n    &lt;!--        3.\u7f16\u5199Controller--&gt;\n    &lt;!--        4.\u5728application-context.xml\u5f00\u542f\u626b\u63cf--&gt;\n    &lt;!--        5.\u914d\u7f6e\u89c6\u56fe\u89e3\u6790\u5668--&gt;\n    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\n    &lt;!--url-pattern\uff08\u91cd\u70b9\uff09\u4e2d\u67093\u4e2a\u503c\uff0c\u5206\u522b\u4e3a/\u3001 /*\u3001 *.action --&gt;\n    &lt;url-pattern&gt;/&lt;/url-pattern&gt;\n  &lt;/servlet-mapping&gt;\n\n  &lt;welcome-file-list&gt;\n    &lt;welcome-file&gt;ChenLong.jsp&lt;/welcome-file&gt;\n    &lt;welcome-file&gt;login.jsp&lt;/welcome-file&gt;\n  &lt;/welcome-file-list&gt;\n\n\n\n&lt;/web-app&gt;\n\n\u516d\u3001\u914d\u7f6e\u6587\u4ef6\n1.application-context.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n       xmlns:p=&quot;http://www.springframework.org/schema/p&quot;\n       xmlns:c=&quot;http://www.springframework.org/schema/c&quot;\n       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;\n       xmlns:mybatis=&quot;http://mybatis.org/schema/mybatis-spring&quot;\n       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans\n                           https://www.springframework.org/schema/beans/spring-beans.xsd\n                           http://www.springframework.org/schema/context\n                           https://www.springframework.org/schema/context/spring-context.xsd\n                           http://mybatis.org/schema/mybatis-spring\n                           http://mybatis.org/schema/mybatis-spring.xsd\n\nhttp://mybatis.org/schema/mybatis-spring &quot;&gt;\n\n    &lt;!--\u5f15\u5165jdbc.properties--&gt;\n    &lt;context:property-placeholder location=&quot;classpath:jdbc.properties&quot;/&gt;\n    &lt;!--    \u6dfb\u52a0\u6ce8\u89e3\u652f\u6301--&gt;\n    &lt;context:annotation-config/&gt;\n    &lt;!--    \u626b\u63cfbean--&gt;\n    &lt;context:component-scan base-package=&quot;com&quot;/&gt;\n\n&lt;!--    &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;--&gt;\n&lt;!--        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;&gt;&lt;/property&gt;--&gt;\n&lt;!--    &lt;/bean&gt;--&gt;\n\n    &lt;import resource=&quot;spring-mybatis.xml&quot;/&gt;\n    &lt;import resource=&quot;spring-mvc.xml&quot;/&gt;\n    &lt;import resource=&quot;spring-tx.xml&quot;/&gt;\n\n\n\n    &lt;bean id=&quot;dataSource&quot; class=&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;&gt;\n        &lt;property name=&quot;driverClassName&quot; value=&quot;${driver}&quot;/&gt;\n        &lt;property name=&quot;url&quot; value=&quot;${url}&quot;/&gt;\n        &lt;property name=&quot;username&quot; value=&quot;${user}&quot;/&gt;\n        &lt;property name=&quot;password&quot; value=&quot;${password}&quot;/&gt;\n    &lt;/bean&gt;\n\n&lt;/beans&gt;\n\n2.jdbc.properties\ndriver:com.mysql.jdbc.Driver\nurl:jdbc:mysql://localhost:3306/attendance?useUnicode=true&amp;amp;characterEncoding=utf8\nuser:root\npassword:123456\n\n3.log4j.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE log4j:configuration SYSTEM &quot;log4j.dtd&quot;&gt;\n&lt;log4j:configuration\n        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:log4j=&quot;&quot;\n        xsi:schemaLocation=&quot;http://jakarta.apache.org/log4j/ &quot;&gt;\n    &lt;appender name=&quot;console&quot; class=&quot;org.apache.log4j.ConsoleAppender&quot;&gt;\n        &lt;param name=&quot;Target&quot; value=&quot;System.out&quot;/&gt;\n        &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;\n            &lt;param name=&quot;ConversionPattern&quot; value=&quot;[CateringLog] %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %c - %m%n&quot;/&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n    &lt;appender class=&quot;org.apache.log4j.RollingFileAppender&quot; name=&quot;file&quot;&gt;\n        &lt;param name=&quot;File&quot; value=&quot;d:/companyProject/logs/catering.log&quot;/&gt;\n        &lt;param name=&quot;Append&quot; value=&quot;true&quot;/&gt;\n        &lt;param name=&quot;MaxFileSize&quot; value=&quot;1024KB&quot;/&gt;\n        &lt;param name=&quot;MaxBackupIndex&quot; value=&quot;5&quot;/&gt;\n        &lt;layout class=&quot;org.apache.log4j.PatternLayout&quot;&gt;\n            &lt;param name=&quot;ConversionPattern&quot; value=&quot;[CateringLog] %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %c - %m%n&quot;/&gt;\n        &lt;/layout&gt;\n    &lt;/appender&gt;\n    &lt;root&gt;\n        &lt;priority value=&quot;debug&quot;/&gt;\n        &lt;appender-ref ref=&quot;console&quot;/&gt;\n        &lt;appender-ref ref=&quot;file&quot;/&gt;\n    &lt;/root&gt;\n    &lt;!--\u901a\u8fc7&lt;logger&gt;&lt;/logger&gt;\u7684\u5b9a\u4e49\u53ef\u4ee5\u5c06\u5404\u4e2a\u5305\u4e2d\u7684\u7c7b\u65e5\u5fd7\u8f93\u51fa\u5230\u4e0d\u540c\u7684\u65e5\u5fd7\u6587\u4ef6\u4e2d--&gt;\n    &lt;logger name=&quot;org.springframework&quot;&gt;\n        &lt;level value=&quot;ERROR&quot;/&gt;\n    &lt;/logger&gt;\n    &lt;logger name=&quot;org.mybatis.spring&quot;&gt;\n        &lt;level value=&quot;ERROR&quot;/&gt;\n    &lt;/logger&gt;\n    &lt;logger name=&quot;net.sf.ehcache&quot;&gt;\n        &lt;level value=&quot;ERROR&quot;/&gt;\n    &lt;/logger&gt;\n    &lt;logger name=&quot;com.mchange.v2&quot;&gt;\n        &lt;level value=&quot;ERROR&quot;/&gt;\n    &lt;/logger&gt;\n    &lt;logger name=&quot;java.sql&quot;&gt;\n        &lt;level value=&quot;debug&quot;/&gt;\n    &lt;/logger&gt;\n&lt;/log4j:configuration&gt;\n\n4.mybatis-config.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;\n&lt;!DOCTYPE configuration\n        PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;\n&lt;configuration&gt;\n    &lt;settings&gt;\n        &lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;\n        &lt;setting name=&quot;logImpl&quot; value=&quot;STDOUT_LOGGING&quot; /&gt;\n    &lt;/settings&gt;\n\n    &lt;typeAliases&gt;\n        &lt;package name=&quot;com.pojo&quot;/&gt;\n    &lt;/typeAliases&gt;\n\n    &lt;mappers&gt;\n        &lt;package name=&quot;com.mapper&quot;/&gt;\n    &lt;/mappers&gt;\n&lt;/configuration&gt;\n\n5.spring-mvc.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;\n       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\n                           http://www.springframework.org/schema/mvc\n                           https://www.springframework.org/schema/mvc/spring-mvc.xsd\n                           &quot;&gt;\n&lt;!--    &lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;--&gt;\n&lt;!--        &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/pages/&quot;&gt;&lt;/property&gt;--&gt;\n&lt;!--        &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;&gt;&lt;/property&gt;--&gt;\n&lt;!--    &lt;/bean&gt;--&gt;\n    &lt;!--\u4f1a\u5f15\u8d77\u4e00\u4e2a\u4e25\u91cd\u7684\u540e\u679c\uff0ccontroller\u4e2d\u7684\u6240\u6709url\u5168\u90e8\u662f404--&gt;\n    &lt;!--    &lt;mvc:view-controller path=&quot;/test&quot; view-name=&quot;success&quot;&gt;&lt;/mvc:view-controller&gt;--&gt;\n    &lt;!--\u544a\u8bc9springmvc\uff0c\u81ea\u5df1\u6620\u5c04\u7684\u8bf7\u6c42\u5c31\u81ea\u5df1\u5904\u7406\uff0c\u4e0d\u80fd\u5904\u7406\u7684\u8bf7\u6c42\u5c31\u4ea4\u7ed9tomcat--&gt;\n    &lt;mvc:default-servlet-handler /&gt;\n\n    &lt;!--\u5c06springmvc\uff0c\u529f\u80fd\u5168\u5f00--&gt;\n    &lt;mvc:annotation-driven conversion-service=&quot;convertService&quot; /&gt;\n    &lt;bean id=&quot;convertService&quot; class=&quot;org.springframework.format.support.FormattingConversionServiceFactoryBean&quot;/&gt;\n&lt;/beans&gt;\n\n6.spring-mybatis.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n       xmlns:mybatis=&quot;http://mybatis.org/schema/mybatis-spring&quot; xmlns:jdbc=&quot;http://www.springframework.org/schema/jdbc&quot;\n       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\n                           http://mybatis.org/schema/mybatis-spring\n                           http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd&quot;&gt;\n    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;\n        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&gt;\n        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt;\n    &lt;/bean&gt;\n    &lt;mybatis:scan base-package=&quot;com.mapper&quot;/&gt;\n&lt;/beans&gt;\n\n7.spring-tx.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n       xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;\n       xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;\n       xmlns:jdbc=&quot;http://www.springframework.org/schema/jdbc&quot;\n       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\n                           http://www.springframework.org/schema/tx\n                           https://www.springframework.org/schema/tx/spring-tx.xsd\n                           http://www.springframework.org/schema/aop\n                           https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd&quot;&gt;\n    &lt;!--\u914d\u7f6e\u4e8b\u52a1--&gt;\n    &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;\n        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\n    &lt;/bean&gt;\n    &lt;!--\u5f00\u542f\u4e8b\u52a1\u6ce8\u89e3--&gt;\n    &lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot;/&gt;\n    &lt;!--\u914d\u7f6e\u4e8b\u52a1\u901a\u77e5--&gt;\n    &lt;tx:advice id=&quot;txAdvice&quot; transaction-manager=&quot;transactionManager&quot;&gt;\n        &lt;tx:attributes&gt;\n            &lt;tx:method name=&quot;*&quot; propagation=&quot;REQUIRED&quot;/&gt;\n        &lt;/tx:attributes&gt;\n    &lt;/tx:advice&gt;\n    &lt;!--\u4e8b\u52a1AOP\u5904\u7406--&gt;\n    &lt;aop:config&gt;\n        &lt;!--\u5207\u5165\u70b9--&gt;\n        &lt;aop:pointcut id=&quot;pcuser&quot; expression=&quot;execution(* com.service.*.*(..))&quot;/&gt;\n        &lt;!--\u901a\u77e5--&gt;\n        &lt;aop:advisor advice-ref=&quot;txAdvice&quot; pointcut-ref=&quot;pcuser&quot;&gt;&lt;/aop:advisor&gt;\n    &lt;/aop:config&gt;\n    &lt;jdbc:embedded-database id=&quot;dataSource&quot;/&gt;\n&lt;/beans&gt;\n\n\u4e03\u3001\u76f8\u5173\u4ee3\u7801\n1.controller\u5305\nhomeController.java\npackage com.controller;\n\nimport com.service.LogService;\nimport com.service.TimeService;\nimport com.service.WxUserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * @ClassName: homeController\n * @Description: \u7528\u4e8e\u9996\u9875\u6570\u636e\u7684\u8c03\u7528\n * @author: \u9648\u9f99\n * @date: 2020/1/12  22:25\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@RestController\n@RequestMapping(&quot;/home&quot;)\npublic class homeController {\n    @Autowired\n    private WxUserService wxUserService;\n\n    @Autowired\n    private LogService logService;\n\n    @Autowired\n    private TimeService timeService;\n\n    @RequestMapping(&quot;/home&quot;)\n    public Map&lt;String,Object&gt; inRoom(Integer uId, Integer rId, Integer state, String lDate) throws ParseException {\n        /*\n         * 1.\u83b7\u53d6\u6b64\u4eba\u5728\u7684\u6559\u5ba4\uff0c\u6709\u5c31\u8fd4\u56de\u6b64\u6559\u5ba4\u65e5\u5fd7\uff0c\u6ca1\u6709\u8fd4\u56de\u7684\u4e5f\u662f\u7a7a\uff08uId\u4e0d\u4e3a\u7a7arid\u4e3a\u7a7a\u65f6\uff09\n         * 2.\u5982\u679cuid\u548crid\u4e0d\u4e3a\u7a7a\u8bf4\u660e\u8981\u8fdb\u5165\u6559\u5ba4\uff0c\u5c31\u66f4\u65b0\u5fae\u4fe1\u7528\u6237\u8868\u7684uid\u5e76\u8fd4\u56de\u6b64\u6559\u5ba4\u65e5\u5fd7\n         * 3.quit\u4e3atrue\u65f6\u4e3a\u9000\u51fa\uff0c\u4e3a\u7a7a\u65f6\u5904\u7406\u5176\u4ed6\n         *\n         *\n         * */\n        System.out.println(&quot;uId=&quot;+uId);\n        System.out.println(&quot;rId=&quot;+rId);\n        System.out.println(&quot;state=&quot;+state);\n        System.out.println(&quot;lDate=&quot;+lDate);\n        Map&lt;String,Object&gt; inRoom = new HashMap&lt;&gt;();\n        /*\u9000\u51fa\u6559\u5ba4\uff0c\u7f6e\u4e3a\u7a7a*/\n        if(state!=null){\n            if(state==0) {\n                /*\u79bb\u5f00\u6559\u5ba4*/\n                System.out.println(&quot;\u79bb\u5f00\u6559\u5ba4&quot;);\n\n//\n                wxUserService.updateRoom(uId, null);\n                logService.addLog(uId, rId, state, lDate);\n\n                /*\u8ba1\u7b97\u5728\u8fd9\u4e2a\u6559\u5ba4\u65f6\u957f*/\n                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;YYYY-MM-dd HH:mm:ss&quot;);\n                Date endTime = simpleDateFormat.parse(lDate);\n\n                System.out.println((logService.getEntryTime(uId, rId)).get(&quot;lDate&quot;));\n\n\n                Map&lt;String,Object&gt; maxDate = logService.getEntryTime(uId, rId);\n                System.out.println(maxDate.get(&quot;lDate&quot;));\n\n                Date startTime = simpleDateFormat.parse(String.valueOf(maxDate.get(&quot;lDate&quot;)));\n                System.out.println(&quot;startTime=&quot;+startTime);\n\n                if (startTime != null) {\n                    System.out.println(&quot;xxxx&quot;);\n                    long start = startTime.getTime();\n                    long end = endTime.getTime();\n                    long result = (end - start)/(60*1000);\n                    int time = (int)result;\n                    System.out.println(&quot;time=&quot;+time);\n                /*\u5982\u679ctime\u8868\u6ca1\u8fd9\u4e2a\u8bb0\u5f55\u5c31\u589e\u52a0\uff0c\u6709\u5c31\u66f4\u65b0*/\n                if (timeService.checkExist(uId, rId) == null) {\n                    System.out.println(&quot;\u4e0d\u5b58\u5728time\uff0c\u8981\u63d2\u5165&quot;);\n                    timeService.updateOrAddTime(uId,rId,time,null);\n                } else {\n                    System.out.println(&quot;\u5b58\u5728time\uff0c\u8981\u66f4\u65b0&quot;);\n                    timeService.updateOrAddTime(uId,rId,time,1);\n\n                }\n            }\n                inRoom.put(&quot;success&quot;,&quot;\u9000\u51fa\u6210\u529f&quot;);\n                return inRoom;\n            }else if(state==1){/*\u8fdb\u5165\u6559\u5ba4*/\n                System.out.println(&quot;\u8fdb\u5165\u6559\u5ba4&quot;);\n\n                logService.addLog(uId,rId,state,lDate);\n                wxUserService.updateRoom(uId,rId);\n\n\n            }\n        } else if(state==null){/*\u9875\u9762\u52a0\u8f7d\u83b7\u53d6\u6559\u5ba4\u8fd4\u56de\u7a7a\u6216\u6559\u5e08\u65e5\u5fd7\u7b49\u4fe1\u606f*/\n\n            rId = wxUserService.getOnlineRoom(uId);\n            if(rId==null){\n                inRoom.put(&quot;roomLog&quot;,null);\n                return inRoom;\n            }\n        }\n\n        System.out.println(&quot;\u6cd5\u8eab\u4e86&quot;);\n\n\n        inRoom.put(&quot;roomLog&quot;,logService.getLog(null,rId,null));\n\n\n\n\n\n        return inRoom;\n    }\n\n    @RequestMapping(&quot;/test&quot;)\n    public String test() throws ParseException {\n        String lDate = &quot;2020-01-13 10:23:31&quot; ;\n        String lDate2 = &quot;2020-01-13 10:25:31&quot; ;\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&quot;YYYY-MM-dd HH:mm:ss&quot;);\n        Date startTime = simpleDateFormat.parse(lDate);\n        Date endTime = simpleDateFormat.parse(lDate2);\n\n        long start = startTime.getTime();\n        long end = endTime.getTime();\n        long result = end-start;\n        System.out.println(&quot;\u76f8\u51cf\u4e3a&quot;+result);\n        String fuck = &quot;\u76f8\u5dee&quot;+result/(60*1000)+&quot;\u5206\u949f&quot;;\n\n        return fuck;\n\n    }\n\n\n}\n\nLogController.java\npackage com.controller;\n\nimport com.pojo.Log;\nimport com.service.LogService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: LogController\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/8  0:52\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@RestController\n@RequestMapping(&quot;/log&quot;)\npublic class LogController {\n    @Autowired\n    private LogService logService;\n\n    @GetMapping(value= &quot;/getLog&quot;)\n    public Map&lt;String,Object&gt; getLog(Integer uId,Integer rId){\n        /*\n        * 1.\u6839\u636euId\u548crid\u5dee\u67d0\u4e2a\u4eba\u5728\u67d0\u4e2a\u6559\u5ba4\u65e5\u5fd7\n        * 2.\u6839\u636euId\u5dee\u67d0\u4e2a\u4eba\u6240\u6709\u65e5\u5fd7\n        * 3.\u6839\u636esId\u67e5\u67d0\u95f4\u6559\u5ba4\u65e5\u5fd7\n        * 4.\u6839\u636euId\u5dee\u67d0\u4e2a\u4eba\u53bb\u8fc7\u7684\u6559\u5ba4\uff08groupby\uff09\n        * \u8fd4\u56de\u7684\u662f\u591a\u8868\u67e5\u8be2*/\n        System.out.println(&quot;rid=&quot;+rId);\n        System.out.println(&quot;uId=&quot;+uId);\n        Map&lt;String,Object&gt; logMap = new HashMap&lt;&gt;();\n        logMap.put(&quot;logList&quot;,logService.getLog(uId,rId,null));\n        if(uId!=null&amp;&amp;rId==null) {\n            logMap.put(&quot;roomList&quot;, logService.getLog(uId, rId, 1));\n        }\n\n        return logMap;\n    }\n}\n\nRealNameController.java\npackage com.controller;\n\nimport com.pojo.RealName;\nimport com.service.RealNameService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * @ClassName: RealNameController\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/10  19:37\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n\n@RestController\n@RequestMapping(&quot;/realName&quot;)\npublic class RealNameController {\n    @Autowired\n    private RealNameService realNameService;\n\n\n    @RequestMapping(&quot;/tieRealName&quot;)\n    public Map&lt;String,Object&gt; login(String uId, String sId, String password, String email) {\n        /*\n            \u5b9e\u540d\u7ed1\u5b9a\uff0ctodo\u90ae\u7bb1\u8ba4\u8bc1\n         *\n         * */\n\n        Map&lt;String,Object&gt; msg = new HashMap&lt;&gt;();\n        RealName realName = new RealName(sId,password,email);\n        RealName getRealName = realNameService.getBySidAndPwd(realName);\n        System.out.println(getRealName);\n        if(getRealName==null){\n            System.out.println(&quot;\u4e0d\u5b58\u5728\u6216\u5bc6\u7801\u9519\u8bef&quot;);\n//            \u4e0d\u5b58\u5728\u6216\u8d26\u53f7\u5bc6\u7801\u9519\u8bef\n            msg.put(&quot;success&quot;,&quot;noExist&quot;);\n        }else if(getRealName.getuId()!=null){\n//            \u5df2\u7ed1\u5b9a\n            msg.put(&quot;success&quot;,&quot;tied&quot;);\n        }else if(getRealName!=null&amp;&amp;getRealName.getuId()==null){\n//            \u672a\u7ed1\u5b9a\u4e14\u8d26\u5bc6\u6b63\u786e\n            msg.put(&quot;success&quot;,realNameService.tieUid(uId,sId));\n        }\n\n\n        return msg;\n\n    }\n\n    @RequestMapping(&quot;/getRealName&quot;)\n    public Map&lt;String,Object&gt; getByUid(String uId){\n        System.out.println(uId);\n        Map&lt;String,Object&gt; msg = new HashMap&lt;&gt;();\n        msg.put(&quot;realNameInfo&quot;,realNameService.getByUid(uId));\n        return msg;\n    }\n}\n\nRoomAdminController.java\n/**\n * Copyright (C), 2015-2020, XXX\u6709\u9650\u516c\u53f8\n * FileName: RoomAdminController\n * Author:   19399\n * Date:     2020/1/9 19:13\n * Description: \u6559\u5ba4\u7ba1\u7406\n * History:\n * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;\n * \u4f5c\u8005\u59d3\u540d           \u4fee\u6539\u65f6\u95f4           \u7248\u672c\u53f7              \u63cf\u8ff0\n */\npackage com.controller;\n\nimport com.pojo.Room;\nimport com.pojo.RoomAdmin;\nimport com.service.RoomAdminService;\nimport com.service.RoomService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * \u3008\u4e00\u53e5\u8bdd\u529f\u80fd\u7b80\u8ff0\u3009&lt;br&gt; \n * \u3008\u6559\u5ba4\u7ba1\u7406\u3009\n *\n * @author 19399\n * @create 2020/1/9\n * @since 1.0.0\n */\n@RestController\n@RequestMapping(&quot;/RoomAdmin&quot;)\npublic class RoomAdminController {\n    @Autowired\n    private RoomAdminService roomAdminService;\n\n    @RequestMapping(value = &quot;/roomAdminList&quot;)\n    public Map&lt;String,Object&gt; getRoomAdminList(RoomAdmin roomAdmin) {\n        Map&lt;String,Object&gt; roomAdminMap=new HashMap&lt;&gt;();\n        List&lt;RoomAdmin&gt; list = roomAdminService.getRoomAdminList(roomAdmin);\n        roomAdminMap.put(&quot;list&quot;,list);\n        return roomAdminMap;\n    }\n    @GetMapping(value = &quot;/roomAdminListByRId/{rId}&quot;)\n    public Map&lt;String,Object&gt; getRoomAdminListByRId(@PathVariable Integer rId, Model model) {\n        Map&lt;String,Object&gt; roomAdminList=new HashMap&lt;&gt;();\n        System.out.println(rId);\n        List&lt;RoomAdmin&gt; list = roomAdminService.getRoomAdminListByRId(rId);\n        model.addAttribute(&quot;roomAdmin&quot;, list);\n        roomAdminList.put(&quot;list&quot;,list);\n        return roomAdminList;\n    }\n    @GetMapping(value = &quot;/roomAdminListByUId/{uId}&quot;)\n    public Map&lt;String,Object&gt; getRoomAdminListByUId(@PathVariable Integer uId, Model model) {\n        Map&lt;String,Object&gt; roomAdminList1=new HashMap&lt;&gt;();\n        System.out.println(uId);\n        List&lt;RoomAdmin&gt; list1 = roomAdminService.getRoomAdminListByUId(uId);\n        model.addAttribute(&quot;roomAdmin1&quot;, list1);\n        roomAdminList1.put(&quot;list&quot;,list1);\n        return roomAdminList1;\n    }\n    @RequestMapping(value = &quot;/add&quot;, method = RequestMethod.GET)\n    public String addRoom(RoomAdmin roomAdmin, Model model) {\n        if((roomAdminService.getRoomAdminListByRId(roomAdmin.getrId())!=null)&amp;&amp;(roomAdminService.getRoomAdminListByUId(roomAdmin.getuId())!=null)){\n            model.addAttribute(&quot;msg&quot;, &quot;\u8be5\u7ba1\u7406\u5458\u5df2\u7ba1\u7406\u8be5\u95f4\u6559\u5ba4&quot;);\n            return &quot;error&quot;;\n        }\n        boolean result=roomAdminService.addRoomAdmin(roomAdmin);\n        if(result) {\n            System.out.println(&quot;\u6dfb\u52a0\u6210\u529f&quot;);\n            return &quot;success&quot;;\n        }\n        else {\n            System.out.println(&quot;\u6dfb\u52a0\u5931\u8d25&quot;);\n            return &quot;error&quot;;\n        }\n    }\n\n    @DeleteMapping(value = &quot;/delete&quot;)\n    public void deleteRoom(Integer rId,Integer uId, Model model) {\n        roomAdminService.deleteRoomById(rId,uId);\n    }\n\n    @PostMapping(value = &quot;/addRoomAdmin&quot;)\n    public String addRoomAdmin(RoomAdmin roomAdmin) {\n        boolean result=roomAdminService.addRoomAdmin(roomAdmin);\n        if(result) {\n            System.out.println(&quot;\u5220\u9664\u6210\u529f&quot;);\n            return &quot;success&quot;;\n        }\n        else {\n            System.out.println(&quot;\u5220\u9664\u5931\u8d25&quot;);\n            return &quot;error&quot;;\n        }\n    }\n}\n\nRoomController.java\npackage com.controller;\n\nimport com.pojo.Room;\nimport com.service.RoomService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * @ClassName: RoomController\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/12  23:33\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@RestController\n@RequestMapping(&quot;/room&quot;)\npublic class RoomController {\n    @Autowired\n    private RoomService roomService;\n\n    @RequestMapping(&quot;/room&quot;)\n    public Map&lt;String,Object&gt; getRoomList(){\n        Map&lt;String,Object&gt; msg = new HashMap&lt;&gt;();\n        Room room = new Room();\n        msg.put(&quot;roomList&quot;,roomService.getRoomList(room));\n        return msg;\n    }\n}\n\nRoomNoticeController.java\npackage com.controller;\n\n\nimport com.pojo.RoomNotice;\nimport com.service.RoomNoticeService;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.text.SimpleDateFormat;\nimport java.util.*;\n\n@RestController\n@RequestMapping(&quot;/roomNotice&quot;)\npublic class RoomNoticeController {\n    @Autowired\n    private RoomNoticeService roomNoticeService;\n    //\u901a\u8fc7rid\u67e5\u8be2\u6559\u5ba4\u516c\u544a\n    @GetMapping(value= &quot;/getRoomNoticeByRid/{rid}&quot;)\n    public Map&lt;String,Object&gt; getRoomNoticeByRid(@PathVariable Integer rid){\n        System.out.println(&quot;\u901a\u8fc7&quot;+rid+&quot;\u67e5\u8be2\u8bfe\u5ba4\u516c\u544a&quot;);\n        Map&lt;String,Object&gt; RoomNoticeMap = new HashMap&lt;&gt;();\n        List&lt;RoomNotice&gt; RoomNoticeList = roomNoticeService.getRoomNoticeByRid(rid);\n        RoomNoticeMap.put(&quot;roomNoticeList&quot;,RoomNoticeList);\n        return RoomNoticeMap;\n    }\n\n    //\u901a\u8fc7uid\u67e5\u8be2\u6559\u5ba4\u516c\u544a\n    @GetMapping(value= &quot;/getRoomNoticeByUid/{uid}&quot;)\n    public Map&lt;String,Object&gt; getRoomNoticeByUid(@PathVariable Integer uid){\n        System.out.println(&quot;\u901a\u8fc7&quot;+uid+&quot;\u67e5\u8be2\u8bfe\u5ba4\u516c\u544a&quot;);\n        Map&lt;String,Object&gt; RoomNoticeMap = new HashMap&lt;&gt;();\n        List&lt;RoomNotice&gt; RoomNoticeList = roomNoticeService.getRoomNoticeByUid(uid);\n        RoomNoticeMap.put(&quot;roomNoticeList&quot;,RoomNoticeList);\n        return RoomNoticeMap;\n    }\n\n    //\u67e5\u8be2\u6240\u6709\u8bfe\u5ba4\u516c\u544a\n    @GetMapping(value= &quot;/getAllRoomNotice&quot;)\n    public Map&lt;String,Object&gt; getAllRoomNotice(){\n        System.out.println(&quot;\u6267\u884c\u4e86\u67e5\u8be2\u6240\u6709\u8bfe\u5ba4\u516c\u544a\u7684\u65b9\u6cd5&quot;);\n        Map&lt;String,Object&gt; RoomNoticeMap = new HashMap&lt;&gt;();\n        List&lt;RoomNotice&gt; RoomNoticeList = roomNoticeService.getAllRoomNotice();\n        RoomNoticeMap.put(&quot;roomNoticeList&quot;,RoomNoticeList);\n        return RoomNoticeMap;\n    }\n\n    //\u901a\u8fc7\u9875\u9762\u8868\u5355\u63d2\u5165\u4e00\u6761\u6559\u5ba4\u516c\u544a\uff0c\u63d2\u5165\u6ca1\u6709\u7ea6\u675f\n    @RequestMapping(value= &quot;/insertRoomNotice&quot;)\n    public String insertRoomNotice(RoomNotice bean){\n        System.out.println(&quot;\u6267\u884c\u4e86\u63d2\u5165\u4e00\u6761\u8bfe\u5ba4\u516c\u544a\u7684\u65b9\u6cd5&quot;);\n        //Map&lt;String,Object&gt; RoomNoticeMap = new HashMap&lt;&gt;();\n        boolean result = roomNoticeService.insertRoomNotice(bean);\n        if(result)\n        {\n            System.out.println(&quot;\u63d2\u5165\u6210\u529f&quot;);\n            return &quot;index.jsp&quot;;\n        }\n        else{\n            System.out.println(&quot;\u63d2\u5165\u5931\u8d25&quot;);\n            return &quot;error.jsp&quot;;\n        }\n    }\n\n    //\u66f4\u65b0\u4e00\u6761\u8bfe\u5ba4\u516c\u544a\u3002\u81ea\u52a8\u751f\u6210\u4fee\u6539\u65f6\u95f4\n    @RequestMapping(value= &quot;/updateRoomNotice&quot;)\n    public String updateRoomNotice(Integer rId, Integer uId, String notice){\n        System.out.println(&quot;\u6267\u884c\u4e86\u66f4\u65b0\u4e00\u6761\u8bfe\u5ba4\u516c\u544a\u7684\u65b9\u6cd5&quot;);\n        Calendar calendar= Calendar.getInstance();\n        SimpleDateFormat dateFormat= new SimpleDateFormat(&quot;yyyy-MM-dd :hh:mm:ss&quot;);\n        System.out.println(&quot;\u7b2c\u4e00\u79cd\u83b7\u53d6\u65e5\u671f\u65b9\u5f0f\uff1a&quot;+dateFormat.format(calendar.getTime()));\n        Date cDate =  new Date();\n        System.out.println(&quot;\u7b2c\u4e8c\u79cd\u83b7\u53d6\u65e5\u671f\u65b9\u5f0f\uff1a&quot;+cDate);//\u81ea\u52a8\u751f\u6210\u65f6\u95f4\n        boolean result = roomNoticeService.updateRoomNotice(rId,uId,notice,cDate);\n        System.out.println(result);\n        return &quot;result&quot;;\n    }\n\n}\n\nTimeController.java\npackage com.controller;\n\nimport com.service.TimeService;\nimport com.service.WxUserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * @ClassName: TimeController\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/11  23:52\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@RestController\n@RequestMapping(&quot;/time&quot;)\npublic class TimeController {\n    @Autowired\n    private TimeService timeService;\n\n    @RequestMapping(&quot;/getAllUserTime&quot;)\n    public Map&lt;String,Object&gt; getAllUserTime(){\n        Map&lt;String,Object&gt; msg = new HashMap&lt;&gt;();\n        msg.put(&quot;allUserTime&quot;,timeService.getAllUserTime());\n        return msg;\n    }\n}\n\nWxUserController.java\npackage com.controller;\n\nimport com.pojo.WxUser;\nimport com.service.LogService;\nimport com.service.WxUserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: WxUserController\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  21:42\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@RestController\n@RequestMapping(&quot;/wxUser&quot;)\npublic class WxUserController {\n   @Autowired\n   private WxUserService wxUserService;\n\n    @Autowired\n    private LogService logService;\n\n\n\n\n\n\n\n    @RequestMapping(&quot;/login&quot;)\n    public Map&lt;String,Object&gt; login(String avatarUrl,String openId,String nickName) {\n        /*\n         * 1.\u9a8c\u8bc1\u6570\u636e\u5e93\u6709\u6ca1\u6b64\u7528\u6237\uff0c\u5c31\u6dfb\u52a0\uff0c\u5e76\u8fd4\u56de\u662f\u65b0\u7528\u6237(\u7528\u4e8e\u524d\u7aef\u63d0\u793a\u5b9e\u540d\u6ce8\u518c)\n         * 2.\u5982\u679c\u662f\u8001\u7528\u6237\uff0c\u5c31\u66f4\u65b0\uff0c\u8fd4\u56de\u8001\u7528\u6237\uff08\u63d0\u793a\u6b22\u8fce\u56de\u6765\uff09\n         *\n         * */\n\n        Map&lt;String,Object&gt; wxUserMap = new HashMap&lt;&gt;();\n        WxUser wxUser = new WxUser(openId,nickName,avatarUrl);\n        System.out.println(wxUser);\n        wxUser.toString();\n\n\n        if(wxUserService.getUserByUidOrOpenid(wxUser)==null){\n            wxUserMap.put(&quot;success&quot;,wxUserService.insertWxUser(wxUser));\n        }else{\n            wxUserMap.put(&quot;success&quot;,null);\n        }\n        wxUserMap.put(&quot;wxUserInfo&quot;,wxUserService.getUserByUidOrOpenid(wxUser));\n\n        return wxUserMap;\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    @RequestMapping(value = &quot;/users&quot;, method = RequestMethod.GET)\n    public String getOnlineUser(Integer rId, Model model) {\n\n        int count;\n        count = wxUserService.getOnlineUser(rId);\n        model.addAttribute(&quot;count&quot;, count);\n        return &quot;index&quot;;\n    }\n\n    @RequestMapping(value = &quot;/list&quot;,method = RequestMethod.GET)\n    public String getAllWxUser(Model model) {\n\n        List&lt;WxUser&gt; list = wxUserService.getAllWxUser();\n        model.addAttribute(&quot;list&quot;, list);\n        return &quot;AllWxUser&quot;;//\u524d\u7aef\u9875\u9762\n\n    }\n\n    @RequestMapping(value =&quot;/edit&quot;,method = RequestMethod.POST)\n    public void updateWxUser(Integer rid, Integer uId, Model model) {\n        boolean result = wxUserService.updateWxUser(rid, uId);\n        if (result == true) {\n            model.addAttribute(&quot;item&quot;);\n        } else {\n            model.addAttribute(&quot;msg&quot;, &quot;\u66f4\u65b0\u5931\u8d25&quot;);\n        }\n    }\n\n    @RequestMapping(value =&quot;/test&quot;)\n    public String test(){\n        return &quot;fuck&quot;;\n    }\n\n\n}\n\n2.mapper\u5305\nLogMapper.java\npackage com.mapper;\n\nimport com.pojo.Log;\nimport com.pojo.Time;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\n@Mapper\n@Repository\npublic interface LogMapper {\n//    \u5728\u9000\u51fa\u65f6\u8fd4\u56de\u8fdb\u5165\u65f6\u7684\u65f6\u95f4\n    Map&lt;String,Object&gt; getEntryTime(@Param(&quot;uId&quot;)Integer uId, @Param(&quot;rId&quot;)Integer rId);\n//    \u6dfb\u52a0\u65e5\u5fd7\n    boolean addLog(@Param(&quot;uId&quot;)Integer uId, @Param(&quot;rId&quot;)Integer rId,\n                   @Param(&quot;state&quot;)Integer state, @Param(&quot;lDate&quot;)String lDate) ;\n    //\u52a8\u6001\u83b7\u53d6log\n    List&lt;Map&lt;String,Object&gt;&gt; getLog(@Param(&quot;uId&quot;) Integer uId, @Param(&quot;rId&quot;) Integer rId, @Param(&quot;room&quot;) Integer room);\n//    \u6839\u636e\u6559\u5ba4rid\u83b7\u53d6\u6559\u5ba4\u65e5\u5fd7,\u5982\u679c\u6ca1\u6709rid\u5c31\u67e5\u627e\u5168\u90e8\n    List&lt;Log&gt; getLogByRid(Integer rid);\n//    \u83b7\u53d6\u6211\u53bb\u8fc7\u7684\u6559\u5ba4\u6839\u636euid\n    List&lt;Integer&gt; getMyRoomByUid(Integer uid);\n//    \u6839\u636euid\u548crid\u83b7\u53d6\u6211\u5728\u67d0\u4e2a\u6559\u5ba4\u7684\u65e5\u5fd7\n    List&lt;Log&gt; getMyRoomLog(Integer uid, Integer rid);\n\n\n}\n\nRealNameMapper.java\npackage com.mapper;\n\nimport com.pojo.RealName;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.stereotype.Repository;\n\n@Mapper\n@Repository\npublic interface RealNameMapper {\n//    \u6839\u636e\u5b66\u53f7\u548c\u5bc6\u7801\u8fd4\u56de\n     RealName getBySidAndPwd(RealName realName);\n\n//     \u7ed1\u5b9a\u5fae\u4fe1\u7528\u6237\u5230\u5b66\u53f7\n    boolean tieUid(@Param(&quot;uId&quot;) String uId, @Param(&quot;sId&quot;) String sId);\n\n//    \u6839\u636euid\u8fd4\u56de\u9664\u5bc6\u7801\u5916\u7684\u5b9e\u540d\u4fe1\u606f\n    RealName getByUid(String uid);\n}\n\nRoomAdminMapper.java\npackage com.mapper;\n\nimport com.pojo.Room;\nimport com.pojo.RoomAdmin;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n/**\n * @ClassName: RoomAdminMapper\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/7  23:44\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n\n@Mapper\n@Repository\npublic interface RoomAdminMapper {\n    /*\n    \u7528\u6237\u4e0e\u6559\u5ba4\u7684\u4e2d\u95f4\u8868\n    \u589e\u52a0\u7ba1\u7406\u5458\u7ba1\u7406\u67d0\u4e2a\u6559\u5ba4\n    \u5173\u8054\u5220\u9664\uff0c\u5220\u9664\u67d0\u4e2a\u6559\u5ba4\u7684\u67d0\u4e2a\u7ba1\u7406\u5458\n       \u5220\u9664\uff0c\u628adel\u7f6e\u4e3a0\n       \u6839\u636e*rid\u4e0eroom\u8868\u8054\u7cfb\uff0c\u4e00\u5bf9\u591a/\n       \u67e5\u8be2\u6240\u6709\u7ba1\u7406\u5458\u53ca\u4ed6\u7ba1\u7406\u7684\u6559\u5ba4\n     */\n    List&lt;RoomAdmin&gt; getRoomAdminList(RoomAdmin roomAdmin);//\u641c\u7d22\n\n    boolean addRoomAdmin(RoomAdmin roomAdmin);//\u4e3a\u67d0\u95f4\u6559\u5ba4\u6dfb\u52a0\u7ba1\u7406\u5458\n\n    boolean deleteRoomById(Integer rId,Integer uId);//\u5220\u9664\n\n    List&lt;RoomAdmin&gt; getRoomAdminListByRId(Integer rId);//\u6839\u636erId\u641c\u7d22roomadmin\n\n    List&lt;RoomAdmin&gt; getRoomAdminListByUId(Integer uId);//\u6839\u636euId\u641c\u7d22roomadmin\n\n}\n\nRoomMapper.java\npackage com.mapper;\n\nimport com.pojo.Room;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\n\n@Mapper\n@Repository\npublic interface RoomMapper {\n    /**\n     * \u83b7\u53d6\u6559\u5ba4\u5217\u8868\n     * @param room\n     */\n    List&lt;Room&gt; getRoomList(Room room);\n    /**\n     * \u6839\u636eId\u83b7\u53d6\u4f9b\u5e94\u5546\n     * @param rId\n     */\n   /* Room getRoomById(Integer rId);\n    *//**\u589e\u52a0*//*\n    boolean addRoom(Room room);\n    *//**\u5220\u9664\u4f9b\u5e94\u5546*//*\n    boolean deleteRoom(Integer rId);\n    *//**\u7f16\u8f91*//*\n    boolean updateRoom(Room room);\n    //\u4e00\u5bf9\u591a\u67e5\u8be2\n    List&lt;Room&gt; selectRoomById(Integer rId);//\u5728\u623f\u95f4\u8868\u4e2d\u6839\u636erId\u8054\u7acb\u67e5\u8be2*/\n}\n\nRoomNoticeMapper.java\npackage com.mapper;\n\n\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.stereotype.Repository;\nimport com.pojo.RoomNotice;\n\nimport java.util.Date;\nimport java.util.List;\n\n@Mapper\n@Repository\npublic interface RoomNoticeMapper {\n    //    \u6839\u636e\u6559\u5ba4rid\u83b7\u53d6\u6559\u5ba4\u516c\u544a,\n    List&lt;RoomNotice&gt; getRoomNoticeByRid(Integer rid);\n\n    //    \u6839\u636e\u6559\u5ba4Uid\u83b7\u53d6\u6559\u5ba4\u516c\u544a,\n    List&lt;RoomNotice&gt; getRoomNoticeByUid(Integer Uid);\n\n    //   \u67e5\u8be2\u6240\u6709\u6559\u5ba4\u516c\u544a\u7684\u4fe1\u606f\n    List&lt;RoomNotice&gt; getAllRoomNotice();\n\n    //   \u6839\u636erid\u63d2\u5165\u4e00\u6761\u8bfe\u5ba4\u516c\u544a\n    Boolean insertRoomNotice(RoomNotice bean );\n\n    //   \u66f4\u65b0\u4e00\u6761\u8bfe\u5ba4\u516c\u544a\n    boolean updateRoomNotice(@Param(&quot;rId&quot;) Integer rid, @Param(&quot;uId&quot;) Integer uid, @Param(&quot;notice&quot;) String notice, @Param(&quot;cDate&quot;) Date cDate);\n}\n\nTimeMapper.java\npackage com.mapper;\n\nimport com.pojo.Time;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: TimeMapper\n * @Description: TODO\n * @author: \u9648\u9f9928\n * @date: 2020/1/8  22:\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@Mapper\n@Repository\npublic interface TimeMapper {\n\n    //  \u67e5\u8be2\u6240\u6709\u6d3b\u8dc3\u5ea6\n    List&lt;Time&gt; getTime();\n\n    //  \u6839\u636euid\u67e5\u8be2\u6240\u6709\u623f\u95f4\u7684\u6d3b\u8dc3\u5ea6\n    List&lt;Time&gt; getTimeByUid(Integer uid);\n\n    //  \u5bf9\u7d2f\u8ba1\u6d3b\u8dc3\u5ea6\u8fdb\u884c\u964d\u5e8f\u6392\u884c-\n    List&lt;Time&gt; getAllTime();\n\n    //  \u6839\u636euid\u67e5\u8be2\u7d2f\u8ba1\u6d3b\u8dc3\u5ea6\n    Time getAllTimeByUid(Integer uid);\n}\n\nWxUserMapper.java\npackage com.mapper;\n\nimport com.pojo.WxUser;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: UserMapper\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  20:54\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@Mapper\n@Repository\npublic interface WxUserMapper {\n\n\n//    \u6839\u636euid\u83b7\u53d6\u6b64\u4eba\u6240\u5728\u6559\u5ba4\n    Integer getOnlineRoom(@Param(&quot;uId&quot;) Integer uId);\n//    \u66f4\u65b0\u7528\u6237\u8868\u7684\u5728\u7ebf\u6559\u5ba4\uff0crid\u4e3a\u7a7a\u5c31\u7f6e\u4e3a\u7a7a\uff0c\u5426\u5219\u66f4\u65b0\n    boolean updateRoom(@Param(&quot;uId&quot;)Integer uId,@Param(&quot;rId&quot;)Integer rId);\n//    \u83b7\u53d6\u67d0\u4e2a\u4eba\u5728\u54ea\u4e2a\u6559\u5ba4\uff0c\u5e76\u83b7\u53d6\u8fd9\u4e2a\u6559\u5ba4\u7684\u65e5\u5fd7\n    List&lt;Map&lt;String,Object&gt;&gt; isInRoom(@Param(&quot;uId&quot;) Integer uId);\n\n    List&lt;WxUser&gt; getAllWxUser();\n\n//    \u6839\u636euid\u6216openid\u83b7\u53d6\u7528\u6237\u4fe1\u606f,\u6b64\u65b9\u6cd51\u4e3a\u901a\u8fc7uid\u67e5\u8be2\uff0c2\u4e3a\u901a\u8fc7openid\u67e5\u8be2\n    WxUser getUserByUidOrOpenid(WxUser wxUser);\n\n//    \u63d2\u5165\u5fae\u4fe1\u7528\u6237\n    boolean insertWxUser(WxUser wxUser);\n\n\n    List&lt;WxUser&gt; getWxUserList();\n\n    int getOnlineUser(Integer rid);\n\n    boolean updateWxUser(Integer rid, Integer uId);\n}\n\n3.pojo\u5305\nlog.java\npackage com.pojo;\n\nimport java.util.Date;\n\n/**\n * @ClassName: Log\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  20:43\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n\npublic class Log {\n\n/*    -- \u65e5\u5fd7\u8868\n    create table log(\n            lId int primary key,\n            uId int not null,\n            rId int not null,\n            state int not null,\n            lDate date not null\n    );*/\n\n    private Integer lId;\n    private Integer uId;\n    private Integer rId;\n//    1\u4e3a\u8fdb\uff0c0\u4e3a\u51fa\n    private Integer state;\n    private Date lDate;\n\n    public Integer getlId() {\n        return lId;\n    }\n\n    public void setlId(Integer lId) {\n        this.lId = lId;\n    }\n\n    public Integer getUid() {\n        return uId;\n    }\n\n    public void setUid(Integer uId) {\n        this.uId = uId;\n    }\n\n    public Integer getrId() {\n        return rId;\n    }\n\n    public void setrId(Integer rId) {\n        this.rId = rId;\n    }\n\n    public Integer getState() {\n        return state;\n    }\n\n    public void setState(Integer state) {\n        this.state = state;\n    }\n\n    public Date getlDate() {\n        return lDate;\n    }\n\n    public void setlDate(Date lDate) {\n        this.lDate = lDate;\n    }\n\n    public Log(Integer lId, Integer uId, Integer rId, Integer state, Date lDate) {\n        this.lId = lId;\n        this.uId = uId;\n        this.rId = rId;\n        this.state = state;\n        this.lDate = lDate;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;Log{&quot; +\n                &quot;lId=&quot; + lId +\n                &quot;, uId=&quot; + uId +\n                &quot;, rId=&quot; + rId +\n                &quot;, state=&quot; + state +\n                &quot;, lDate=&quot; + lDate +\n                &#39;}&#39;;\n    }\n}\n\nRealName.java\npackage com.pojo;\n\n/**\n * @ClassName: RealName\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  20:10\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic class RealName {\n/*    -- \u5b9e\u540d\u8868\n    create table realName(\n            uId int,\n            sId varchar(20) primary key,\n    password varchar(30) not null,\n    pNumber varchar(20) unique not null,\n    email varchar(30) unique not null\n\n            );*/\n\n    private Integer uId;\n    private String sId;\n    private String password;\n    private String pNumber;\n    private String email;\n\n    public Integer getuId() {\n        return uId;\n    }\n\n    public void setuId(Integer uId) {\n        this.uId = uId;\n    }\n\n    public String getsId() {\n        return sId;\n    }\n\n    public void setsId(String sId) {\n        this.sId = sId;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public String getpNumber() {\n        return pNumber;\n    }\n\n    public void setpNumber(String pNumber) {\n        this.pNumber = pNumber;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public RealName(Integer uId, String sId, String password, String pNumber, String email) {\n        this.uId = uId;\n        this.sId = sId;\n        this.password = password;\n        this.pNumber = pNumber;\n        this.email = email;\n    }\n\n    public RealName( String sId, String password, String email) {\n        this.sId = sId;\n        this.password = password;\n        this.email = email;\n    }\n\n    public RealName() {\n    }\n\n    @Override\n    public String toString() {\n        return &quot;RealName{&quot; +\n                &quot;uId=&quot; + uId +\n                &quot;, sId=&#39;&quot; + sId + &#39;\\&#39;&#39; +\n                &quot;, password=&#39;&quot; + password + &#39;\\&#39;&#39; +\n                &quot;, pNumber=&#39;&quot; + pNumber + &#39;\\&#39;&#39; +\n                &quot;, email=&#39;&quot; + email + &#39;\\&#39;&#39; +\n                &#39;}&#39;;\n    }\n}\n\nRoom.java\npackage com.pojo;\n\nimport java.util.List;\n\n/**\n * @ClassName: Room\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  20:12\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic class Room {\n\n/*    -- \u6559\u5ba4\u8868\n    create table room(\n            rId int primary key,\n            rName varchar(20) not null,\n    address varchar(50) not null\n            );*/\n\n    private Integer rId;\n    private String rName;\n    private String address;\n    private Integer del;\n\n    public Room() {\n\n    }\n\n    public Integer getrId() {\n        return rId;\n    }\n\n    public void setrId(Integer rId) {\n        this.rId = rId;\n    }\n\n    public String getrName() {\n        return rName;\n    }\n\n    public void setrName(String rName) {\n        this.rName = rName;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public Integer getDel() {\n        return del;\n    }\n\n    public void setDel(Integer del) {\n        this.del = del;\n    }\n\n   /* public List&lt;WxUser&gt; getWxUsers() {\n        return wxUser;\n    }\n\n    public void setWxUsers(List&lt;WxUser&gt; wxUsers) {\n        this.wxUser = wxUser;\n    }*/\n\n    public Room(Integer rId, String rName, String address, Integer del) {\n        this.rId = rId;\n        this.rName = rName;\n        this.address = address;\n        this.del = del;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;Room{&quot; +\n                &quot;rId=&quot; + rId +\n                &quot;, rName=&#39;&quot; + rName + &#39;\\&#39;&#39; +\n                &quot;, address=&#39;&quot; + address + &#39;\\&#39;&#39; +\n                &quot;, del=&quot; + del +\n                &quot;, &quot;;\n    }\n}\n\nRoomAdmin.java\npackage com.pojo;\n\nimport java.util.Date;\n\n/**\n * @ClassName: RoomAdmin\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  20:20\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic class RoomAdmin {\n    /*-- \u6559\u5ba4\u7ba1\u7406\u5458\u8868\n    create table roomAdmin(\n            rId int,\n            uId int,\n            aDate datetime,\n            del int\n    );*/\n\n    private Integer rId;\n    private Integer uId;\n    private Date aDate;\n    private Integer del;\n\n    public Integer getrId() {\n        return rId;\n    }\n\n    public void setrId(Integer rId) {\n        this.rId = rId;\n    }\n\n    public Integer getuId() {\n        return uId;\n    }\n\n    public void setuId(Integer uId) {\n        this.uId = uId;\n    }\n\n    public Date getaDate() {\n        return aDate;\n    }\n\n    public void setaDate(Date aDate) {\n        this.aDate = aDate;\n    }\n\n    public Integer getDel() {\n        return del;\n    }\n\n    public void setDel(Integer del) {\n        this.del = del;\n    }\n\n    public RoomAdmin(Integer rId, Integer uId, Date aDate, Integer del) {\n        this.rId = rId;\n        this.uId = uId;\n        this.aDate = aDate;\n        this.del = del;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;RoomAdmin{&quot; +\n                &quot;rId=&quot; + rId +\n                &quot;, uId=&quot; + uId +\n                &quot;, aDate=&quot; + aDate +\n                &quot;, del=&quot; + del +\n                &#39;}&#39;;\n    }\n}\n\nRoomNotice.java\npackage com.pojo;\n\nimport org.springframework.format.annotation.DateTimeFormat;\n\nimport java.util.Date;\n\n/**\n * @ClassName: RoomNotice\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/7  23:39\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic class RoomNotice {\n\n\n    private Integer rId;\n    private Integer uId;\n    private String notice;\n    @DateTimeFormat(pattern=&quot;yyyy-MM-dd&quot;)\n    private Date cDate;\n\n    public Integer getrId() {\n        return rId;\n    }\n\n    public void setrId(Integer rId) {\n        this.rId = rId;\n    }\n\n    public Integer getuId() {\n        return uId;\n    }\n\n    public void setuId(Integer uId) {\n        this.uId = uId;\n    }\n\n    public String getNotice() {\n        return notice;\n    }\n\n    public void setNotice(String notice) {\n        this.notice = notice;\n    }\n\n    public Date getcDate() {\n        return cDate;\n    }\n\n    public void setcDate(Date cDate) {\n        this.cDate = cDate;\n    }\n\n    public RoomNotice(Integer rId, Integer uId, String notice, Date cDate) {\n        this.rId = rId;\n        this.uId = uId;\n        this.notice = notice;\n        this.cDate = cDate;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;RoomAdmin{&quot; +\n                &quot;rId=&quot; + rId +\n                &quot;, uId=&quot; + uId +\n                &quot;, notice=&#39;&quot; + notice + &#39;\\&#39;&#39; +\n                &quot;, cDate=&quot; + cDate +\n                &#39;}&#39;;\n    }\n}\n\nTime.java\npackage com.pojo;\n\n/**\n * @ClassName: Time\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/8  22:26\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic class Time {\n    private Integer uId;\n    private Integer rId;\n    private Integer time;\n\n    public Integer getUid() {\n        return uId;\n    }\n\n    public void setUid(Integer uId) {\n        this.uId = uId;\n    }\n\n    public Integer getrId() {\n        return rId;\n    }\n\n    public void setrId(Integer rId) {\n        this.rId = rId;\n    }\n\n    public Integer getTime() {\n        return time;\n    }\n\n    public void setTime(Integer time) {\n        this.time = time;\n    }\n\n    public Time(Integer uId, Integer rId, Integer time) {\n        this.uId = uId;\n        this.rId = rId;\n        this.time = time;\n    }\n}\n\nWxUser.java\npackage com.pojo;\n\n/**\n * @ClassName: User\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  19:48\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic class WxUser {\n/*    *//*\u7528\u6237\u5fae\u4fe1\u8868*//*\n    create table wxUser(\n            uId int AUTO_INCREMENT primary key,\n            openId varchar(50) not null,\n    nickName varchar(20) ,\n    avatarUrl text,\n    activity int DEFAULT 0,\n    sSuper int DEFAULT 1\n            );*/\n\n\n    private Integer uId;\n    private String openId;\n    private String nickName;\n    private String avatarUrl;\n    private String rId;\n    private Integer sSuper;\n\n    public Integer getuId() {\n        return uId;\n    }\n\n    public void setuId(Integer uId) {\n        this.uId = uId;\n    }\n\n    public String getOpenId() {\n        return openId;\n    }\n\n    public void setOpenId(String openId) {\n        this.openId = openId;\n    }\n\n    public String getNickName() {\n        return nickName;\n    }\n\n    public void setNickName(String nickName) {\n        this.nickName = nickName;\n    }\n\n    public String getAvatarUrl() {\n        return avatarUrl;\n    }\n\n    public void setAvatarUrl(String avatarUrl) {\n        this.avatarUrl = avatarUrl;\n    }\n\n    public String getrId() {\n        return rId;\n    }\n\n    public void setrId(String rId) {\n        this.rId = rId;\n    }\n\n    public Integer getsSuper() {\n        return sSuper;\n    }\n\n    public void setsSuper(Integer sSuper) {\n        this.sSuper = sSuper;\n    }\n\n    public WxUser(String openId, String nickName, String avatarUrl) {\n        this.openId = openId;\n        this.nickName = nickName;\n        this.avatarUrl = avatarUrl;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;WxUser{&quot; +\n                &quot;uId=&quot; + uId +\n                &quot;, openId=&#39;&quot; + openId + &#39;\\&#39;&#39; +\n                &quot;, nickName=&#39;&quot; + nickName + &#39;\\&#39;&#39; +\n                &quot;, avatarUrl=&#39;&quot; + avatarUrl + &#39;\\&#39;&#39; +\n                &quot;, rId=&#39;&quot; + rId + &#39;\\&#39;&#39; +\n                &quot;, sSuper=&quot; + sSuper +\n                &#39;}&#39;;\n    }\n}\n\n4.service\nimpl\u4e0b\u7684impl\nLogServiceImpl.java\n/**\n * Copyright (C), 2015-2020, XXX\u6709\u9650\u516c\u53f8\n * FileName: LogServiceImpl\n * Author:   19399\n * Date:     2020/1/7 8:35\n * Description: 1\n * History:\n * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;\n * \u4f5c\u8005\u59d3\u540d           \u4fee\u6539\u65f6\u95f4           \u7248\u672c\u53f7              \u63cf\u8ff0\n */\npackage com.service.impl;\n\nimport com.mapper.LogMapper;\nimport com.pojo.Log;\nimport com.pojo.Time;\nimport com.service.LogService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * \u3008\u4e00\u53e5\u8bdd\u529f\u80fd\u7b80\u8ff0\u3009&lt;br&gt; \n * \u30081\u3009\n *\n * @author 19399\n * @create 2020/1/7\n * @since 1.0.0\n */\n@Service\npublic class LogServiceImpl implements LogService {\n\n    @Autowired\n    private LogMapper logMapper;\n\n\n    @Override\n    public Map&lt;String,Object&gt; getEntryTime(Integer uId, Integer rId) {\n        return logMapper.getEntryTime(uId,rId);\n    }\n\n    @Override\n    public boolean addLog(Integer uId, Integer rId, Integer state, String lDate) {\n        return logMapper.addLog(uId,rId,state,lDate);\n    }\n\n    @Override\n    public List&lt;Map&lt;String,Object&gt;&gt; getLog(Integer uId, Integer rId, Integer room) {\n        return logMapper.getLog(uId,rId,room);\n    }\n\n    @Override\n    //    \u6839\u636e\u6559\u5ba4rid\u83b7\u53d6\u6559\u5ba4\u8fdb\u51fa\n    public List&lt;Log&gt; getLogByRid(Integer rid){\n        return  logMapper.getLogByRid(rid);\n    }\n    @Override\n    //    \u83b7\u53d6\u6211\u53bb\u8fc7\u7684\u6559\u5ba4\u6839\u636euid\n    public List&lt;Integer&gt; getMyRoomByUid(Integer uid){\n        return  logMapper.getMyRoomByUid(uid);\n    }\n    @Override\n    //    \u6839\u636euid\u548crid\u83b7\u53d6\u6211\u5728\u67d0\u4e2a\u6559\u5ba4\u7684\u65e5\u5fd7\n    public List&lt;Log&gt; getMyRoomLog(Integer uid, Integer rid){\n        return  logMapper.getMyRoomLog(uid,rid);\n    }\n\n\n}\n\nRealNameServiceImpl.java\n/**\n * Copyright (C), 2015-2020, XXX\u6709\u9650\u516c\u53f8\n * FileName: RealNameImpl\n * Author:   19399\n * Date:     2020/1/7 8:36\n * Description: \u5b9e\u540d\n * History:\n * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;\n * \u4f5c\u8005\u59d3\u540d           \u4fee\u6539\u65f6\u95f4           \u7248\u672c\u53f7              \u63cf\u8ff0\n */\npackage com.service.impl;\n\nimport com.mapper.RealNameMapper;\nimport com.pojo.RealName;\nimport com.service.RealNameService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n/**\n * \u3008\u4e00\u53e5\u8bdd\u529f\u80fd\u7b80\u8ff0\u3009&lt;br&gt; \n * \u3008\u5b9e\u540d\u3009\n *\n * @author 19399\n * @create 2020/1/7\n * @since 1.0.0\n */\n@Service\npublic class RealNameServiceImpl implements RealNameService {\n    @Autowired\n    private RealNameMapper realNameMapper;\n\n    @Override\n    public RealName getBySidAndPwd(RealName realName){\n        return  realNameMapper.getBySidAndPwd(realName);\n    }\n\n    @Override\n    public boolean tieUid(String uId,String sId){\n        return  realNameMapper.tieUid(uId,sId);\n    }\n\n    @Override\n    public RealName getByUid(String uId){\n        return realNameMapper.getByUid(uId);\n    }\n\n}\n\nRoomAdminServiceImpl.java\npackage com.service.impl;\n\nimport com.mapper.RoomAdminMapper;\nimport com.pojo.RoomAdmin;\nimport com.service.RoomAdminService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n/**\n * @ClassName: RoomAdminServiceImpl\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/8  0:04\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@Service\npublic class RoomAdminServiceImpl implements RoomAdminService {\n    @Autowired\n    RoomAdminMapper roomAdminMapper;\n\n    @Override\n    public List&lt;RoomAdmin&gt; getRoomAdminList(RoomAdmin roomAdmin) {\n        return roomAdminMapper.getRoomAdminList(roomAdmin);\n    }\n\n    @Override\n    public boolean addRoomAdmin(RoomAdmin roomAdmin) {\n        return roomAdminMapper.addRoomAdmin(roomAdmin);\n    }\n\n    @Override\n    public boolean deleteRoomById(Integer rId, Integer uId) {\n        return roomAdminMapper.deleteRoomById(rId,uId);\n    }\n\n    @Override\n    public List&lt;RoomAdmin&gt; getRoomAdminListByRId(Integer rId) {\n        return roomAdminMapper.getRoomAdminListByRId(rId);\n    }\n\n    @Override\n    public List&lt;RoomAdmin&gt; getRoomAdminListByUId(Integer uId) {\n        return roomAdminMapper.getRoomAdminListByUId(uId);\n    }\n\n}\n\nRoomNoticeServiceImpl.java\n/**\n * Copyright (C), 2015-2020, XXX\u6709\u9650\u516c\u53f8\n * FileName: RoomAdminImpl\n * Author:   19399\n * Date:     2020/1/7 8:37\n * Description: \u623f\u95f4\u7ba1\u7406\n * History:\n * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;\n * \u4f5c\u8005\u59d3\u540d           \u4fee\u6539\u65f6\u95f4           \u7248\u672c\u53f7              \u63cf\u8ff0\n */\npackage com.service.impl;\n\nimport com.mapper.RoomNoticeMapper;\nimport com.pojo.RoomNotice;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.pojo.RoomAdmin;\nimport com.service.RoomNoticeService;\n\nimport java.util.Date;\nimport java.util.List;\n\n/**\n * \u3008\u901a\u8fc7rid\u6216uid\u67e5\u8be2\u6559\u5ba4\u516c\u544a\u4fe1\u606f\u3009&lt;br&gt;\n * \u3008\u623f\u95f4\u7ba1\u7406\u3009\n *\n * @author \u4f73\u6d9b\n * @create 2020/1/9\n * @since 1.2.0\n */\n@Service\npublic class RoomNoticeServiceImpl implements RoomNoticeService {\n\n    @Autowired\n    RoomNoticeMapper roomNoticeMapper;\n    //Service\u7684Mapper\u8c03\u7528\n    @Override\n    public List&lt;RoomNotice&gt; getRoomNoticeByRid(Integer rid) {\n\n        return roomNoticeMapper.getRoomNoticeByRid(rid);\n    }\n\n    @Override\n    public List&lt;RoomNotice&gt; getRoomNoticeByUid(Integer uid) {\n\n        return roomNoticeMapper.getRoomNoticeByUid(uid);\n    }\n\n    @Override\n    public List&lt;RoomNotice&gt; getAllRoomNotice() {\n\n        return roomNoticeMapper.getAllRoomNotice();\n    }\n\n    @Override\n    public boolean insertRoomNotice(RoomNotice bean) {\n        return roomNoticeMapper.insertRoomNotice(bean);\n    }\n\n    @Override\n    public boolean updateRoomNotice(Integer rid, Integer uid, String notice, Date cDate) {\n        return roomNoticeMapper.updateRoomNotice(rid,  uid, notice, cDate);\n    }\n}\n\nRoomServiceImpl.java\n/**\n * Copyright (C), 2015-2020, XXX\u6709\u9650\u516c\u53f8\n * FileName: RoomImpl\n * Author:   19399\n * Date:     2020/1/7 8:37\n * Description: \u6559\u5ba4\n * History:\n * &lt;author&gt;          &lt;time&gt;          &lt;version&gt;          &lt;desc&gt;\n * \u4f5c\u8005\u59d3\u540d           \u4fee\u6539\u65f6\u95f4           \u7248\u672c\u53f7              \u63cf\u8ff0\n */\npackage com.service.impl;\n\nimport com.mapper.RoomMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.pojo.Room;\nimport com.service.RoomService;\n\nimport java.util.List;\n\n/**\n * \u3008\u4e00\u53e5\u8bdd\u529f\u80fd\u7b80\u8ff0\u3009&lt;br&gt; \n * \u3008\u6559\u5ba4\u3009\n *\n * @author 19399\n * @create 2020/1/7\n * @since 1.0.0\n */\n@Service\npublic class RoomServiceImpl implements RoomService {\n\n    @Autowired\n    RoomMapper roomMapper;\n    @Override\n    public List&lt;Room&gt; getRoomList(Room room) {\n        return roomMapper.getRoomList(room);\n    }\n\n    @Override\n    public Room getRoomById(Integer rId) {\n        return roomMapper.getRoomById(rId);\n    }\n\n    @Override\n    public boolean addRoom(Room room) {\n        return roomMapper.addRoom(room);\n    }\n\n\n    @Override\n    public boolean deleteRoom(Integer rId) {\n        return roomMapper.deleteRoom(rId);\n    }\n\n    @Override\n    public boolean updateRoom(Room room) {\n        return roomMapper.updateRoom(room);\n    }\n\n    @Override\n    public List&lt;Room&gt; selectRoomById(Integer rId) {\n        return roomMapper.selectRoomById(rId);\n    }\n\n}\n\nTimeServiceImpl.java\npackage com.service.impl;\n\nimport com.mapper.RoomNoticeMapper;\nimport com.mapper.TimeMapper;\nimport com.pojo.RoomNotice;\nimport com.pojo.Time;\nimport com.service.RoomNoticeService;\nimport com.service.TimeService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: TimeServiceImpl\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/8  22:29\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@Service\npublic class TimeServiceImpl implements TimeService {\n    @Autowired\n    TimeMapper timeMapper;\n    //Service\u7684Mapper\u8c03\u7528\n\n    @Override\n    public List&lt;Time&gt; getTimeByUid(Integer uid) {\n\n        return timeMapper.getTimeByUid(uid);\n    }\n\n    @Override\n    public List&lt;Time&gt; getTime() {\n        return timeMapper.getTime();\n    }\n\n    @Override\n    public Time getAllTimeByUid(Integer uid) {\n\n        return timeMapper.getAllTimeByUid(uid);\n    }\n\n    @Override\n    public List&lt;Time&gt; getAllTime() {\n        return timeMapper.getAllTime();\n    }\n\n\n}\n\nWxUserServiceImpl.java\npackage com.service.impl;\n\nimport com.mapper.WxUserMapper;\nimport com.pojo.WxUser;\nimport com.service.WxUserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: WxUserServiceImpl\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  21:40\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\n@Service\npublic class WxUserServiceImpl implements WxUserService {\n\n    @Autowired\n    private WxUserMapper wxUserMapper;\n\n\n    @Override\n    public Integer getOnlineRoom(Integer uId) {\n        return wxUserMapper.getOnlineRoom(uId);\n    }\n\n    @Override\n    public List&lt;Map&lt;String, Object&gt;&gt; isInRoom(Integer uId) {\n        return wxUserMapper.isInRoom(uId);\n    }\n\n    @Override\n    public boolean updateRoom(Integer uId, Integer rId) {\n        return wxUserMapper.updateRoom(uId,rId);\n    }\n\n    @Override\n    public List&lt;WxUser&gt; getAllWxUser() {\n        return wxUserMapper.getAllWxUser();\n    }\n\n\n    @Override\n    public WxUser getUserByUidOrOpenid(WxUser wxUser){\n        return wxUserMapper.getUserByUidOrOpenid(wxUser);\n    }\n\n    @Override\n    public boolean insertWxUser(WxUser wxUser) {\n        return wxUserMapper.insertWxUser(wxUser);\n    }\n\n\n    @Override\n    public List&lt;WxUser&gt; getWxUserList() {\n        return wxUserMapper.getWxUserList();\n    }\n\n    @Override\n    public int getOnlineUser(int rid) {\n        return wxUserMapper.getOnlineUser(rid);\n    }\n\n    @Override\n    public boolean updateWxUser(Integer rid, Integer uId) {\n        return wxUserMapper.updateWxUser(rid,uId);\n    }\n}\n\nservice'\u7c7b\u4ee3\u7801\nLogService.java\npackage com.service;\n\nimport com.pojo.Log;\nimport com.pojo.Time;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\n\npublic interface LogService {\n\n    Map&lt;String,Object&gt; getEntryTime(Integer uId, Integer rId);\n    boolean addLog(Integer uId, Integer rId, Integer state, String lDate);\n    List&lt;Map&lt;String,Object&gt;&gt; getLog(Integer uId, Integer rId, Integer room);\n    //    \u6839\u636e\u6559\u5ba4rid\u83b7\u53d6\u6559\u5ba4\u8fdb\u51fa\n    List&lt;Log&gt; getLogByRid(Integer rid);\n    //    \u83b7\u53d6\u6211\u53bb\u8fc7\u7684\u6559\u5ba4\u6839\u636euid\n    List&lt;Integer&gt; getMyRoomByUid(Integer uid);\n    //    \u6839\u636euid\u548crid\u83b7\u53d6\u6211\u5728\u67d0\u4e2a\u6559\u5ba4\u7684\u65e5\u5fd7\n    List&lt;Log&gt; getMyRoomLog(Integer uid, Integer rid);\n}\n\nRealNameService.java\npackage com.service;\n\nimport com.pojo.RealName;\n\n\npublic interface RealNameService {\n    RealName getBySidAndPwd(RealName realName);\n    boolean tieUid(String uId, String sId);\n    RealName getByUid(String uId);\n}\n\nRoomAdminService.java\npackage com.service;\n\nimport com.pojo.RoomAdmin;\n\nimport java.util.List;\n\n/**\n * @ClassName: RoomAdminService\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/7  23:52\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic interface RoomAdminService {\n    List&lt;RoomAdmin&gt; getRoomAdminList(RoomAdmin roomAdmin);\n\n    boolean addRoomAdmin(RoomAdmin roomAdmin);//\u6dfb\u52a0\u7ba1\u7406\u5458\n\n    boolean deleteRoomById(Integer rId,Integer uId);//\u5220\u9664\n\n    List&lt;RoomAdmin&gt; getRoomAdminListByRId(Integer rId);\n\n    List&lt;RoomAdmin&gt; getRoomAdminListByUId(Integer uId);\n}\n\nRoomNoticeService.java\npackage com.service;\n\n\nimport com.pojo.RoomNotice;\n\nimport java.util.Date;\nimport java.util.List;\n\npublic interface RoomNoticeService {\n    //    \u6839\u636e\u6559\u5ba4rid\u83b7\u53d6\u6559\u5ba4\u516c\u5171\u7b49\u4fe1\u606f\n    List&lt;RoomNotice&gt; getRoomNoticeByRid(Integer rid);\n\n    //    \u83b7\u53d6\u7528\u6237uid\u83b7\u53d6\u7528\u6237\u53d1\u5e03\u8fc7\u7684\u8bfe\u5ba4\u516c\u544a\n    List&lt;RoomNotice&gt; getRoomNoticeByUid(Integer uid);\n\n    //   \u67e5\u8be2\u6240\u6709\u6559\u5ba4\u516c\u544a\u7684\u4fe1\u606f\n    List&lt;RoomNotice&gt; getAllRoomNotice();\n\n    //   \u63d2\u5165\u4e00\u6761\u65b0\u7684\u516c\u544a\uff0c\u4ece\u9875\u9762\u83b7\u53d6\u53c2\u6570\n    boolean insertRoomNotice(RoomNotice bean);\n\n    //   \u66f4\u65b0\u4e00\u6761\u8bfe\u5ba4\u516c\u544a\uff0c\u4ece\u9875\u9762\u83b7\u53d6\u53c2\u6570\n    boolean updateRoomNotice(Integer rid, Integer uid, String notice, Date cDate);\n}\n\nRoomService.java\npackage com.service;\n\nimport com.mapper.RoomMapper;\nimport com.pojo.Room;\n\nimport java.util.List;\n\npublic interface RoomService {\n    List&lt;Room&gt; getRoomList(Room room);\n\n    /**\n     * \u6839\u636eId\u83b7\u53d6\u4f9b\u5e94\u5546\n     *\n     * @param rId\n     * @return\n     */\n    Room getRoomById(Integer rId);\n\n    /**\n     * \u589e\u52a0\n     *\n     * @param room\n     */\n    boolean addRoom(Room room);\n\n    /**\n     * \u5220\u9664\u4f9b\u5e94\u5546\n     */\n    boolean deleteRoom(Integer rId);\n\n    /**\n     * \u7f16\u8f91\u4f9b\u5e94\u5546\n     *\n     * @param room\n     */\n    boolean updateRoom(Room room);\n    //\u591a\u5bf9\u591a\u67e5\u8be2\n    List&lt;Room&gt; selectRoomById(Integer rId);\n}\n\nTimeService.java\npackage com.service;\n\n\nimport com.pojo.Time;\n\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @ClassName: TimeService\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/8  22:29\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic interface TimeService {\n\n    //  \u67e5\u8be2\u6240\u6709\u6d3b\u8dc3\u5ea6\n    List&lt;Time&gt; getTime();\n\n    //    \u6839\u636euid\u67e5\u8be2\u6240\u6709\u623f\u95f4\u6d3b\u8dc3\u5ea6\n    List&lt;Time&gt; getTimeByUid(Integer uid);\n\n    //  \u5bf9\u7d2f\u8ba1\u6d3b\u8dc3\u5ea6\u8fdb\u884c\u964d\u5e8f\u6392\u884c-\n    List&lt;Time&gt; getAllTime();\n\n    //    \u6839\u636euid\u7edf\u8ba1\u7d2f\u8ba1\u6d3b\u8dc3\u5ea6\n    Time getAllTimeByUid(Integer uid);\n}\n\nWxUserService.java\npackage com.service;\n\nimport com.pojo.WxUser;\n\nimport java.util.List;\n\n/**\n * @ClassName: WxUserService\n * @Description: TODO\n * @author: \u9648\u9f99\n * @date: 2020/1/5  21:28\n * \u201c\u6b22\u8fce\u60a8\uff0c\u6211\u7684\u65e0\u4e0a\u81f3\u5c0a\u201d\n */\npublic interface WxUserService {\n    List&lt;WxUser&gt; getAllWxUser();\n    List&lt;WxUser&gt; getWxUserList();\n    int getOnlineUser(int rid);\n    boolean updateWxUser(Integer rid,Integer uId);\n}\n\n5.resource\u4e0b\u7684com.mapper\u7684xml\nLogMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.mapper.LogMapper&quot;&gt;\n    &lt;select id=&quot;getLogByRid&quot; resultType=&quot;log&quot; &gt;\n        select * from log where rid=#{rid} order by lDate desc\n&lt;!--        &lt;if test=&quot;rid != null&quot;&gt;--&gt;\n&lt;!--            where rid=#{rid}--&gt;\n&lt;!--        &lt;/if&gt;--&gt;\n&lt;!--        order by lDate desc--&gt;\n    &lt;/select&gt;\n&lt;!--    &lt;select id=&quot;getMyRoomByUid&quot; &gt;--&gt;\n&lt;!--       select rid from log where uid=#{uid} group by rid--&gt;\n&lt;!--    &lt;/select&gt;--&gt;\n    &lt;select id=&quot;getMyRoomLog&quot; &gt;\n       select * from log where uid=#{uid} and rid=#{rid} order by lDate desc\n    &lt;/select&gt;\n\n    &lt;resultMap id=&quot;logDetail&quot; type=&quot;map&quot;&gt;\n        &lt;id column=&quot;lId&quot; property=&quot;lId&quot;&gt;&lt;/id&gt;\n        &lt;result column=&quot;rId&quot; property=&quot;rId&quot;/&gt;\n        &lt;result column=&quot;uId&quot; property=&quot;uId&quot;/&gt;\n        &lt;result column=&quot;state&quot; property=&quot;state&quot;/&gt;\n        &lt;result column=&quot;lDate&quot; property=&quot;lDate&quot;/&gt;\n        &lt;result column=&quot;rName&quot; property=&quot;rName&quot;/&gt;\n        &lt;result column=&quot;address&quot; property=&quot;address&quot;/&gt;\n        &lt;result column=&quot;del&quot; property=&quot;del&quot;/&gt;\n        &lt;result column=&quot;nickName&quot; property=&quot;nickName&quot;/&gt;\n        &lt;result column=&quot;avatarUrl&quot; property=&quot;avatarUrl&quot;/&gt;\n    &lt;/resultMap&gt;\n    &lt;select id=&quot;getLog&quot; resultMap=&quot;logDetail&quot;&gt;\n        select w.avatarUrl,w.nickName,l.*,r.rName,r.address,r.del from wxUser w,log l,room r where l.rId = r.rId and w.uId = l.uId\n        &lt;choose&gt;\n            &lt;!--    \u67d0\u4eba\u5728\u67d0\u95f4\u6559\u5ba4\u65e5\u5fd7 --&gt;\n            &lt;when test=&quot;uId != null and rId != null&quot;&gt;\n                and   l.uId = #{uId} and l.rId = #{rId}\n            &lt;/when&gt;\n            &lt;!--    \u67e5\u627e\u5168\u90e8\u65e5\u5fd7 --&gt;\n            &lt;when test=&quot;uId == null and rId == null&quot;&gt;\n                and  1\n            &lt;/when&gt;\n&lt;!--    \u67e5\u627e\u67d0\u4e2a\u4eba\u6240\u6709\u65e5\u5fd7 --&gt;\n            &lt;when test=&quot;uId != null and room==null&quot;&gt;\n                and  l.uId = #{uId}\n            &lt;/when&gt;\n&lt;!--    \u67e5\u627e\u67d0\u4e2a\u4eba\u53bb\u8fc7\u7684\u6559\u5ba4\uff0c\u7528group by\u53bb\u91cd\u6559\u5ba4 --&gt;\n            &lt;when test=&quot;uId != null and room!=null&quot;&gt;\n                and   l.uId = #{uId} group by l.rId\n            &lt;/when&gt;\n&lt;!--    \u67e5\u627e\u67d0\u95f4\u6559\u5ba4\u7684\u6240\u6709\u65e5\u5fd7 --&gt;\n\n            &lt;when test=&quot;rId != null and room==null&quot;&gt;\n                and  l.rId = #{rId}\n            &lt;/when&gt;\n            &lt;otherwise&gt;\n\n            &lt;/otherwise&gt;\n        &lt;/choose&gt;\n\n    &lt;/select&gt;\n\n    &lt;insert id=&quot;addLog&quot;&gt;\n        INSERT into log(uId,rId,state,lDate) VALUE (#{uId},#{rId},#{state},#{lDate});\n    &lt;/insert&gt;\n\n    &lt;resultMap id=&quot;EntryTime&quot; type=&quot;map&quot;&gt;\n        &lt;id column=&quot;lId&quot; property=&quot;lId&quot;&gt;&lt;/id&gt;\n        &lt;result column=&quot;max(lDate)&quot; property=&quot;lDate&quot;/&gt;\n    &lt;/resultMap&gt;\n\n    &lt;select id=&quot;getEntryTime&quot; resultMap=&quot;EntryTime&quot;&gt;\n        select lId,max(lDate) from log where uId=#{uId} and rId=#{rId} and state = 1\n    &lt;/select&gt;\n\n\n&lt;/mapper&gt;\n\nRealNameMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n        &lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n\n&lt;mapper namespace=&quot;com.mapper.RealNameMapper&quot;&gt;\n        &lt;select id=&quot;getBySidAndPwd&quot; resultType=&quot;RealName&quot; &gt;\n                select * from realName where sId=#{sId} and password =#{password}\n        &lt;/select&gt;\n\n        &lt;update id=&quot;tieUid&quot;&gt;\n                update realName set uId = #{uId} where sId = #{sId}\n        &lt;/update&gt;\n\n        &lt;select id=&quot;getByUid&quot; resultType=&quot;RealName&quot; &gt;\n                select * from realName where uId=#{uId}\n        &lt;/select&gt;\n&lt;/mapper&gt;\n\nRoomAdminMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.mapper.RoomAdminMapper&quot;&gt;\n    &lt;resultMap type=&quot;com.pojo.RoomAdmin&quot; id=&quot;resultRoomAdminList&quot;&gt;\n        &lt;result column=&quot;rId&quot; property=&quot;rId&quot;/&gt;\n        &lt;result column=&quot;uId&quot; property=&quot;uId&quot;&gt;&lt;/result&gt;\n        &lt;result column=&quot;aDate&quot; property=&quot;aDate&quot;/&gt;\n        &lt;result column=&quot;del&quot; property=&quot;del&quot;/&gt;\n    &lt;/resultMap&gt;\n    &lt;select id=&quot;getRoomAdminList&quot; resultMap=&quot;resultRoomAdminList&quot;&gt;\n        select * from RoomAdmin\n    &lt;/select&gt;\n    &lt;select id=&quot;getRoomAdminListByRId&quot; resultMap=&quot;resultRoomAdminList&quot;&gt;\nselect * from RoomAdmin where rId=#{rId}\n    &lt;/select&gt;\n    &lt;select id=&quot;getRoomAdminListByUId&quot; resultMap=&quot;resultRoomAdminList&quot;&gt;\nselect * from RoomAdmin where uId=#{uId}\n    &lt;/select&gt;\n    &lt;insert id=&quot;addRoomAdmin&quot;&gt;\ninsert into RoomAdmin\n        &lt;trim prefix=&quot;(&quot; suffix=&quot;)&quot; suffixOverrides=&quot;,&quot;&gt;\n            &lt;if test=&quot;rId != null&quot;&gt;\n                rId,\n            &lt;/if&gt;\n            &lt;if test=&quot;uId != null&quot;&gt;\n                uId,\n            &lt;/if&gt;\n            &lt;if test=&quot;aDate != null&quot;&gt;\n                aDate,\n            &lt;/if&gt;\n            &lt;if test=&quot;del != null&quot;&gt;\n                del,\n            &lt;/if&gt;\n        &lt;/trim&gt;\n        values\n        &lt;trim prefix=&quot;(&quot; suffix=&quot;)&quot; suffixOverrides=&quot;,&quot;&gt;\n            &lt;if test=&quot;rId != null&quot;&gt;\n                #{rId},\n            &lt;/if&gt;\n            &lt;if test=&quot;uId != null&quot;&gt;\n                #{uId},\n            &lt;/if&gt;\n            &lt;if test=&quot;aDate != null&quot;&gt;\n                #{aDate},\n            &lt;/if&gt;\n            &lt;if test=&quot;del != null&quot;&gt;\n                #{del},\n            &lt;/if&gt;\n        &lt;/trim&gt;\n    &lt;/insert&gt;\n    &lt;delete id=&quot;deleteRoomById&quot;&gt;\ndelete from RoomAdmin where rId=#{rId} and uId=#{uId}\n    &lt;/delete&gt;\n\n&lt;/mapper&gt;\n\nRoomMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.mapper.RoomMapper&quot;&gt;\n&lt;!--    &lt;resultMap type=&quot;com.pojo.Room&quot; id=&quot;resultRoomList&quot;&gt;--&gt;\n&lt;!--        &lt;result column=&quot;rId&quot; property=&quot;rId&quot;&gt;&lt;/result&gt;--&gt;\n&lt;!--        &lt;result column=&quot;rName&quot; property=&quot;rName&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;address&quot; property=&quot;address&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;del&quot; property=&quot;del&quot;/&gt;--&gt;\n&lt;!--    &lt;/resultMap&gt;--&gt;\n    &lt;select id=&quot;getRoomList&quot; resultType=&quot;Room&quot;&gt;\n        select * from room\n        &lt;if test=&quot;rId!=null&quot;&gt;\n            where rId=#{rId}\n        &lt;/if&gt;\n\n        &lt;if test=&quot;rId==null&quot;&gt;\n            where del = 1\n        &lt;/if&gt;\n    &lt;/select&gt;\n\n   &lt;!-- &lt;select id=&quot;getRoomById&quot; resultType=&quot;Room&quot;&gt;\n        select * from room where rId=#{rId}\n    &lt;/select&gt;\n    &lt;insert id=&quot;addRoom&quot;&gt;\n        insert into room values (#{rId},#{rName},#{address},#{del})\n    &lt;/insert&gt;\n    &lt;delete id=&quot;deleteRoom&quot;&gt;\n        delete from room where rId=#{rId}\n    &lt;/delete&gt;\n    &lt;update id=&quot;updateRoom&quot;&gt;\n        update room set rName=#{rName},address=#{address},del=#{del} where rId=#{rId}\n    &lt;/update&gt;\n    &lt;resultMap id=&quot;detailRoom&quot; type=&quot;Room&quot;&gt;&amp;lt;!&amp;ndash;\u4e00\u5bf9\u591a\u5173\u8054\u67e5\u8be2  &amp;ndash;&amp;gt;\n        &lt;id property=&quot;rId&quot; column=&quot;rId&quot;/&gt;\n        &lt;result property=&quot;rName&quot; column=&quot;rName&quot;/&gt;\n        &lt;result property=&quot;address&quot; column=&quot;address&quot;/&gt;\n        &lt;result property=&quot;del&quot; column=&quot;del&quot;/&gt;\n        &lt;collection property=&quot;wxUser&quot;  ofType=&quot;WxUser&quot;&gt;\n            &lt;id column=&quot;uId&quot; property=&quot;uId&quot;/&gt;\n            &lt;result column=&quot;openId&quot; property=&quot;openId&quot;/&gt;\n            &lt;result column=&quot;nickName&quot; property=&quot;nickName&quot;/&gt;\n            &lt;result column=&quot;avatrUrl&quot; property=&quot;avatrUrl&quot;/&gt;\n            &lt;result column=&quot;activity&quot; property=&quot;activity&quot;/&gt;\n            &lt;result column=&quot;sSuper&quot; property=&quot;sSuper&quot;/&gt;\n        &lt;/collection&gt;\n    &lt;/resultMap&gt;\n    &lt;select id=&quot;selectRoomById&quot; resultMap=&quot;detailRoom&quot;&gt;\nselect a.rId,rName,address,c.uId,nickName,sSuper\nfrom room a,roomadmin b,wxuser c\nwhere b.rId=a.rId and c.uId=b.uId and a.rId=#{rId}\n&lt;/select&gt;--&gt;\n&lt;/mapper&gt;\n\nRoomNoticeMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.mapper.RoomNoticeMapper&quot;&gt;\n    &lt;select id=&quot;getRoomNoticeByRid&quot; resultType=&quot;RoomNotice&quot;&gt;\n        select * from roomnotice where rId=#{rid}\n    &lt;/select&gt;\n    &lt;select id=&quot;getRoomNoticeByUid&quot; resultType=&quot;RoomNotice&quot;&gt;\n        select * from roomnotice where uId=#{uid}\n    &lt;/select&gt;\n    &lt;select id=&quot;getAllRoomNotice&quot; resultType=&quot;RoomNotice&quot;&gt;\n        select * from roomnotice\n    &lt;/select&gt;\n\n    &lt;insert id=&quot;insertRoomNotice&quot;&gt;\n        insert into roomnotice values(#{rId},#{uId},#{notice},#{cDate})\n    &lt;/insert&gt;\n\n    &lt;update id=&quot;updateRoomNotice&quot;&gt;\n       update roomnotice set notice=#{notice},cDate=#{cDate},uId = #{uId} where rId=#{rId}\n    &lt;/update&gt;\n\n    &lt;delete id=&quot;deleteRoomNotice&quot;&gt;\n        delete from roomnotice where cDate=#{cdate}\n    &lt;/delete&gt;\n\n&lt;/mapper&gt;\n\nTimeMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n        &lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.mapper.TimeMapper&quot;&gt;\n&lt;!--\u67e5\u8be2\u6240\u6709\u6d3b\u8dc3\u5ea6--&gt;\n&lt;select id=&quot;getTime&quot; resultType=&quot;Time&quot;&gt;\n        select * from time\n    &lt;/select&gt;\n&lt;!--\u901a\u8fc7uid\uff0c\u67e5\u627e\u7528\u6237\u7684\u6240\u6709\u623f\u95f4\u7684\u6d3b\u8dc3\u5ea6--&gt;\n&lt;select id=&quot;getTimeByUid&quot; resultType=&quot;Time&quot;&gt;\n        select * from time where uId = #{uid}\n    &lt;/select&gt;\n&lt;!--\u67e5\u8be2\u6240\u6709\u7528\u6237\u53bb\u8fc7\u7684\u623f\u95f4\u7684\u7d2f\u8ba1\u6d3b\u8dc3\u5ea6,\u964d\u5e8f\u6392\u884c\u8f93\u51fa,rid\u5c5e\u6027\u53ef\u5ffd\u7565--&gt;\n&lt;select id=&quot;getAllTime&quot; resultType=&quot;Time&quot;&gt;\n       select uId,rId,sum(time) from time group BY uId\n &lt;/select&gt;\n&lt;!--\u901a\u8fc7uid\uff0c\u7edf\u8ba1\u6240\u6709\u623f\u95f4\u7684\u6d3b\u8dc3\u5ea6--&gt;\n&lt;select id=&quot;getAllTimeByUid&quot; resultType=&quot;Time&quot;&gt;\n       select uId,rId,sum(time) from time where uId = #{uid}\n&lt;/select&gt;\n&lt;/mapper&gt;\n\nWxUserMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.mapper.WxUserMapper&quot;&gt;\n\n    &lt;select id=&quot;getAllWxUser&quot; resultType=&quot;WxUser&quot;&gt;\n        select * from wxUser\n    &lt;/select&gt;\n\n\n    &lt;select id=&quot;getUserByUidOrOpenid&quot; resultType=&quot;WxUser&quot; parameterType=&quot;WxUser&quot;&gt;\n        select * from wxUser where\n        &lt;choose&gt;\n            &lt;when test=&quot;uId != null and openId == null&quot;&gt;\n                uId = #{uId}\n            &lt;/when&gt;\n            &lt;when test=&quot;openId!= null and uId == null&quot;&gt;\n                openId = #{openId}\n            &lt;/when&gt;\n            &lt;otherwise&gt;\n\n            &lt;/otherwise&gt;\n        &lt;/choose&gt;\n    &lt;/select&gt;\n\n\n    &lt;insert id=&quot;insertWxUser&quot;&gt;\n        INSERT into wxUser(openId,nickName,avatarUrl) value (\n        #{openId},#{nickName},#{avatarUrl}\n        )\n    &lt;/insert&gt;\n\n\n\n&lt;!--    &lt;resultMap id=&quot;theRoom&quot; type=&quot;map&quot;&gt;--&gt;\n&lt;!--        &lt;result column=&quot;rId&quot; property=&quot;rId&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;rName&quot; property=&quot;rName&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;address&quot; property=&quot;address&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;lId&quot; property=&quot;lId&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;uId&quot; property=&quot;uId&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;state&quot; property=&quot;state&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;lDate&quot; property=&quot;lDate&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;avatarUrl&quot; property=&quot;avatarUrl&quot;/&gt;--&gt;\n&lt;!--        &lt;result column=&quot;nickName&quot; property=&quot;nickName&quot;/&gt;--&gt;\n&lt;!--    &lt;/resultMap&gt;--&gt;\n&lt;!--    &lt;select id=&quot;isInRoom&quot; resultMap=&quot;theRoom&quot;&gt;--&gt;\n&lt;!--        select w.avatarurl,w.nickName ,r.*,l.* from wxUser w,room r,log l--&gt;\n&lt;!--        where w.uid=#{uId} and w.rid = r.rid and w.rid = l.rid--&gt;\n&lt;!--        order by lDate desc--&gt;\n&lt;!--    &lt;/select&gt;--&gt;\n\n\n\n    &lt;update id=&quot;updateRoom&quot;&gt;\n        update wxUser set\n        &lt;if test=&quot;rId==null&quot;&gt;\n            rId = null\n        &lt;/if&gt;\n        &lt;if test=&quot;rId!=null&quot;&gt;\n            rId = #{rId}\n        &lt;/if&gt;\n        where uId = #{uId}\n    &lt;/update&gt;\n\n    &lt;select id=&quot;getOnlineRoom&quot; resultType=&quot;int&quot;&gt;\n        select rId from wxUser where uId=#{uId}\n    &lt;/select&gt;\n\n\n    &lt;select id=&quot;getOnlineUser&quot; resultType=&quot;int&quot;&gt;\n        select count(*) from wxUser where rid=?\n    &lt;/select&gt;\n    &lt;update id=&quot;updateWxUser&quot; &gt;\n        update  wxUser set rid=? where uid=?\n    &lt;/update&gt;\n&lt;/mapper&gt;\n\n\u516b\u3001\u5c0f\u7a0b\u5e8f\u4ee3\u7801\n1.\u9996\u9875\u9875\u9762(\u7b2c\u4e00\u9875)\n\n&lt;view style=\"position: fixed;width: 100%;z-index: 100;\"&gt;\n    &lt;view class=\"bg-img bg-mask flex align-center\" style=\"background-image:url(https://ossweb-img.qq.com/../images/\u5927\u4e09\u4e0b\u5b9e\u8bad\u671f\u672b\u4f5c\u4e1a//lol/web201310/skin/big10006.jpg);height: 400upx;\"&gt;\n     &lt;view class=\"padding-xl text-white\"&gt;\n      &lt;view class=\" text-sl text-bold\"&gt;\n       {{roomLog[0].rName}}\n      &lt;/view&gt;\n      &lt;view class=\"padding-xs text-lg\"&gt;\n       \u5728\u7ebf\u4eba\u6570:20\u4eba\n      &lt;/view&gt;\n      &lt;button class=\"cu-btn lg green\" @click=\"exitRoom\"&gt;\n       &lt;view class=\"cuIcon-exit\"&gt;&lt;/view&gt;\n      &lt;/button&gt;\n     &lt;/view&gt;\n    &lt;/view&gt;\n   &lt;/view&gt;\n\n   &lt;view style=\"position: absolute;top: 400upx;;width: 100%;\"&gt;\n\n    &lt;view class=\"cu-timeline \" v-for=\"(item,index) in roomLog\" :key=\"index\"&gt;\n     &lt;view class=\"text-grey text-lg\"&gt;{{item.lDate | getYMD}}&lt;/view&gt;\n     &lt;view class=\"cu-item \" :class=\"item.state==1?'text-green':'text-blue'\"&gt;\n      &lt;view class=\"shadow-blur content\" :class=\"item.state==1?'bg-green':'bg-blue'\"&gt;\n       &lt;view class=\"cu-list menu-avatar radius\"&gt;\n        &lt;view class=\"cu-item\"&gt;\n         &lt;view class=\"cu-avatar radius lg\" :style=\"{backgroundImage:'url('+item.avatarUrl+')'}\"&gt;&lt;/view&gt;\n         &lt;view class=\"content\"&gt;\n          &lt;view&gt;\n           &lt;view class=\"text-bold text-xl text-black\"&gt;{{item.nickName}}&lt;/view&gt;\n           &lt;view class=\"cu-tag radius sm \" :class=\"item.state==1?'bg-green':'bg-blue'\"&gt;{{item.state==1?'\u8fdb':'\u51fa'}}&lt;/view&gt;\n          &lt;/view&gt;\n          &lt;view class=\"text-gray text-sm flex\"&gt;\n           &lt;view class=\"text-cut\"&gt; \u901a\u8fc7\u6307\u7eb9\u8fdb\u5165&lt;/view&gt;\n          &lt;/view&gt;\n\n         &lt;/view&gt;\n         &lt;view class=\"action\"&gt;\n          &lt;view class=\"text-grey text-lg\"&gt;{{item.lDate | getHm}}&lt;/view&gt;\n          &lt;view class=\"text-grey text-lg\"&gt;\u661f\u671f{{item.lDate | getDay}}&lt;/view&gt;\n         &lt;/view&gt;\n        &lt;/view&gt;\n\n       &lt;/view&gt;\n      &lt;/view&gt;\n     &lt;/view&gt;\n    &lt;/view&gt;\n   &lt;/view&gt;\n2.\u9996\u9875\u65b9\u6cd5\u8c03\u7528\nconst util = require(&#39;../../components/zwy/util/util.js&#39;);\n import clickCircle from &#39;../../components/zwy/clickCircle.vue&#39;;\n import moment from &#39;moment&#39;\n\n export default {\n  components: {\n   clickCircle\n  },\n  data() {\n   return {\n    roomLog: {},\n    userInfo: {},\n    isX: 999, //\u653e\u5728store\u7edf\u4e00\u7ba1\u7406\n    isY: 999, //\u653e\u5728store\u7edf\u4e00\u7ba1\u7406\n    toView: &#39;&#39;,\n    showPicker: true,\n    pickRoomList: [],\n    chooseRoom: &quot;&quot;,\n    MsgInfo: {}\n\n\n   }\n  },\n  onShow() {\n\n   console.log(moment().format(&#39;YYYY-MM-DD HH:mm:ss&#39;));\n   this.isLogin()\n\n   if (!this.userInfo.realNameInfo) {\n\n    uni.showModal({\n     title: &quot;\u8bf7\u5148\u5b9e\u540d&quot;,\n     showCancel: false,\n     success: function(res) {\n      if (res.confirm) {\n       console.log(&quot;\u786e\u5b9a\u4e86\u554a&quot;)\n       uni.switchTab({\n        url: &quot;/pages/profile/profile&quot;\n       })\n      }\n\n     }\n    })\n   } else {\n    this.getRoom()\n    this.getRoomList()\n   }\n  },\n  // \u8f6c\u5316\u6beb\u79d2\u65f6\u95f4\u6233\u4e3a\u65e5\u671f\u683c\u5f0f\n  filters: {\n   getYMD: function(value) {\n    return moment(value).format(&#39;YYYY-MM-DD&#39;)\n   },\n   getHm: function(value) {\n    return moment(value).format(&#39;HH:mm&#39;)\n   },\n   getDay: function(value) {\n    return moment(value).format(&#39;E&#39;)\n   },\n   getLength: function(value) {\n    return value.length\n   }\n  },\n  methods: {\n\n   conClick(e) {\n    this.$refs.clickCircle.conClick(e);\n   },\n   toTop() {\n    this.toView = &#39;&#39;\n    setTimeout(() =&gt; {\n     this.toView = &#39;top&#39; + this.currentTab\n    }, 10)\n   },\n   // \u5224\u65ad\u767b\u5f55\n   isLogin() {\n    this.userInfo = global.isLogin();\n    console.log(this.userInfo)\n    if (!this.userInfo) {\n     uni.showModal({\n      title: &quot;\u8bf7\u5148\u767b\u5f55&quot;,\n      showCancel: false,\n      success: function(res) {\n       if (res.confirm) {\n        console.log(&quot;\u786e\u5b9a\u4e86\u554a&quot;)\n        uni.switchTab({\n         url: &quot;/pages/profile/profile&quot;\n        })\n       }\n\n      }\n     })\n    }\n   },\n   getRoom() {\n    var that = this;\n    uni.request({\n     url: &quot;http://47.100.59.153:8080/attendance/home/home&quot;,\n     data: {\n      &quot;uId&quot;: that.userInfo.uId,\n      &quot;rId&quot;: &quot;&quot;,\n      &quot;state&quot;: &quot;&quot;,\n      &quot;lDate&quot;: &quot;&quot;\n     },\n     success(res) {\n      console.log(res.data)\n      that.\n\n3.\u767b\u9646\u62e6\u622a\u65b9\u6cd5\n\n&lt;template&gt;\n &lt;view class=\"container\" @click=\"conClick\"&gt;\n  &lt;clickCircle ref=\"clickCircle\"&gt;&lt;/clickCircle&gt;\n  &lt;cu-custom bgColor=\"bg-blue\"&gt;\n  &lt;/cu-custom&gt;\n  &lt;view&gt;&lt;/view&gt;\n  &lt;!-- &lt;home&gt;&lt;/home&gt; --&gt;\n  &lt;button @click=\"addGlobal\"&gt;\u503c\u4e3a{{this.wxUserInfo}}&lt;/button&gt;\n  &lt;navigator url=\"../home/home\"&gt;\u8df3\u8f6c&lt;/navigator&gt;\n\n  &lt;view class=\"cu-modal show\" v-if=\"!userInfo\"&gt;\n    &lt;view class=\"cu-dialog\"&gt;\n      &lt;/view&gt;\n   &lt;navigator url=\"../profile/profile\"&gt;\n      &lt;button class=\"cu-btn block bg-green lg shadow\" &gt;\u6e05\u5148\u767b\u5f55&lt;/button&gt;\n   &lt;/navigator&gt;\n    &lt;/view&gt;\n  &lt;/view&gt;\n\n\n &lt;/view&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n import clickCircle from '../../components/zwy/zwy-clickCircle.vue';\n import home from '../../pages/home/home.vue'\n export default {\n  components: {\n   clickCircle,\n   home\n  },\n  data() {\n   return {\n    userInfo:[]\n   };\n  },\n  onLoad() {\n   this.isLogin();\n   this.springTest();\n  },\n  methods: {\n   // \u5224\u65ad\u767b\u5f55\n   isLogin(){\n    var isLogin = global.isLogin();\n    console.log(isLogin)\n    if(!isLogin){\n     uni.showModal({\n      title:\"\u672a\u767b\u5f55\",\n      success:function(){\n       uni.navigateTo({\n        url:\"/pages/profile/profile\"\n       })\n      }\n     })\n    }this.userInfo=uni.getStorageSync(\"userInfo\")\n   },\n\n   // \u8c03\u7528springboot\u63a5\u53e3\u5b9e\u4f8b\n   springTest(){\n    uni.request({\n     url:\"http://localhost:8080/attendencyMiniprogram/log/getLogByRid/1\",\n     success(res){\n      console.log(res.data)\n     }\n    })\n   },\n\n   conClick(e) {\n    this.$refs.clickCircle.conClick(e);\n   },\n   addGlobal(){\n    console.log(this.wxUserInfo)\n    if(!this.wxUserInfo){\n     this.wxUserInfo=1\n    }\n\n    this.wxUserInfo++\n   }\n  }\n }\n&lt;/script&gt;\n4.\u65e5\u5fd7\u65b9\u6cd5\u8c03\u7528\n\n&lt;!-- \u6211\u7684\u6559\u5ba4\u8be6\u7ec6\u65e5\u5fd7 --&gt;\n  &lt;view class=\"cu-modal\" :class=\"modalName=='logDetail'?'show':''\"&gt;\n\n   &lt;view class=\"cu-dialog\"&gt;\n\n    &lt;view class=\"cu-bar bg-white justify-end\"&gt;\n     &lt;view class=\"content\"&gt;\u6211\u5728{{myRoomLog[0].rName}}\u7684\u65e5\u5fd7&lt;/view&gt;\n     &lt;view class=\"action\" @tap=\"hideModal\"&gt;\n      &lt;text class=\"cuIcon-roundclose text-red text-xxl\"&gt;&lt;/text&gt;\n     &lt;/view&gt;\n    &lt;/view&gt;\n\n    &lt;!-- \u6211\u7684\u6559\u5ba4\u8be6\u7ec6\u65e5\u5fd7 --&gt;\n    &lt;scroll-view style=\"height: 800upx;\" scroll-y=\"true\"&gt;\n     &lt;view v-for=\"(item,index) in myRoomLog\" :key=\"index\"&gt;\n      &lt;view class=\"cu-timeline padding-sm\"&gt;\n       &lt;view class=\"text-grey \"&gt;{{item.lDate | getYMD}}&lt;/view&gt;\n       &lt;view class=\"cu-item \" :class=\"item.state==1?'text-green':'text-blue'\"&gt;\n        &lt;view class=\"shadow-blur content\" :class=\"item.state==1?'bg-green':'bg-blue'\"&gt;\n         &lt;view class=\"cu-list menu-avatar radius\"&gt;\n          &lt;view class=\"cu-item\"&gt;\n           &lt;view class=\"cu-avatar lg radius \" :class=\"item.state==1?'bg-green':'bg-blue'\"&gt;{{item.state==1?'\u8fdb':'\u51fa'}}&lt;/view&gt;\n           &lt;view class=\"content\"&gt;\n            &lt;view class=\"cu-capsule radius\"&gt;\n             &lt;view class=\"cu-tag bg-red text-sm\"&gt;\n              &lt;text class=\"cuIcon-location\"&gt;&lt;/text&gt;\n             &lt;/view&gt;\n             &lt;view class=\"cu-tag line-red  text-sm\"&gt;{{item.rName}}&lt;/view&gt;\n            &lt;/view&gt;\n            &lt;view class=\"text-grey text-xs\"&gt;\u901a\u8fc7\u6307\u7eb9\u8fdb\u5165&lt;/view&gt;\n\n\n           &lt;/view&gt;\n           &lt;view class=\"action\"&gt;\n            &lt;view class=\"text-grey text-lg\"&gt;{{item.lDate | getHm}}&lt;/view&gt;\n            &lt;view class=\"text-grey text-lg\"&gt;\u661f\u671f{{item.lDate | getDay}}&lt;/view&gt;\n           &lt;/view&gt;\n          &lt;/view&gt;\n\n         &lt;/view&gt;\n        &lt;/view&gt;\n       &lt;/view&gt;\n      &lt;/view&gt;\n     &lt;/view&gt;\n\n     &lt;view class=\"text-gray card-menu padding-sm\"&gt;\u5171{{this.myRoomLog | getLength}}\u6761\u65e5\u5fd7&lt;/view&gt;\n    &lt;/scroll-view&gt;\n   &lt;/view&gt;\n\n  &lt;/view&gt;\n\n &lt;/view&gt;\n\n&lt;/template&gt;\n5.\u8c03\u7528\u540e\u53f0\u6570\u636e\u5b9e\u73b0\u83b7\u53d6\u8fdb\u51fa\u6559\u5ba4\u65e5\u5fd7\nonShow() {\n   this.isLogin()\n   if (this.userInfo &amp;&amp; this.userInfo.realNameInfo != null) {\n    this.getLog()\n   } else if (this.userInfo &amp;&amp; this.userInfo.realNameInfo == null) {\n    uni.showModal({\n     title: &quot;\u8bf7\u5148\u5b9e\u540d&quot;,\n     showCancel: false,\n     success: function(res) {\n      if (res.confirm) {\n       console.log(&quot;\u786e\u5b9a\u4e86\u554a&quot;)\n       uni.switchTab({\n        url: &quot;/pages/profile/profile&quot;\n       })\n      }\n\n     }\n    })\n   }\n\n  },\n  methods: {\n   conClick(e) {\n    this.$refs.clickCircle.conClick(e);\n   },\n   // \u5224\u65ad\u767b\u5f55\n   isLogin() {\n    this.userInfo = global.isLogin();\n    console.log(this.userInfo)\n    if (!this.userInfo) {\n     uni.showModal({\n      title: &quot;\u8bf7\u5148\u767b\u5f55&quot;,\n      showCancel: false,\n      success: function(res) {\n       if (res.confirm) {\n        console.log(&quot;\u786e\u5b9a\u4e86\u554a&quot;)\n        uni.switchTab({\n         url: &quot;/pages/profile/profile&quot;\n        })\n       }\n\n      }\n     })\n    }\n   },\n\n   getLog() {\n    var that = this;\n\n    uni.request({\n     url: &quot;http://47.100.59.153:8080/attendance/log/getLog&quot;,\n     data: {\n      &quot;uId&quot;: that.userInfo.uId,\n      &quot;rId&quot;: &quot;&quot;\n     },\n     success(res) {\n      console.log(res.data)\n      that.myLogList = res.data.logList\n      // for(let i = 0;i&lt;that.myLogList.length;i++){\n      //  that.myLogList[i].lDate = moment(res.data.logList[0].lDate).format(&#39;YYYY-MM-DD-dd HH:mm:ss&#39;)\n      // }    \n      that.roomList = res.data.roomList\n      that.list[0] = that.myLogList.reverse()\n      that.list[1] = that.roomList.reverse()\n      console.log(that.list)\n      uni.showToast({\n       title: &quot;\u83b7\u53d6\u65e5\u5fd7\u6210\u529f&quot;\n      })\n\n     }\n    })\n\n\n   },\n   // \u83b7\u53d6\u6211\u7684\u6559\u5ba4\u65e5\u5fd7\u8be6\u7ec6\u4fe1\u606f\n   getMyRoomDetail(rId) {\n    console.log(rId)\n    var that = this\n    if (that.userInfo.uId &amp;&amp; rId) {\n     uni.request({\n      url: &quot;http://47.100.59.153:8080/attendance/log/getLog&quot;,\n      data: {\n       &quot;uId&quot;: that.userInfo.uId,\n       &quot;rId&quot;: rId\n      },\n      success(res) {\n       console.log(res)\n       that.myRoomLog = res.data.logList.reverse()\n       uni.showToast({\n        title: &quot;\u83b7\u53d6\u6210\u529f&quot;\n       })\n\n      }\n     })\n    } else {\n     uni.showToast(\n\n6.\u767b\u9646\u6388\u6743\nexport default {\n  data() {\n   return {\n    userInfo:[]\n   }\n  },\n  methods: {\n   getuserinfo: function(res) {\n    if (!res.detail.iv) {\n     uni.showToast({\n      title: &quot;\u6c42\u6c42\u4f60\u6388\u6743\u5427&quot;\n     })\n     return false;\n    }\n    console.log(res)\n    this.userInfo=res.detail.userInfo\n    // \u8c03\u7528\u4e91\u51fd\u6570\u83b7\u53d6openid\n    wx.cloud.callFunction({\n     name: &#39;login&#39;,\n     data: {},\n     success: res =&gt; {\n      console.log(&#39;[\u4e91\u51fd\u6570] [login] user openid: &#39;, res.result.openid)\n      this.userInfo.openid = res.result.openid\n      uni.setStorageSync(&quot;userInfo&quot;,this.userInfo)\n      console.log(uni.getStorage(&quot;userInfo&quot;))\n      uni.navigateTo({\n       url:&quot;../index/index&quot;\n      })\n     },\n     fail: err =&gt; {\n      console.error(&#39;[\u4e91\u51fd\u6570] [login] \u8c03\u7528\u5931\u8d25&#39;, err)\n     },\n    })\n   }\n\n  }\n }\n\n7.\u8d85\u7ea7\u7ba1\u7406\u5458\u9875\u9762\uff08\u7b2c\u4e8c\u9875\uff09\n\n&lt;view @click=\"conClick\"&gt;\n  &lt;clickCircle ref=\"clickCircle\"&gt;&lt;/clickCircle&gt;\n\n    &lt;scroll-view scroll-y class=\"page\"&gt;\n\n     &lt;swiper class=\"card-swiper round-dot\"  :indicator-dots=\"true\" :circular=\"true\"\n      :autoplay=\"true\" interval=\"5000\" duration=\"500\" @change=\"cardSwiper\" indicator-color=\"#8799a3\"\n      indicator-active-color=\"#0081ff\"&gt;\n      &lt;swiper-item v-for=\"(item,index) in swiperList\" :key=\"index\" :class=\"cardCur==index?'cur':''\"&gt;\n       &lt;view class=\"swiper-item\"&gt;\n        &lt;image :src=\"item.url\" mode=\"aspectFill\" v-if=\"item.type=='image'\"&gt;&lt;/image&gt;\n        &lt;video :src=\"item.url\" autoplay loop muted :show-play-btn=\"false\" :controls=\"false\" objectFit=\"cover\" v-if=\"item.type=='video'\"&gt;&lt;/video&gt;\n       &lt;/view&gt;\n      &lt;/swiper-item&gt;\n     &lt;/swiper&gt;\n\n    &lt;view class=\"nav-list\"&gt;\n     &lt;navigator hover-class=\"none\" :url=\"'/pages/charge/' + item.name\" class=\"nav-li\" navigateTo :class=\"'bg-'+item.color\"\n      :style=\"[{animation: 'show ' + ((index+1)*0.2+1) + 's 1'}]\" v-for=\"(item,index) in elements\" :key=\"index\"&gt;\n      &lt;view class=\"nav-title\"&gt;{{item.title}}&lt;/view&gt;\n      &lt;view class=\"nav-name\"&gt;{{item.name}}&lt;/view&gt;\n      &lt;text :class=\"'cuIcon-' + item.cuIcon\"&gt;&lt;/text&gt;\n     &lt;/navigator&gt;\n    &lt;/view&gt;\n    &lt;/scroll-view&gt; \n &lt;/view&gt;\n8.\u7ba1\u7406\u5458\u6dfb\u52a0\u65b9\u6cd5\u5b9e\u73b0\n&lt;script&gt;\n export default {\n  data() {\n   return {\n    index: -1,\n\n\n    multiIndex: [0, 0, 0 ],\n    time: &#39;12:01&#39;,\n    date: &#39;2018-12-25&#39;,\n\n    modalName: null,\n    textareaAValue: &#39;&#39;,\n    textareaBValue: &#39;&#39;\n   };\n  },\n  submit:function(e){\n   var that = this;\n       console.log(e.detail.value)\n       let rId = e.detail.value.rId\n       let uId = e.detail.value.uId\n       let del = e.detail.value.del\n\n\n       if ((!rId || !uId) || !del) {\n        // this.onTowast(&quot;\u8bf7\u586b\u5199\u5b8c\u6574&quot;)\n        uni.showToast({\n         title: &quot;\u8bf7\u586b\u5199\u5b8c\u6574&quot;,\n         icon: &quot;none&quot;\n        })\n        return false\n       }\n       uni.request({\n        url: &quot;http://localhost:8080/attendance/Room/add&quot;,\n        data: {\n         &quot;rId&quot;: that.userInfo.rId,\n         &quot;uId&quot;: e.detail.value.uId,\n         &quot;del&quot;: e.detail.value.del,\n         &quot;address&quot;:e.detail.value.address\n        },\n        success(res) {\n         let title = &quot;&quot;;\n\n         console.log(res.data.success)\n         let msg = res.data.success;\n\n         uni.showToast({\n          title: title,\n          icon: &quot;none&quot;\n         })\n         that.successNotify(title)\n        }\n       })\n  },\n  methods: {\n   PickerChange(e) {\n    this.index = e.detail.value\n   },\n   MultiChange(e) {\n    this.multiIndex = e.detail.value\n   },\n   MultiColumnChange(e) {\n    let data = {\n     multiArray: this.multiArray,\n     multiIndex: this.multiIndex\n    };\n    data.multiIndex[e.detail.column] = e.detail.value;\n\n   },\n   TimeChange(e) {\n    this.time = e.detail.value\n   },\n   DateChange(e) {\n    this.date = e.detail.value\n   },\n\n\n  }\n }\n&lt;/script&gt;\n\nimage-20200113223503069\n9.\u7ba1\u7406\u5458\u66f4\u65b0\u9875\u9762\n\n&lt;template&gt;\n &lt;view&gt;\n  &lt;cu-custom bgColor=\"bg-gradual-pink\" :isBack=\"true\"&gt;\n   &lt;block slot=\"backText\"&gt;\u8fd4\u56de&lt;/block&gt;\n   &lt;block slot=\"content\"&gt;\u66f4\u6539&lt;/block&gt;\n  &lt;/cu-custom&gt;\n  &lt;form bindsubmit='submit' bindreset='reset' bindtap='click'&gt;\n   &lt;view class=\"cu-form-group margin-top\"&gt;\n    &lt;view class=\"title\"&gt;\u623f\u95f4\u7f16\u53f7&lt;/view&gt;\n    &lt;picker mode=\"selector\" :value=\"Index\" :range=\"Room\" :range-key=\"rName\" :data-selecthx=\"Room[fj_index].name\" @change=\"change\" &gt;\n          &lt;view class=\"picker\"&gt;\n       {{Room[fj_index].name}}\n        &lt;/view&gt;\n    &lt;/picker&gt;\n   &lt;/view&gt;\n   &lt;view class=\"cu-form-group\"&gt;\n    &lt;view class=\"title\"&gt;\u7ba1\u7406\u5458\u7f16\u53f7&lt;/view&gt;\n    &lt;input placeholder=\"\u8bf7\u8f93\u5165\u7ba1\u7406\u5458\u7f16\u53f7\" name=\"uId\"&gt;&lt;/input&gt;\n   &lt;/view&gt;\n\n   &lt;view class=\"cu-form-group\"&gt;\n    &lt;view class=\"title\"&gt;\u662f\u5426\u5f00\u653e&lt;/view&gt;\n    &lt;input placeholder=\"\u8f93\u5165\u662f\u6216\u5426\" name=\"del\"&gt;&lt;/input&gt;\n   &lt;/view&gt;\n\n   &lt;!-- #ifndef MP-ALIPAY --&gt;\n\n   &lt;!-- #endif --&gt;\n\n\n  &lt;button form-type='submit' @click=\"submit\"&gt;\u63d0\u4ea4&lt;/button&gt;\n  &lt;button form-type=\"reset\" @click=\"reset\"&gt;\u91cd\u7f6e&lt;/button&gt;\n  &lt;/form&gt;\n &lt;/view&gt;\n&lt;/template&gt;\n\u5b9e\u73b0\n&lt;script&gt;\n export default {\n  data() {\n   return {\n    index: -1,\n    multiIndex: [0, 0, 0 ],\n    time: &#39;12:01&#39;,\n    date: &#39;2018-12-25&#39;,\n\n    modalName: null,\n    textareaAValue: &#39;&#39;,\n    textareaBValue: &#39;&#39;\n   };\n  },\n  onLoad: function () {\n       var that = this;\n\n       wx.request({\n        url: &quot;http://localhost:8080/attendance/Room/roomList&quot;,\n        data: {\n          Room: []  //\u53c2\u6570\n        },\n        header: {\n          &quot;Content-Type&quot;: &#39;application/json&#39;\n        },\n        method: &quot;POST&quot;,\n        success: function (res) {\n          that.setData({\n\n                Room: res.data.data.exp_hx,  //\u628ajson\u6570\u636e\u8d4b\u503c\u7ed9\u53d8\u91cfpic_array_hx\n  }) } }) },\n  methods: {\n\n   PickerChange(e) {\n    this.index = e.detail.value\n   },\n\n   TimeChange(e) {\n    this.time = e.detail.value\n   },\n   DateChange(e) {\n    this.date = e.detail.value\n   },\n   change(e)\n   {\n    this.Index = e.detail\n\n   },\n\n  }\n }\n&lt;/script&gt;\n\nimage-20200113224130571\n10.\u6392\u884c\u699c\u9875\u9762\n\n&lt;view @click=\"conClick\" v-if=\"userInfo.realNameInfo\"&gt;\n  &lt;clickCircle ref=\"clickCircle\"&gt;&lt;/clickCircle&gt;\n\n  &lt;view class=\"space\" &gt;\n   &lt;block v-if=\"AllUserTime\"&gt;\n    &lt;view class=\"bg-img bg-mask flex align-center\" :style=\"{backgroundImage:'url('+AllUserTime[0].avatarUrl+')'}\" style=\"height: 500upx;\"&gt;\n     &lt;view class=\"padding-xl text-white\"&gt;\n\n      &lt;view class=\"flex   align-center\"&gt;\n       &lt;view class=\"cu-avatar radius \" :style=\"{backgroundImage:'url('+AllUserTime[0].avatarUrl+')'}\"&gt;&lt;/view&gt;\n       &lt;view class=\"padding-sm text-xxl text-bold\"&gt;\n        {{AllUserTime[0].nickName}}\u5360\u9886\u4e86\u4eca\u5929\u7684\u5c01\u9762\n       &lt;/view&gt;\n      &lt;/view&gt;\n\n      &lt;view class=\"padding-xs text-lg\"&gt;\n       \u603b\u65f6\u957f:{{AllUserTime[0].time|TimeToString}}\n      &lt;/view&gt;\n     &lt;/view&gt;\n    &lt;/view&gt;\n\n\n    &lt;view class=\"cu-list menu-avatar \"&gt;\n     &lt;block v-for=\"(item,index) in AllUserTime\" :key=\"index\"&gt;\n      &lt;view v-if=\"item.uId==userInfo.uId\" class=\"cu-item bg-black\"&gt;\n       &lt;view class=\"cu-avatar radius lg\" :style=\"{backgroundImage:'url('+item.avatarUrl+')'}\"&gt;\n        &lt;view class=\"cu-tag badge lg\"&gt;{{index+1}}&lt;/view&gt;\n       &lt;/view&gt;\n       &lt;view class=\"content\"&gt;\n        &lt;view class=\"text-black text-bold text-xxl\"&gt;{{item.nickName}}&lt;/view&gt;\n\n       &lt;/view&gt;\n       &lt;view class=\"action\"&gt;\n        &lt;view class=\"text-orange text-bold text-xl\"&gt;{{item.time|TimeToString}}&lt;/view&gt;\n       &lt;/view&gt;\n       &lt;view class=\"move\"&gt;\n        &lt;view class=\"bg-grey\"&gt;\u7f6e\u9876&lt;/view&gt;\n        &lt;view class=\"bg-red\"&gt;\u5173\u6ce8&lt;/view&gt;\n       &lt;/view&gt;\n      &lt;/view&gt;\n     &lt;/block&gt;\n    &lt;/view&gt;\n\n\n    &lt;view class=\"cu-list menu-avatar \"&gt;\n     &lt;view class=\"cu-item \" style=\"border:10rpx\" :class=\"modalName=='move-box-'+ index?'move-cur':''\" v-for=\"(item,index) in AllUserTime\"\n      :key=\"index\" @touchstart=\"ListTouchStart\" @touchmove=\"ListTouchMove\" @touchend=\"ListTouchEnd\" :data-target=\"'move-box-' + index\"&gt;\n\n      &lt;view class=\"cu-avatar radius lg\" :style=\"{backgroundImage:'url('+item.avatarUrl+')'}\"&gt;\n       &lt;view class=\"cu-tag badge green\"&gt;{{index+1}}&lt;/view&gt;\n      &lt;/view&gt;\n      &lt;view class=\"content\"&gt;\n       &lt;view class=\"text-black text-bol\n\u65b9\u6cd5\u5b9e\u73b0\nonShow() {\n   this.isLogin()\n   if (this.userInfo.uId != null) {\n    this.getAllUserTime()\n   }else if (this.userInfo &amp;&amp;this.userInfo.realNameInfo==null){\n    uni.showModal({\n     title: &quot;\u8bf7\u5148\u5b9e\u540d&quot;,\n     showCancel: false,\n     success: function(res) {\n      if (res.confirm) {\n       console.log(&quot;\u786e\u5b9a\u4e86\u554a&quot;)\n       uni.switchTab({\n        url: &quot;/pages/profile/profile&quot;\n       })\n      }\n\n     }\n    })\n   }\n\n  },\n  filters: {\n   TimeToString: function(value) {\n    var hour = Math.round(value / 60)\n    var minute = value % 60\n    if (hour &lt; 10) {\n     hour = &quot;0&quot; + hour + &quot;:&quot;\n    } else {\n     hour = hour + &quot;:&quot;\n    }\n    if (minute &lt; 10) {\n     minute = &quot;0&quot; + minute\n    }\n\n    return hour + minute\n   }\n  },\n  methods: {\n   conClick(e) {\n    this.$refs.clickCircle.conClick(e);\n   },\n   // \u5224\u65ad\u767b\u5f55\n   isLogin() {\n    this.userInfo = global.isLogin();\n    console.log(this.userInfo)\n    if (!this.userInfo) {\n     uni.showModal({\n      title: &quot;\u8bf7\u5148\u767b\u5f55&quot;,\n      showCancel: false,\n      success: function(res) {\n       if (res.confirm) {\n        console.log(&quot;\u786e\u5b9a\u4e86\u554a&quot;)\n        uni.switchTab({\n         url: &quot;/pages/profile/profile&quot;\n        })\n       }\n\n      }\n     })\n    }\n   },\n   getAllUserTime() {\n    var that = this;\n    uni.request({\n     url: &quot;http://47.100.59.153:8080/attendance/time/getAllUserTime&quot;,\n     success(res) {\n      console.log(res.data)\n      that.AllUserTime = res.data.allUserTime\n      console.log(that.AllUserTime)\n     }\n    })\n   },\n   // ListTouch\u89e6\u6478\u5f00\u59cb\n   ListTouchStart(e) {\n    this.listTouchStart = e.touches[0].pageX\n   },\n\n   // ListTouch\u8ba1\u7b97\u65b9\u5411\n   ListTouchMove(e) {\n    this.listTouchDirection = e.touches[0].pageX - this.listTouchStart &gt; 0 ? &#39;right&#39; : &#39;left&#39;\n   },\n\n   // ListTouch\u8ba1\u7b97\u6eda\u52a8\n   ListTouchEnd(e) {\n    if (this.listTouchDirection == &#39;left&#39;) {\n     this.modalName = e.currentTarget.dataset.target\n    } else {\n     this.modalName = null\n    }\n    this.listTouchDirection = null\n   }\n  }\n\n11.\u5b9e\u540d\u9875\u9762\n\n&lt;view @click=\"conClick\"&gt;\n  &lt;!-- \u767b\u5f55\u6a21\u5757 --&gt;\n  &lt;!--   &lt;cu-custom bgColor=\"bg-gradual-pink\" v-if=\"!userInfo\"&gt;\n   &lt;block slot=\"content\"&gt;\u767b\u5f55\u6a21\u5757&lt;/block&gt;\n  &lt;/cu-custom&gt; --&gt;\n  &lt;clickCircle ref=\"clickCircle\"&gt;&lt;/clickCircle&gt;\n  &lt;view class=\"space\"&gt;\n\n\n  &lt;view class=\"cu-modal show\" v-if=\"!userInfo\"&gt;\n   &lt;view class=\"cu-dialog\"&gt;\n    &lt;van-button v-if=\"!userInfo\" icon=\"file\" type=\"primary\" size=\"large\" open-type=\"getUserInfo\" @getuserinfo=\"getUserinfo\"&gt;\u5fae\u4fe1\u4e00\u952e\u767b\u5f55&lt;/van-button&gt;\n   &lt;/view&gt;\n  &lt;/view&gt;\n\n  &lt;van-notify id=\"van-notify\"&gt;&lt;/van-notify&gt;\n\n\n  &lt;!-- \u7528\u6237\u663e\u793a\u754c\u9762 --&gt;\n  &lt;!-- 'https://i.loli.net/2019/11/16/HOnxavlZ2z5Kfri.jpg' --&gt;\n\n  &lt;view v-if=\"userInfo\" class=\"bg-img bg-mask flex align-end\" style=\"background-image: url('https://i.loli.net/2019/11/16/HOnxavlZ2z5Kfri.jpg');height: 400upx;\"&gt;\n   &lt;view class=\"bg-shadeCenter padding  flex  align-start\"&gt;\n    &lt;!-- #ifdef MP-WEIXIN --&gt;\n    &lt;!-- {{userInfo.avatarUrl}} --&gt;\n    &lt;view class=\"cu-avatar xl radius\" :style=\"{backgroundImage:'url('+userInfo.avatarUrl+')'}\"&gt;\n     &lt;view class=\"cu-tag badge\" :class=\"userInfo.gender==1?'cuIcon-male bg-blue':'cuIcon-female bg-pink'\"&gt;\n     &lt;/view&gt;\n    &lt;/view&gt;\n    &lt;!-- #endif --&gt;\n\n    &lt;view class=\"grid col-1\"&gt;\n     &lt;view class=\" padding-left-sm radius text-bold text-white text-xl\"&gt;{{userInfo.nickName}}&lt;/view&gt;\n     &lt;view class=\"cu-capsule radius padding-sm padding-top-lg\"&gt;\n      &lt;view class=\"cu-tag bg-blue xl\"&gt;\n       &lt;text class=\"cuIcon-people \"&gt;&lt;/text&gt;\n      &lt;/view&gt;\n      &lt;view class=\"cu-tag line-white xl \" v-if=\"userInfo.sSuper==0\"&gt;\n       \u8d85\u7ba1\n      &lt;/view&gt;\n      &lt;view class=\"cu-tag line-white xl \" v-else&gt;\n       \u666e\u901a\u7528\u6237\n      &lt;/view&gt;\n     &lt;/view&gt;\n    &lt;/view&gt;\n   &lt;/view&gt;\n  &lt;/view&gt;\n\n\n  &lt;!-- \u5c0f\u83dc\u5355 --&gt;\n\n  &lt;view class=\"cu-list menu card-menu margin-top sm-border\" v-if=\"userInfo\"&gt;\n   &lt;view class=\"cu-item arrow\" @tap=\"showModal\" data-target=\"realName\"&gt;\n\n    &lt;view class=\"content\"&gt;\n     &lt;text class=\"cuIcon-peoplefill text-red text-xl \"&gt;&lt;/text&gt;\n     &lt;text class=\"text-grey\"&gt;\u5b9e\u540d\u8ba4\u8bc1&lt;/text&gt;\n    &lt;/view&gt;\n    &lt;view class=\"action\"&gt;\n     &lt;view class=\"cu-tag round bg-blue\" v-if=\"userInfo.realNa\n\u65b9\u6cd5\u5b9e\u73b0\ngetRealName() {\n    var that = this;\n\n    console.log(&quot;that.userInfo.uId=&quot; + this.userInfo)\n    uni.request({\n     url: &quot;http://47.100.59.153:8080/attendance/realName/getRealName&quot;,\n     data: {\n      &quot;uId&quot;: that.userInfo.uId\n     },\n     success(res) {\n      console.log(res.data)\n      that.realNameInfo = res.data.realNameInfo\n      that.userInfo.realNameInfo = res.data.realNameInfo\n\n      uni.setStorageSync(&quot;userInfo&quot;, that.userInfo)\n      that.userInfo = uni.getStorageSync(&quot;userInfo&quot;)\n\n     }\n    })\n   },\n\n   getUserinfo: function(res) {\n    var that = this;\n    if (!res.detail.iv) {\n     uni.showToast({\n      title: &quot;\u6c42\u6c42\u4f60\u6388\u6743\u5427&quot;\n     })\n     return false;\n    }\n    console.log(res)\n    that.userInfo = res.detail.userInfo\n    // \u8c03\u7528\u4e91\u51fd\u6570\u83b7\u53d6openid\n    wx.cloud.callFunction({\n     name: &#39;login&#39;,\n     data: {},\n     success: res =&gt; {\n      console.log(&#39;[\u4e91\u51fd\u6570] [login] user openid: &#39;, res.result.openid)\n      that.userInfo.openid = res.result.openid\n      that.switchMsg = true\n      that.userInfo.switchMsg = true\n\n\n      that.getUidAndSuper()\n      // console.log(&quot;that.userInfo.sSper:::&quot;+that.userInfo.sSper)\n      // that.getRealName()\n      // uni.setStorageSync(&quot;userInfo&quot;, that.userInfo)\n     },\n     fail: err =&gt; {\n      console.error(&#39;[\u4e91\u51fd\u6570] [login] \u8c03\u7528\u5931\u8d25&#39;, err)\n     }\n    })\n\n   },\n\n\n\n   realNameSubmit: function(e) {\n    var that = this;\n    console.log(e.detail.value)\n    let sId = e.detail.value.sId\n    let pwd = e.detail.value.pwd\n    let email = e.detail.value.email\n\n\n    if ((!sId || !pwd) || !email) {\n     // this.onTowast(&quot;\u8bf7\u586b\u5199\u5b8c\u6574&quot;)\n     uni.showToast({\n      title: &quot;\u8bf7\u586b\u5199\u5b8c\u6574&quot;,\n      icon: &quot;none&quot;\n     })\n     return false\n    }\n    uni.request({\n     url: &quot;http://47.100.59.153:8080/attendance/realName/tieRealName&quot;,\n     data: {\n      &quot;uId&quot;: that.userInfo.uId,\n      &quot;sId&quot;: e.detail.value.sId,\n      &quot;password&quot;: e.detail.value.pwd,\n      &quot;email&quot;: e.detail.value.email\n     },\n     success(res) {\n      let title = &quot;&quot;;\n\n      console.log(res.data.success)\n      let msg = res.data.success;\n      if (msg == &quot;tied&quot;) {\n       titl\n\n\u4e5d\u3001\u6548\u679c\u6f14\u793a\n\u767b\u9646\u540e\u672a\u5728\u5c0f\u7a0b\u5e8f\u4e0a\u5b9e\u540d\u8fc7\u4f1a\u5148\u63d0\u9192\u5b9e\u540d\u624d\u80fd\u770b\u5230\u529f\u80fd\n\n\u5b9e\u540d\u540e\u4f1a\u663e\u793a\u5df2\u5b9e\u540d\n\n\u5b9e\u540d\u540e\u6a21\u62df\u6307\u7eb9\u8fdb\u5165\u8bfe\u5ba4\n\n\n\u5b9e\u540d\u540e\u53ef\u67e5\u770b\u5176\u4ed6\u9875\u9762\n\n\u6a21\u62df\u5fae\u4fe1\u6b65\u6570\u7684\u6392\u884c\u699c\u9875\u9762\n\n\u53ef\u67e5\u770b\u81ea\u5df1\u8fdb\u51fa\u7684\u65e5\u5fd7\n\n\u53ef\u63d0\u4f9b\u6253\u5f00\u63d0\u9192\u670d\u52a1\n\n\u63a5\u6536\u6d88\u606f\u540e\u53ef\u63a5\u6536\u5c0f\u7a0b\u5e8f\u53d1\u6765\u7684\u63d0\u9192\u901a\u77e5\n\u5341\u3001\u9047\u5230\u7684\u95ee\u9898\u53ca\u89e3\u51b3\n1.idea\u65e0\u6cd5\u90e8\u7f72web\u9879\u76ee\n\u200b    \u5f53web\u9879\u76ee\u90e8\u7f72\u5230tomcat\u65f6\uff0cwar\u90e8\u7f72\u548cwar exoloded\u90e8\u7f72\u90fd\u65e0\u6cd5\u7528tomcat\u542f\u52a8\u9879\u76ee\uff0c\u4e00\u76f4\u62a5404\u9519\u8bef\uff0c\u5728tomcat\u7684webapps\u76ee\u5f55\u4e0b\u4e5f\u6ca1\u6709\u627e\u5230\u9879\u76ee\u6587\u4ef6\uff0c\u5728\u914d\u7f6e\u4e86war\u548cwar exoloded\u7684\u8f93\u51fa\u8def\u5f84\u540e\u4e5f\u4e0d\u884c\uff0c\u6700\u540e\u6362\u4e86tomcat7\u4e4b\u540e\u624d\u53ef\u4ee5\uff0ctomcat8.5\u7684\u8ddf\u81ea\u5df1\u7684\u8fd0\u884c\u73af\u5883\u4e0d\u5339\u914d\n2.\u90e8\u7f72\u5230\u670d\u52a1\u5668\u540e\u65e0\u6cd5\u627e\u5230\u8868\n\u5f53\u9879\u76ee\u90e8\u7f72\u5230\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u65b9\u6cd5\u540e\uff0c\u65e0\u6cd5\u627e\u5230\u8868\uff0c\u56e0\u800c\u6f14\u793a\u65f6\u65e0\u6cd5\u7528\u670d\u52a1\u5668\u6f14\u793a\n\nwindows\u4e0a\u7684MySQL\u9ed8\u8ba4\u4e0d\u533a\u5206\u8868\u540d\u5927\u5c0f\u5199\uff0c\u670d\u52a1\u5668\u4e0a\u7684MySQL\u533a\u522b\u8868\u540d\u5927\u5c0f\u5199\uff0c\u5728java\u540e\u53f0\u7684\u8868\u540d\u662f\u5c0f\u5199\u7684\uff0cMySQL\u91cc\u5199\u7684\u662f\u5927\u5199\u7684\uff0c\u56e0\u6b64\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u65b9\u6cd5\u65f6\u627e\u4e0d\u5230\u8868\u800c\u62a5\u9519\uff0c\u628a\u8868\u540d\u6539\u7edf\u4e00\u540e\u5c31\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u8fd0\u884c\u4e86\u3002\n3.Mybatis\u6ce8\u89e3\u9519\u8bef\n\u95ee\u9898\uff1aMybatis\u6ce8\u89e3\u7684\u65f6\u5019\uff0c\u603b\u662f\u9047\u5230\u9519\u8befType interface com.souvi.ibatis.xxxMapper is  not known to the MapperRegistry\n\u89e3\u51b3\uff1a\u4f7f\u7528\u6ce8\u89e3\u8981\u5148\u6ce8\u518c\n4.\u8bbf\u95ee\u51fa\u73b0500\u9519\u8bef\n\n\u6211\u4eec\u7684xml\u6587\u4ef6\u8981\u88ab\u5199\u5165tatget\u6587\u4ef6\u5939\uff0c\u5c31\u5f97\u653e\u5728resources\u6587\u4ef6\u5939\u4e0b\u9762\u624d\u53ef\u4ee5\u88ab\u5f53\u505a\u8d44\u6e90\u52a0\u5165target\u6587\u4ef6\u5939\u4e2d\uff0c\u624d\u4e0d\u4f1a\u62a5\u627e\u4e0d\u5230mapper.xml\u6587\u4ef6\u9519\u8bef\n5.405\u65b9\u6cd5\u201cGET\u201d\u4e0d\u652f\u6301\nimage-20200113162718191\n\u5728URL\u5730\u5740\u680f\u4e2d\u53d1\u751f\u7684\u8bf7\u6c42\uff0c\u5b83\u7684\u65b9\u6cd5\u662fGET\uff0c\u4f46\u662f\u540e\u53f0\u63a7\u5236\u5668\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3\u8868\u660e\u8fd9\u662f\u4e00\u4e2aPOST\u8bf7\u6c42\uff0c\u5c06\u5176\u6539\u6210post\u5c31\u884c\n \n", "categories": [{"name": "Other", "slug": "Other", "permalink": "/category/Other/"}], "tags": [{"name": "Other", "slug": "Other", "permalink": "/tag/Other/"}, {"name": "\u5b9e\u8bad", "slug": "\u5b9e\u8bad", "permalink": "/tag/\u5b9e\u8bad/"}]}, {"title": "\u8ba4\u8bc6SpringCloud", "date": "2020-06-07T17:00:47-00.00", "path": "/archives/\u8ba4\u8bc6SpringCloud/", "text": "SpringCloud\u8bfe\u7a0b\n\u4e00\u3001\u5fae\u670d\u52a1\u548c\u5fae\u670d\u52a1\u67b6\u6784\n1.\u4ec0\u4e48\u662f\u5fae\u670d\u52a1\nhttps://martinfowler.com/articles/microservices.html\uff0c\u63d0\u51fa\u8005\u539f\u6587\n\u7ef4\u57fa\u767e\u79d1\u4e0a\u7ed9\u51fa\u7684\u5b9a\u4e49\u662f\uff1a\u5fae\u670d\u52a1\uff08Microservices\uff09\u662f\u4e00\u79cd\u8f6f\u4ef6\u5f00\u53d1\u6280\u672f\uff0c\u662f\u9762\u5411\u670d\u52a1\u7684\u67b6\u6784\uff08Service-Oriented  Architecture\uff0cSOA\uff09\u7684\u53d8\u4f53\uff0c\u5fae\u670d\u52a1\u67b6\u6784\u5c06\u5e94\u7528\u7a0b\u5e8f\u7ec4\u6210\u4e00\u7cfb\u5217\u677e\u6563\u8026\u5408\u7684\u670d\u52a1\u96c6\u5408\u3002\u5728\u5fae\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u670d\u52a1\u662f\u7ec6\u7c92\u5ea6\u7684\uff0c\u534f\u8bae\u662f\u8f7b\u91cf\u7ea7\u7684\u3002\n\u4f20\u7edf\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u7edd\u5927\u90e8\u5206\u7684 Web \u5e94\u7528\u90fd\u662f\u91c7\u7528\u5355\u4f53\u67b6\u6784\u7684\u98ce\u683c\u6765\u8fdb\u884c\u6784\u5efa\u7684\uff0c\u8fd9\u610f\u5473\u7740 Web  \u5e94\u7528\u662f\u4f5c\u4e3a\u5355\u4e2a\u53ef\u90e8\u7f72\u7684\u8f6f\u4ef6\u5236\u54c1\u8fdb\u884c\u4ea4\u4ed8\u7684\uff0c\u6240\u6709\u7684\u63a5\u53e3\u3001\u4e1a\u52a1\u903b\u8f91\u3001\u6301\u4e45\u5c42\u90fd\u88ab\u6253\u5305\u5728\u4e00\u4e2a Web  \u5e94\u7528\u4e2d\uff0c\u5e76\u4e14\u90e8\u7f72\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u3002\u8fd9\u79cd\u5f00\u53d1\u6a21\u5f0f\u4f1a\u5e26\u6765\u8bf8\u591a\u4e0d\u4fbf\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u662f\u4ea4\u7531\u591a\u4e2a\u56e2\u961f\u6765\u534f\u540c\u5f00\u53d1\u7684\uff0c\u6bcf\u4e2a\u5f00\u53d1\u56e2\u961f\u8d1f\u8d23\u5404\u81ea\u4e0d\u540c\u7684\u6a21\u5757\uff0c\u5e76\u4e14\u4f1a\u6709\u81ea\u5df1\u7684\u5b9a\u5236\u7ec4\u4ef6\u6765\u670d\u52a1\u5bf9\u5e94\u7684\u5ba2\u6237\u3002\n\u95ee\u9898\u5c31\u51fa\u5728\u8fd9\u91cc\uff0c\u968f\u7740\u5e94\u7528\u7a0b\u5e8f\u7684\u89c4\u6a21\u548c\u590d\u6742\u5ea6\u4e0d\u65ad\u589e\u957f\uff0c\u591a\u4e2a\u56e2\u961f\u534f\u540c\u5f00\u53d1\u4e00\u4e2a\u5355\u4f53\u5e94\u7528\u7a0b\u5e8f\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u56f0\u96be\u3001\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u5047\u8bbe\u67d0\u4e2a\u56e2\u961f\u9700\u8981\u4fee\u6539\u63a5\u53e3\uff0c\u90a3\u4e48\u5176\u4ed6\u56e2\u961f\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4ee3\u7801\u4e5f\u9700\u8981\u4fee\u6539\uff0c\u540c\u65f6\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u9700\u8981\u91cd\u65b0\u6784\u5efa\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u3002\n\u5fae\u670d\u52a1\u67b6\u6784\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u800c\u751f\u7684\uff0c\u5b83\u7684\u672c\u8d28\u5728\u4e8e\u5206\u5e03\u5f0f\u3001\u53bb\u4e2d\u5fc3\u5316\u3002\u7b80\u5355\u7406\u89e3\u5c31\u662f\u5206\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\uff0c\u628a\u4e00\u4e2a\u5927\u578b\u670d\u52a1\u62c6\u5206\u6210\u5f88\u591a\u5c0f\u670d\u52a1\uff0c\u4f7f\u5b83\u4eec\u5b8c\u5168\u5f7c\u6b64\u72ec\u7acb\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f8\u4e92\u901a\u4fe1\uff0c\u62c6\u5206\u4e4b\u540e\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5982\u4e0b\u56fe\u6240\u793a\u3002\nimg\n\n\u200b   \u7b80\u5355\u70b9\u8bf4\uff0c\u5fae\u670d\u52a1\u5316\u7684\u6838\u5fc3\u5c31\u662f\u5c06\u4f20\u7edf\u7684\u4e00\u7ad9\u5f0f\u5e94\u7528\uff0c\u6839\u636e\u4e1a\u52a1\u62c6\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7684\u670d\u52a1\uff0c\u5f7b\u5e95\u5730\u53bb\u8026\u5408\uff0c\u6bcf\u4e00\u4e2a\u5fae\u670d\u52a1\u63d0\u4f9b\u5355\u4e2a\u4e1a\u52a1\u529f\u80fd\u7684\u670d\u52a1\uff0c\u4e00\u4e2a\u670d\u52a1\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u4ece\u6280\u672f\u89d2\u5ea6\u770b\u5c31\u662f\u4e00\u79cd\u5c0f\u800c\u72ec\u7acb\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u8fdb\u7a0b\u7684\u6982\u5ff5\uff0c\u80fd\u591f\u81ea\u884c\u5355\u72ec\u542f\u52a8\u6216\u9500\u6bc1\uff0c\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u6570\u636e\u5e93\u3002\n2.\u4ec0\u4e48\u662f\u5fae\u670d\u52a1\u67b6\u6784\nhttps://www.jianshu.com/p/bf3484efa709?utm_source=oschina-app\n\n3.\u5fae\u670d\u52a1\u67b6\u6784\u76844\u4e2a\u6838\u5fc3\u95ee\u9898\n1\u3001\u670d\u52a1\u5f88\u591a\uff0c\u5ba2\u6237\u7aef\u8be5\u600e\u4e48\u8bbf\u95ee\uff1f\n2\u3001\u8fd9\u4e48\u591a\u670d\u52a1\uff1f\u670d\u52a1\u4e4b\u95f4\u5982\u4f55\u901a\u4fe1\n3\u3001\u8fd9\u4e48\u591a\u670d\u52a1\uff1f\u5982\u4f55\u6cbb\u7406\uff1f\n4\u3001\u670d\u52a1\u6302\u4e86\u600e\u4e48\u529e\uff1f\n\n4.\u5fae\u670d\u52a1\u7684\u4f18\u7f3a\u70b9\n\u4f18\u70b9\n\n\u6bcf\u4e2a\u670d\u52a1\u8db3\u591f\u5185\u805a\uff0c\u8db3\u591f\u5c0f\uff0c\u4ee3\u7801\u5bb9\u6613\u7406\u89e3\uff0c\u8fd9\u6837\u80fd\u805a\u7126\u4e00\u4e2a\u6307\u5b9a\u7684\u4e1a\u52a1\u529f\u80fd\u6216\u4e1a\u52a1\u9700\u6c42\uff1b\n\u5f00\u53d1\u7b80\u5355\uff0c\u5f00\u53d1\u6548\u7387\u63d0\u9ad8\uff0c\u4e00\u4e2a\u670d\u52a1\u53ef\u80fd\u5c31\u662f\u4e13\u4e00\u7684\u53ea\u5e72\u4e00\u4ef6\u4e8b\uff1b\n\u5fae\u670d\u52a1\u80fd\u591f\u88ab\u5c0f\u56e2\u961f\u5355\u72ec\u5f00\u53d1\uff0c\u8fd9\u4e2a\u5c0f\u56e2\u961f\u662f2~5\u4eba\u7684\u5f00\u53d1\u4eba\u5458\u7ec4\u6210\uff1b\n\u5fae\u670d\u52a1\u662f\u677e\u8026\u5408\u7684\uff0c\u662f\u6709\u529f\u80fd\u610f\u4e49\u7684\u670d\u52a1\uff0c\u65e0\u8bba\u662f\u5728\u5f00\u53d1\u9636\u6bb5\u6216\u90e8\u7f72\u9636\u6bb5\u90fd\u662f\u72ec\u7acb\u7684\uff1b\n\u5fae\u670d\u52a1\u80fd\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u5f00\u53d1\uff1b\n\u6613\u4e8e\u548c\u7b2c\u4e09\u65b9\u96c6\u6210\uff0c\u5fae\u670d\u52a1\u5141\u8bb8\u5bb9\u6613\u4e14\u7075\u6d3b\u7684\u65b9\u5f0f\u96c6\u6210\u81ea\u52a8\u90e8\u7f72\uff0c\u901a\u8fc7\u6301\u7eed\u96c6\u6210\u5de5\u5177\uff0c\u5982jenkins\uff1b\n\u5fae\u670d\u52a1\u6613\u4e8e\u88ab\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u7406\u89e3\uff0c\u4fee\u6539\u548c\u7ef4\u62a4\uff0c\u8fd9\u6837\u5c0f\u56e2\u961f\u80fd\u591f\u66f4\u5173\u6ce8\u81ea\u5df1\u7684\u5de5\u4f5c\u6210\u679c\uff0c\u65e0\u9700\u901a\u8fc7\u5408\u4f5c\u624d\u80fd\u4f53\u73b0\u4ef7\u503c\n\u5fae\u670d\u52a1\u5141\u8bb8\u4f60\u5229\u7528\u878d\u5408\u6700\u65b0\u6280\u672f\n\u5fae\u670d\u52a1\u53ea\u662f\u4e1a\u52a1\u903b\u8f91\u7684\u4ee3\u7801\uff0c\u4e0d\u4f1a\u548cHTML\uff0cCSS\u6216\u5176\u5b83\u754c\u9762\u6df7\u5408\n\u6bcf\u4e2a\u5fae\u670d\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u5b58\u50a8\u80fd\u529b\uff0c\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u6570\u636e\u5e93\uff0c\u4e5f\u53ef\u4ee5\u6709\u7edf\u4e00\u6570\u636e\u5e93\n\n\u7f3a\u70b9\n\n\u5f00\u53d1\u4eba\u5458\u8981\u5904\u7406\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u590d\u6742\u6027\n\u591a\u670d\u52a1\u8fd0\u7ef4\u96be\u5ea6\uff0c\u968f\u7740\u670d\u52a1\u7684\u589e\u52a0\uff0c\u8fd0\u7ef4\u7684\u538b\u529b\u4e5f\u5728\u589e\u5927\n\u7cfb\u7edf\u90e8\u7f72\u4f9d\u8d56\n\u670d\u52a1\u95f4\u901a\u4fe1\u6210\u672c\n\u6570\u636e\u4e00\u81f4\u6027\n\u7cfb\u7edf\u96c6\u6210\u6d4b\u8bd5\n\u6027\u80fd\u76d1\u63a7\n\n\u4e8c\u3001\u5fae\u670d\u52a1\u89e3\u51b3\u65b9\u6848\n1.Spring Cloud NetFlix\n18\u5e74\u505c\u66f4\u4e86\u3002\n\n2.Apache Dubbo Zookeeper\napi\u7f51\u5173\uff1a\u6ca1\u6709\uff0c\u627e\u7b2c\u4e09\u65b9\u7ec4\u4ef6\uff0c\u6216\u81ea\u5df1\u5b9e\u73b0\nDubbo\uff1a\u57fa\u4e8esocket\u901a\u4fe1\uff0c\u4e00\u4e2arpc\u6846\u67b6\nZookeeper\uff1a\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\n\u7194\u65ad\u673a\u5236\uff1a\u6ca1\u6709\uff0c\u4f7f\u7528\u7b2c\u4e09\u65b9\n\n3.Spring Cloud Alibaba\n\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848\uff01\u4f7f\u7528\u66f4\u7b80\u5355\nNacos\uff1a\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\uff0c\u914d\u7f6e\u4e2d\u5fc3\n\n4.\u5fae\u670d\u52a1\u6280\u672f\u6808\n\n\n\u5fae\u670d\u52a1\u6761\u76ee\n\u843d\u5730\u6280\u672f\n\n\n\n\n\u670d\u52a1\u5f00\u53d1\nSpringBoot\u3001SSM\n\n\n\u670d\u52a1\u914d\u7f6e\u4e0e\u7ba1\u7406\nNetflix\u516c\u53f8\u7684Archaius\u3001\u963f\u91cc\u7684Diamond\u7b49\n\n\n\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\nEureka\u3001Zookeeper\u3001Nacos\u3001Consul\u7b49\n\n\n\u670d\u52a1\u8c03\u7528\nRest(Http)\u3001RPC\u3001gRPC\n\n\n\u670d\u52a1\u7194\u65ad\u5668\nHystrix\u3001Envoy\u3001Sentinel\u7b49\n\n\n\u8d1f\u8f7d\u5747\u8861\nRibbon\u3001Nginx\u3001Feign\u7b49\n\n\n\u670d\u52a1\u63a5\u53e3\u8c03\u7528\nFeign\n\n\n\u6d88\u606f\u961f\u5217\nKafka\u3001RabbitMQ\u3001ActiveMQ\u3001RocketMQ\n\n\n\u670d\u52a1\u914d\u7f6e\u4e2d\u5fc3\u7ba1\u7406\nconfig\u3001consul\u3001apollo\u3001nacos\n\n\n\u670d\u52a1\u8def\u7531(\u7f51\u5173)\nZuul\u3001Gateway\u7b49\n\n\n\u670d\u52a1\u76d1\u63a7\nZabbix\u3001Nagios\u3001Metrics\u3001Specatator\u7b49\n\n\n\u5168\u94fe\u8def\u8ffd\u8e2a\nZipkin\u3001Brave\u3001Dapper\u7b49\n\n\n\u670d\u52a1\u90e8\u7f72\nDocker\u3001OpenStack\u3001Kubernetes(k8s)\u7b49\n\n\n\u6570\u636e\u6d41\u64cd\u4f5c\u5f00\u53d1\u5305\nSpringCloud Stream(\u5c01\u88c5\u4e0eRedis\u3001Rabbit\u3001Kafka\u7b49\u53d1\u9001\u63a5\u6536\u6d88\u606f)\n\n\n\u4e8b\u4ef6\u6d88\u606f\u603b\u7ebf\nSpringCloud Bus\n\n\n\n\u4e09\u3001\u5e38\u89c1\u9762\u8bd5\u9898\n\n### 1.\u4ec0\u4e48\u662f\u5fae\u670d\u52a1\u548c\u5fae\u670d\u52a1\u67b6\u6784\n\n1.\u5fae\u670d\u52a1\n\u5f3a\u8c03\u7684\u662f\u670d\u52a1\u7684\u5927\u5c0f\uff0c\u5b83\u5173\u6ce8\u7684\u662f\u67d0\u4e00\u4e2a\u70b9\uff0c\u662f\u5177\u4f53\u89e3\u51b3\u67d0\u4e00\u4e2a\u95ee\u9898\u5e76\u63d0\u4f9b\u843d\u5730\u5bf9\u5e94\u670d\u52a1\u7684\u4e00\u4e2a\u670d\u52a1\u5e94\u7528\uff0c\u72ed\u4e49\u7684\u770b\uff0c\u53ef\u4ee5\u770b\u505a\u662fIDEA\u4e2d\u7684\u4e00\u4e2a\u4e2a\u5fae\u670d\u52a1\u5de5\u7a0b\u6216\u8005Module\n2.\u5fae\u670d\u52a1\u67b6\u6784\n\u4e00\u79cd\u65b0\u7684\u67b6\u6784\u5f62\u5f0f\uff0c\u7531Martin Fowler\uff0c2014\u63d0\u51fa\u3002\n\u5b83\u63d0\u5021\u5c06\u5355\u4e00\u5e94\u7528\u7a0b\u5e8f\u5212\u5206\u6210\u4e00\u7ec4\u5c0f\u7684\u670d\u52a1\uff0c\u670d\u52a1\u4e4b\u95f4\u76f8\u4e92\u534f\u8c03\uff0c\u4e92\u76f8\u914d\u5408\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u6700\u7ec8\u4ef7\u503c\uff0c\u6bcf\u4e2a\u670d\u52a1\u8fd0\u884c\u5728\u5176\u72ec\u7acb\u7684\u8fdb\u7a0b\u4e2d\uff0c\u670d\u52a1\u4e8e\u670d\u52a1\u95f4\u91c7\u7528\u8f7b\u91cf\u7ea7\u7684\u901a\u4fe1\u673a\u5236\u4e92\u76f8\u534f\u4f5c\uff0c\u6bcf\u4e2a\u670d\u52a1\u90fd\u56f4\u7ed5\u7740\u5177\u4f53\u7684\u4e1a\u52a1\u8fdb\u884c\u6784\u5efa\uff0c\u5e76\u4e14\u80fd\u591f\u88ab\u72ec\u7acb\u7684\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u53e6\u5916\uff0c\u5e94\u5c3d\u91cf\u907f\u514d\u7edf\u4e00\u7684\u96c6\u4e2d\u5f0f\u7684\u670d\u52a1\u7ba1\u7406\u673a\u5236\uff0c\u5bf9\u5177\u4f53\u7684\u4e00\u4e2a\u670d\u52a1\u800c\u8a00\uff0c\u5e94\u6839\u636e\u4e1a\u52a1\u4e0a\u4e0b\u6587\uff0c\u9009\u62e9\u5408\u9002\u7684\u8bed\u8a00\uff0c\u5de5\u5177\u5bf9\u5176\u8fdb\u884c\u6784\u5efa\u3002\n\n\n### 2.\u5fae\u670d\u52a1\u4e4b\u95f4\u662f\u5982\u4f55\u72ec\u7acb\u901a\u8baf\u7684\n\nSpring Cloud\u57fa\u4e8ehttp\u534f\u8bae\u901a\u4fe1\nDubbo\u5219\u662f\u5178\u578b\u7684rpc\u534f\u8bae\u901a\u4fe1\u6846\u67b6\n\n\n### 3.SpringCloud\u548cDubbo\u6709\u54ea\u4e9b\u533a\u522b\n\n\n\n\n### 4.SpringBoot\u548cSpringCloud\uff0c\u8bf7\u4f60\u8c08\u8c08\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3\n\n\n\n\n### 5.\u4ec0\u4e48\u662f\u670d\u52a1\u7194\u65ad\uff1f\u4ec0\u4e48\u662f\u670d\u52a1\u964d\u7ea7\n\n\n\n\n### 6.\u5fae\u670d\u52a1\u7684\u4f18\u7f3a\u70b9\u5206\u522b\u662f\u4ec0\u4e48\uff1f\u8bf4\u4e0b\u4f60\u5728\u9879\u76ee\u4e2d\u9047\u5230\u7684\u5751\n\n\n\n\n### 7.\u4f60\u6240\u77e5\u9053\u7684\u5fae\u670d\u52a1\u6280\u672f\u6808\u6709\u54ea\u4e9b\uff1f\u8bf7\u5217\u4e3e\u4e00\u4e8c\n\n\n\n\n### 8.eureka\u548czookeeper\u90fd\u53ef\u4ee5\u63d0\u4f9b\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u7684\u529f\u80fd\u8bf7\u8bf4\u8bf4\u4e24\u90fd\u4e4b\u95f4\u7684\u533a\u522b\n\n\n\n\u56db\u3001\u4ec0\u4e48\u662fSpringCloud\n\u76ee\u6807\n\u534f\u8c03\u4efb\u4f55\u670d\u52a1\uff0c\u7b80\u5316\u5206\u5e03\u5f0f\u7cfb\u7edf\u5f00\u53d1\u3002\n\u7b80\u4ecb\n\u6784\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0d\u5e94\u8be5\u662f\u590d\u6742\u7684\uff0cSpringCloud\u5bf9\u5e38\u89c1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u6a21\u5f0f\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u7528\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u6784\u5efa\u5f39\u6027\u3001\u53ef\u9760\u3001\u534f\u8c03\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 SpringCloud\u662f\u5728SpringBoot\u7684\u57fa\u7840\u4e0a\u6784\u5efa\u7684\uff0c\u4f7f\u5f00\u53d1\u8005\u53ef\u4ee5\u8f7b\u677e\u5165\u95e8\u5e76\u5feb\u901f\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u3002 SpringCloud\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u5feb\u901f\u6784\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf\u67b6\u6784\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u914d\u7f6e\u7ba1\u7406\uff0c\u670d\u52a1\u53d1\u73b0\uff0c\u65ad\u8def\u5668\uff0c\u667a\u80fd\u8def\u7531\uff0c\u5fae\u4ee3\u7406\uff0c\u63a7\u5236\u603b\u7ebf\uff0c\u4e00\u6b21\u6027\u4ee4\u724c\uff0c\u5168\u5c40\u9501\u5b9a\uff0c\u9886\u5bfc\u9009\u4e3e\uff0c\u5206\u5e03\u5f0f\u4f1a\u8bdd\uff0c\u96c6\u7fa4\u72b6\u6001\u7b49\u3002\n\u6574\u4f53\u67b6\u6784\n\u6765\u81eaSpring\u5b98\u7f51\nSpringCloud\u7684\u7248\u672c\u5173\u7cfb\nSpringCloud\u662f\u4e00\u4e2a\u7531\u8bb8\u591a\u5b50\u9879\u76ee\u7ec4\u6210\u7684\u7efc\u5408\u9879\u76ee\uff0c\u5404\u5b50\u9879\u76ee\u6709\u4e0d\u540c\u7684\u53d1\u5e03\u8282\u594f\u3002 \u4e3a\u4e86\u7ba1\u7406SpringCloud\u4e0e\u5404\u5b50\u9879\u76ee\u7684\u7248\u672c\u4f9d\u8d56\u5173\u7cfb\uff0c\u53d1\u5e03\u4e86\u4e00\u4e2a\u6e05\u5355\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\u67d0\u4e2aSpringCloud\u7248\u672c\u5bf9\u5e94\u7684\u5b50\u9879\u76ee\u7248\u672c\u3002 \u4e3a\u4e86\u907f\u514dSpringCloud\u7248\u672c\u53f7\u4e0e\u5b50\u9879\u76ee\u7248\u672c\u53f7\u6df7\u6dc6\uff0cSpringCloud\u7248\u672c\u91c7\u7528\u4e86\u540d\u79f0\u800c\u975e\u7248\u672c\u53f7\u7684\u547d\u540d\uff0c\u8fd9\u4e9b\u7248\u672c\u7684\u540d\u5b57\u91c7\u7528\u4e86\u4f26\u6566\u5730\u94c1\u7ad9\u7684\u540d\u5b57\uff0c\u6839\u636e\u5b57\u6bcd\u8868\u7684\u987a\u5e8f\u6765\u5bf9\u5e94\u7248\u672c\u65f6\u95f4\u987a\u5e8f\uff0c\u4f8b\u5982Angel\u662f\u7b2c\u4e00\u4e2a\u7248\u672c, Brixton\u662f\u7b2c\u4e8c\u4e2a\u7248\u672c\u3002 \u5f53SpringCloud\u7684\u53d1\u5e03\u5185\u5bb9\u79ef\u7d2f\u5230\u4e34\u754c\u70b9\u6216\u8005\u4e00\u4e2a\u91cd\u5927BUG\u88ab\u89e3\u51b3\u540e\uff0c\u4f1a\u53d1\u5e03\u4e00\u4e2a\"service releases\"\u7248\u672c\uff0c\u7b80\u79f0SRX\u7248\u672c\uff0c\u6bd4\u5982Greenwich.SR2\u5c31\u662fSpringCloud\u53d1\u5e03\u7684Greenwich\u7248\u672c\u7684\u7b2c2\u4e2aSRX\u7248\u672c\u3002\nSpringCloud\u548cSpringBoot\u7248\u672c\u5bf9\u5e94\u5173\u7cfb\n\n\nSpringCloud Version\nSpringBoot Version\n\n\n\n\nHoxton\n2.2.x\n\n\nGreenwich\n2.1.x\n\n\nFinchley\n2.0.x\n\n\nEdgware\n1.5.x\n\n\nDalston\n1.5.x\n\n\n\nSpringCloud\u548cSpringBoot\u5173\u7cfb\n\nSpringBoot\u4e13\u6ce8\u4e8e\u5feb\u901f\u65b9\u4fbf\u7684\u5f00\u53d1\u5355\u4e2a\u4e2a\u4f53\u5fae\u670d\u52a1\uff0cSpringCloud\u5173\u6ce8\u5168\u5c40\u7684\u670d\u52a1\u6cbb\u7406\u6846\u67b6\nSpringCloud\u662f\u5173\u6ce8\u5168\u5c40\u7684\u5fae\u670d\u52a1\u534f\u8c03\u6574\u7406\u6cbb\u7406\u6846\u67b6\uff0c\u5b83\u5c06SpringBoot\u5f00\u53d1\u7684\u4e00\u4e2a\u4e2a\u5355\u4f53\u5fae\u670d\u52a1\u6574\u5408\u5e76\u7ba1\u7406\u8d77\u6765\uff0c\u4e3a\u5404\u4e2a\u5fae\u670d\u52a1\u4e4b\u95f4\u63d0\u4f9b\uff1a\u914d\u7f6e\u7ba1\u7406\uff0c\u670d\u52a1\u53d1\u73b0\uff0c\u65ad\u8def\u5668\uff0c\u8def\u7531\uff0c\u5fae\u4ee3\u7406\uff0c\u4e8b\u4ef6\u603b\u7ebf\uff0c\u5168\u5c40\u9501\uff0c\u51b3\u7b56\u7ade\u9009\uff0c\u5206\u5e03\u5f0f\u4f1a\u8bdd\u7b49\u96c6\u6210\u670d\u52a1\u3002\nSpringBoot\u53ef\u4ee5\u79bb\u5f00SpringCloud\u72ec\u7acb\u4f7f\u7528\uff0c\u5f00\u53d1\u9879\u76ee\uff0c\u4f46\u662fSpringCloud\u79bb\u4e0d\u5f00SpringBoot\uff0c\u5c5e\u4e8e\u4f9d\u8d56\u5173\u7cfb\n\nSpringCloud\u548c\u5404\u5b50\u9879\u76ee\u7248\u672c\u5bf9\u5e94\u5173\u7cfb\n\n\nComponent\nEdgware.SR6\nGreenwich.SR2\n\n\n\n\nspring-cloud-bus\n1.3.4.RELEASE\n2.1.2.RELEASE\n\n\nspring-cloud-commons\n1.3.6.RELEASE\n2.1.2.RELEASE\n\n\nspring-cloud-config\n1.4.7.RELEASE\n2.1.3.RELEASE\n\n\nspring-cloud-netflix\n1.4.7.RELEASE\n2.1.2.RELEASE\n\n\nspring-cloud-security\n1.2.4.RELEASE\n2.1.3.RELEASE\n\n\nspring-cloud-consul\n1.3.6.RELEASE\n2.1.2.RELEASE\n\n\nspring-cloud-sleuth\n1.3.6.RELEASE\n2.1.1.RELEASE\n\n\nspring-cloud-stream\nDitmars.SR5\nFishtown.SR3\n\n\nspring-cloud-zookeeper\n1.2.3.RELEASE\n2.1.2.RELEASE\n\n\nspring-boot\n1.5.21.RELEASE\n2.1.5.RELEASE\n\n\nspring-cloud-task\n1.2.4.RELEASE\n2.1.2.RELEASE\n\n\nspring-cloud-gateway\n1.0.3.RELEASE\n2.1.2.RELEASE\n\n\nspring-cloud-openfeign\n\u6682\u65e0\n2.1.2.RELEASE\n\n\n\n\u6ce8\u610f\uff1aGreenwich\u7248\u672c\u662f\u57fa\u4e8eSpringBoot 2.1.x\u7248\u672c\u6784\u5efa\u7684\uff0c\u4e0d\u9002\u7528\u4e8e1.5.x\u7248\u672c\u3002\u968f\u77402019\u5e748\u6708SpringBoot 1.5.x\u7248\u672c\u505c\u6b62\u7ef4\u62a4\uff0cEdgware\u7248\u672c\u4e5f\u5c06\u505c\u6b62\u7ef4\u62a4\u3002\nSpringCloud\u5b50\u9879\u76ee\u7b80\u4ecb\nSpring Cloud Config\n\u96c6\u4e2d\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7edf\u4e00\u7684\u5916\u90e8\u914d\u7f6e\u7ba1\u7406\uff0c\u9ed8\u8ba4\u4f7f\u7528Git\u6765\u5b58\u50a8\u914d\u7f6e\uff0c\u53ef\u4ee5\u652f\u6301\u5ba2\u6237\u7aef\u914d\u7f6e\u7684\u5237\u65b0\u53ca\u52a0\u5bc6\u3001\u89e3\u5bc6\u64cd\u4f5c\u3002\nSpring Cloud Netflix\nNetflix OSS \u5f00\u6e90\u7ec4\u4ef6\u96c6\u6210\uff0c\u5305\u62ecEureka\u3001Hystrix\u3001Ribbon\u3001Feign\u3001Zuul\u7b49\u6838\u5fc3\u7ec4\u4ef6\u3002\n\nEureka\uff1a\u670d\u52a1\u6cbb\u7406\u7ec4\u4ef6\uff0c\u5305\u62ec\u670d\u52a1\u7aef\u7684\u6ce8\u518c\u4e2d\u5fc3\u548c\u5ba2\u6237\u7aef\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff1b\nRibbon\uff1a\u8d1f\u8f7d\u5747\u8861\u7684\u670d\u52a1\u8c03\u7528\u7ec4\u4ef6\uff0c\u5177\u6709\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8c03\u7528\u7b56\u7565\uff1b\nHystrix\uff1a\u670d\u52a1\u5bb9\u9519\u7ec4\u4ef6\uff0c\u5b9e\u73b0\u4e86\u65ad\u8def\u5668\u6a21\u5f0f\uff0c\u4e3a\u4f9d\u8d56\u670d\u52a1\u7684\u51fa\u9519\u548c\u5ef6\u8fdf\u63d0\u4f9b\u4e86\u5bb9\u9519\u80fd\u529b\uff1b\nFeign\uff1a\u57fa\u4e8eRibbon\u548cHystrix\u7684\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528\u7ec4\u4ef6\uff1b\nZuul\uff1aAPI\u7f51\u5173\u7ec4\u4ef6\uff0c\u5bf9\u8bf7\u6c42\u63d0\u4f9b\u8def\u7531\u53ca\u8fc7\u6ee4\u529f\u80fd\u3002\n\nSpring Cloud Bus\n\u7528\u4e8e\u4f20\u64ad\u96c6\u7fa4\u72b6\u6001\u53d8\u5316\u7684\u6d88\u606f\u603b\u7ebf\uff0c\u4f7f\u7528\u8f7b\u91cf\u7ea7\u6d88\u606f\u4ee3\u7406\u94fe\u63a5\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u7528\u6765\u52a8\u6001\u5237\u65b0\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u914d\u7f6e\u3002\nSpring Cloud Consul\n\u57fa\u4e8eHashicorp Consul\u7684\u670d\u52a1\u6cbb\u7406\u7ec4\u4ef6\u3002\nSpring Cloud Security\n\u5b89\u5168\u5de5\u5177\u5305\uff0c\u5bf9Zuul\u4ee3\u7406\u4e2d\u7684\u8d1f\u8f7d\u5747\u8861OAuth2\u5ba2\u6237\u7aef\u53ca\u767b\u5f55\u8ba4\u8bc1\u8fdb\u884c\u652f\u6301\u3002\nSpring Cloud Sleuth\nSpringCloud\u5e94\u7528\u7a0b\u5e8f\u7684\u5206\u5e03\u5f0f\u8bf7\u6c42\u94fe\u8def\u8ddf\u8e2a\uff0c\u652f\u6301\u4f7f\u7528Zipkin\u3001HTrace\u548c\u57fa\u4e8e\u65e5\u5fd7\uff08\u4f8b\u5982ELK\uff09\u7684\u8ddf\u8e2a\u3002\nSpring Cloud Stream\n\u8f7b\u91cf\u7ea7\u4e8b\u4ef6\u9a71\u52a8\u5fae\u670d\u52a1\u6846\u67b6\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684\u58f0\u660e\u5f0f\u6a21\u578b\u6765\u53d1\u9001\u53ca\u63a5\u6536\u6d88\u606f\uff0c\u4e3b\u8981\u5b9e\u73b0\u4e3aApache Kafka\u53caRabbitMQ\u3002\nSpring Cloud Task\n\u7528\u4e8e\u5feb\u901f\u6784\u5efa\u77ed\u6682\u3001\u6709\u9650\u6570\u636e\u5904\u7406\u4efb\u52a1\u7684\u5fae\u670d\u52a1\u6846\u67b6\uff0c\u7528\u4e8e\u5411\u5e94\u7528\u4e2d\u6dfb\u52a0\u529f\u80fd\u6027\u548c\u975e\u529f\u80fd\u6027\u7684\u7279\u6027\u3002\nSpring Cloud Zookeeper\n\u57fa\u4e8eApache Zookeeper\u7684\u670d\u52a1\u6cbb\u7406\u7ec4\u4ef6\u3002\nSpring Cloud Gateway\nAPI\u7f51\u5173\u7ec4\u4ef6\uff0c\u5bf9\u8bf7\u6c42\u63d0\u4f9b\u8def\u7531\u53ca\u8fc7\u6ee4\u529f\u80fd\u3002\nSpring Cloud OpenFeign\n\u57fa\u4e8eRibbon\u548cHystrix\u7684\u58f0\u660e\u5f0f\u670d\u52a1\u8c03\u7528\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u52a8\u6001\u521b\u5efa\u57fa\u4e8eSpring MVC\u6ce8\u89e3\u7684\u63a5\u53e3\u5b9e\u73b0\u7528\u4e8e\u670d\u52a1\u8c03\u7528\uff0c\u5728SpringCloud 2.0\u4e2d\u5df2\u7ecf\u53d6\u4ee3Feign\u6210\u4e3a\u4e86\u4e00\u7b49\u516c\u6c11\u3002\n\u4e3a\u4ec0\u4e48\u8981\u9009\u62e9SpringCloud\n1.\u9009\u62e9\u4f9d\u636e\n\n\u6574\u4f53\u89e3\u51b3\u65b9\u6848\u548c\u6210\u719f\u5ea6\n\n\u793e\u533a\u70ed\u5ea6\n\n\u53ef\u7ef4\u62a4\u6027\n\n\u5b66\u4e60\u66f2\u7ebf\n\n\n2.\u5f53\u524d\u5404\u5927IT\u516c\u53f8\u7528\u7684\u5fae\u670d\u52a1\u6846\u67b6\u6709\u54ea\u4e9b\n\n\u963f\u91cc\uff1aDubbo + HFS\n\u4eac\u4e1c\uff1aJSF\n\u65b0\u6d6a\uff1aMotan\n\u5f53\u5f53\u7f51\uff1aDubboX\n\n\u4e94\u3001\u4ec0\u4e48\u662fDubbo\n1.dubbo\u7b80\u4ecb\nDubbo\u662f\u963f\u91cc\u5df4\u5df4\u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u9ad8\u6027\u80fd\u4f18\u79c0\u7684\u670d\u52a1\u6846\u67b6\uff0c\u4f7f\u5f97\u5e94\u7528\u53ef\u901a\u8fc7\u9ad8\u6027\u80fd\u7684RPC\u5b9e\u73b0\u670d\u52a1\u7684\u8f93\n\u51fa\u548c\u8f93\u5165\u529f\u80fd\uff0c\u53ef\u4ee5\u548cSpring\u6846\u67b6\u65e0\u7f1d\u96c6\u6210\u3002\nDubbo\u662f\u4e00\u6b3e\u9ad8\u6027\u80fd\u3001\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90Java RPC\u6846\u67b6\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e09\u5927\u6838\u5fc3\u80fd\u529b\uff1a\u9762\u5411\u63a5\u53e3\u7684\u8fdc\u7a0b\u65b9\u6cd5\u8c03\n\u7528\uff0c\u667a\u80fd\u5bb9\u9519\u548c\u8d1f\u8f7d\u5747\u8861\uff0c\u4ee5\u53ca\u670d\u52a1\u81ea\u52a8\u6ce8\u518c\u548c\u53d1\u73b0\u3002\n\u73b0\u5df2\u53d1\u5c55\u6210\u4e3aApache\u7684\u9876\u7ea7\u5b75\u5316\u5f00\u6e90\u9879\u76ee\uff0c\u8be6\u89c1\u5b98\u7f51\uff1ahttp://dubbo.apache.org/en-us/\n\n2.dubbo\u7ec4\u7ec7\u67b6\u6784\u56fe\n\u5b98\u7f51\u7684dubbo\u7ec4\u7ec7\u67b6\u6784\u56fe\nimg\n\u8be6\u7ec6\u4ecb\u7ecd\n\nRegistry:\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u4e2d\u5fc3\uff0c\u4f5c\u4e3a\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u6ce8\u518c\u4e0e\u53d1\u73b0\u7684\u4e2d\u5fc3\u3002\n\nProvider:\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5728\u6ce8\u518c\u4e2d\u5fc3\u6ce8\u518c\u4f5c\u4e3a\u670d\u52a1\u63d0\u4f9b\u7684\u4e00\u65b9\uff0c\u53d1\u5e03\u670d\u52a1\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u3002\n\nConsumer:\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u901a\u8fc7\u6ce8\u518c\u4e2d\u5fc3\u534f\u8c03\uff0c\u8ba2\u9605\u53ef\u7528\u7684\u5df2\u6ce8\u518c\u7684\u670d\u52a1\u3002\n\nContainer:\u670d\u52a1\u8fd0\u884c\u5bb9\u5668\uff0c\u72ec\u7acb\u7684\u5bb9\u5668\u7c7b\u4f3c\u4e8etomcat/jboss\u7684\u4f5c\u7528\uff0c\u4f5c\u4e3a\u670d\u52a1\u8fd0\u884c\u7684\u5bb9\u5668\u3002\n\nMonitor:dubbo\u7684\u76d1\u63a7\u4e2d\u5fc3\uff0c\u7528\u6765\u663e\u793a\u63a5\u53e3\u66b4\u9732\u3001\u6ce8\u518c\u60c5\u51b5\uff0c\u4e5f\u53ef\u4ee5\u770b\u63a5\u53e3\u7684\u8c03\u7528\u660e\u7ec6\uff0c\u8c03\u7528\u65f6\n\u95f4\u7b49\u3002\n\n\n\n3.dubbo\u7684\u4f18\u52bf\n\n\u5355\u4e00\u5e94\u7528\u67b6\u6784\uff0c\u5f53\u7f51\u7ad9\u6d41\u91cf\u5f88\u5c0f\u65f6\uff0c\u53ea\u9700\u4e00\u4e2a\u5e94\u7528\uff0c\u5c06\u6240\u6709\u529f\u80fd\u90fd\u90e8\u7f72\u5728\u4e00\u8d77\uff0c\u4ee5\u51cf\u5c11\u90e8\u7f72\u8282\u70b9\u548c \u6210\u672c\u3002\u6b64\u65f6\uff0c\u7528\u4e8e\u7b80\u5316\u589e\u5220\u6539\u67e5\u5de5\u4f5c\u91cf\u7684 \u6570\u636e\u8bbf\u95ee\u6846\u67b6(ORM)\u662f\u5173\u952e\u3002\n\u5782\u76f4\u5e94\u7528\u67b6\u6784\uff0c\u5f53\u8bbf\u95ee\u91cf\u9010\u6e10\u589e\u5927\uff0c\u5355\u4e00\u5e94\u7528\u589e\u52a0\u673a\u5668\u5e26\u6765\u7684\u52a0\u901f\u5ea6\u8d8a\u6765\u8d8a\u5c0f\uff0c\u5c06\u5e94\u7528\u62c6\u6210\u4e92\u4e0d\u76f8 \u5e72\u7684\u51e0\u4e2a\u5e94\u7528\uff0c\u4ee5\u63d0\u5347\u6548\u7387\u3002\u6b64\u65f6\uff0c\u7528\u4e8e\u52a0\u901f\u524d\u7aef\u9875\u9762\u5f00\u53d1\u7684 Web\u6846\u67b6(MVC)\u662f\u5173\u952e\u3002\n\u5206\u5e03\u5f0f\u670d\u52a1\u67b6\u6784\uff0c\u5f53\u5782\u76f4\u5e94\u7528\u8d8a\u6765\u8d8a\u591a\uff0c\u5e94\u7528\u4e4b\u95f4\u4ea4\u4e92\u4e0d\u53ef\u907f\u514d\uff0c\u5c06\u6838\u5fc3\u4e1a\u52a1\u62bd\u53d6\u51fa\u6765\uff0c\u4f5c\u4e3a\u72ec\u7acb \u7684\u670d\u52a1\uff0c\u9010\u6e10\u5f62\u6210\u7a33\u5b9a\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4f7f\u524d\u7aef\u5e94\u7528\u80fd\u66f4\u5feb\u901f\u7684\u54cd\u5e94\u591a\u53d8\u7684\u5e02\u573a\u9700\u6c42\u3002\u6b64\u65f6\uff0c\u7528\u4e8e\u63d0\u9ad8\u4e1a\u52a1\u590d\u7528\u53ca\u6574\u5408\u7684 \u5206\u5e03\u5f0f\u670d\u52a1\u6846\u67b6(RPC)\u662f\u5173\u952e\u3002\n\u6d41\u52a8\u8ba1\u7b97\u67b6\u6784\u5f53\u670d\u52a1\u8d8a\u6765\u8d8a\u591a\uff0c\u5bb9\u91cf\u7684\u8bc4\u4f30\uff0c\u5c0f\u670d\u52a1\u8d44\u6e90\u7684\u6d6a\u8d39\u7b49\u95ee\u9898\u9010\u6e10\u663e\u73b0\uff0c\u6b64\u65f6\u9700\u589e\u52a0\u4e00\u4e2a\u8c03\u5ea6\u4e2d\u5fc3\u57fa\u4e8e\u8bbf\u95ee\u538b\u529b\u5b9e\u65f6\u7ba1\u7406\u96c6\u7fa4\u5bb9\u91cf\uff0c\u63d0\u9ad8\u96c6\u7fa4\u5229\u7528\u7387\u3002\u6b64\u65f6\uff0c\u7528\u4e8e\u63d0\u9ad8\u673a\u5668\u5229\u7528\u7387\u7684 \u8d44\u6e90 \u8c03\u5ea6\u548c\u6cbb\u7406\u4e2d\u5fc3(SOA)\u662f\u5173\u952e\u3002\n\n\n\u516d\u3001Dubbo\u4e0eSpringCloud\u5bf9\u6bd4\n\n\n\u6838\u5fc3\u8981\u7d20\nDubbo\nSpring Cloud\n\n\n\n\n\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\nZookeeper\u3001Redis\u3001Nacos\nEureka\u3001Consul\u3001Nacos\n\n\n\u670d\u52a1\u8c03\u7528\u65b9\u5f0f\nRPC\nRestful api(http)\n\n\n\u670d\u52a1\u7f51\u5173\n\u65e0\nZuul\u3001gateway\n\n\n\u65ad\u8def\u5668\n\u4e0d\u5b8c\u7f8e\nHystrix\n\n\n\u5206\u5e03\u5f0f\u914d\u7f6e\n\u65e0\nConfig\u3001Apollo\u3001Nacos\u3001Consul\n\n\n\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7cfb\u7edf\n\u65e0\nSleuth\n\n\n\u6d88\u606f\u603b\u7ebf\n\u65e0\nBus\n\n\n\u6570\u636e\u6d41\n\u65e0\nStream\u57fa\u672cRedis\u3001Rabbit\u3001Kafka\u5b9e\u73b0\u6d88\u606f\u670d\u52a1\n\n\n\u6307\u91cf\u4efb\u52a1\n\u65e0\nTask\n\n\n\n\u603b\u7ed3\n\ndubbo\u7531\u4e8e\u662f\u4e8c\u8fdb\u5236\u7684\u4f20\u8f93\uff0c\u5360\u7528\u5e26\u5bbd\u4f1a\u66f4\u5c11\n\nspringCloud\u662fhttp\u534f\u8bae\u4f20\u8f93\uff0c\u5e26\u5bbd\u4f1a\u6bd4\u8f83\u591a\uff0c\u540c\u65f6\u4f7f\u7528http\u534f\u8bae\u4e00\u822c\u4f1a\u4f7f\u7528JSON\u62a5\u6587\uff0c\u6d88\u8017\u4f1a\u66f4\n\u5927\n\ndubbo\u7684\u5f00\u53d1\u96be\u5ea6\u8f83\u5927\uff0c\u539f\u56e0\u662fdubbo\u7684jar\u5305\u4f9d\u8d56\u95ee\u9898\u5f88\u591a\u5927\u578b\u5de5\u7a0b\u65e0\u6cd5\u89e3\u51b3\n\nspringcloud\u7684\u63a5\u53e3\u534f\u8bae\u7ea6\u5b9a\u6bd4\u8f83\u81ea\u7531\u4e14\u677e\u6563\uff0c\u9700\u8981\u6709\u5f3a\u6709\u529b\u7684\u884c\u653f\u63aa\u65bd\u6765\u9650\u5236\u63a5\u53e3\u65e0\u5e8f\u5347\u7ea7\n\ndubbo\u7684\u6ce8\u518c\u4e2d\u5fc3\u53ef\u4ee5\u9009\u62e9zk,redis\u7b49\u591a\u79cd\uff0cspringcloud\u7684\u6ce8\u518c\u4e2d\u5fc3\u53ea\u80fd\u7528eureka\u6216\u8005\u81ea\u7814\n\n\n\n\u4e03\u3001Spring Cloud Alibaba\n1.SpringCloud Alibaba\u7b80\u4ecb\nSpring Cloud Alibaba \u81f4\u529b\u4e8e\u63d0\u4f9b\u5206\u5e03\u5f0f\u5e94\u7528\u670d\u52a1\u5f00\u53d1\u7684\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848\u3002\u9879\u76ee\u5305\u542b\u5f00\u53d1\u5206\u5e03\u5f0f\u5e94\u7528\u670d \u52a1\u7684\u5fc5\u9700\u7ec4\u4ef6\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u901a\u8fc7 Spring Cloud \u7f16\u7a0b\u6a21\u578b\u8f7b\u677e\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u6765\u5f00\u53d1\u5206\u5e03\u5f0f\u5e94\u7528\u670d\u52a1\u3002\n\n2.\u4e3b\u8981\u529f\u80fd\n\n\u670d\u52a1\u9650\u6d41\u964d\u7ea7:\u9ed8\u8ba4\u652f\u6301 Servlet\u3001Feign\u3001RestTemplate\u3001Dubbo \u548c RocketMQ \u9650\u6d41\u964d\u7ea7\u529f\u80fd \u7684\u63a5\u5165\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7\u63a7\u5236\u53f0\u5b9e\u65f6\u4fee\u6539\u9650\u6d41\u964d\u7ea7\u89c4\u5219\uff0c\u8fd8\u652f\u6301\u67e5\u770b\u9650\u6d41\u964d\u7ea7 Metrics \u76d1\u63a7\u3002\n\n\u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0:\u9002\u914d SpringCloud \u670d\u52a1\u6ce8\u518c\u4e0e\u53d1\u73b0\u6807\u51c6\uff0c\u9ed8\u8ba4\u96c6\u6210\u4e86 Ribbon\u7684\u652f\u6301\u3002\n\n\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406:\u652f\u6301\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u5916\u90e8\u5316\u914d\u7f6e\uff0c\u914d\u7f6e\u66f4\u6539\u65f6\u81ea\u52a8\u5237\u65b0\u3002\n\n\u6d88\u606f\u9a71\u52a8\u80fd\u529b:\u57fa\u4e8e SpringCloudStream \u4e3a\u5fae\u670d\u52a1\u5e94\u7528\u6784\u5efa\u6d88\u606f\u9a71\u52a8\u80fd\u529b\u3002\n\n\u963f\u91cc\u4e91\u5bf9\u8c61\u5b58\u50a8:\u963f\u91cc\u4e91\u63d0\u4f9b\u7684\u6d77\u91cf\u3001\u5b89\u5168\u3001\u4f4e\u6210\u672c\u3001\u9ad8\u53ef\u9760\u7684\u4e91\u5b58\u50a8\u670d\u52a1\u3002\u652f\u6301\u5728\u4efb\u4f55\u5e94\u7528\u3001\u4efb\n\u4f55\u65f6\u95f4\u3001\u4efb\u4f55\u5730\u70b9\u5b58\u50a8\u548c\u8bbf\u95ee\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u3002\n\n\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6:\u63d0\u4f9b\u79d2\u7ea7\u3001\u7cbe\u51c6\u3001\u9ad8\u53ef\u9760\u3001\u9ad8\u53ef\u7528\u7684\u5b9a\u65f6(\u57fa\u4e8e Cron \u8868\u8fbe\u5f0f)\u4efb\u52a1\u8c03\u5ea6\u670d\u52a1\u3002\n\u540c\u65f6\u63d0\u4f9b\u5206\u5e03\u5f0f\u7684\u4efb\u52a1\u6267\u884c\u6a21\u578b\uff0c\u5982\u7f51\u683c\u4efb\u52a1\u3002\u7f51\u683c\u4efb\u52a1\u652f\u6301\u6d77\u91cf\u5b50\u4efb\u52a1\u5747\u5300\u5206\u914d\u5230\u6240\u6709 Worker(schedulerx-client)\u4e0a\u6267\u884c\u3002\n\n\n3.\u5df2\u5305\u62ec\u7684\u7ec4\u4ef6\u6709\n\nSentinel:\u628a\u6d41\u91cf\u4f5c\u4e3a\u5207\u5165\u70b9\uff0c\u4ece\u6d41\u91cf\u63a7\u5236\u3001\u7194\u65ad\u964d\u7ea7\u3001\u7cfb\u7edf\u8d1f\u8f7d\u4fdd\u62a4\u7b49\u591a\u4e2a\u7ef4\u5ea6\u4fdd\u62a4\u670d\u52a1\u7684\u7a33\u5b9a\u6027\u3002 \nNacos:\u4e00\u4e2a\u66f4\u6613\u4e8e\u6784\u5efa\u4e91\u539f\u751f\u5e94\u7528\u7684\u52a8\u6001\u670d\u52a1\u53d1\u73b0\u3001\u914d\u7f6e\u7ba1\u7406\u548c\u670d\u52a1\u7ba1\u7406\u5e73\u53f0\u3002\n\nRocketMQ:\u4e00\u6b3e\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6d88\u606f\u7cfb\u7edf\uff0c\u57fa\u4e8e\u9ad8\u53ef\u7528\u5206\u5e03\u5f0f\u96c6\u7fa4\u6280\u672f\uff0c\u63d0\u4f9b\u4f4e\u5ef6\u65f6\u7684\u3001\u9ad8\u53ef\u9760\u7684\u6d88\u606f \u53d1\u5e03\u4e0e\u8ba2\u9605\u670d\u52a1\u3002\n\nDubbo:Apache DubboTM \u662f\u4e00\u6b3e\u9ad8\u6027\u80fd Java RPC \u6846\u67b6\u3002\n\nSeata:\u963f\u91cc\u5df4\u5df4\u5f00\u6e90\u4ea7\u54c1\uff0c\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u9ad8\u6027\u80fd\u5fae\u670d\u52a1\u5206\u5e03\u5f0f\u4e8b\u52a1\u89e3\u51b3\u65b9\u6848\u3002\n\nAlibaba Cloud ACM:\u4e00\u6b3e\u5728\u5206\u5e03\u5f0f\u67b6\u6784\u73af\u5883\u4e2d\u5bf9\u5e94\u7528\u914d\u7f6e\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\u548c\u63a8\u9001\u7684\u5e94\u7528\u914d\u7f6e\u4e2d\u5fc3\u4ea7\u54c1\u3002\n\nAlibaba Cloud OSS: \u963f\u91cc\u4e91\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1(Object Storage Service\uff0c\u7b80\u79f0 OSS)\uff0c\u662f\u963f\u91cc\u4e91\u63d0\u4f9b\u7684\u6d77 \u91cf\u3001\u5b89\u5168\u3001\u4f4e\u6210\u672c\u3001\u9ad8\u53ef\u9760\u7684\u4e91\u5b58\u50a8\u670d\u52a1\u3002\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u5e94\u7528\u3001\u4efb\u4f55\u65f6\u95f4\u3001\u4efb\u4f55\u5730\u70b9\u5b58\u50a8\u548c\u8bbf\u95ee\u4efb\u610f\u7c7b \u578b\u7684\u6570\u636e\u3002\n\nAlibaba Cloud SchedulerX: \u963f\u91cc\u4e2d\u95f4\u4ef6\u56e2\u961f\u5f00\u53d1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u4ea7\u54c1\uff0c\u63d0\u4f9b\u79d2\u7ea7\u3001\u7cbe\u51c6\u3001\u9ad8\u53ef \u9760\u3001\u9ad8\u53ef\u7528\u7684\u5b9a\u65f6(\u57fa\u4e8e Cron \u8868\u8fbe\u5f0f)\u4efb\u52a1\u8c03\u5ea6\u670d\u52a1\u3002\n\nAlibaba Cloud SMS: \u8986\u76d6\u5168\u7403\u7684\u77ed\u4fe1\u670d\u52a1\uff0c\u53cb\u597d\u3001\u9ad8\u6548\u3001\u667a\u80fd\u7684\u4e92\u8054\u5316\u901a\u8baf\u80fd\u529b\uff0c\u5e2e\u52a9\u4f01\u4e1a\u8fc5\u901f\u642d\u5efa\u5ba2 \u6237\u89e6\u8fbe\u901a\u9053\u3002\n\n\n4.\u4e0eSpringCloud\u5b98\u65b9\u5bf9\u6bd4\n\u963f\u91cc\u5df4\u5df4\u63d0\u4f9b\u7684\u65b9\u6848\u8ddfSpring\u5b98\u65b9\u63d0\u4f9b\u7684\u65b9\u6848\u6709\u4e00\u4e9b\u5bf9\u5e94\u5173\u7cfb:\nNacos = Eureka/Consule + Config + Admin\nSentinel = Hystrix + Dashboard + Turbine\nDubbo = Ribbon + Feign\nRocketMQ = RabbitMQ\nSchedulerx = Quartz\n\n", "categories": [{"name": "Spring", "slug": "Spring", "permalink": "/category/Spring/"}, {"name": "SpringCloud", "slug": "SpringCloud", "permalink": "/category/SpringCloud/"}], "tags": [{"name": "SpringBoot", "slug": "SpringBoot", "permalink": "/tag/SpringBoot/"}, {"name": "SpringCloud", "slug": "SpringCloud", "permalink": "/tag/SpringCloud/"}]}, {"title": "\u7528xshell\u8fde\u63a5\u865a\u62df\u673a\u4e2d\u7684Centos7", "date": "2020-06-06T22:14:50-00.00", "path": "/archives/xshell connect to Centos7 in VMware/", "text": "\u53c2\u8003https://www.linuxidc.com/Linux/2017-07/145845.htm\n", "categories": [{"name": "Linux", "slug": "Linux", "permalink": "/category/Linux/"}], "tags": [{"name": "Linux", "slug": "Linux", "permalink": "/tag/Linux/"}]}, {"title": "Docker:Install software", "date": "2020-05-31T20:47:14-00.00", "path": "/archives/Docker:Install-software/", "text": "\u6982\u5ff5\n\n\u955c\u50cf\uff1a\u76f8\u5f53\u4e8ejava\u4e2d\u7684\u7c7b,\u955c\u50cf\u7531\u4e00\u5c42\u5c42\u53ea\u8bfb\u5c42\u5806\u5728\u4e00\u8d77\n\u5bb9\u5668\uff1a\u955c\u50cf\u53ea\u8bfb\u5c42+\u8bfb\u5199\u5c42\uff0c\u8fd0\u884c\u6001\u5bb9\u5668\u4e3a\u7531\u4e00\u4e2a\u53ef\u8bfb\u5199\u7684\u6587\u4ef6\u7cfb\u7edf\u300c\u9759\u6001\u5bb9\u5668\u300d+ \u9694\u79bb\u7684\u8fdb\u7a0b\u7a7a\u95f4\u548c\u5176\u4e2d\u7684\u8fdb\u7a0b\u6784\u6210(\u53ef\u4ee5\u7406\u89e3\u4e3a\u865a\u62df\u673a\u4e2d\u7684\u865a\u62df\u673a)\n\n\n\n\u67e5\u770b\u955c\u50cf\ndocker images\n\n\n\u67e5\u770b\u5bb9\u5668\ndocker ps -a\n\n\n\u5b89\u88c5Mysql\n\u4e0b\u8f7dmysql5.7\u7684docker\u955c\u50cf\ndocker pull mysql:5.7\n\n\u4f7f\u2f64docker\u547d\u4ee4\u542f\u52a8\u5bb9\u5668\nmkdir /mydata/mysql/mysql5.7 #\u5148\u5728\u6839\u76ee\u5f55\u521b\u5efa\u5bb9\u5668\u6765\u5b58\u653emysql\u76f8\u5173\n#\u5c06\u5bb9\u5668\u76843306\u7aef\u53e3\u6620\u5c04\u5230\u4e3b\u673a\u76843307\u63a5\u53e3\uff0c\u9002\u5408\u4e3b\u673a\u76843306\u63a5\u53e3\u88ab\u4e3b\u673aMysql\u5360\u7528\u60c5\u51b5\u4e0b\ndocker run -p 3307:3306 --name mysql5.7 \\\n-v /mydata/mysql/mysql5.7/log:/var/log/mysql5.7 \\\n-v /mydata/mysql/mysql5.7/data:/var/lib/mysql5.7 \\\n-v /mydata/mysql/mysql5.7/conf:/etc/mysql5.7 \\\n-e MYSQL_ROOT_PASSWORD=root \\\n-d mysql:5.7\n\n\u53c2\u6570\u8bf4\u660e\n\n--restart=always\uff1a\u5bb9\u5668\u81ea\u542f\u52a8\n-p 3307:3306\uff1a\u5c06\u5bb9\u5668\u76843306\u7aef\u2f1d\u6620\u5c04\u5230\u4e3b\u673a\u76843307\u7aef\u2f1d        \n-v /mydata/mysql/conf:/etc/mysql\uff1a\u5c06\u914d\u7f6e\u2f42\u4ef6\u5939\u6302\u5728\u5230\u4e3b\u673a\n-v /mydata/mysql/log:/var/log/mysql\uff1a\u5c06\u2f47\u5fd7\u2f42\u4ef6\u5939\u6302\u8f7d\u5230\u4e3b\u673a\n-v /mydata/mysql/data:/var/lib/mysql/\uff1a\u5c06\u6570\u636e\u2f42\u4ef6\u5939\u6302\u8f7d\u5230\u4e3b\u673a\n-e MYSQL_ROOT_PASSWORD=root\uff1a\u521d\u59cb\u5316root\u2f64\u6237\u7684\u5bc6\u7801\n\n\n\n\u8fdb\u2f0a\u8fd0\u2f8fmysql\u7684docker\u5bb9\u5668\ndocker exec -it mysql5.7 /bin/bash\n\n\n\u4f7f\u2f64Mysql\u547d\u4ee4\u6253\u5f00\u5ba2\u6237\u7aef\nmysql -uroot -proot\n\n\n\u6d4b\u8bd5\u8fde\u63a5\n\u4f7f\u7528Navicat\u8fde\u63a5\u5de5\u5177\n\n\u8fde\u63a5\u6210\u529f\n\n\u5b89\u88c5Nginx\n\u4e0b\u8f7dNginx1.10\u7684docker\u955c\u50cf\ndocker pull nginx:1.18\n\n\u4ece\u5bb9\u5668\u4e2d\u62f7\u2ec9Nginx\u914d\u7f6e\n\u5148\u8fd0\u2f8f\u2f00\u6b21\u5bb9\u5668\uff08\u4e3a\u4e86\u62f7\u2ec9\u914d\u7f6e\u2f42\u4ef6\uff09\ndocker run -p 81:80 --name nginx1.18 \\\n-v /mydata/nginx1.18/html:/usr/share/nginx1.18/html \\\n-v /mydata/nginx1.18/logs:/var/log/nginx1.18 \\\n-d nginx:1.18\n\n\u6ce8\uff1a\u52a0\u4e86 -d \u53c2\u6570\u9ed8\u8ba4\u4e0d\u4f1a\u8fdb\u2f0a\u5bb9\u5668\uff0c\u60f3\u8981\u8fdb\u2f0a\u5bb9\u5668\u9700\u8981\u4f7f\u2f64\u6307\u4ee4 docker exec\u3002\n\n\u5c06\u5bb9\u5668\u5185\u7684\u914d\u7f6e\u2f42\u4ef6\u62f7\u2ec9\u5230\u6307\u5b9a\u2f6c\u5f55\ndocker container cp nginx1.18:/etc/nginx /mydata/nginx1.18/\n\n\u4fee\u6539\u2f42\u4ef6\u540d\u79f0\ncd /mydata/nginx1.18 \nmv nginx conf\n\n\u7ec8\u2f4c\u5e76\u5220\u9664\u5bb9\u5668\ndocker stop nginx1.18\ndocker rm nginx1.18\n\n\u518d\u6b21\u4f7f\u2f64docker\u547d\u4ee4\u542f\u52a8\ndocker run -p 81:80 --name nginx1.18 \\\n-v /mydata/nginx1.18/html:/usr/share/nginx1.18/html \\\n-v /mydata/nginx1.18/logs:/var/log/nginx1.18 \\\n-v /mydata/nginx1.18/conf:/etc/nginx1.18 \\\n-d nginx:1.18\n\n\u542f\u52a8\u6210\u529f\n\n", "categories": [{"name": "Linux", "slug": "Linux", "permalink": "/category/Linux/"}, {"name": "Docker", "slug": "Docker", "permalink": "/category/Docker/"}], "tags": [{"name": "Linux", "slug": "Linux", "permalink": "/tag/Linux/"}, {"name": "Docker", "slug": "Docker", "permalink": "/tag/Docker/"}]}, {"title": "Docker deployment", "date": "2020-05-31T15:39:08-00.00", "path": "/archives/Docker-deployment/", "text": "\u73af\u5883\nCentOs 7\n1.Docker\u5e38\u7528\u547d\u4ee4\n#0.\u641c\u7d22\u6536\u85cf\u6570\u4e0d\u2f29\u4e8e10\u7684\u955c\u50cf\ndocker search -s 10 \u540d\u79f0\n\n#1.\u4e0b\u8f7d\u955c\u50cf\ndocker pull \u540d\u79f0:tag\n\n#2.\u67e5\u770b\u4e0b\u8f7d\u7684\u955c\u50cf\ndocker images;\n\n#3.\u67e5\u770b\u6b63\u5728\u8fd0\u2f8f\u7684\u5bb9\u5668\ndocker ps\n\n#4.\u67e5\u770b\u6240\u6709\u5bb9\u5668\ndocker ps -a\n\n#5.\u8fd0\u2f8f\u5bb9\u5668\ndocker start/restart \u5bb9\u5668\u540d\u79f0/id\n\n#6.\u505c\u2f4c\u5bb9\u5668\ndocker stop \u5bb9\u5668\u540d\u79f0/id\n\n#7.\u5728\u4f7f\u2f64 -d \u53c2\u6570\u65f6\uff0c\u5bb9\u5668\u542f\u52a8\u540e\u4f1a\u8fdb\u2f0a\u540e\u53f0\u3002\u6b64\u65f6\u60f3\u8981\u8fdb\u2f0a\u5bb9\u5668\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6307\u4ee4\u8fdb\u2f0a\ndocker attach \u5bb9\u5668\u540d\u79f0/id #\u4e0d\u63a8\u8350\u4f7f\u2f64\uff0c\u56e0\u4e3a\u9000\u51fa\u65f6\u4f1a\u5bfc\u81f4\u5bb9\u5668\u7684\u505c\u2f4c\ndocker exec -it \u5bb9\u5668\u540d\u79f0/id /bin/bash #\u5728\u8fdb\u2f0a\u5bb9\u5668\u540e\u53ef\u4f7f\u2f64linux\u547d\u4ee4\uff0c\u9000\u51fa\u4f7f\u2f64exit\n\n#8.\u5bfc\u51fa\ndocker export \u5bb9\u5668\u540d\u79f0/id &gt; \u540d\u79f0.tar\n\n#9.\u5bfc\u2f0a\uff0c\u53ef\u4ee5\u4f7f\u2f64 docker import \u4ece\u5bb9\u5668\u5feb\u7167\u2f42\u4ef6\u4e2d\u518d\u5bfc\u2f0a\u4e3a\u955c\u50cf\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06\u5feb\u7167\u2f42\u4ef6\u6307\u5b9a\n\u8def\u5f84\u7684tar \u5bfc\u2f0a\u5230\u955c\u50cf test/test:v1:\ncat tar\u8def\u5f84 | docker import - test/test:v1\n#\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a URL \u6216\u8005\u67d0\u4e2a\u2f6c\u5f55\u6765\u5bfc\u2f0a\ndocker import http://example.com/exampleimage.tgz example/imagerepo\n\n#10.\u5220\u9664\u5bb9\u5668\ndocker rm -f \u5bb9\u5668\u540d\u79f0/id\n\n#11.\u542f\u52a8&amp;\u505c\u6b62docker\nservice docker start#\u542f\u52a8docker\nservice docker stop#\u505c\u6b62docker\nservice docker restart#\u91cd\u542fdocker\n\n#12.\u5f00\u673a\u81ea\u542f\u52a8docker\nsystemctl enable docker\n\n2.\u5378\u8f7d\u65e7\u7248\u672c\nsudo yum remove docker \\\n docker-client \\\n docker-client-latest \\\n docker-common \\\n docker-latest \\\n docker-latest-logrotate \\\n docker-logrotate \\\n docker-engine\n\n3.\u5b89\u88c5 Docker Engine-Community\n\u5728\u65b0\u4e3b\u673a\u4e0a\u2fb8\u6b21\u5b89\u88c5Docker Engine-Community\u4e4b\u524d\uff0c\u9700\u8981\u8bbe\u7f6eDocker \u4ed3\u5e93\u3002\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u4ece\u4ed3\u5e93\u5b89\u88c5\u548c\u66f4\u65b0 Docker\u3002\n3.1\u8bbe\u7f6e\u4ed3\u5e93\n\u5b89\u88c5\u6240\u9700\u7684\u8f6f\u4ef6\u5305\u3002yum-utils \u63d0\u4f9b\u4e86 yum-config-manager \uff0c\u5e76\u4e14 device mapper \u5b58\u50a8\u9a71\u52a8\u7a0b\u5e8f\u9700\u8981 device-mapper-persistent-data \u548c lvm2\u3002\nsudo yum install -y yum-utils \\\n device-mapper-persistent-data \\\n lvm2\n\n\n\u4f7f\u2f64\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbe\u7f6e\u7a33\u5b9a\u7684\u4ed3\u5e93\n#\u5b98\u2f45\u9ed8\u8ba4\u4e0b\u8f7d\nsudo yum-config-manager \\\n --add-repo \\\nhttps://download.docker.com/linux/centos/docker-ce.repo\n\n#\u963f\u2fa5\u4e91\u4e0b\u8f7d\nsudo yum-config-manager --add-repo http://mirrors.aliyun.com/dockerce/linux/centos/docker-ce.repo\n\n3.2\u5b89\u88c5 Docker Engine-Community\n\u5b89\u88c5\u6700\u65b0\u7248\u672c\nsudo yum install docker-ce docker-ce-cli containerd.io\n\n\u8981\u5b89\u88c5\u7279\u5b9a\u7248\u672c\u7684 Docker Engine-Community\uff0c\u8bf7\u5728\u5b58\u50a8\u5e93\u4e2d\u5217\u51fa\u53ef\u2f64\u7248\u672c\uff0c\u7136\u540e\u9009\u62e9\u5e76\u5b89\u88c5\uff1a\n\n\u5217\u51fa\u5e76\u6392\u5e8f\u60a8\u5b58\u50a8\u5e93\u4e2d\u53ef\u2f64\u7684\u7248\u672c\u3002\u6b64\u793a\u4f8b\u6309\u7248\u672c\u53f7\uff08\u4ece\u2fbc\u5230\u4f4e\uff09\u5bf9\u7ed3\u679c\u8fdb\u2f8f\u6392\u5e8f\nyum list docker-ce --showduplicates | sort -r\n\n\n\u901a\u8fc7\u5176\u5b8c\u6574\u7684\u8f6f\u4ef6\u5305\u540d\u79f0\u5b89\u88c5\u7279\u5b9a\u7248\u672c\uff0c\u8be5\u8f6f\u4ef6\u5305\u540d\u79f0\u662f\u8f6f\u4ef6\u5305\u540d\u79f0\uff08docker-ce\uff09\u52a0\u4e0a\u7248\u672c\u5b57\u7b26\u4e32 \uff08\u7b2c\u2f06\u5217\uff09\uff0c\u4ece\u7b2c\u2f00\u4e2a\u5192\u53f7\uff08:\uff09\u2f00\u76f4\u5230\u7b2c\u2f00\u4e2a\u8fde\u5b57\u7b26\uff0c\u5e76\u2f64\u8fde\u5b57\u7b26\uff08-\uff09\u5206\u9694\u3002\u4f8b\u5982\uff1adocker-ce18.09.1\u3002\nsudo yum install docker-ce- docker-ce-cli- containerd.io\n\n\n\n3.3\u542f\u52a8Docker\nsudo systemctl start docker\n\n3.4\u67e5\u770bDocker\u547d\u4ee4\n\n3.5\u955c\u50cf\u52a0\u901f\nvim /etc/docker/daemon.json\n\n{ \n    &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]     \n}\n\n\u63a8\u8350\u4f7f\u2f64\u963f\u2fa5\u4e91\u52a0\u901f\uff0c\u53c2\u8003\u6559\u7a0bhttps://help.aliyun.com/document_detail/60750.html\n\u66f4\u6539\u540e\u91cd\u542f\u670d\u52a1:\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n4.\u53c2\u8003Reference\nCentOs Docker Install\n", "categories": [{"name": "Linux", "slug": "Linux", "permalink": "/category/Linux/"}, {"name": "Docker", "slug": "Docker", "permalink": "/category/Docker/"}], "tags": [{"name": "Linux", "slug": "Linux", "permalink": "/tag/Linux/"}, {"name": "Docker", "slug": "Docker", "permalink": "/tag/Docker/"}]}, {"title": "Import excel to mysql", "date": "2020-05-28T12:35:00-00.00", "path": "/archives/Import-excel-to-mysql/", "text": "Github:import excel to mysql\n1.\u51c6\u5907\n1.1\u6dfb\u52a0\u6240\u9700\u8981\u7684\u7684\u4f9d\u8d56\n&lt;!-- excel\u9700\u8981\u7684\u5305--&gt;\n&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi --&gt;\n&lt;!--\u6587\u4ef6\u4e0a\u4f20\u7ec4\u4ef6--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;\n    &lt;version&gt;1.3.1&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;commons-io&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n    &lt;version&gt;2.5&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!--\u8bfb\u53d6excel\u6587\u4ef6--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n    &lt;artifactId&gt;poi&lt;/artifactId&gt;\n    &lt;version&gt;3.17&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;\n    &lt;version&gt;3.17&lt;/version&gt;\n&lt;/dependency&gt;\n\n1.2\u6839\u636eexcel\u7684\u5b57\u6bb5\u6dfb\u52a0\u5bf9\u5e94\u5b57\u6bb5\u7684\u8868\nexcel\u8868\n\nmysql\u8868\n\n1.3\u5728IDEA\u4f7f\u7528easycode\u63d2\u4ef6\u5bf9\u6b64\u8868\u4f7f\u7528\u751f\u6210MVC\n\u76ee\u5f55\u56fe\u5982\u4e0b\n\n2.\u6838\u5fc3\u4ee3\u7801\n2.1\u521b\u5efa\u80fd\u5904\u7406excel\u8f6c\u6362\u4e3aList&lt;Object&gt;\u7684\u65b9\u6cd5\n\u521b\u5efaExcelForList\u7c7b\u5e76\u521b\u5efaExcelForList\u65b9\u6cd5\u7528\u4e8e\u5904\u7406excel\u8868\u5404\u4e2a\u8bb0\u5f55\u5e76\u8fd4\u56de\npackage com.example.demo.excelUtils;\n\nimport com.example.demo.entity.Course;\nimport com.example.demo.dao.CourseDao;\nimport com.example.demo.service.CourseService;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.springframework.stereotype.Service;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.annotation.Resource;\nimport java.beans.PropertyDescriptor;\nimport java.io.InputStream;\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class ExcelForList {\n    public static List&lt;Object&gt; ExcelForList(MultipartFile file, Class&lt;?&gt;  beanclazz, Boolean titleExist, String excelType) {\n        List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();\n        Workbook wb;\n        try {\n            // IO\u6d41\u8bfb\u53d6\u6587\u4ef6\n            InputStream input = file.getInputStream();\n            // \u521b\u5efa\u6587\u6863\n            if(excelType.equals(&quot;xls&quot;)) {\n                wb = new HSSFWorkbook(input);\n            } else if(excelType.equals(&quot;xlsx&quot;)){\n                wb = new XSSFWorkbook(input);\n            }else{\n                System.out.println(&quot;\u9519\u8bef\uff01---------------------\u6587\u4ef6\u4e0d\u542bxls\u6216xlsx\uff01-----------------&quot;);\n                return  null;\n            }\n            // \u5f97\u5230\u7b2c\u4e00\u5f20\u5de5\u4f5c\u8868\n            Sheet sheet = wb.getSheetAt(0);\n            int i;\n            if (titleExist) {\n                i = 2;\n            } else {\n                i = 0;\n            }\n            // \u884c\u7684\u904d\u5386\n            //excels\u662f\u4ece0\u5f00\u662f\u7684\uff0cgetLastRowNum\u662f\u83b7\u53d6\u6700\u540e\u4e00\u884c\u7684\u884c\u6570\n            for (; i &lt;= sheet.getLastRowNum(); i++) {\n                // \u5f97\u5230\u884c\n                Row row = sheet.getRow(i);\n                // \u5355\u5143\u683c\u7684\u904d\u5386\n                // \u5b9e\u4f8b\u5316\u5bf9\u8c61\n                Object object = beanclazz.newInstance();\n\n                Field[] fields = beanclazz.getDeclaredFields();\n                int j = 0;\n                for (Field field : fields) {\n                    String fieldName = field.getName();\n                    PropertyDescriptor pd = new PropertyDescriptor(fieldName, beanclazz);\n                    Method getMethod = pd.getWriteMethod();\n                    Cell cell = row.getCell(j++);\n                    try{\n                        int type = cell.getCellType();\n\n                        if (type == cell.CELL_TYPE_BOOLEAN) {\n                            // \u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u7684\u503c\n                            boolean value = cell.getBooleanCellValue();\n                            getMethod.invoke(object, value);\n                            System.out.println(object);\n                            System.out.println(value);\n                        } else if (type == cell.CELL_TYPE_NUMERIC) {\n                            // \u8fd4\u56de\u6570\u503c\u7c7b\u578b\u7684\u503c\n                            Double d = cell.getNumericCellValue();\n                            int value = d.intValue();\n                            getMethod.invoke(object, new Integer(value));\n                        } else if (type == cell.CELL_TYPE_STRING) {\n                            // \u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u503c\n                            String value = cell.getStringCellValue();\n                            getMethod.invoke(object, new String(value));\n                        }\n\n                    }catch (Exception e) {\n                        System.out.println(&quot;&quot;);\n                    }\n                }\n                list.add(object);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return list;\n    }\n\n\n}\n\n2.1\u521b\u5efa\u63a5\u53e3\n\n\u83b7\u53d6\u5230\u6587\u4ef6\n\u8c03\u7528\u4e0a\u8ff0\u65b9\u6cd5\u83b7\u53d6\u5230object\u7684List\n\u5faa\u73afList\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4e2acourse\u5bf9\u8c61\u518d\u63d2\u5165\u5230\u6570\u636e\u5e93\u4e2d\n\n\n//    \u5bfc\u5165excel\u5230\u6570\u636e\u5e93\n@RequestMapping(value=&quot;/import&quot;,method = RequestMethod.POST,produces = { &quot;application/json;charset=UTF-8&quot;})\n    public  String imporCourse(@RequestParam(&quot;excelFile&quot;) MultipartFile excelFile, HttpSession httpSession) throws IOException {\n        InputStream in =excelFile.getInputStream();\n        String fileOriginalName=excelFile.getOriginalFilename();\n        String fileName=excelFile.getName();\n        String excelType=fileOriginalName.substring(fileOriginalName.indexOf(&quot;.&quot;)+1);\n\n        //\u8bb0\u5f55\u63d2\u5165\u591a\u6761\u8bb0\u5f55\u5230\u4e86\u6570\u636e\u5e93\uff1b\n        int importSuccessNum=0;\n        int importAllNum=0;\n        boolean importSuccess;\n\n        System.out.println(&quot;in:::&quot;+in);\n        System.out.println(&quot;fileOriginalName:::&quot;+fileOriginalName);\n        System.out.println(&quot;fileName:::&quot;+fileName);\n        System.out.println(&quot;excelType:::&quot;+excelType);\n        List&lt;Object&gt; forlist= ExcelForList.ExcelForList(excelFile,Course.class,true,excelType);\n        for (Object object: forlist) {\n//            \u5728\u8fd9\u91cc\u5bf9\u6bcf\u4e2aObject\u8f6c\u6362\u4e3acourse\u5bf9\u8c61\n            Course course=(Course) object;\n            importAllNum++;\n            importSuccess=courseService.importExcel(course);\n            if(importSuccess)\n                importSuccessNum++;\n\n        }\n        httpSession.setAttribute(&quot;importAllNum&quot;,importAllNum);\n        httpSession.setAttribute(&quot;importSuccessNum&quot;,importSuccessNum);\n\n        if(importSuccessNum&gt;0)\n            return &quot;success!&quot;+&quot;\u5e94\u5904\u7406&quot;+importAllNum+&quot;\u6761,\u5df2\u6210\u529f\u5904\u7406&quot;+importSuccessNum+&quot;\u6761\uff01&quot;;\n        else{\n            return &quot;error!&quot;;\n        }\n\n3.Console\n3.1POSTMAN\n\u8c03\u7528\u63a5\u53e3http://localhost:8886/course/import\nmethod=\"POST\"\n\nHEADERS\u4e2d\u6dfb\u52a0KEY:Content-Type,VALUE:multipart/form-data\nBODY\u4e2d\u9009\u62e9\u7c7b\u578b\u4e3aform-data\u5e76\u4e0a\u4f20\u6587\u4ef6\n\n\n\n3.2MYSQL\n\n3.3IDEA\n\n\n", "categories": [{"name": "Java", "slug": "Java", "permalink": "/category/Java/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/tag/Java/"}]}, {"title": "Hadoop\u4f2a\u5206\u5e03\u5f0f\u914d\u7f6e", "date": "2020-05-02T18:59:32-00.00", "path": "/archives/Hadoop\u4f2a\u5206\u5e03\u5f0f\u914d\u7f6e/", "text": "1.\u51c6\u5907\n\njava\nHadoop,\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\ndeepin linux\u64cd\u4f5c\u7cfb\u7edf(\u6216\u5176\u4ed6Ubuntu)\n\n\n2.\u914d\u7f6e\n2.1\u5b89\u88c5SSH\u3001\u914d\u7f6eSSH\u65e0\u5bc6\u7801\u767b\u9646\nUbuntu \u9ed8\u8ba4\u5df2\u5b89\u88c5\u4e86 SSH client\uff0c\u6b64\u5916\u8fd8\u9700\u8981\u5b89\u88c5 SSH server\uff1a\nsudo apt-get install openssh-server\n\n\u5b89\u88c5\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u767b\u9646\u672c\u673a\uff1a\nssh localhost\n\n\u7136\u540e\u7528\u8f93\u5165yes\u767b\u5f55\n\n\u751f\u6210\u65e0\u5bc6\u7801\u767b\u5f55\uff1a\nexit                       # \u9000\u51fa\u521a\u624d\u7684 ssh localhost\ncd ~/.ssh/      # \u82e5\u6ca1\u6709\u8be5\u76ee\u5f55\uff0c\u8bf7\u5148\u6267\u884c\u4e00\u6b21ssh localhost\nssh-keygen -t rsa             # \u4f1a\u6709\u63d0\u793a\uff0c\u90fd\u6309\u56de\u8f66\u5c31\u53ef\u4ee5\ncat ./id_rsa.pub &gt;&gt; ./authorized_keys  # \u52a0\u5165\u6388\u6743\n\n2.2\u914d\u7f6ejava\u73af\u5883\n\u5148\u6267\u884c\njava -version\n\n\u5982\u679c\u7248\u672c\u662fopenjdk\uff0c\u5219\u5220\u9664\u5e76\u4e0b\u8f7djdk\nsudo apt-get remove openjdk*\n\n\u5220\u9664\u5e76\u4e0b\u8f7d\u597djdk\u540e\u914d\u7f6ejava\u73af\u5883\u53d8\u91cf\nsudo vi /etc/bash.bashrc #\u914d\u7f6e\u6c38\u4e45\u73af\u5883\u53d8\u91cf\n\n\u7136\u540e\u63d2\u5165\nexport JAVA_HOME=/usr/lib/jvm/jdk1.x.y\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=${JAVA_HOME}/bin:$PATH\n\n\u518d\u4f7f\u5176\u751f\u6548\nsource /etc/bash.bashrc\n\n2.3\u914d\u7f6eHadoop\n\u5b89\u88c5hadoop\u5230/usr\u4e0b\n\u68c0\u9a8c\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0c\u8fdb\u5165hadoop-2.x.y/bin/hadoop\u4e0b\ncd /usr/local/hadoop-2.x.y/bin/hadoop\nhadoop version\n\n\u663e\u793a\u7248\u672c\u7b49\u4fe1\u606f\u5373\u6210\u529f\n\u66f4\u6539\u73af\u5883\u53d8\u91cf\uff0c\u540c\u4e0ajava\u914d\u7f6e\uff0c\u63d2\u5165\nexport HADOOP_HOME=/usr/local/hadoop\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\n\n\u914d\u7f6e\u4f2a\u5206\u5e03\u5f0f\u9700\u8981\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u9996\u5148\u8fdb\u5165\ncd /usr/local/hadoop-2.x.y/etc/hadoop\n\n\u66f4\u6539==core-site.xml==\n&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;\n        &lt;value&gt;file:/usr/local/hadoop-2.x.y/tmp&lt;/value&gt;\n        &lt;description&gt;Abase for other temporary directories.&lt;/description&gt;\n    &lt;/property&gt;\n    &lt;property&gt;\n        &lt;name&gt;fs.defaultFS&lt;/name&gt;\n        &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;\n &lt;/property&gt;\n&lt;/configuration&gt;\n\n\u66f4\u6539==hdfs-site.xml==\n&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;dfs.replication&lt;/name&gt;\n        &lt;value&gt;1&lt;/value&gt;\n    &lt;/property&gt;\n    &lt;property&gt;\n        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;        &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;/value&gt;\n    &lt;/property&gt;\n    &lt;property&gt;\n        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;     &lt;value&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;/value&gt;\n    &lt;/property&gt;\n&lt;/configuration&gt;\n\n\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u6267\u884c NameNode \u7684\u683c\u5f0f\u5316:\ncd /usr/local/hadoop\n\n./bin/hdfs namenode -format\n\n\u5982\u679c\u51fa\u73b0Error: JAVA_HOME is not set and could not be found\njava\u6ca1\u914d\u597d\uff0c\u6216\u8005\u66f4\u6539==hadoop-env.sh==\nexport JAVA_HOME=${JAVA_HOME}\n\u66f4\u6539\u4e3a\nexport JAVA_HOME=/usr/java/jdk1.8 #java\u8def\u5f84\n\n\u63a5\u7740\u5f00\u542f NameNode \u548c DataNode \u5b88\u62a4\u8fdb\u7a0b\uff1a\n\u8fdb\u5165sbin\u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165\nstart-all.sh\n\n3.\u68c0\u9a8c\n\u8f93\u5165==jps==\u67e5\u770b\u8fdb\u7a0b\u72b6\u6001\uff0c\u5982\u4e0b\u5219\u8bf4\u660e\u6210\u529f\n\n\u7136\u540e\u8fdb\u5165\u7f51\u5740\n\nhttp://localhost:50070\n\n\nhttp://localhost:18088\n\n\n\n\u8fd0\u7b97\u5b9e\u4f8b\uff1a\u6267\u884cjar\u5305\u8ba1\u7b97\u5706\u5468\u7387\nhadoop jar /usr/local/hadoop-2.7.7/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.7.jar pi  10  10\n\n\u7b2c\u4e00\u4e2a10\u662f\u8fd0\u884c10\u6b21map\u4efb\u52a1\uff0c\u7b2c\u4e8c\u4e2a10\u662f\u6bcf\u4e2amap\u4efb\u52a1\u6295\u63b7\u6b21\u6570\uff0c\u53ef\u4ee5\u6539\u53d8\uff0c\u53ef\u5f97\u5230\u4e0d\u540c\u7684\u8fd1\u4f3cpi\u503c\n\n4.\u53c2\u8003\n\u53a6\u95e8\u5927\u5b66\u5927\u6570\u636e\u5b9e\u9a8c\u5ba4Hadoop\u914d\u7f6e\n", "categories": [{"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/category/\u6570\u636e\u5e93/"}, {"name": "Hadoop", "slug": "Hadoop", "permalink": "/category/Hadoop/"}], "tags": [{"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/tag/\u6570\u636e\u5e93/"}, {"name": "Hadoop", "slug": "Hadoop", "permalink": "/tag/Hadoop/"}]}, {"title": "\u4fee\u6539Host\u4ee5\u8bbf\u95eeGithub", "date": "2020-04-16T23:46:17-00.00", "path": "/archives/\u4fee\u6539Host\u4ee5\u8bbf\u95eeGithub/", "text": "\u4fee\u6539\u6587\u4ef6\uff1aC:\\Windows\\System32\\drivers\\etc\\HOST\n\n# Github\n192.30.253.113 github.com\n151.101.185.194 github.global.ssl.fastly.net\n203.98.7.65 gist.github.com\n13.229.189.0 codeload.github.com\n185.199.109.153 desktop.github.com \n185.199.108.153 guides.github.com  \n185.199.108.153 blog.github.com\n18.204.240.114 status.github.com\n185.199.108.153 developer.github.com\n185.199.108.153 services.github.com\n192.30.253.175 enterprise.github.com   \n34.195.49.195 education.github.com    \n185.199.108.153 pages.github.com  \n34.196.237.103 classroom.github.com\n\u7136\u540ecmd\u7528ipconfig/flushdns\u5237\u65b0\n", "categories": [{"name": "Other", "slug": "Other", "permalink": "/category/Other/"}], "tags": [{"name": "Other", "slug": "Other", "permalink": "/tag/Other/"}, {"name": "Github", "slug": "Github", "permalink": "/tag/Github/"}]}, {"title": "\u8f6f\u8003\u8f6f\u4ef6\u8bbe\u8ba1\u5e08\u7b14\u8bb0", "date": "2020-04-05T23:01:04-00.00", "path": "/archives/\u8f6f\u8003\u8f6f\u4ef6\u8bbe\u8ba1\u5e08\u7b14\u8bb0/", "text": "\u4e00.\u8ba1\u7b97\u673a\u7cfb\u7edf\u77e5\u8bc6\n1.1\u539f\u7801\u53cd\u7801\u8865\u7801\u79fb\u7801\n\u6b63\u6570\u65f6\n\u539f=\u53cd=\u8865\n\n\u8d1f\u6570\u65f6\n\u539f\u8f6c\u53cd\uff1a\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u53d6\u53cd\n\u53cd\u8f6c\u8865\uff1a\u6700\u4f4e\u4f4d\u52a01\n\n\u79fb\u7801\uff1a\u5f53\u504f\u79fb\u91cf\u4e3a2\u7684n-1\u6b21\u65b9\u65f6\uff0c\u5c06\u8865\u7801\u7b26\u53f7\u4f4d\u53d6\u53cd\u5373\u53ef\n\u96f6\u53ea\u6709\u552f\u4e00\u8865\u7801\n1.2\u5b9a\u70b9\u6570\u6d6e\u70b9\u6570\n\u6d6e\u70b9\u6570\u8868\u793a\u65b9\u6cd5\n\nN = M*R^E\nM\u4e3a\u5c3e\u6570\uff0cR\u4e3a\u57fa\u6570\uff0cE\u4e3a\u9636\u7801\n1.3\u6821\u9a8c\u7801\n\u786e\u4fdd\u6570\u636e\u4f20\u9001\u65e0\u8bef\n\n\u63d0\u9ad8\u786c\u4ef6\u7535\u8def\u7684\u53ef\u9760\u6027\n\u63d0\u9ad8\u4ee3\u7801\u7684\u68c0\u9a8c\u80fd\u529b\n\n\n\u5947\u5076\u6821\u9a8c\u7801\uff1a\n\u4f7f\u7801\u8ddd\u4e3a2\n\n\u6c34\u5e73\u5947\u5076\u6821\u9a8c\u7801\n\u5782\u76f4\u5947\u5076\u6821\u9a8c\u7801\n\u6c34\u5e73\u5782\u76f4\u5947\u5076\u6821\u9a8c\u7801\n\n\n\u6d77\u660e\u7801\uff1a\u5728\u6570\u636e\u4f4d\u4e4b\u95f4\u63d2\u5165k\u4e2a\u6821\u9a8c\u7801\uff0c\u6269\u5927\u7801\u8ddd\u6765\u5b9e\u73b0\u68c0\u9519\u548c\u7ea0\u9519\uff0c\n\u8bbe\u6570\u636e\u4f4d\u662fn\u4f4d\uff0c\u6821\u9a8c\u4f4dk\u4f4d\uff0c\u5219\u6ee1\u8db3\n\n2\u7684k\u6b21\u65b9 -1 &gt;= n+k\n\u5faa\u73af\u5197\u4f59\u6821\u9a8c\u7801(CRC)\n\u6821\u9a8c\u7801\u8d8a\u957f\uff0c\u8be5\u4ee3\u7801\u6821\u9a8c\u80fd\u529b\u8d8a\u5f3a\uff0c\u91c7\u7528\u6a212\u8fd0\u7b97\uff0c\u5176\u52a0\u51cf\u8fd0\u7b97\u7684\u89c4\u5219\u662f\u6309\u4f4d\u8fd0\u7b97\uff0c\u4e0d\u53d1\u751f\u501f\u4f4d\u548c\u8fdb\u4f4d\n\n\u4f7f\u7528\u6a212\u8fd0\u7b97\n\n1.4\u8ba1\u7b97\u673a\u7cfb\u7edf\u786c\u4ef6\u7ec4\u6210\n\u7ec4\u6210\n\n\u8fd0\u7b97\u5668\n\u63a7\u5236\u5668\n\u5b58\u50a8\u5668\n\u8f93\u5165\u8bbe\u5907\n\u8f93\u51fa\u8bbe\u5907\n\n\u4e2d\u592e\u5904\u7406\u5355\u5143(CPU)\n\u4e3b\u8981\u529f\u80fd\n\n\u6307\u4ee4\u63a7\u5236\n\u64cd\u4f5c\u63a7\u5236\n\u65f6\u95f4\u63a7\u5236\n\u6570\u636e\u52a0\u5de5\n\n\n\u7ec4\u6210\n\n\u8fd0\u7b97\u5668\n\n\n\u7b97\u672f\u903b\u8f91\u5355\u5143(ALU):\u8fd0\u7b97\u5668\u91cd\u8981\u7ec4\u6210\u90e8\u4ef6\uff0c\u8d1f\u8d23\u5904\u7406\u6570\u636e\uff0c\u5b9e\u73b0\u5bf9\u6570\u636e\u7684\u7b97\u672f\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97\n\u7d2f\u52a0\u5bc4\u5b58\u5668(AC):\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u5f53ALU\u5de5\u4f5c\u65f6\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5de5\u4f5c\u533a\n\u6570\u636e\u7f13\u51b2\u5bc4\u5b58\u5668(DR):\u5728\u5bf9\u5b58\u50a8\u5668\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u5ba4\uff0c\u7528DR\u6682\u65f6\u5b58\u653e\u7531\u7531\u5185\u5b58\u50a8\u5668\u8bfb\u5199\u7684\u4e00\u6761\u6307\u4ee4\u6216\u4e00\u4e2a\u6570\u636e\u5b57\uff0c\u5e76\u5c06\u4e0d\u540c\u65f6\u95f4\u6bb5\u5185\u8bfb\u5199\u7684\u6570\u636e\u9694\u79bb\u5f00\u6765\n\u72b6\u6001\u6761\u4ef6\u5bc4\u5b58\u5668(PSW):\u4e3b\u8981\u5206\u4e3a\u72b6\u6001\u6807\u5fd7\u548c\u63a7\u5236\u6807\u5fd7\uff0c\u8fd9\u4e9b\u6807\u5fd7\u901a\u5e38\u5206\u522b\u7531\u4e00\u4f4d\u89e6\u53d1\u5668\u4fdd\u5b58\uff0c\u53cd\u6620\u4e86\u5f53\u524d\u6307\u4ee4\u6267\u884c\u5b8c\u6210\u4e4b\u540e\u7684\u72b6\u6001\u3002\u4e00\u4e2a\u7b97\u672f\u64cd\u4f5c\u4ea7\u751f\u4e00\u4e2a\u8fd0\u7b97\u7ed3\u679c\uff0c\u4e00\u4e2a\u903b\u8f91\u4ea7\u751f\u4e00\u4e2a\u5224\u51b3\n\n\n\n\u63a7\u5236\u5668\n\u5b83\u51b3\u5b9a\u4e86\u8ba1\u7b97\u673a\u8fd0\u884c\u8fc7\u7a0b\u7684\u81ea\u52a8\u5316\n\n\u6307\u4ee4\u5bc4\u5b58\u5668(IR)\n\u7a0b\u5e8f\u8ba1\u6570\u5668(PC)\n\u5730\u5740\u5bc4\u5b58\u5668(AR)\n\u6307\u4ee4\u8bd1\u7801\u5668(ID)\n\n\n\n\u5bc4\u5b58\u5668\u7ec4\uff1a\u63a7\u5236\u5668\u548c\u8fd0\u7b97\u5668\u4e2d\u7684\u5bc4\u5b58\u5668\u90fd\u662f\u4e13\u7528\u5bc4\u5b58\u5668\uff0c\u901a\u7528\u5bc4\u5b58\u5668\u53ef\u7531\u7a0b\u5e8f\u5458\u89c4\u5b9a\u5176\u7528\u9014\n\n\n\n \n1.5\u5b58\u50a8\u7cfb\u7edf\n\n\n\n\u76f8\u8054\u5b58\u50a8\u5668\uff1a\u6309\u5185\u5bb9\u8bbf\u95ee\u7684\u5b58\u50a8\u5668\uff0c\u901a\u8fc7\u5173\u952e\u5b57\u6bd4\u8f83\uff0c\u53ef\u7528\u5728\u9ad8\u901f\u7f13\u51b2\u5b58\u50a8\u5668\u4e2d\uff0c\u5728\u865a\u62df\u5b58\u50a8\u5668\u4e2d\u7528\u6765\u505a\u6bb5\u8868\u7b49\uff0c\u8fd8\u53ef\u7528\u5728\u6570\u636e\u5e93\u4e2d\n\u9ad8\u901f\u7f13\u5b58(Cache)\n\u76ee\u7684\uff1a\u63d0\u9ad8\u5b58\u50a8\u5668\u5e73\u5747\u8bbf\u95ee\u901f\u5ea6\uff0c\u4f7f\u5b58\u50a8\u5668\u901f\u5ea6\u4e0ecpu\u901f\u5ea6\u76f8\u5339\u914d\uff0c\u5730\u5740\u53d8\u6362\u548c\u6570\u636e\u5757\u7684\u66ff\u6362\u7b97\u6cd5\u5747\u7531\u786c\u4ef6\u5b9e\u73b0\u3002\u901a\u5e38\u88ab\u96c6\u6210\u5230cpu\u7684\u5bc4\u5b58\u5668\u4e2d\uff0c\u5bb9\u5c0f\uff0c\u901f\u5feb\uff0c\u6210\u9ad8\n\n1154ece620d69877639b8f915ed8507\n\u5e38\u7528\u7684\u865a\u62df\u5b58\u50a8\u5668\u7531\u4e3b\u5b58-\u8f85\u5b58\u7ec4\u6210\n1.6\u8f93\u5165\u8f93\u51fa\u6280\u672f\n1e2be5cc42d5d632c6753c57672438d\n02ddf76d4a6a5b53af97f7944f6daa7\n1.7\u603b\u7ebf\u7ed3\u6784\nimage-20200201161153550\n\u7cfb\u7edf\u603b\u7ebf\uff1aISA,EISA,PCI\n\u5916\u90e8\u603b\u7ebf\uff1aPS-232-C,SCSI,USB,IEEE-1394\n1.8\u6307\u4ee4\u7cfb\u7edf\nCISC\u548cRISC\nf29dff9cf6c26fed69daae8d74966c3\n\u541e\u5410\u7387\nimage-20200201145311489\nimage-20200201145358391\n1.9\u9898\u76ee\u603b\u7ed3\n\ncache\u4e0e\u4e3b\u5b58\u7684\u5730\u5740\u6620\u50cf\u7531\u786c\u4ef6\u81ea\u52a8\u5b8c\u6210\n\u6307\u4ee4\u5bc4\u5b58\u5668\u4f4d\u6570\u53d6\u51b3\u4e8e\u6307\u4ee4\u5b57\u957f\n\u903b\u8f91\u5f02\u6216\uff1a\u76f8\u7b49\u7ed3\u679c\u4e3a0\u5426\u5219\u7ed3\u679c\u4e3a1\n\u8ba1\u7b97\u673a\u5b57\u957f32\u4f4d\uff0c\u5185\u5b58\u5bb9\u91cf2GB\uff0c\u6309\u5b57\u7f16\u5740\uff0c\u5bfb\u5740\u8303\u56f4\u4e3a2GB/32\u4f4d\n\u5e38\u7528\u865a\u5b58\u50a8\u5668\u7531\u4e3b\u5b58-\u8f85\u5b58\u7ec4\u6210\n\u4e2d\u65ad\u5411\u91cf\u53ef\u63d0\u4f9b\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\n\u5b9e\u73b0\u591a\u7ea7\u4e2d\u65ad\u5d4c\u5957\uff0c\u4f7f\u7528\u5806\u6808\u4fdd\u62a4\u65ad\u70b9\u548c\u73b0\u573a\nCRC\u683c\u5f0f\u4e3ak+r\n\u5b9a\u70b9\u8868\u793a\u6cd5\uff0c\u5c0f\u6570\u70b9\u4e0d\u7528\u5b58\u50a8\u4f4d\n\u67d0\u65e0\u6761\u4ef6\u8f6c\u79fb\u6c47\u7f16\u91c7\u7528\u76f4\u63a5\u5bfb\u5740\uff0c\u5219\u8be5\u6307\u4ee4\u529f\u80fd\u5c06\u6307\u4ee4\u4e2d\u7684\u5730\u5740\u7801\u9001\u5165PC(\u7a0b\u5e8f\u8ba1\u6570\u5668)\nIO\u63a5\u53e3\u4e0e\u4e3b\u5b58\u91c7\u7528\u7edf\u4e00\u7f16\u5740\uff0c\u5219\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u662f\u901a\u8fc7\u8bbf\u5b58\u6765\u5b8c(\u7edf\u4e00\u7f16\u5740\u662f\u6307IO\u7aef\u53e3\u4e0e\u4e3b\u5b58\u4f7f\u7528\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u8fdb\u884c\u7edf\u4e00\u7f16\u5740)\n\u603b\u7ebf\u590d\u7528\uff0c\u6307\u6570\u636e\u548c\u5730\u5740\u5728\u540c\u4e00\u4e2a\u603b\u7ebf\u4e0a\u4f20\u8f93\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u51cf\u5c11\u603b\u7ebf\u4e2d\u4fe1\u53f7\u7ebf\u7684\u6570\u91cf\nCPU\u5bc4\u5b58\u5668\u4e2d\uff0c\u6307\u4ee4\u5bc4\u5b58\u5668\u5bf9\u7528\u6237\u662f\u5b8c\u5168\u900f\u660e\u7684\n\n\u4e8c.\u7a0b\u5e8f\u8bed\u8a00\u57fa\u7840\u77e5\u8bc6\nimage-20200203165448772\n2.1\u7f16\u8bd1\u8fc7\u7a0b\nimage-20200203165528889\n\u524d\u7aef\u90e8\u5206(\u4e0e\u673a\u5668\u65e0\u5173)\n\u8bcd\u6cd5\u5206\u6790\uff0c\u8bed\u6cd5\u5206\u6790\uff0c\u8bed\u4e49\u5206\u6790\uff0c\u4e2d\u95f4\u4ee3\u7801\u751f\u6210\n\n\u540e\u7aef\u90e8\u5206(\u4e0e\u673a\u5668\u6709\u5173)\n\u4ee3\u7801\u4f18\u5316\uff0c\u76ee\u6807\u4ee3\u7801\u751f\u6210\n\n\u4f20\u503c\u8c03\u7528\uff1a\u5b9e\u53c2\u5411\u5f62\u53c2\u4f20\u9012\u76f8\u5e94\u7c7b\u578b\u7684\u503c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5f62\u53c2\u4e0d\u80fd\u5411\u5b9e\u53c2\u4f20\u9012\u4fe1\u606f\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u8981\u5b9e\u73b0\u88ab\u8c03\u7528\u51fd\u6570\u5bf9\u5b9e\u53c2\u7684\u4fee\u6539\uff0c\u5fc5\u987b\u7528\u6307\u9488\u4f5c\u5f62\u53c2\u3002\u5373\u8c03\u7528\u65f6\u5148\u5bf9\u5b9e\u53c2\u8fdb\u884c\u53d6\u5730\u5740\u8fd0\u7b97\uff0c\u7136\u540e\u5c06\u5b9e\u53c2\u5730\u5740\u4f20\u9012\u7ed9\u6307\u9488\u5f62\u53c2\u3002\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u4e86\u95f4\u63a5\u8bbf\u95ee\u5185\u5b58\n\u5f15\u7528\u8c03\u7528\uff1a\u662fc++\u589e\u52a0\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5f53\u5f62\u53c2\u4e3a\u5f15\u7528\u7c7b\u578b\u65f6\uff0c\u5f62\u53c2\u540d\u5b9e\u9645\u4e0a\u662f\u5b9e\u53c2\u7684\u522b\u540d\uff0c\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u7684\u8bbf\u95ee\u548c\u4fee\u6539\u5b9e\u9645\u4e0a\u5c31\u662f\u9488\u5bf9\u76f8\u5e94\u5b9e\u53c2\u6240\u505a\u7684\u8bbf\u95ee\u548c\u6539\u53d8\n\u5b9e\u53c2\u53ef\u4ee5\u4f7f\u5e38\u91cf\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\n\u5e38\u7528\u4e2d\u95f4\u4ee3\u7801\u6709\uff1a\u540e\u7f00\u5f0f\uff0c\u4e09\u5143\u5f0f\u5b50\uff0c\u56db\u5143\u5f0f\u548c\u6811\n2.2\u6587\u6cd5\nimage-20200203165552527\nimage-20200203171254677\nimage-20200203172027367\n2.3\u6709\u9650\u81ea\u52a8\u673a\nimage-20200203202245045\nimage-20200203202745308\n2.4\u6b63\u89c4\u5f0f\nimage-20200203202329660\nimage-20200203202344060\n2.5\u8868\u8fbe\u5f0f\nimage-20200203203505483\n2.6\u8bed\u8a00\u7279\u70b9\nimage-20200203204332603\n2.7\u9898\u76ee\u603b\u7ed3\n\n\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7ffb\u8bd1\u4e3a\u673a\u5668\u8bed\u8a00\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5e38\u5f15\u5165\u4e2d\u95f4\u4ee3\u7801\uff0c\u597d\u5904\u662f\u6709\u5229\u4e8e\u8fdb\u884c\u4e0e\u673a\u5668\u65e0\u5173\u7684\u4f18\u5316\u5904\u7406\uff0c\u4ee5\u53ca\u63d0\u9ad8\u7f16\u8bd1\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\n\u5bf9\u9ad8\u7ea7\u8bed\u8a00\u6e90\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u6709\u7a77\u81ea\u52a8\u673a(NFA\u6216DFA)\u662f\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\n\u5f31\u7c7b\u578b\u8bed\u8a00\u6307\u4e0d\u9700\u8981\u8fdb\u884c\u53d8\u91cf\u6216\u5bf9\u8c61\u7c7b\u578b\u58f0\u660e\u7684\u8bed\u8a00\uff0c\u4f8b\u5982python\n\u7f16\u8bd1\u7a0b\u5e8f\u548c\u89e3\u91ca\u7a0b\u5e8f\u7684\u76f8\u540c\u70b9\uff1a\u5728\u8bcd\u6cd5\uff0c\u8bed\u6cd5\uff0c\u8bed\u4e49\u5206\u6790\u65b9\u9762\u5de5\u4f5c\u539f\u7406\u57fa\u672c\u76f8\u540c\u3002\u4e0d\u540c\u70b9\uff1a\u5728\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f\u65f6\uff0c\u89e3\u91ca\u7a0b\u5e8f\u76f4\u63a5\u6267\u884c\u6e90\u7a0b\u5e8f\u6216\u6e90\u7a0b\u5e8f\u7684\u5185\u90e8\u5f62\u5f0f(\u4e2d\u95f4\u4ee3\u7801)\uff0c\u56e0\u6b64\u4e0d\u4ea7\u751f\u76ee\u6807\u7a0b\u5e8f\uff0c\u800c\u7f16\u8bd1\u7a0b\u5e8f\u5c06\u6e90\u7a0b\u5e8f\u7ffb\u8bd1\u6210\u76ee\u6807\u7a0b\u5e8f\n\u5728\u5bf9\u9ad8\u7ea7\u8bed\u8a00\u6e90\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u6e90\u7a0b\u5e8f\u53d8\u91cf\u6240\u5206\u914d\u7684\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\u5c5e\u4e8e\u903b\u8f91\u5730\u5740\n\u58f0\u660e\u8bed\u53e5\u548c\u53ef\u6267\u884c\u8bed\u53e5\uff0c\u5bf9\u58f0\u660e\u8bed\u53e5\uff0c\u4e3b\u8981\u662f\u5c06\u9700\u8981\u7684\u4fe1\u606f\u6b63\u786e\u7684\u586b\u5165\u5408\u7406\u7ec4\u7ec7\u7684\u7b26\u53f7\u8868\u4e2d\uff0c\u5bf9\u53ef\u6267\u884c\u8bed\u53e5\uff0c\u5219\u662f\u7ffb\u8bd1\u6210\u4e2d\u95f4\u4ee3\u7801\u6216\u76ee\u6807\u4ee3\u7801\nee8515f502545f979a1700618a7570a\n181ddb72e78983b3c16ce1261c5778d\nimage-20200204200910126\n6a0a282dee4f33a207c78e7a076fdca\n\u6570\u636e\u7c7b\u578b\u8bf4\u660e\n\u8bf4\u660e\u6570\u636e\u5360\u7528\u7684\u5185\u5b58\u548c\u5b58\u653e\u5f62\u5f0f\u4ee5\u5206\u914d\u5b58\u50a8\u5355\u5143\n\u5bf9\u53c2\u4e0e\u8ba1\u7b97\u7684\u5bf9\u8c61\u8fdb\u884c\u68c0\u67e5\n\u89c4\u5b9a\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u53ca\u80fd\u591f\u7684\u8fd0\u7b97\n\n\n\n\u4e09.\u64cd\u4f5c\u7cfb\u7edf\u77e5\u8bc6\n3.1\u57fa\u7840\u77e5\u8bc6\nimage-20200204230327397\n\u7279\u5f81\n\n\u5e76\u53d1\u6027\n\u5171\u4eab\u6027\n\u865a\u62df\u6027\n\u4e0d\u786e\u5b9a\u6027\n\n\u529f\u80fd\n\n\u5904\u7406\u673a\u7ba1\u7406\uff1a\u5bf9\u5904\u7406\u673a\u6267\u884c\u65f6\u95f4\u7ba1\u7406\uff0c\u91c7\u7528\u591a\u9053\u7a0b\u5e8f\u7b49\u6280\u672f\u5c06CPU\u5408\u7406\u5206\u914d\u6bcf\u4e2a\u4eba\u7269\u3002\u5e38\u7528\u8d44\u6e90\u7ba1\u7406\u5355\u4f4d\u6709\u8fdb\u7a0b\u548c\u7ebf\u7a0b\n\u6587\u4ef6\u7ba1\u7406\n\u6587\u4ef6\u5b58\u50a8\u7a7a\u95f4\n\u76ee\u5f55\n\u6587\u4ef6\u7684\u8bfb\u5199\n\u5b58\u53d6\u63a7\u5236\n\u8f6f\u4ef6\n\n\n\u5b58\u50a8\u7ba1\u7406\uff1a\u5bf9\u4e3b\u5b58\u7a7a\u95f4\u7ba1\u7406\n\u8bbe\u5907\u7ba1\u7406\uff1a\u65b9\u4fbf\u8bbe\u5907\u4f7f\u7528\uff0c\u63d0\u9ad8CPU\u548cI/O\u8bbe\u5907\u7684\u5229\u7528\u7387\n\u4f5c\u4e1a\u7ba1\u7406\n\u4efb\u52a1\u7ba1\u7406\n\u754c\u9762\u7ba1\u7406\n\u4eba\u673a\u4ea4\u4e92\n\n\n\n\u7c7b\u578b\n\n\u6279\u5904\u7406\u64cd\u4f5c\u7cfb\u7edf\n\u5206\u65f6\u64cd\u4f5c\u7cfb\u7edf\n\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\n\u7f51\u7edc\u64cd\u4f5c\u7cfb\u7edf\n\u5206\u5e03\u5f0f\u64cd\u4f5c\u7cfb\u7edf\n\u5fae\u673a\u64cd\u4f5c\u7cfb\u7edf\n\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\n\n3.2\u5904\u7406\u673a\u7ba1\u7406\n3.2.1\u524d\u8d8b\u56fe\n3.2.2\u8fdb\u7a0b\u7684\u540c\u6b65\u4e0e\u4e92\u65a5\n\n3.2.3PV\u64cd\u4f5c\n\u5b9a\u4e49\n\n\u4f8b\u9898\n\n\nPV\u64cd\u4f5c\u4e0e\u524d\u8d8b\u56fe\n\n3.2.4\u8fdb\u7a0b\u8c03\u5ea6\n\u5206\u7c7b\n\n\u53ef\u5265\u593a\u5f0f\n\u4e0d\u53ef\u5265\u593a\u5f0f\n\n\u7b97\u6cd5\n\n\u5148\u6765\u5148\u670d\u52a1(FCFS)\uff1a\u603b\u662f\u5c06\u5c31\u7eea\u961f\u5217\u961f\u9996\u7684\u8fdb\u7a0b\u6295\u5165\u8fd0\u884c\uff0c\u7279\u70b9\u6709\u5229\u4e8e\u957f\u4f5c\u4e1a\uff0c\u4e0d\u5229\u4e8e\u77ed\u4f5c\u4e1a\uff0c\u6709\u5229\u4e8eCPU\u7e41\u5fd9\u7684\u4f5c\u4e1a\uff0c\u4e0d\u5229\u4e8eI/O\u7e41\u5fd9\u7684\u4f5c\u4e1a\u3002\u5b8f\u89c2\u8c03\u5ea6\u3002\n\u65f6\u95f4\u7247\u8f6e\u8f6c\uff1a\u63d0\u9ad8\u8fdb\u7a0b\u5e76\u53d1\u6027\u548c\u54cd\u5e94\u65f6\u95f4\uff0c\u4ece\u800c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\u3002\u5fae\u89c2\u8c03\u5ea6\u3002\n\u4f18\u5148\u7ea7\u8c03\u5ea6\n\u9759\u6001\u4f18\u5148\u7ea7\uff1a\u521b\u5efa\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u597d\uff0c\u77e5\u9053\u8fdb\u7a0b\u7ec8\u6b62\u90fd\u4e0d\u6539\u53d8\n\u52a8\u6001\u4f18\u5148\u7ea7\uff1a\u53ef\u4ee5\u6539\u53d8\n\n\n\u591a\u7ea7\u53cd\u9988\u8c03\u5ea6\uff1a\u7167\u987e\u77ed\u8fdb\u7a0b\uff0c\u63d0\u9ad8\u7cfb\u7edf\u541e\u5410\u91cf\uff0c\u7f29\u77ed\u5e73\u5747\u5468\u8f6c\u65f6\u95f4\uff0c\u7167\u987eI/o\u578b\u8fdb\u7a0b\u4ee5\u83b7\u5f97\u8f83\u597d\u7684I/O\u8bbe\u5907\u5229\u7528\u7387\uff0c\u7f29\u77ed\u54cd\u5e94\u65f6\u95f4\n\n3.2.4\u6b7b\u9501\n\u539f\u56e0\n\n\u8d44\u6e90\u7ade\u4e89\n\u8fdb\u7a0b\u63a8\u8fdb\u987a\u5e8f\u975e\u6cd5\n\n\u4ea7\u751f\u6b7b\u9501\u76844\u4e2a\u5fc5\u8981\u6761\u4ef6\n\n\u4e92\u65a5\u6761\u4ef6:\u4e00\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\n\u8bf7\u6c42\u4fdd\u6301\u6761\u4ef6\uff1a\u83b7\u5f97\u540e\u53c8\u8bf7\u6c42\u8d44\u6e90\u88ab\u5835\u585e\n\u4e0d\u53ef\u5265\u593a\u6761\u4ef6\uff1a\u8fdb\u7a0b\u5728\u672a\u7ed3\u675f\u524d\u4e0d\u80fd\u6240\u83b7\u5f97\u7684\u8d44\u6e90\u4e0d\u80fd\u88ab\u5265\u593a\n\u73af\u8def\u6761\u4ef6\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u5360\u6709\u4e0b\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u7684\u8d44\u6e90\n\n\u6b7b\u9501\u5904\u7406\n\n\u9884\u9632\uff1a\u7834\u574f4\u4e2a\u6761\u4ef6\u4e2d\u4e00\u4e2a\uff0c\u63aa\u65bd\u662f\u9759\u6001\u5206\u914d\u6cd5\u548c\u8d44\u6e90\u6709\u5e8f\u5206\u914d\u6cd5\n\u907f\u514d\uff1a\u94f6\u884c\u5bb6\u7b97\u6cd5\n\u68c0\u6d4b\uff1a\u7cfb\u7edf\u5b9a\u65f6\u8fd0\u884c\u6b7b\u9501\u68c0\u6d4b\u7a0b\u5e8f\n\u89e3\u9664\n\u8d44\u6e90\u5265\u593a\u6cd5\n\u64a4\u9500\u8fdb\u7a0b\u6cd5\n\n\n\n3.2.5\u7ebf\u7a0b\n\u6bd4\u8fdb\u7a0b\u5c0f\uff0c\u662f\u8fdb\u7a0b\u7684\u5b9e\u4f53\uff0c\u662f\u7cfb\u7edf\u72ec\u7acb\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e5f\u6709\u5c31\u7eea\uff0c\u963b\u585e\uff0c\u8fd0\u884c\u4e09\u79cd\u72b6\u6001\n3.2.6\u94f6\u884c\u5bb6\u7b97\u6cd5\n\u7f3a\n\n\u94f6\u884c\u5bb6\u7b97\u6cd5\n\u94f6\u884c\u5bb6\u4f8b\u98981\n\u94f6\u884c\u5bb6\u4f8b\u98982\n\u94f6\u884c\u5bb6\u4f8b\u98983\n\n3.3\u5b58\u50a8\u7ba1\u7406\n3.3.1\u5206\u914d\u7b97\u6cd5\n\u7f3a\n\n\u5b58\u50a8\u5206\u914d\u7b97\u6cd5\n\n3.3.2\u9875\uff0c\u6bb5\uff0c\u6bb5\u9875\u5f0f\u5b58\u50a8\n\u9875\u5f0f\u5b58\u50a8\n\u7f3a\n\n\u9875\u5f0f\u5b58\u50a8\n\u9875\u5f0f\u5b58\u50a8\u7ec3\u4e60\u9898\n\n\u6bb5\u5f0f\u5b58\u50a8\n\u7f3a\n\n\u6bb5\u5f0f\u5b58\u50a8\n\n\u6bb5\u9875\u5f0f\u5b58\u50a8\n\u7f3a\n\n\u6bb5\u9875\u5f0f\u5b58\u50a8\n\n\u5feb\u8868\n\u5982\u679c\u9898\u76ee\u6ca1\u6709\u4f7f\u7528\u5757\u8868\uff0c\u5219\u7a0b\u5e8f\u8981\u8bbf\u95ee2\u6b21\u5185\u5b58\uff0c\u7b2c\u4e00\u6b21\u662f\u67e5\u8868\uff0c\u7b2c\u4e8c\u6b21\u662f\u67e5\u5230\u540e\u8bbf\u95ee\u5bf9\u5e94\u7684\u5757\n\u7f3a\n\n\u5757\u8868\n\n3.3.3\u9875\u9762\u7f6e\u6362\u7b97\u6cd5\n\u7f3a\u9875\n\u8bbf\u95ee\u5185\u5b58\u65f6\u6ca1\u6709\u60f3\u8981\u8bbf\u95ee\u7684\u9875\u9762\uff0c\u6b64\u65f6\u4ea7\u751f\u4e00\u6b21\u7f3a\u9875\n\u6296\u52a8\n\u5206\u914d\u9875\u9762\u66f4\u591a\u53cd\u800c\u7f3a\u9875\u7387\u66f4\u9ad8\n\u7f3a\n\n\u5206\u914d\u7b97\u6cd5\u4f8b\u9898.jpg\n\n3.3.4\u9875\u9762\u6dd8\u6c70\u7b97\u6cd5\n\u6307\u4ee4\u8de8\u9875\u65f6\u4ea7\u751f\u4e00\u6b21\u7f3a\u9875\u4e2d\u65ad\uff0c\u64cd\u4f5c\u6570\u8de8\u9875\u4f1a\u4ea7\u751f\u4e24\u6b21\u7f3a\u9875\u4e2d\u65ad\n\u7f3a\n\n\u9875\u9762\u6dd8\u6c70\u7b97\u6cd5\u7ec3\u4e60\u9898\n\n3.4\u6587\u4ef6\u7ba1\u7406\n3.4.1\u6587\u4ef6\u548c\u6811\u5f62\u76ee\u5f55\u7ed3\u6784\n\u4e3b\u8981\u8003\u5bdf\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84\n\u7f3a\n\n\u6587\u4ef6\u548c\u6811\u5f62\u76ee\u5f55\u7ed3\u6784.jpg\n\n3.4.2\u7a7a\u95f2\u5b58\u50a8\u7a7a\u95f4\u7ba1\u7406\n\u4f4d\u793a\u56fe\u6cd5\n\u5b57\u957f\u4ee3\u8868\u4e00\u4e2a\u5b57\u6709\u591a\u5c11\u4e2a\u7269\u7406\u5757\n\n\n\n3.4.3\u7d22\u5f15\u6587\u4ef6\u7ed3\u6784\n\n\u4f8b\u9898\n\n3.5\u8bbe\u5907\u7ba1\u7406\n3.5.1\u6570\u636e\u4f20\u8f93\u63a7\u5236\u65b9\u5f0f\n\n3.5.2\u865a\u62df\u8bbe\u5907\u548cspooling\u6280\u672f\n\n3.5.3\u78c1\u76d8\u8c03\u5ea6\n\u7b97\u6cd5\n\n\u626b\u63cf\u7b97\u6cd5\uff1a\u4ece\u91cc\u5230\u5916\uff0c\u7136\u540e\u518d\u4ece\u5916\u5230\u91cc\n\u5355\u5411\u626b\u63cf\u7b97\u6cd5\uff0c\u4ece\u91cc\u5230\u5916\u540e\u5230\u6700\u5916\u9762\u662f\uff0c\u518d\u4ece\u6700\u5f00\u59cb\u7684\u91cc\u9762\u5230\u5916\u9762\n\n\u4f8b\u9898\n\n\u89e3\u6790\n\n3.6\u4f5c\u4e1a\u7ba1\u7406\n\u7ec4\u6210\n\n\u7a0b\u5e8f\n\u6570\u636e\n\u4f5c\u4e1a\u8bf4\u660e\u4e66\uff1a\u4f53\u73b0\u7528\u6237\u7684\u63a7\u5236\u610f\u56fe\n\n\u4f5c\u4e1a\u63a7\u5236\n\n\u8131\u673a\uff1a\u65e0\u9700\u4eba\u5de5\u5e72\u9884\uff0c\u7528\u6237\u5fc5\u987b\u63d0\u4ea4\u4f5c\u4e1a\u8bf4\u660e\u4e66\n\u8054\u673a\uff1a\u9700\u8981\u4eba\u5de5\u5e72\u9884\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7ec8\u7aef\u63d0\u4ea4\u610f\u56fe\n\n\u4f5c\u4e1a\u72b6\u6001\u53ca\u5176\u8f6c\u6362\n\n\u63d0\u4ea4\n\u540e\u5907\uff1a\u901a\u8fc7spooling\u7cfb\u7edf\n\u6267\u884c\n\u5b8c\u6210\uff1a\u901a\u8fc7spooling\u7cfb\u7edf\u8f93\u51fa\n\n\u4f5c\u4e1a\u8c03\u5ea6\u7b97\u6cd5\n\n\u5148\u6765\u5148\u670d\u52a1(FCFS)\n\u77ed\u4f5c\u4e1a\u4f18\u5148(SJF)\n\u54cd\u5e94\u6bd4\u9ad8\u4f18\u5148\n\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\n\u5747\u8861\u8c03\u5ea6\u7b97\u6cd5\n\n3.7\u9898\u76ee\u603b\u7ed3\n\n\n\n\n\u56db.\u7cfb\u7edf\u5f00\u53d1\u548c\u8fd0\u884c\n4.1\u57fa\u7840\u77e5\u8bc6\n4.1.1\u5f00\u53d1\u6a21\u578b\n\n\u7011\u5e03\u6a21\u578b\n\u9700\u6c42\u660e\u786e\uff0c\u65f6\u95f4\u4e25\u683c\uff0c\u4e8c\u6b21\u5f00\u53d1\u65f6\u9009\u7528\uff0c\u65e0\u6cd5\u7075\u6d3b\u5e94\u5bf9\u9700\u6c42\n\n\n\u6f14\u5316\u6a21\u578b\n\u6839\u636e\u9700\u6c42\u5feb\u901f\u5f00\u53d1\u4e00\u4e2a\u53ef\u8fd0\u884c\u7248\u672c\uff0c\u7136\u540e\u4e0d\u65ad\u6539\u8fdb\uff0c\u4e3b\u8981\u7528\u4e8e\u5bf9\u8f6f\u4ef6\u9700\u6c42\u7f3a\u4e4f\u51c6\u786e\u8ba4\u8bc6\n\n\u87ba\u65cb\u6a21\u578b\n\u5305\u62ec\n\n\u5236\u5b9a\u8ba1\u5212\n\u98ce\u9669\u5206\u6790\n\u5b9e\u65bd\u5de5\u7a0b\n\u5ba2\u6237\u8bc4\u4f30\n\n\u7011\u5e03\u6a21\u578b\u548c\u6f14\u5316\u6a21\u578b\u7684\u7ed3\u5408\uff0c\u5728\u8fd9\u4e4b\u4e0a\u589e\u52a0\u4e86\u98ce\u9669\u5206\u6790\n\n\u55b7\u6cc9\u6a21\u578b\n\u4ee5\u7528\u6237\u9700\u6c42\u4e3a\u52a8\u529b\uff0c\u4ee5\u5bf9\u8c61\u4f5c\u4e3a\u9a71\u52a8\uff0c\u4e3b\u8981\u7528\u4e8e\u63cf\u8ff0\u9762\u5411\u5bf9\u8c61\u7684\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5177\u6709\u8fed\u4ee3\u548c\u65e0\u95f4\u9699\u7279\u6027\uff0c\u9002\u5408==\u9762\u5411\u5bf9\u8c61==\u5f00\u53d1\uff0c\u5404\u5f00\u53d1\u6d3b\u52a8==\u6ca1\u6709\u660e\u663e\u754c\u9650==\n\nV\u6a21\u578b\n\u5f3a\u8c03\u6d4b\u8bd5\u7684\u6a21\u578b\uff0c\u6d4b\u8bd5\u8d2f\u7a7f\u59cb\u7ec8\n\n4.1.2\u8f6f\u4ef6\u5f00\u53d1\u65b9\u6cd5\n\n\u7ed3\u6784\u5316\u65b9\u6cd5\n\u9762\u5411\u6570\u636e\u6d41\uff0c\u81ea\u9876\u5411\u4e0b\uff0c\u9010\u5c42\u5206\u89e3\uff0c\u6700\u65e9\u51fa\u73b0\u7684\u65b9\u6cd5\uff0c\u9002\u5408\u4e8e\u6570\u636e\u5904\u7406\u9886\u57df\u95ee\u9898\uff0c\u4e0d\u9002\u5408\u89e3\u51b3\u5927\u89c4\u6a21\u590d\u6742\u7684\u9879\u76ee\uff0c\u96be\u4ee5\u9002\u5e94\u9700\u6c42\u7684\u53d8\u5316\n\n\n\n\nJackson\u65b9\u6cd5\n\u9762\u5411\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u6570\u636e\u7ed3\u6784\u4e3a\u9a71\u52a8\n\n\n\n\n\u539f\u578b\u5316\u65b9\u6cd5\n\u9002\u5408\u9700\u6c42\u4e0d\u660e\u786e\u65f6\n\n\n\n\n\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u65b9\u6cd5\n\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00UML\n\n\n\n4.1.3\u8f6f\u4ef6\u9700\u6c42\u5206\u6790\n\n\u529f\u80fd\u9700\u6c42\uff1a\u6240\u5f00\u53d1\u8f6f\u4ef6\u5fc5\u987b\u6709\u7684\u529f\u80fd\n\u975e\u529f\u80fd\u9700\u6c42\uff1a\u5982\u53ef\u9760\u6027\uff0c\u54cd\u5e94\u65f6\u95f4\uff0c\u5bb9\u9519\u6027\uff0c\u6269\u5c55\u6027\uff0c\u541e\u5410\u91cf\uff0c\u4ef7\u683c\u7b49\n\u8bbe\u8ba1\u7ea6\u675f\uff1a\u9650\u5236\u6761\u4ef6\uff0c\u8865\u5145\u89c4\u7ea6\n\n\n4.1.4\u8f6f\u4ef6\u5f00\u53d1\u9879\u76ee\u7ba1\u7406\n\n\u6210\u672c\u4f30\u7b97\n\n\u98ce\u9669\u5206\u6790\n\n\u98ce\u9669\u8bc6\u522b\uff1a\u5efa\u7acb\u98ce\u9669\u6761\u76ee\u68c0\u67e5\u8868\n\u98ce\u9669\u9884\u6d4b\uff1a\n\u98ce\u9669\u8bc4\u4f30\uff1a\u4e09\u5143\u7ec4\uff0c\u5b9a\u4e49\u98ce\u9669\u53c2\u7167\u6c34\u51c6\n\u98ce\u9669\u63a7\u5236\uff1a\u907f\u514d\n\n\n\n\u8fdb\u5ea6\u7ba1\u7406\n\nGantt\u56fe\uff1a\u6a2a\u5750\u6807\u65f6\u95f4\uff0c\u7eb5\u5750\u6807\u4efb\u52a1\uff0c\u80fd\u6e05\u6670\u7684\u63cf\u8ff0\u4efb\u52a1\u4f55\u65f6\u5f00\u59cb\u4f55\u65f6\u7ed3\u675f\u4ee5\u53ca\u5404\u4e2a\u4eba\u7269\u7684\u5e76\u884c\u6027\uff0c\u4e0d\u80fd\u53cd\u6620\u4efb\u52a1\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u96be\u4ee5\u786e\u5b9a\u9879\u76ee\u7684\u5173\u952e\nPERT\u56fe\uff1a\u4e0d\u4ec5\u6709\u4e0a\u9762\u7684\u4f18\u70b9\uff0c\u8fd8\u7ed9\u51fa\u4e86\u4efb\u52a1\u95f4\u7684\u5173\u7cfb\uff0c==\u4e0d\u80fd\u53cd\u6620\u5e76\u884c\u5173\u7cfb==\n\n\n\u4eba\u5458\u7ba1\u7406\n\n\n4.1.5\u8f6f\u4ef6\u914d\u7f6e\u7ba1\u7406\n\n\u57fa\u7ebf\n\u8f6f\u4ef6\u914d\u7f6e\u9879\n\u7248\u672c\u63a7\u5236\n\u53d8\u66f4\u63a7\u5236\n\n4.1.6\u8f6f\u4ef6\u8fc7\u7a0b\u7ba1\u7406\n\u8f6f\u4ef6\u80fd\u529b\u6210\u719f\u5ea6\u6a21\u578b(CMM)\n\n\u521d\u59cb\u7ea7\uff1a\u65e0\u5e8f\u6df7\u4e71\n\u53ef\u91cd\u590d\u7ea7\uff1a\u5efa\u7acb\u4e86\u57fa\u672c\u7684\u9879\u76ee\u7ba1\u7406\n\u5df2\u5b9a\u4e49\u7ea7\uff1a\u5df2\u5c06\u8f6f\u4ef6\u7ba1\u7406\u548c\u5de5\u7a0b\u8fc7\u7a0b\u6587\u6863\u5316\uff0c\u6807\u51c6\u5316\n\u5df2\u7ba1\u7406\u7ea7\uff1a\u6536\u96c6\u5bf9\u8f6f\u4ef6\u8fc7\u7a0b\u548c\u4ea7\u54c1\u8d28\u91cf\u7684\u8be6\u7ec6\u5ea6\u91cf\n\u4f18\u5316\u7ea7\uff1a\u8fc7\u7a0b\u7684\u91cf\u5316\u53cd\u9988\u548c\u5148\u8fdb\u7684\u601d\u60f3\n\n\n\u7edf\u4e00\u8fc7\u7a0b\u6a21\u578b(UP)\n\u7528\u4f8b\u548c\u98ce\u9669\u9a71\u52a8\uff0c\u4ee5\u67b6\u6784\u4e3a\u4e2d\u5fc3\uff0c\u8fed\u4ee3\u5e76\u4e14\u589e\u91cf\n\u56db\u4e2a\u9636\u6bb5\n\n\u521d\u59cb\u9636\u6bb5\uff1a\u751f\u547d\u5468\u671f\u76ee\u6807\n\u7cbe\u5316\u9636\u6bb5\uff1a\u751f\u547d\u5468\u671f\u6784\u67b6\n\u6784\u5efa\u9636\u6bb5\uff1a\u521d\u59cb\u8fd0\u4f5c\u529f\u80fd\n\u79fb\u4ea4\u9636\u6bb5\uff1a\u4ea7\u54c1\u53d1\u5e03\n\n\n\u5178\u578b\u4ee3\u8868RUP\n\u654f\u6377\u5f00\u53d1\n\u603b\u4f53\u76ee\u6807\uff1a\u5c3d\u53ef\u80fd\u65e9\u5730\uff0c\u6301\u7eed\u5730\u5bf9\u6709\u4ef7\u503c\u7684\u8f6f\u4ef6\u7684\u4ea4\u4ed8\n\n\u6781\u9650\u7f16\u7a0b(XP):\u8f7b\u91cf\u7ea7\u9ad8\u6548\uff0c4\u5927\u4ef7\u503c\u89c2..\n\u6c34\u6676\u6cd5(Crystal):\u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u9879\u76ee\u90fd\u9700\u8981\u4e00\u5957\u4e0d\u540c\u7684\u7b56\u7565\uff0c\u7ea6\u5b9a\u548c\u65b9\u6cd5\u8bba\n\u5e76\u5217\u4e89\u7403\u6cd5(Scrum):\u4f7f\u7528\u8fed\u4ee3\uff0c==\u6309\u9700\u6c42\u7684\u4f18\u5148\u7ea7\u522b\u6765\u5b9e\u73b0\u4ea7\u54c1==\n\u81ea\u9002\u5e94\u8f6f\u4ef6\u5f00\u53d1(ASD):\u6709\u4e00\u4e2a\u4f7f\u547d\uff0c\u7279\u5f81\u4e3a\u89c6\u4e3a\u5ba2\u6237\u5bb6\u8f89\u7684\u5173\u952e\u70b9\n\n\n4.1.7\u8f6f\u4ef6\u8d28\u91cf\u7ba1\u7406\n\u8f6f\u4ef6\u8d28\u91cf\u7279\u6027\n\n\u529f\u80fd\u6027\uff1a\u4e0e\u4e00\u7ec4\u529f\u80fd\u53ca\u5176\u6307\u5b9a\u7684\u6027\u8d28\u6709\u5173\u7684\u4e00\u7ec4\u5c5e\u6027\n\u53ef\u9760\u6027\uff1a\u4e00\u5b9a\u65f6\u95f4\uff0c\u8f6f\u4ef6\u7ef4\u6301\u5176\u6027\u80fd\u6c34\u5e73\u6709\u5173\n\u6613\u4f7f\u7528\u6027\uff1a\u4e3a\u4f7f\u7528\u8f6f\u4ef6\u4f7f\u7528\u7684\u52aa\u529b\n\u6548\u7387\uff1a\u89c4\u5b9a\u6761\u4ef6\u4e0b\uff0c\u8f6f\u4ef6\u6027\u80fd\u6c34\u5e73\u4e0e\u6240\u7528\u8d44\u6e90\u91cf\u5173\u7cfb\n\u53ef\u7ef4\u62a4\u6027\uff1a\u8fdb\u884c\u89c4\u5b9a\u4fee\u6539\u6240\u9700\u52aa\u529b\n\u6613\u5206\u6790\n\u6613\u6539\u53d8\n\u7a33\u5b9a\u6027\n\u6613\u6d4b\u8bd5\u6027\uff1a\u4e0e\u4e3a\u786e\u8ba4\u7ecf\u4fee\u6539\u8f6f\u4ef6\u6240\u9700\u52aa\u529b\n\n\n\n\n\u53ef\u79fb\u690d\u6027\uff1a\u5230\u53e6\u5916\u73af\u5883\u7684\u80fd\u529b\n\n\n\u8f6f\u4ef6\u8d28\u91cf\u4fdd\u8bc1\n\u8f6f\u4ef6\u590d\u6742\u6027\n\u5ea6\u91cf\u65b9\u6cd5\n\n\u4ee3\u7801\u884c\u5ea6\u91cf\u65b9\u6cd5\uff1a\u7edf\u8ba1\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u884c\u6570\uff0c\u4ee5\u6b64\u6765\u4e3a\u6307\u6807\nMcCabe\u5ea6\u91cf\u6cd5\uff1a\u53d6\u51b3\u4e8e\u63a7\u5236\u7684\u590d\u6742\u6027\n\n\u8f6f\u4ef6\u8bc4\u5ba1\n\u8f6f\u4ef6\u5bb9\u9519\u6280\u672f\n\u5b9e\u73b0\u624b\u6bb5\u4e3b\u8981\u662f\u5197\u4f59\n\n\u7ed3\u6784\u5197\u4f59\n\u4fe1\u606f\u5197\u4f59\n\u65f6\u95f4\u5197\u4f59\n\u5197\u4f59\u9644\u52a0\u6280\u672f\n\n4.2\u7cfb\u7edf\u5206\u6790\n4.2.1\u7ed3\u6784\u5316\u5206\u6790\u65b9\u6cd5\n\u9762\u5411\u6570\u636e\u6d41\u7684\u9700\u6c42\u5206\u6790\u65b9\u6cd5\uff0c\u9002\u7528\u4e8e\u5206\u6790\u5927\u578b\u6570\u636e\u5904\u7406\u7cfb\u7edf\n\n\u6570\u636e\u6d41\u56fe\n\n\u5206\u5c42\n\n\u9876\u5c42\u6570\u636e\u6d41\u56fe\uff1a\u63cf\u8ff0\u4e86\u7cfb\u7edf\u7684\u8f93\u5165\u8f93\u51fa\n0\u5c42\u56fe\uff1a\u52a0\u5de5\u8f93\u5165\u6d41\n\u5185\u90e8\uff1a\u52a0\u5de5\n\n\n4.3\u7cfb\u7edf\u5b9e\u65bd\n4.3.1\u6d4b\u8bd5\u7b56\u7565\u548c\u65b9\u6cd5\n\u9ed1\u76d2\u6d4b\u8bd5\n\n\u7b49\u4ef7\u7c7b\u5212\u5206\uff1a\u9009\u51fa\u4ee3\u8868\u6027\u6570\u636e\u6765\u6d4b\u8bd5\n\u8fb9\u754c\u503c\u5206\u6790\n\u9519\u8bef\u63a8\u6d4b\n\u56e0\u679c\u56fe\uff1a\u4ece\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u7684\u7a0b\u5e8f\u89c4\u683c\u627e\u51fa\u56e0\u548c\u679c\uff0c\u5236\u6210\u5224\u5b9a\u8868\n\n\n\u767d\u76d2\u6d4b\u8bd5\n\n\u903b\u8f91\u8986\u76d6\n\u8bed\u53e5\u8986\u76d6\uff1a\u4f7f\u6240\u6709\u8bed\u53e5\u90fd\u88ab\u8986\u76d6\uff0c==\u6700\u5f31\u7684\u903b\u8f91\u8986\u76d6==\n\u8def\u5f84\u8986\u76d6\uff1a\u6240\u6709\u8def\u5f84\u90fd\u4f1a\u6267\u884c\u5230\n\u5224\u5b9a\u8986\u76d6\n\u6761\u4ef6\u8986\u76d6\n\u5224\u5b9a/\u6761\u4ef6\u8986\u76d6\n\n\n\u5faa\u73af\u8986\u76d6\uff1a\u4f7f\u5faa\u73af\u4e2d\u6bcf\u4e2a\u6761\u4ef6\u90fd\u5f97\u5230\u9a8c\u8bc1\n\u57fa\u672c\u8def\u5f84\u6d4b\u8bd5\n\n\n4.4\u9898\u76ee\u603b\u7ed3\n\n\u6570\u636e\u6d41\u56fe\u5b88\u6052\u52a0\u5de5\u539f\u5219\u5982\u4e0b\n\n\u52a0\u5de5\u89c4\u683c\u8bf4\u660e\u5fc5\u987b\u63cf\u8ff0\u8f93\u5165\u53d8\u4e3a\u8f93\u51fa\u6570\u636e\u6d41\u7684\u52a0\u5de5\u89c4\u5219\n\u51b3\u7b56\u8868\u53ef\u4ee5\u7528\u6765\u8868\u793a\u52a0\u5de5\u89c4\u683c\u8bf4\u660e\n\u5bf9\u540c\u4e00\u4e2a\u52a0\u5de5\u6765\u8bf4\uff0c\u8f93\u5165\u4e0e\u8f93\u51fa\u540d\u5b57\u5fc5\u987b\u4e0d\u76f8\u540c\n\u52a0\u5de5\u89c4\u683c\u8bf4\u660e\u4e3b\u8981\u76ee\u7684\u662f\u8bf4\u505a\u4ec0\u4e48\u800c\u4e0d\u662f\u600e\u4e48\u505a\u7684\u5177\u4f53\u6d41\u7a0b\n\n\n\n\u6a21\u5757\u4f5c\u7528\u8303\u56f4\u8d85\u8fc7\u63a7\u5236\u8303\u56f4\u65f6\n\n\u901a\u5e38\u91c7\u7528\u5411\u4e0a\u79fb\u52a8\u5224\u65ad\u70b9\u4f4d\u7f6e\n\u5c06\u53d7\u5224\u5b9a\u5f71\u54cd\u7684\u6a21\u5757\u4e0b\u79fb\u5230\u63a7\u5236\u8303\u56f4\u5185\n\n\n\n\u6d3b\u52a8\u56fe\n\n==\u5173\u952e\u8def\u5f84==\uff1a\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\u5f97\u6240\u6709\u8def\u5f84\u4e2d\uff0c\u6240\u7528\u65f6\u95f4\u6700\u957f\u7684\u4e00\u6761\u4e3a\u5173\u952e\u8def\u5f84\u3002\n==\u6700\u65e9\u5f00\u59cb\u65f6\u95f4==\uff1a\u5728\u5173\u952e\u8def\u5f84\u4e0a\uff0c\u4ece\u5f00\u59cb\u5230\u8be5\u4efb\u52a1\u7684\u6700\u65e9\u6267\u884c\u7684\u65f6\u95f4\n==\u6700\u665a\u5f00\u59cb\u65f6\u95f4==\uff1a\u5173\u952e\u8def\u5f84\u7684\u603b\u65f6\u95f4-\u53cd\u5411\u5f97\u51fa\u8be5\u4efb\u52a1\u7684\u65f6\u95f4\n2.==\u677e\u5f1b\u65f6\u95f4==\uff08\u6700\u591a\u5ef6\u8fdf\u6267\u884c\u7684\u65f6\u95f4\uff09\n\u6700\u665a\u5f00\u59cb\u65f6\u95f4-\u6700\u65e9\u5f00\u59cb\u65f6\u95f4\n\n\n\n\n\n\u589e\u91cf\u5f0f\u4f18\u52bf\n\n==\u8f83\u77ed\u65f6\u95f4\u5185==\u63d0\u4f9b\u6709\u7528\u7684\u4ea7\u54c1\uff0c\u80fd\u591f\u89e3\u51b3\u7528\u6237\u6025\u7528\u529f\u80fd\n\u53ea\u63d0\u4ea4\u7528\u6237==\u90e8\u5206\u529f\u80fd==\uff0c\u7528\u6237\u6709\u5145\u8db3\u65f6\u95f4\u5b66\u4e60\u548c\u9002\u5e94\n\u9700\u6c42\u53d8\u66f4\u65f6\u53ea\u53d8\u66f4\u90e8\u5206\u90e8\u4ef6\uff0c==\u800c\u4e0d\u5fc5\u5f71\u54cd\u6574\u4e2a\u7cfb\u7edf==\n\n\n\n\u7a0b\u5e8f\u8d28\u91cf\u8bc4\u5ba1\n\u4ece\u5f00\u53d1\u8005\u89d2\u5ea6\u8bc4\u5ba1\uff0c\u7740\u773c\u4e8e==\u8f6f\u4ef6\u672c\u8eab\u7ed3\u6784==\uff0c==\u4e0e\u8fd0\u884c\u73af\u5883\u7684\u63a5\u53e3==\uff0c==\u53d8\u66f4\u5e26\u6765\u7684\u5f71\u54cd==\uff0c==\u6a21\u5757\u7ed3\u6784==\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b(\u4e0d\u5305\u62ec==\u6570\u636e\u7ed3\u6784==)\n\n\u63a7\u5236\u6d41\u7ed3\u6784\n\u6570\u636e\u6d41\u7ed3\u6784\n\u6a21\u5757\u7ed3\u6784\u4e0e\u529f\u80fd\u7ed3\u6784\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\n\n\n\n\u7cfb\u7edf\u53ef\u7ef4\u62a4\u6027\u7684\u8bc4\u4ef7\u6307\u6807\n\u4e0d\u5305\u62ec==\u53ef\u79fb\u690d\u6027==\n\n\u53ef\u7406\u89e3\u6027\n\u53ef\u6d4b\u8bd5\u6027\n\u53ef\u4fee\u6539\u6027\n\u7ef4\u62a4\u5de5\u5177\n\n\n\n\u9006\u5411\u5de5\u7a0b\n\u901a\u5e38\u5728\u539f\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u7684==\u8f6f\u4ef6\u7ef4\u62a4==\u9636\u6bb5\u8fdb\u884c\n\n\u7b49\u4ef7\u7c7b\u5212\u5206\u6d4b\u8bd5\n\u628a\u6240\u6709\u53ef\u80fd\u8f93\u5165\u7684\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u518d\u5728\u8f93\u5165\u65f6\u4e0d\u8981\u8f93\u5165\u4e24\u4e2a\u9519\u8bef\u7528\u4f8b\uff0c\u5426\u5219\u65e0\u6cd5\u5224\u65ad\n\n\u5355\u5143\u6d4b\u8bd5\u4e3b\u8981\u68c0\u67e5\u5185\u5bb9\n\n\u8fb9\u754c\u6d4b\u8bd5\n\u9519\u8bef\u5904\u7406\u6d4b\u8bd5\n\u8def\u5f84\u6d4b\u8bd5\n\u5c40\u90e8\u6570\u636e\u7ed3\u6784\u6d4b\u8bd5\n\u6a21\u5757\u63a5\u53e3\u6d4b\u8bd5\n\n\n\n\u9886\u57df\u7c7b\u6a21\u578b\n\u5bf9\u9886\u57df\u5185\u7684\u6982\u5ff5\u7c7b\uff0c\u73b0\u5b9e\u4e16\u754c\u7684\u53ef\u89c6\u5316\u8868\u793a\uff0c\u4e0d\u5305\u542b==\u64cd\u4f5c==\n\nPERT\u56fe==\u4e0d\u80fd\u6e05\u6670\u5730\u63cf\u8ff0\u4efb\u52a1\u95f4\u7684\u5e76\u884c\u5173\u7cfb==\n\n\u4fee\u6539\u9519\u8bef\u540e\uff0c\u8fd8\u9700\u8981==\u56de\u5f52\u6d4b\u8bd5==\u4ee5\u53d1\u73b0\u4fee\u6539\u662f\u5426\u5f15\u8d77\u539f\u672c\u6b63\u786e\u53d1\u751f\u9519\u8bef\n\n\n\n![](images/\u8f6f\u8003\u8f6f\u4ef6\u8bbe\u8ba1\u5e08\u7b14\u8bb0/4.3\u4f8b\u989813.2.jpg)\n\n\n\nMcCabe\u8ba1\u7b97\n\u516c\u5f0f:V(G)=m-n+2,m\u4e3a==\u8fb9\u6570==\uff0cn\u4e3a==\u8282\u70b9\u6570==\uff0c\u53ef\u4ee5\u7528\u4e09\u4e2a\u8282\u70b9\u4e24\u6761\u8fb9\u6765\u9a8c\u8bc1\n\u5982\u679c\u6709\u4e00\u6761\u8fb9\u6ca1\u6709\u8fde\u63a5\u4e24\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u8fb9\u4e0d\u7528\u7b97\n\n\n\u5355\u5143\u6d4b\u8bd5\u9700\u8981\u8003\u8651\n\n\u8f93\u5165\u53c2\u6570\u662f\u5426\u4e0e\u5f62\u5f0f\u53c2\u6570\u662f\u5426\u4e00\u81f4\n\u5168\u5c40\u53d8\u91cf\u7684\u5b9a\u4e49\u5728\u5404\u6a21\u5757\u662f\u5426\u4e00\u81f4\n\u8f93\u5165\u662f\u5426\u6539\u53d8\u4e86\u5f62\u5f0f\u53c2\u6570\n\u8c03\u7528\u5176\u4ed6\u6a21\u5757\u7684\u53c2\u6570\u4e0e\u88ab\u8c03\u7528\u7684\u6a21\u5757\u7684\u53c2\u6570\u662f\u5426\u4e00\u81f4\n\n\n\n\u5212\u5206\u6a21\u5757\u539f\u5219\uff0c\u4e00\u4e2a\u6a21\u5757\u4f5c\u7528\u8303\u56f4\u5e94\u8be5\u5728\u5176\u63a7\u5236\u8303\u56f4\u4e4b\u5185\uff0c\u63a7\u5236\u8303\u56f4==\u5b8c\u5168==\u53d6\u51b3\u4e8e\u7cfb\u7edf\u7684\u7ed3\u6784\n\n\u5197\u4f59\u9644\u52a0\u6280\u672f\n\u5305\u62ec\u7a0b\u5e8f\uff0c\u6307\u4ee4\uff0c\u6570\u636e\uff0c\u7a7a\u95f4\u548c\u901a\u9053\n\n\u5c4f\u853d==\u786c\u4ef6\u9519\u8bef==\n\u5173\u952e\u7a0b\u5e8f\u548c\u6570\u636e\u7684\u5197\u4f59\u5b58\u50a8\u53ca\u8c03\u7528\n\u68c0\u6d4b\uff0c\u8868\u51b3\uff0c\u5207\u6362\uff0c\u91cd\u6784\uff0c\u7ea0\u9519\u548c\u590d\u7b97\u7684\u5b9e\u73b0\n\n\n\u5c4f\u853d==\u8f6f\u4ef6\u9519\u8bef==\n\u5197\u4f59\u5907\u4efd\u7a0b\u5e8f\u7684\u5b58\u50a8\u53ca\u8c03\u7528\n\u5b9e\u73b0\u9519\u8bef\u68c0\u6d4b\u548c\u9519\u8bef\u6062\u590d\u7684\u7a0b\u5e8f\n\u5b9e\u73b0\u5bb9\u9519\u8f6f\u4ef6\u6240\u9700\u7684\u56fa\u5316\u7a0b\u5e8f\n\n\n\n\n\n\u6a21\u5757\u5185\u805a\n\n\u903b\u8f91\u5185\u805a\uff1a\u6a21\u5757\u5185\u51e0\u4e2a\u903b\u8f91\u76f8\u4f3c\u529f\u80fd\u7684\u6a21\u5757\uff0c\u901a\u8fc7\u53c2\u6570\u786e\u5b9a\u6267\u884c\u54ea\u4e2a\n\u987a\u5e8f\u5185\u805a\uff1a\u4e00\u4e2a\u6a21\u5757\u4e2d\u5404\u4e2a\u5904\u7406\u5143\u7d20\u90fd\u5bc6\u5207\u76f8\u5173\u540c\u4e00\u529f\u80fd\u4e14\u5fc5\u987b\u987a\u5e8f\u6267\u884c\uff0c\u524d\u4e00\u529f\u80fd\u7684\u5143\u7d20\u7684\u8f93\u51fa\u5c31\u662f\u4e0b\u4e00\u529f\u80fd\u7684\u8f93\u5165\n\u529f\u80fd\u5185\u805a\uff1a\u6a21\u5757\u5185\u6240\u6709\u5143\u7d20\u5b8c\u6210\u4e00\u4e2a\u529f\u80fd\n\n\n\n==\u65e0\u4e3b\u7a0b\u5e8f\u5458\u7ec4==\u6210\u5458\u76f8\u4e92\u5e73\u7b49\uff0c\u5de5\u4f5c\u7531\u5171\u540c\u8ba8\u8bba\uff0c\u6709\u5229\u4e8e\u53d1\u6325\u4e2a\u4eba\u79ef\u6781\u6027\uff0c\u4f46\u804c\u8d23\u4e0d\u660e\uff0c\u4e0d\u9002\u5408\u5f00\u53d1\u5927\u89c4\u6a21\u9879\u76ee\n\n\u9879\u76ee\u7ec4\u5bf9\u98ce\u9669\u4e3b\u52a8\uff0c\u5219==\u98ce\u9669\u907f\u514d==\u6700\u597d\n\n\u4ea7\u54c1\u8fd0\u884c\u65b9\u9762\u7684\u8d28\u91cf\u7279\u6027\u4e0d\u5305\u62ec==\u7075\u6d3b\u6027==\uff0c\u8fd9\u5c5e\u4e8e\u4ea7\u54c1\u4fee\u6b63\u65b9\u9762\u7684\u7279\u6027\n\n\u5229\u7528\u7ed3\u6784\u5316\u5206\u6790\u6a21\u578b\u8fdb\u884c\u63a5\u53e3\u8bbe\u8ba1\u65f6\uff0c\u5e94\u4ee5==\u6570\u636e\u6d41\u56fe==\u4e3a\u4f9d\u636e\n\n\u7528\u6237\u6570\u636e\u9694\u5f00\u6709\u5173\u4e8e==\u5b89\u5168\u6027==\uff0c\u6240\u4ee5\u8003\u8651\u4e86\u8f6f\u4ef6\u7279\u6027\u7684==\u529f\u80fd\u6027==\n\n\u6570\u636e\u6d41\u56fe\n\n\u52a0\u5de5\u5230\u6570\u636e\u5b58\u50a8\u4e0d\u7b97==\u7f3a\u5931\u7684\u6570\u636e\u6d41==\uff0c\u6709\u7bad\u5934\u4f46\u6ca1\u6587\u5b57\u4e0d\u7b97==\u7f3a\u5931\u7684\u6570\u636e\u6d41==\n\n\n\n\n\u4e94.\u7f51\u7edc\u57fa\u7840\u77e5\u8bc6\n5.1\u7f51\u7edc\u7684\u62d3\u6251\u7ed3\u6784\n\n\u603b\u7ebf\u7ed3\u6784\uff1a\u53ea\u6709\u4e00\u6761\u53cc\u5411\u901a\u8def\uff0c\u5c5e\u4e8e==\u5206\u5e03\u5f0f\u63a7\u5236==\uff0c==\u8282\u70b9\u7684\u589e\u5220\u548c\u4f4d\u7f6e\u7684\u6539\u52a8==\u8f83\u5bb9\u6613\uff0c\uff0c\u8282\u70b9\u63a5\u53e3\u91c7\u7528==\u65e0\u6e90\u7535\u8def==\uff0c\u8bbe\u5907\u5c11\u4ef7\u683c\u4f4e\uff0c\u5bf9\u4fe1\u53f7\u8d28\u91cf\u8981\u6c42\u9ad8\n\u661f\u5f62\u7ed3\u6784\uff1a\u4ee5==\u653e\u5c04\u72b6==\u8fde\u63a5\u8282\u70b9\uff0c\uff0c\u7279\u70b9\u7ef4\u62a4\u7ba1\u7406\u5bb9\u6613\uff0c\u6545\u969c\u9694\u79bb\u548c\u68c0\u6d4b\u5bb9\u6613\n\u73af\u5f62\u7ed3\u6784\uff1a\u4fe1\u606f\u6d41\u52a8\u65b9\u5411\u56fa\u5b9a\uff0c\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u6162\n\u6811\u5f62\u7ed3\u6784\uff1a\u603b\u7ebf\u7ed3\u6784\u7684\u6269\u5145\u5f62\u5f0f\n\u5206\u5e03\u5f0f\u7ed3\u6784\uff1a\u5404\u8282\u70b9\u4e4b\u95f4\u591a\u6761\u7ebf\u8def\u76f8\u8fde\uff0c\u8d44\u6e90\u5171\u4eab\u65b9\u4fbf\uff0c\u7f51\u7edc\u54cd\u5e94\u65f6\u95f4\u77ed\n\n\n5.2ISO/OSI\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\n\n5.2.1\u7f51\u7edc\u4e92\u8054\u786c\u4ef6\n\u7269\u7406\u5c42\u4e92\u8054\u8bbe\u5907\n\n\u4e2d\u7ee7\u5668\uff1a\u4e3a\u4fdd\u8bc1\u6709\u7528\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u7528\u4e2d\u7ee7\u5668\u628a\u6240\u63a5\u6536\u5230\u7684\u5f31\u4fe1\u53f7\u8fdb\u884c\u5206\u79bb\uff0c\u5e76\u518d\u653e\u5927\n\u96c6\u7ebf\u5668\uff1a\u7279\u6b8a\u7684\u4e2d\u7ee7\u5668\uff0c\u4f7f\u7528\u53cc\u7ede\u7ebf\n\n\n\u6570\u636e\u94fe\u8def\u5c42\u4e92\u8054\u8bbe\u5907\n\n\u7f51\u6865\uff1a\u4e00\u4e2a\u5c40\u57df\u7f51\u5230\u53e6\u4e00\u4e2a\u5c40\u57df\u7f51\u7684\u5efa\u7acb\u7684\u6865\u6881\uff0c\uff0c\u4f5c\u7528==\u6269\u5c55\u7f51\u7edc\u548c\u8fc7\u6ee4\u5e27==\n\u4ea4\u6362\u673a\uff1a\u5177\u6709\u9ad8\u7aef\u53e3\u5bc6\u96c6\u7279\u70b9\u7684\u4ea4\u6362\u4ea7\u54c1\uff0c\u96e8\u8368\u5171\u4eab\u578b\u548c\u4e13\u7528\u578b\u7684\u5c40\u57df\u7f51\u8fdb\u884c\u5e26\u5bbd\u8c03\u6574\uff0c\u4ee5\u51cf\u8f7b\u5c40\u57df\u7f51\u4e4b\u95f4\u4fe1\u606f\u6d41\u901a\u51fa\u73b0\u7684\u74f6\u9888\u95ee\u9898\n\n\n\u7f51\u7edc\u5c42\u4e92\u8054\u8bbe\u5907\n\u8def\u7531\u5668\uff1a\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u903b\u8f91\u4e0a\u5206\u5f00\u7684\u7f51\u7edc\uff0c\u5177\u6709\u5224\u65ad\u7f51\u7edc\u5730\u5740\u548c\u9009\u62e9\u8def\u5f84\u7684\u529f\u80fd\n\n\u5e94\u7528\u5c42\u4e92\u8054\u8bbe\u5907\n\u7f51\u5173\uff1a\u5c06\u534f\u8bae\u8fdb\u884c\u8f6c\u6362\uff0c\u5c06\u6570\u636e\u91cd\u65b0\u5206\u7ec4\n\n5.2.2\u7ec4\u5efa\u7f51\u7edc\n\n\u670d\u52a1\u5668\n\u5ba2\u6237\u673a\n\u7f51\u7edc\u8bbe\u5907\n\u901a\u4fe1\u4ecb\u8d28\n\u7f51\u7edc\u8f6f\u4ef6\n\n\n5.3\u7f51\u7edc\u7684\u6807\u51c6\u548c\u534f\u8bae\n5.4Internet\u53ca\u5e94\u7528\n5.4.1Internet\u5730\u5740\n\nA\u7c7b\uff1a1\u4e2a\u5b57\u8282\u7f51\u7edc\u5730\u5740\uff0c3\u4e2a\u4e3b\u673a\u5730\u5740\nB\u7c7b\uff1a2\u4e2a\u5b57\u8282\u7f51\u7edc\u5730\u5740\uff0c2\u4e2a\u4e3b\u673a\u5730\u5740\nC\u7c7b\uff1a3\u4e2a\u5b57\u8282\u7f51\u7edc\u5730\u5740\uff0c1\u4e2a\u4e3b\u673a\u5730\u5740\nD\u7c7b\uff1a\u4ee51110\u5f00\u59cb\nE\u7c7b\uff1a\u4ee51111\u5f00\u59cb\n\n\n\u975e\u7c7b\u522b\u5730\u5740\u4f8b\u5982\uff1a172.18.129.0/==24==\uff0c==24==\u4ee3\u8868\u5728\u4e8c\u8fdb\u5236\u6a21\u5f0f\u4e0b\u7f51\u7edc\u5730\u5740\u5360\u591a\u5c11\u4f4d\uff0c\u603b\u5171==32\u4f4d==\uff0c\u5b50\u7f51\u4e3a==2^24^==\u4e2a\uff0c\u6bcf\u4e2a\u5b50\u7f51\u53ef\u4f7f\u7528\u7684\u4e3b\u673a\u5730\u5740\u662f==2^32^-2==\u4e2a\uff0c2\u4e2a\u6307\u7684\u662f\u51680\u548c\u51681\u60c5\u51b5\n\n\u5b50\u7f51\u5212\u5206\n27\u4e2a\u5b50\u7f51\uff0c\u9700\u89815\u4f4d\u4e3b\u673a\u5730\u5740\u6765\u8865\u5145\uff0c\u53732^5^\uff0c\u7136\u540e\u628a\u7f51\u7edc\u5730\u5740\u5168\u4e3a1\uff0c\u4e3b\u673a\u5730\u5740\u5168\u4e3a0\uff0c\u5728\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u5c31\u662f==\u5b50\u7f51\u63a9\u7801==\n\n\n\n\u975e\u7c7b\u6700\u5927\u53ef\u8868\u793a\uff0c\u8ba9\u4e3b\u673a\u5730\u5740\u5168\u4e3a1\u5373\u80fd\u8868\u793a\u7684\u6700\u5927\n5.4.1Internet\u670d\u52a1\nDNS\u57df\u540d\u670d\u52a1\n==\u57df\u540d\u5730\u5740==\u548c==IP\u5730\u5740==\u7b49\u4ef7\uff0c\u901a\u8fc7==\u57df\u540d\u670d\u52a1\u5668==\uff0c\u5b8c\u6210\u6620\u5c04\u53d8\u6362\u3002DNS\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u5730\u5740\u4fe1\u606f\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u7528\u7684\u662f==UDP\u7aef\u53e3==\uff0c\u7aef\u53e3\u53f7==53==\n\n\u8fdc\u7a0b\u767b\u5f55\u670d\u52a1\n\u662f\u5728==Telnet\u534f\u8bae==\u7684\u652f\u6301\u4e0b\uff0c\u5c06\u7528\u6237\u8ba1\u7b97\u673a\u4e0e\u8fdc\u7a0b\u8ba1\u7b97\u673a\u8fde\u63a5\uff0c\u7528\u7684\u662f==TCP\u7aef\u53e3==\uff0c\u7aef\u53e3\u53f7==23==\n\n\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\n\u683c\u5f0f\uff1a\u7528\u6237\u540d@\u4e3b\u673a\u540d\u3002\nEmail\u7cfb\u7edf\n\nEmail\u5ba2\u6237\u8f6f\u4ef6\nEmail\u670d\u52a1\u5668\n\u901a\u4fe1\u534f\u8bae\n\n\u534f\u8bae\uff1a\u5747\u4f7f\u7528==TCP\u7aef\u53e3==\n\nSMTP(\u90ae\u4ef6\u4f20\u9001\u534f\u8bae)\uff1a\u7aef\u53e3\u53f7==25==\nPOP3(\u90ae\u4ef6\u63a5\u6536\u534f\u8bae)\uff1a\u7aef\u53e3\u53f7==110==\n\n\nWWW\u670d\u52a1\n\u4ea4\u4e92\u5f0f\u56fe\u5f62\u754c\u9762\u7684Internet\u670d\u52a1\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae(HTTP),\u6570\u636e\u6587\u4ef6\u7531==HTML==\u63cf\u8ff0\uff0c\u4f7f\u7528\u7684\u662f==TCP\u7aef\u53e3==\uff0c\u7aef\u53e3\u53f7==80==\n\n\u6587\u4ef6\u4f20\u8f93\u670d\u52a1\nFTP\n\n\u5ba2\u6237\u8f6f\u4ef6\n\u670d\u52a1\u5668\u8f6f\u4ef6\nFTP\u901a\u4fe1\u534f\u8bae\n\n\u4e24\u6761==TCP==\u8fde\u63a5\n\n\u63a7\u5236\u8fde\u63a5\uff1a\u4e3b\u8981\u4f20\u8f93\u547d\u4ee4\u548c\u53c2\u6570\uff0c\u7aef\u53e3\u53f7==21==\n\u6570\u636e\u8fde\u63a5\uff1a\u4e3b\u8981\u4f20\u8f93\u6587\u4ef6\uff0c\u7aef\u53e3\u53f7==20==\n\n\n5.5\u7f51\u7edc\u5b89\u5168\n5.5.1\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\n\n\u7269\u7406\u5a01\u80c1\n\u7f51\u7edc\u653b\u51fb\n\u8eab\u4efd\u9274\u522b\uff1a\u8bbe\u7f6e\u53e3\u4ee4\u7684\u624b\u6bb5\u5b9e\u73b0\uff0c\u5bc6\u7801\u7834\u8bd1\n\u7f16\u7a0b\u5a01\u80c1\uff1a\u901a\u8fc7==\u75c5\u6bd2==\u8fdb\u884c\u653b\u51fb\n\u7cfb\u7edf\u6f0f\u6d1e\uff1a\u6709\u610f\u8bbe\u7f6e\uff0c\u4f7f\u7528\u6237\u5728\u5931\u53bb\u8bbf\u95ee\u6743\u4f9d\u7136\u80fd\u8fdb\u5165\u7cfb\u7edf\n\n\n5.5.2\u653b\u51fb\u624b\u6bb5\n\n\u53e3\u4ee4\u5165\u4fb5\uff1a\u9ed1\u5ba2==\u7528\u5408\u6cd5\u7528\u6237\u7684\u8d26\u53f7==\u767b\u5f55\u8fdb\u884c\u653b\u51fb\n\u9632\u7f6e\u7279\u6d1b\u4f0a\u6728\u9a6c\uff1a\u53ef\u4ee5\u8fdc\u7a0b\u63a7\u5236\u522b\u4eba\u4e3b\u673a\nDoS\u653b\u51fb\uff1a\u5373\u62d2\u63a5\u670d\u52a1\uff0c\u76ee\u7684\u662f\u4f7f\u8ba1\u7b97\u673a\u6216\u7f51\u8def\u65e0\u6cd5\u63d0\u4f9b\u6b63\u5e38\u670d\u52a1\uff0c\u5e38\u89c1\u6709==\u8ba1\u7b97\u673a\u7f51\u7edc\u5e26\u5bbd\u653b\u51fb==\u548c==\u8fde\u901a\u6027\u653b\u51fb==\u3002DDos\u6307\u501f\u52a9\u4e8e==\u5ba2\u6237\u673a/\u670d\u52a1\u5668\u6280\u672f==\uff0c\u5c06\u591a\u4e2a\u8ba1\u7b97\u673a\u4e00\u8d77\u653b\u51fb\u5e73\u53f0\n\u7aef\u53e3\u626b\u63cf\uff1a\u5229\u7528Socket\u7f16\u7a0b\u4e0e\u76ee\u6807TCP\u8fde\u63a5\n\u7f51\u7edc\u76d1\u542c\uff1a\u4e3b\u673a\u53ef\u4ee5\u63a5\u6536\u5230\u672c\u7f51\u6bb5\u5728\u540c\u4e00\u6761\u7269\u7406\u901a\u9053\u4e0a\u4f20\u8f93\u7684\u6240\u6709\u4fe1\u606f\n\u6b3a\u9a97\u653b\u51fb\uff1a\u521b\u9020\u4e00\u4e2a\u6613\u4e8e\u8bef\u89e3\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff0c\u8bf1\u4f7f\u88ab\u653b\u51fb\u8fd9\u505a\u51fa\u7f3a\u4e4f\u5b89\u5168\u7684\u51b3\u7b56\uff0c\u5e38\u89c1Web\uff0cAPR\uff0cIP\u6b3a\u9a97\n\u7535\u5b50\u90ae\u4ef6\u653b\u51fb\n\n\n5.5.3\u9632\u706b\u5899\n\u5efa\u7acb\u5728\u5185\u5916\u7f51\u7edc\u8fb9\u754c\u4e0a\u7684\u8fc7\u6ee4\u5c01\u9501\u673a\u5236\n\n\u5206\u7c7b\n\n\u5305\u8fc7\u6ee4\u578b\u9632\u706b\u5899\uff1a\u5728==\u7f51\u7edc\u5c42==\uff0c\u5bf9\u4e8e==\u4f20\u8f93\u5c42==\uff0c\u53ea\u80fd\u8bc6\u522b\u662fTCP\u8fd8\u662fUDP\n\u5e94\u7528\u4ee3\u7406\u7f51\u5173\u9632\u706b\u5899\uff1a==\u5f7b\u5e95\u9694\u65ad==\u5185\u7f51\u4e0e\u5916\u7f51\u7684\u76f4\u63a5\u901a\u4fe1\n\u72b6\u6001\u68c0\u6d4b\u6280\u672f\u9632\u706b\u5899\uff1a\u5728\u4e0a\u9762\u57fa\u7840\u4e0a\u52a0\u4e8610\u500d\n\n\n\u7ec4\u6210\n\u6309\u7167\u53d7\u4fdd\u62a4\u7a0b\u5ea6\u4ece\u9ad8\u5230\u4f4e\uff0c\u5185\u7f51&gt;DMZ&gt;\u5916\u7f51\n\n5.5.4\u75c5\u6bd2\u6536\u5f55\n\u5feb\u4e50\u65f6\u5149\nVB\u6e90\u7a0b\u5e8f\u75c5\u6bd2\uff0c\u7535\u5b50\u90ae\u4ef6\u7684\u9644\u4ef6\n\n\u718a\u732b\u70e7\u9999\n==\u8815\u866b\u75c5\u6bd2==\u7684\u53d8\u79cd\uff0c\u66f4\u6539exe\u7684\u6587\u4ef6\u56fe\u6807\n\nX\u5367\u5e95\n==\u624b\u673a==\u91cc\u7684\u76d1\u63a7\u8f6f\u4ef6\n\nCIH\u75c5\u6bd2\n\u7834\u574f\u8ba1\u7b97\u673a\u7cfb\u7edf\u786c\u4ef6\u7684\u6076\u6027\u75c5\u6bd2\n\n\u5b8f\u75c5\u6bd2\n\u5bc4\u5b58\u5728\u6587\u6863\uff0c\u6253\u5f00\u6b64\u6587\u6863\u4f1a\u88ab\u611f\u67d3\n\n\u7279\u6d1b\u4f0a\u6728\u9a6c\n\u79d8\u5bc6\u6f5c\u4f0f\u80fd\u591f\u901a\u8fc7\u8fdc\u7a0b\u7f51\u7edc\u8fdb\u884c\u63a7\u5236\u7684\u6076\u610f\u7a0b\u5e8f\uff0c\u8ba9\u53d7\u5bb3\u8005\u4e3a\u670d\u52a1\u7aef\uff0c\u81ea\u5df1\u4e3a\u5ba2\u6237\u7aef\uff0c\u4ece\u800c\u8bbf\u95ee\u670d\u52a1\u7aef\u7684\u6570\u636e\n\n5.5.5\u5b89\u5168\u534f\u8bae\n\nPGP\uff1a\u57fa\u4e8ePSA\u516c\u94a5\u52a0\u5bc6\u4f53\u5236\u7684==\u90ae\u4ef6\u52a0\u5bc6\u8f6f\u4ef6==\nHTTPS\uff1a\u5b89\u5168\u57fa\u7840\u662f==SSL==\nIPSec\uff1a\u4f7f\u7528\u52a0\u5bc6\u7684\u5b89\u5168\u670d\u52a1\u4ee5\u786e\u4fdd\u5728Internet\u7f51\u7edc\u4e0a\u8fdb\u884c\u4fdd\u5bc6\u901a\u4fe1\nSSL\uff1a\u4e3a\u7f51\u7edc\u901a\u4fe1\u63d0\u4f9b\u5b89\u5168\u6570\u636e\uff0c\u4e0e==TLS==\u6700\u63a5\u8fd1\nTLS\n\n\n5.6\u9898\u76ee\u603b\u7ed3\n\n==PKI\u4f53\u5236==\u4e2d\uff0c\u4fdd\u8bc1\u6570\u5b57\u8bc1\u4e66\u4e0d\u88ab\u7be1\u6539\u7684\u65b9\u6cd5\u662f==\u7528CA\u7684\u79c1\u94a5\u5bf9\u6570\u5b57\u8bc1\u4e66\u7b7e\u540d==\n\n\u516c\u5f00\u5bc6\u94a5\u52a0\u5bc6\u7b97\u6cd5\n\nECC\nRSA\nDSA\n\n\n\n\n\n\u6280\u672f\n\n\u96a7\u9053\u6280\u672f\uff1a\u63d0\u4f9b\u4e86\u4e00\u79cd\u73b0\u6709IPV4\u8def\u7531\u4f53\u7cfb\u6765\u4f20\u9012IPV6\u7684\u6570\u636e\u65b9\u6cd5\uff0c\u5373\u5c06IPV6\u5305\u4f5c\u4e3a\u65e0\u7ed3\u6784\u610f\u4e49\u7684\u6570\u636e\uff0c\u5c01\u88c5\u5728IPV4\u4e2d\uff0c\u88abIPV4\u7f51\u7edc\u4f20\u8f93\n\u53cc\u534f\u8bae\u6808\u6280\u672f\uff1a==\u4f7fIPV6\u4e0eIPV4\u8282\u70b9\u517c\u5bb9\u7684\u6700\u76f4\u63a5\u65b9\u5f0f==\n\n\n\n\n\n\n==(POP)POP3\u534f\u8bae==\n\u9002\u7528\u4e8eC/S\u7ed3\u6784\u7684\u8131\u673a\u6a21\u578b\u7684\u7535\u5b50\u90ae\u4ef6\u534f\u8bae\uff0c\u662f\u4e00\u79cd\u89c4\u5b9a\u600e\u6837\u5c06\u4e2a\u4eba\u8ba1\u7b97\u673a\u8fde\u63a5\u5230Internet\u7684\u90ae\u4ef6\u670d\u52a1\u5668\n\n\n\u5229\u7528==\u62a5\u6587\u6458\u8981\u7b97\u6cd5==\u751f\u6210\u62a5\u6587\u6458\u8981\u7684\u76ee\u7684\uff1a\u9632\u6b62\u53d1\u9001\u7684\u62a5\u6587\u88ab\u7be1\u6539\n\n\u51b2\u7a81\u57df\u548c\u5e7f\u64ad\u57df\n\n\u96c6\u7ebf\u5668\uff1a\u4e00\u4e2a\u51b2\u7a81\u57df\u548c\u4e00\u4e2a\u5e7f\u64ad\u57df\n\u4ea4\u6362\u673a\uff1a\u591a\u5c11\u4e2a\u4e3b\u673a\u591a\u5c11\u4e2a\u51b2\u7a81\u57df\u548c\u4e00\u4e2a\u5e7f\u64ad\u57df\n\n\n\n\n\n\n\u901a\u5e38\u5728UDP\u534f\u8bae\u4e0a\u7684\u5e94\u7528\u662f==VOIP==\uff0c\u7f51\u9875\u662f==HTTP==,==Telnet\u8fdc\u7a0b\u767b\u5f55==\u662f==TCP==\uff0c==\u90ae\u4ef6==\u662f==SMTP==\n\n\u901a\u8fc7DNS\u670d\u52a1\u5668\u5b9e\u73b0\u7f51\u7edc\u8d1f\u8f7d\u5747\u8861\uff0c\u65b9\u6cd5\u6709==\u542f\u7528\u5faa\u73af\uff0c\u6dfb\u52a0\u6bcf\u4e2aWeb\u670d\u52a1\u5668\u7684\u4e3b\u673a\u8bb0\u5f55==\n\n\u6570\u5b57\u8bc1\u4e66CA\uff0c\u5148\u4eceCA\u83b7\u53d6\u53d1\u9001\u65b9\u7684\u6570\u5b57\u8bc1\u4e66\n\n\u9a8c\u8bc1\u8be5\u8bc1\u4e66\u771f\u4f2a\uff1a==\u7528CA\u7684\u516c\u94a5==\n\u9a8c\u8bc1\u6d88\u606f\u7684\u771f\u5b9e\u6027\uff1a==A\u7684\u516c\u94a5==\n\u6570\u5b57\u7b7e\u540d\uff1a\u4f7f\u7528CA\u7684\u79d8\u94a5\n\u53d1\u9001\u65b9\u7528==\u79d8\u94a5==\u52a0\u5bc6\n\n\n\nSNMP\u670d\u52a1\uff0c\u9700\u8981==administrator==\u624d\u80fd\n\nASP\u5185\u7f6e\u5bf9\u8c61\n\nrequest\uff1a\u8bbf\u95ee\u4efb\u4f55\u7528HTTP\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u4eceHTML\u8868\u683c\u7684POST\u548cGET\u7684\u53c2\u6570\uff0ccookie\u548c\u7528\u6237\u8ba4\u8bc1\nresponse\uff1a\u5bf9\u8c61\u63a7\u5236\u53d1\u9001\u4e2a\u7528\u6237\u4fe1\u606f\uff0c\u91cd\u5b9a\u5411URL\uff0c\u66f4\u6539cookie\u7684\u503c\napplication\uff1a\u4f7f\u7ed9\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u7528\u6237\u5171\u4eab\u4fe1\u606f\nsession\uff1a\u5b58\u50a8\u7279\u5b9a\u7684\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f\n\n\n\nDNS\u66f4\u65b0\u4e86\u57df\u540d\uff0c\u9700\u8981==\u5237\u65b0\u7f13\u5b58==\uff0c\u53ef\u4ee5\u7528windows\u547d\u4ee4==ipconfig/flushdns==\n\n\u8eab\u4efd\u9a8c\u8bc1\u673a\u5236\u5b89\u5168\u7ea7\u522b\u4ece\u5c0f\u5230\u5927\n\n\u533f\u540d\u8eab\u4efd\u9a8c\u8bc1\n\u57fa\u672c\n\u6458\u8981\u5f0f\n\u96c6\u6210Windows\n\n\n\nSMTP\u4f20\u8f93\u91c7\u7528==ASCII==\u683c\u5f0f\u8868\u793a\n\n\u7f51\u7edc\u53ef\u7528\u6027\u548c\u53ef\u9760\u6027\n\n\u53ef\u9760\u6027\uff1a\u89c4\u5b9a\u65f6\u95f4\u548c\u6761\u4ef6\u4e0b\uff0c\u7f51\u7edc\u7cfb\u7edf\u5b8c\u6210\u89c4\u5b9a\u529f\u80fd\u7684\u80fd\u529b\n\u53ef\u7528\u6027\uff1a\u7528\u6237\u53ef\u5229\u7528\u7f51\u7edc\u65f6\u95f4\u7684\u767e\u5206\u6bd4\n\n\n\n\u5efa\u7b51\u7269\u7efc\u5408\u5e03\u7ebf\u7cfb\u7edf\n\n\u5de5\u4f5c\u533a\u5b50\u7cfb\u7edf\uff1a\u7ec8\u7aef\u5230\u4fe1\u606f\u63d2\u5ea7\u4e4b\u95f4\n\u6c34\u5e73\u5b50\u7cfb\u7edf\uff1a\u697c\u5c42\u63a5\u7ebf\u95f4\u5230\u5de5\u4f5c\u533a\n\u5e72\u7ebf\u5b50\u7cfb\u7edf\uff1a\u5404\u697c\u5c42\u8bbe\u5907\u4e4b\u95f4\u7684\u4e92\u8054\u7cfb\u7edf\n\u56ed\u533a\u5b50\u7cfb\u7edf\uff1a\u8fde\u63a5\u5404\u4e2a\u5efa\u7b51\u7269\u7684\u901a\u4fe1\u7cfb\u7edf\n\n\n\n\u7cfb\u7edf\n\n\u6f0f\u6d1e\u626b\u63cf\u7cfb\u7edf\uff1a\u81ea\u52a8\u68c0\u6d4b\u8fdc\u7a0b\u6216\u672c\u5730\u4e3b\u673a\u5b89\u5168\u6f0f\u6d1e\u7684\u7a0b\u5e8f\uff0c\u901a\u5e38\u6307\u786c\u4ef6\u8f6f\u4ef6\u7b49\u5b58\u5728\u5b89\u5168\u7f3a\u9677\u3002FTP\u670d\u52a1\u5668\u5b58\u5728\u53ef\u5199\u76ee\u5f55\u662f\u4e00\u4e2a\u5b89\u5168\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e2a\n\u9632\u706b\u5899\u7cfb\u7edf\uff1a\u4e13\u6ce8\u5185\u90e8\u7f51\u548c\u5916\u90e8\n\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff1a==\u5bf9\u7f51\u7edc\u4f20\u8f93\u8fdb\u884c\u5b9e\u65f6\u68c0\u6d4b==\n\u75c5\u6bd2\u9632\u5fa1\u7cfb\u7edf\uff1a\u9632\u6b62\u9ed1\u5ba2\uff0c\u75c5\u6bd2\uff0c\u6728\u9a6c\n\n\n\nTCP\u4f7f\u7528==\u4e09==\u6b21\u63e1\u624b\u534f\u8bae\n\n\n\n\u516d.\u591a\u5a92\u4f53\u57fa\u7840\u77e5\u8bc6\n6.1\u683c\u5f0f\n\u56fe\u50cf\n\nBMP\uff1awin\u91c7\u7528\u7684\u56fe\u50cf\u683c\u5f0f\uff0c==\u4e0e\u8bbe\u5907\u65e0\u5173\u7684\u4f4d\u56fe\u683c\u5f0f==\nGIF\uff1a\u538b\u7f29\u56fe\u50cf\u5b58\u50a8\u683c\u5f0f\uff0c\u65e0\u635f\u538b\u7f29\nTIFF\uff1a\u5de5\u4e1a\u6807\u51c6\u683c\u5f0f\uff0c==\u652f\u6301\u6240\u6709\u56fe\u50cf\u7c7b\u578b==\nPCX\uff1a\u4f7f\u7528==RLE\u65b9\u6cd5==\u5bf9\u56fe\u7247\u538b\u7f29\nJPEG\uff1a\u6587\u4ef6\u975e\u5e38\u5c0f\uff0c\u6709\u635f\nPCD\uff1a\u6570\u636e\u5f88\u5927\uff0c\u6444\u50cf\u4e13\u7528\u683c\u5f0f\n\n\n\u89c6\u9891\n\nGIF\nFlic\uff1a\u65e0\u635f\u538b\u7f29\uff0c\u91c7\u7528==RLE\u7b97\u6cd5==\nAVI\uff1a\u5141\u8bb8\u89c6\u9891\u548c\u97f3\u9891\u4e00\u8d77\u64ad\u653e\nQuick Time\uff1a\u82f9\u679c\u516c\u53f8\nMPEG\uff1a\u8fd0\u52a8\u56fe\u50cf\u538b\u7f29\u7b97\u6cd5\u7684==\u56fd\u9645\u6807\u51c6==\nRealVideo\n\n\n6.2\u9898\u76ee\u603b\u7ed3\n\n==\u77e2\u91cf\u56fe==\u662f\u7531\u4e00\u7cfb\u5217\u7ebf\u8fde\u63a5\u7684\u70b9\uff0c\u57fa\u672c\u5355\u4f4d\u662f==\u56fe\u5143==\n\n==\u89c6\u9891\u4fe1\u606f==\u7684\u57fa\u672c\u5355\u5143\u662f==\u5e27==\n\n\u58f0\u97f3\u4fe1\u53f7\u6570\u5b57\u5316\u8fc7\u7a0b\u9996\u5148\u8981\u8fdb\u884c==A/D\u8f6c\u6362==\n\n==dpi==\u6307\u6bcf\u82f1\u5bf8\u7684\u50cf\u7d20\n\n\u5a92\u4f53\n\n\u611f\u89c9\u5a92\u4f53\uff1a\u4f7f\u4eba\u4ea7\u751f\u76f4\u63a5\u611f\u89c9\u7684\u5a92\u4f53\uff0c\u5982\u58f0\u97f3\u56fe\u50cf\u7b49\n\u8868\u793a\u5a92\u4f53\uff1a\u4f20\u8f93==\u611f\u89c9\u5a92\u4f53==\u7684\u4e2d\u4ecb\u5a92\u4f53\uff0c\u7528\u4e8e==\u6570\u636e\u4ea4\u6362\u7684\u7f16\u7801==\n\u8868\u73b0\u5a92\u4f53\uff1a\u663e\u793a\u5a92\u4f53\uff0c==\u8ba1\u7b97\u673a\u7528\u4e8e\u8f93\u5165\u8f93\u51fa\u7684\u5a92\u4f53==\uff0c\u5982\u952e\u76d8\uff0c\u9f20\u6807\uff0c\u5149\u7b14\uff0c\u663e\u793a\u5668\uff0c\u626b\u63cf\u4eea\uff0c\u6253\u5370\u673a\uff0c\u6570\u5b57\u5316\u4eea\n\u5b58\u50a8\u5a92\u4f53\n\u4f20\u8f93\u5a92\u4f53\uff1a\u4f20\u8f93\u5a92\u4f53\u7684==\u7269\u7406\u4ecb\u8d28==\uff0c\u7535\u7f06\u5149\u7f06\u7535\u78c1\u6ce2\u7b49\n\n\n\n\u7528\u6237\u653e\u5f03\u4e0b\u8f7d\u53ef\u4ee5\u7528\u6216\u663e\u793a\u56fe\u7247\u5f71\u50cf\u95ee\u9898\n\n\u6d41\u5a92\u4f53\u6280\u672f\nJPEG\u7d2f\u8fdb\u7f16\u7801\u65b9\u5f0f\uff1a\u63a5\u6536\u7aef\u7531\u7c97\u7cd9\u5230\u6e05\u6670\nGIF\u683c\u5f0f\n\n\u4e0d\u80fd\u7528AD/DA\u7f16\u7801\u65b9\u5f0f\uff0c\u8fd9\u662f\u54df\u6ca1\u6765\u6a21\u62df\u6570\u5b57\u4fe1\u53f7\u548c\u6a21\u62df\u4fe1\u53f7\u7684\u8f6c\u6362\n\n\n\u4f7f\u7528==DPI==\u626b\u63cf2x8\u82f1\u5bf8\u56fe\u7247\uff0c\u4ee5\u5f97\u5230300x600\u50cf\u7d20\u56fe\u7247\uff0c\u9700\u8981\u5206\u8fa8\u7387300/2\u6216\u8005600/8\u7684DPI\n\n\u6570\u5b57\u97f3\u4e50\u5408\u6210\u6280\u672f\u4e3b\u8981\u6709==FM==\u548c==Wave Table==\uff0c\u4f7f\u7528==Wave Table==\u97f3\u8d28\u66f4\u597d\n\n\u8ba1\u7b97\u673a\u901a\u8fc7==MIC(\u8bdd\u7b52\u63a5\u53e3)==\u6536\u5230\u7684\u4fe1\u53f7\u662f==\u97f3\u9891\u6a21\u62df\u4fe1\u53f7==\n\n\u71b5\u7f16\u7801\n\u662f\u4e00\u79cd\u65e0\u635f\u538b\u7f29\n\n\u54c8\u592b\u66fc\u7f16\u7801\n\u6e38\u7a0b\u7f16\u7801\n\u7b97\u672f\u7f16\u7801\n\n\n\n\n\u4e03.\u6570\u636e\u5e93\u6280\u672f\n7.1\u6570\u636e\u6a21\u578b\n\u6570\u636e\u6a21\u578b\u4e09\u8981\u7d20\n\n\u6570\u636e\u7ed3\u6784\n\u6570\u636e\u64cd\u4f5c\n\u6570\u636e\u7684\u7ea6\u675f\u6761\u4ef6\n\n\n7.1.1E-R\u6a21\u578b\n\u4e09\u4e2a\u4e3b\u8981\u6982\u5ff5\n\n\u5b9e\u4f53\uff1a\u77e9\u5f62\n\u8054\u7cfb\uff1a\u83f1\u5f62\n\u5c5e\u6027\uff1a\u692d\u5706\n\n\n7.1.2\u5c42\u6b21\u6a21\u578b\n\u91c7\u7528==\u6811\u5f62\u7ed3\u6784==\u8868\u793a==\u6570\u636e\u4e0e\u6570\u636e\u95f4==\u7684\u8054\u7cfb\n\n7.1.3\u7f51\u72b6\u6a21\u578b\n\u91c7\u7528\u7f51\u72b6\u7ed3\u6784\u8868\u793a\u6570\u636e\u4e0e\u6570\u636e\u95f4\u7684\u8054\u7cfb\n\n7.1.4\u5173\u7cfb\u6a21\u578b\n\u7528\u8868\u683c\u7ed3\u6784\u8868\u8fbe\u5b9e\u4f53\u96c6\u4ee5\u53ca\u5b9e\u4f53\u96c6\u4e4b\u95f4\u7684\u8054\u7cfb\n\n7.2\u5173\u7cfb\u4ee3\u6570\u8fd0\u7b97\n\n7.3\u6570\u636e\u5e93\u8bbe\u8ba1\n\n\n\u4f8b\u9898\n\n\n\n\u7b2c\u56db\u95ee\n\u4f18\u70b9\uff1a\u51cf\u5c11\u4e86\u8fde\u63a5\u64cd\u4f5c\uff0c\u4f7f\u67e5\u8be2\u5c01\u88c5\u66f4\u52a0\u65b9\u4fbf\n\u7f3a\u70b9\uff1a\u76f8\u5bf9\u4e8e\u6709\u6743\u9650\u8868\uff0c\u5728\u6743\u9650\u64cd\u4f5c\u7684\u65f6\u5019\u9020\u6210\u7684\u6570\u636e\u5197\u4f59\u76f8\u5bf9\u8f83\u591a\n\nE-R\u56fe\u8f6c\u5173\u7cfb\u6a21\u578b\n\n\u4e00\u5bf9\u4e00\uff1a\u5c06\u8054\u7cfb\u8f6c\u6362\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u5173\u7cfb\u6a21\u5f0f\uff0c\u5173\u7cfb\u6a21\u5f0f\u7684\u5c5e\u6027\u5305\u62ec\u8be5\u8054\u7cfb\u6240\u5173\u8054\u7684\u4e24\u4e2a\u5b9e\u4f53\u7684\u7801\u53ca\u8054\u7cfb\u5c5e\u6027\uff0c==\u5173\u7cfb\u7684\u7801\u53d6\u81ea\u4efb\u4e00\u65b9\u5b9e\u4f53\u7684\u7801==\n\u4e00\u5bf9\u591a\uff1a\u5c06\u8054\u7cfb\u8f6c\u6362\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u5173\u7cfb\u6a21\u5f0f\uff0c\u5173\u7cfb\u6a21\u5f0f\u7684\u5c5e\u6027\u5305\u62ec\u8be5\u8054\u7cfb\u6240\u5173\u8054\u7684\u4e24\u4e2a\u5b9e\u4f53\u7684\u7801\u53ca\u8054\u7cfb\u5c5e\u6027\uff0c==\u5173\u7cfb\u7684\u7801\u662f\u591a\u65b9\u5b9e\u4f53\u7684\u7801==\n\u591a\u5bf9\u591a\uff1a==\u8054\u7cfb\u53ea\u80fd\u8f6c\u6362\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u5173\u7cfb\u6a21\u5f0f==\uff0c\u5173\u7cfb\u6a21\u5f0f\u7684\u5c5e\u6027\u5305\u62ec\u8be5\u8054\u7cfb\u6240\u5173\u8054\u7684\u4e24\u4e2a==\u591a\u65b9\u5b9e\u4f53==\u7684\u7801\u53ca\u8054\u7cfb\u5c5e\u6027\uff0c\u5173\u7cfb\u7684\u7801\u662f==\u591a\u65b9\u5b9e\u4f53\u7684\u7801\u6784\u6210\u7684\u5c5e\u6027\u7ec4==\n\n\n7.4\u5173\u7cfb\u6570\u636e\u5e93\u89c4\u8303\u5316\n7.4.1\u51fd\u6570\u4f9d\u8d56\n\u662f\u901a\u8fc7\u4e00\u4e2a\u5173\u7cfb\u4e2d\u5c5e\u6027\u95f4\u503c\u7684\u76f8\u7b49\u4e0e\u5426\u4f53\u73b0\u51fa\u6765\u7684\u6570\u636e\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\uff0c\u5173\u7cfb\u6a21\u5f0fR(U,R),U\u4e3a\u7ec4\u6210\u8be5\u5173\u7cfb\u7684\u5c5e\u6027\u540d\u96c6\u5408\uff0cF\u4e3a\u4f9d\u8d56\u96c6\n\nX\u5143\u5173\u7cfb\u5373\u6709\u51e0\u4e2a\u5c5e\u6027\uff0c\u5143\u7ec4\u5373\u6709\u591a\u5c11\u6761\u8bb0\u5f55\u6709\u591a\u5c11\u884c\n\n\u6ce8\uff1a\u53ea\u8981\u5728\u67d0\u4e2a\u5173\u7cfb\u80fd\u4e92\u76f8\u7b49\u4e8e\u5373\u53ef\n\u89c4\u8303\u5316\n\n1NF(\u7b2c\u4e00\u8303\u5f0f)\uff1a\u5173\u7cfb\u6a21\u5f0fR\u7684\u6bcf\u4e00\u4e2a\u5206\u91cf\u90fd\u662f==\u4e0d\u53ef\u518d\u5206==\u7684\u6570\u636e\u9879\n\u5197\u4f59\u5ea6\u5927\n\u5f15\u8d77\u4fee\u6539\u64cd\u4f5c\u7684\u4e0d\u4e00\u81f4\u6027\n\u63d2\u5165\u5f02\u5e38\n\u5220\u9664\u5f02\u5e38\n\n\n2NF(\u7b2c\u4e8c\u8303\u5f0f)\uff1a\u82e5\u5173\u7cfb\u6a21\u5f0fR\u5c5e\u4e8e1NF\uff0c\u4e14\u6bcf\u4e00\u4e2a\u975e\u4e3b\u5c5e\u6027\u5b8c\u5168\u4f9d\u8d56\u4e8e\u7801\n3NF(\u7b2c\u4e09\u8303\u5f0f)\uff1a\u5f532NF\u6d88\u9664\u4e86\u975e\u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\uff0c\u5219\u79f0\u4e3a3NF\nBCNF(\u5df4\u514b\u65af\u8303\u5f0f)\uff1a\u5f533NF\u6d88\u9664\u4e86\u4e3b\u5c5e\u6027\u5bf9\u7801\u7684\u90e8\u5206\u548c\u4f20\u9012\u51fd\u6570\u4f9d\u8d56\n\n\n7.5\u9898\u76ee\u603b\u7ed3\n\n\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\n\n\u5206\u7247\u900f\u660e\uff1a\u6700\u9ad8\u5c42\u6b21\u7684\u5206\u5e03\u900f\u660e\u6027\uff0c\u6307\u7528\u6237\u6216\u5e94\u7528\u7a0b\u5e8f\u53ea\u5bf9\u5168\u5c40\u5173\u7cfb\u8fdb\u884c\u64cd\u4f5c==\u800c\u4e0d\u5fc5\u8003\u8651\u6570\u636e\u7684\u5206\u7247==\n\u590d\u5236\u900f\u660e\uff1a\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u6709\u4e9b\u6570\u636e\u4e0d\u6b62\u5b58\u653e\u4e00\u4e2a\u5730\u65b9\uff0c\u5f88\u53ef\u80fd\u540c\u65f6\u91cd\u590d\u4e0d\u540c\u7684\u573a\u5730\n\u903b\u8f91\u900f\u660e\uff1a\u4f4d\u4e8e\u5206\u7247\u89c6\u56fe\u548c\u5206\u914d\u89c6\u56fe\u4e4b\u95f4\uff0c\u6307\u7528\u6237\u5e94\u5f53\u4e86\u89e3\u5206\u7247\u60c5\u51b5\uff0c\u4f46\u4e0d\u5fc5\u4e86\u89e3\u7247\u6bb5\u7684\u5b58\u50a8\u573a\u5730\n\u4f4d\u7f6e\u900f\u660e\uff1a\u7528\u6237\u65e0\u9700\u77e5\u9053\u6570\u636e\u5b58\u653e\u7684\u7269\u7406\u4f4d\u7f6e\n\n\n\n==\u89c6\u56fe==\uff0c\u865a\u62df\u8868\uff0c\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u8868\u6216\u89c6\u56fe\u4e2d\u5bfc\u51fa\n\n\u521b\u5efa\u89c6\u56fe\ncreate view \u8868\u660e\n\u200b  as select \u67e5\u8be2\u5b50\u53e5\n\u200b  [with check option]\n\u6ce8\uff1a\u5f53\u4fdd\u6301\u589e\u5220\u67e5\u6539\u64cd\u4f5c\u65f6\u4f9d\u7136\u6ee1\u8db3\u5b50\u67e5\u8be2\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u65f6\u52a0\u4e0a==with check option==\n\n\n\u5730\u5740\u8fd9\u4e00\u7c7b\u53ef\u4ee5\u5f80\u4e0b\u5212\u5206\u4e3a\u90ae\u7f16\uff0c\u7701\uff0c\u5e02\u7684\u662f==\u7b80\u5355\u5c5e\u6027==\uff0c\u662f\u5448\u94fe\u8868\u7ed3\u6784\uff0c\u9010\u5c42\u5411\u4e0b\n\n\u5019\u9009\u5173\u952e\u5b57\n\u6839\u636e\u4f9d\u8d56F\u6c42L\u7c7b\u548cN\u7c7b\uff0c\u5373\u4e3a\u5019\u9009\u5173\u952e\u5b57\uff0c\u4e3b\u5c5e\u6027\u4ece\u5019\u9009\u5173\u952e\u5b57\u627e\n\n\n\n\n\u516b.\u6570\u636e\u7ed3\u6784\n8.1\u7ebf\u6027\u7ed3\u6784\n8.1.1\u7ebf\u6027\u8868\nn\u4e2a\u5143\u7d20\u7684\u6709\u9650\u5e8f\u5217\uff0c\u9664\u8868\u5934\u8868\u5c3e\u5916\u53ea\u6709\u4e00\u4e2a\u524d\u9a71\u548c\u540e\u7ee7\n\n\u987a\u5e8f\u5b58\u50a8\n\u4f7f\u7528\u4e00\u7ec4\u5730\u5740\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\uff0c\u4f7f\u903b\u8f91\u5173\u7cfb\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20==\u7269\u7406\u4f4d\u7f6e\u4e0a\u4e5f\u76f8\u90bb==\n\u4f18\u70b9\uff1a\u968f\u673a\u5b58\u53d6\u8868\u4e2d\u5143\u7d20\n\u7f3a\u70b9\uff1a\u63d2\u5165\u548c\u5220\u9664\u9700\u8981\u79fb\u52a8\u5927\u91cf\u5143\u7d20\n\n\u94fe\u5f0f\u5b58\u50a8\n\u7528\u8282\u70b9\u6765\u5b58\u50a8\uff0c\u53ef\u8fde\u7eed\u53ef\u4e0d\u8fde\u7eed\n\u8282\u70b9\u7ed3\u6784\n\u6570\u636e\u57df\uff1a\u6570\u636e\n\u6307\u9488\u57df\uff1a\u5b58\u50a8\u524d\u9a71\u548c\u540e\u7ee7\n\n\u5e38\u7528\u94fe\u8868\n\u53cc\u5411\u94fe\u8868\uff1a\u6bcf\u4e2a\u8282\u70b9\u6709\u4e24\u4e2a\u6307\u9488\uff0c\u53ef\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u904d\u5386\u94fe\u8868\n\u5faa\u73af\u94fe\u8868\uff1a\u8868\u5c3e\u8282\u70b9\u7684\u6307\u9488\u6307\u5411\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u4f4d\u7f6e\u5f00\u59cb\u904d\u5386\u6574\u4e2a\u94fe\u8868\n\u9759\u6001\u94fe\u8868\uff1a\u501f\u52a9\u6570\u7ec4\u6765\u63cf\u8ff0\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\n\n\u5934\u7ed3\u70b9\n\u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u94fe\u8868\u7684\u5934\u6307\u9488\u6307\u5411\u8be5\u8282\u70b9\n\n\u4f18\u7f3a\u70b9\n\u4f18\u70b9\uff1a\u63d2\u5165\u548c\u5220\u9664\u4e0d\u9700\u8981\u79fb\u52a8\u5143\u7d20\n\u7f3a\u70b9\uff1a\u4e0d\u80fd\u8fdb\u884c\u6570\u636e\u968f\u673a\u8bbf\u95ee\n\n\n8.1.2\u7ebf\u6027\u8868\u7684\u63d2\u5165\u548c\u5220\u9664\u8fd0\u7b97\n\u57fa\u4e8e\u987a\u5e8f\u5b58\u50a8\n\u63d2\u5165\n\u5e73\u5747\u79fb\u52a8\u6b21\u6570==n/2==\n\n\u5220\u9664\n\u5e73\u5747\u79fb\u52a8\u6b21\u6570==(n-1/)2==\n\n\n\u57fa\u4e8e\u94fe\u5f0f\u5b58\u50a8\n\u5355\u5411\u94fe\u8868\n\u4fee\u6539\u6307\u9488\n\n\u53cc\u5411\u94fe\u8868\n\u63d2\u5165\n\u5148\u786e\u5b9a\u88ab\u63d2\u8282\u70b9==P==\uff0c\u8bbe==S==\u4e3a\u63d2\u5165\u8282\u70b9\uff0c\u5219\u6709\n\ns-&gt;prior=p-&gt;prior\np-&gt;prior-&gt;next=s\ns-&gt;next=p\np-&gt;prior=s\n\n\n\u5220\u9664\n\u5148\u786e\u5b9a\u88ab\u5220\u9664\u8282\u70b9==P==\uff0c\u5219\u6709\n\np-&gt;prior-&gt;next=p-&gt;next\np-&gt;next-&gt;prior=p-&gt;prior\n\n\n\n\n8.1.3\u6808\u548c\u961f\u5217\n\u6808\n==\u5148\u8fdb\u540e\u51fa==\uff0c\u8fdb\u884c\u64cd\u4f5c\u7684\u4e00\u7aef\u6210\u79f0\u4e3a==\u6808\u9876==\uff0c\u53e6\u4e00\u7aef\u4e3a==\u6808\u5e95==\n\u57fa\u672c\u64cd\u4f5c\n\u7f6e\u7a7a\u6808\n\u5224\u6808\u7a7a\n\u5165\u6808\uff1apush\uff1a\u66f4\u65b0==\u6808\u9876\u6307\u9488==\n\u51fa\u6808\uff1apop\uff1a\u66f4\u65b0==\u6808\u9876\u6307\u9488==\n\u8bfb\u6808\u9876\u5143\u7d20\uff1atop\n\n\u5b58\u50a8\u7ed3\u6784\n\u987a\u5e8f\u5b58\u50a8\uff1a\u6808\u7a7a\u95f4\u6709\u9650\uff0c\u8981\u5224\u65ad\u6808\u6ee1\n\u94fe\u5f0f\u5b58\u50a8\uff1a\u94fe\u8868\u5934\u6307\u9488\u5c31\u662f\u6808\u9876\u6307\u9488\n\n\n\u961f\u5217\n==\u5148\u8fdb\u5148\u51fa==\uff0c\u53ea\u5141\u8bb8\u5728\u4e00\u7aef\u63d2\u5165\u79f0\u4e3a==\u961f\u5c3e==\uff0c\u53e6\u4e00\u7aef\u5220\u9664\u79f0\u4e3a==\u961f\u5934==\n\u57fa\u672c\u64cd\u4f5c\n\u7f6e\u961f\u7a7a\n\u5224\u961f\u7a7a\n\u5165\u961f\uff1a\u66f4\u65b0\u961f\u5c3e\u6307\u9488\n\u51fa\u961f\uff1a\u66f4\u65b0\u961f\u5934\u6307\u9488\n\u8bfb\u961f\u5934\u5143\u7d20\n\n\u5b58\u50a8\u7ed3\u6784\n\u987a\u5e8f\u5b58\u50a8\uff1a\u8bbe\u7f6e\u961f\u5934\u961f\u5c3e\u6307\u9488\n\u94fe\u5f0f\u5b58\u50a8\uff1a\u8bbe\u4e00\u4e2a\u5934\u7ed3\u70b9\uff0c\u961f\u5217\u4e3a\u7a7a\u7684\u5224\u5b9a\u6761\u4ef6\uff0c\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488\u7684\u503c\u76f8\u540c\uff0c\u4e14\u5747\u6307\u5411\u5934\u7ed3\u70b9\n\n\n8.1.4\u4e32\n\u4ec5\u7531\u5b57\u7b26\u6784\u6210\u7684\u6709\u9650\u5e8f\u5217\uff0c\u662f\u53d6\u503c\u8303\u56f4\u53d7\u9650\u7684\u7ebf\u6027\u8868\u3002\u4e00\u822c\u8bb0\u4e3aS=a1,a2,a3\n\n8.2\u6811\n8.2.1\u4e8c\u53c9\u6811\n\u6ee1\u4e8c\u53c9\u6811\n\u5b8c\u5168\u4e8c\u53c9\u6811\n\u5b58\u50a8\u7ed3\u6784\n\n\u987a\u5e8f\u5b58\u50a8\n\u94fe\u5f0f\u5b58\u50a8\n\n\n\u904d\u5386\n\n\u524d\u5e8f:node-left-right\n\u4e2d\u5e8f:left-node-right\n\u540e\u5e8f:left-right-node\n\n\n\u7ebf\u7d22\u4e8c\u53c9\u6811\n\n\nltag\nlchild\ndata\nrchild\nrtag\n\n\n\n\n\n\n\n\n\n\n\n\u6700\u4f18\u4e8c\u53c9\u6811(\u54c8\u592b\u66fc\u6811)\n\u6743\u503c\u8d8a\u5927\u7684\u7ed3\u70b9\u79bb\u6839\u7ed3\u70b9\u8d8a\u8fd1\n8.2.2\u6811\u548c\u68ee\u6797\n8.3\u56fe\n\u7531\u4e24\u4e2a\u96c6\u5408V\u548cE\u7ec4\u6210,V\u662f\u56fe\u4e2d==\u70b9==\u7684\u96c6\u5408,E\u662f\u56fe\u4e2d==\u8fb9==\u7684\u96c6\u5408\n\u6709\u5411\u56fe\n\u6bcf\u6761\u8fb9\u90fd\u6709\u65b9\u5411\n\u65e0\u5411\u56fe\n\u5ea6\n\u5165\u5ea6\u548c\u51fa\u5ea6\u4e4b\u548c\n\u8fde\u901a\u56fe\n==\u65e0\u5411\u56fe==\u4e2d,\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u8def\u5f84\n\u5f3a\u8fde\u901a\u56fe\n==\u6709\u5411\u56fe==\u4e2d,\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u8def\u5f84\n\u5b58\u50a8\u7ed3\u6784\n\n\u90bb\u63a5\u77e9\u9635\u8868\u793a\u6cd5\n\n\n\u904d\u5386\n\n\u6df1\u5ea6\u4f18\u5148\u904d\u5386:\u8bbf\u95ee\u7b2c\u4e00\u4e2a\u4e14\u672a\u88ab\u8bbf\u95ee\u7684\u7ed3\u70b9\n\u5e7f\u5ea6\u4f18\u5148\u904d\u5386:\u4e00\u6b21\u8bbf\u95eev\u7684\u5404\u4e2a\u672a\u66fe\u8bbf\u95ee\u8fc7\u5f97\u9886\u63a5\u70b9\n\n\n\u751f\u6210\u6811\u548c\u6700\u5c0f\u751f\u6210\u6811\n\u7531\u7ecf\u8fc7\u7684\u8fb9\u548c\u6240\u6709\u9876\u70b9\u7ec4\u6210\u7684\u5b50\u56fe,\u5219\u79f0\u5b50\u56fe\u4e3a\u751f\u6210\u6811\n8.4\u67e5\u627e\n8.4.1\u9759\u6001\u67e5\u627e\n\n\u987a\u5e8f\u67e5\u627e\n\n\u6298\u534a\u67e5\u627e:\u8981\u6c42\u6570\u7ec4\u4e2d\u6309\u7167\u589e\u5927\u6216\u51cf\u5c0f\u6392\u5217,\u9002\u5408\u4e0d\u7ecf\u5e38\u53d8\u52a8\u4f46\u9891\u7e41\u67e5\u627e\u7684\u6570\u7ec4\n\n\u5206\u5757\u67e5\u627e(\u7d22\u5f15\u987a\u5e8f\u67e5\u627e)\n| \u6700\u5927\u5173\u952e\u5b57 |      |\n| :--------: | :--: |\n|  \u8d77\u59cb\u5730\u5740  |      |\n\u540e\u9762\u7684\u5b50\u8868\u90fd\u5927\u4e8e\u4e4b\u524d\u7684\u5b50\u8868\n\n\n\n8.4.2\u52a8\u6001\u67e5\u627e\n\n\u4e8c\u53c9\u6392\u5e8f\u6811\n\n\u82e5\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219==\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5c0f\u4e8e==\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b\n\u82e5\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219==\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5927\u4e8e==\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b\n\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811\uff1b\n\n\n\u67e5\u627e\u8fc7\u7a0b\u7c7b\u4f3c==\u6298\u534a\u67e5\u627e==\n\nB-\u6811\n\n\n\n8.4.3\u54c8\u5e0c\u8868\u53ca\u5176\u67e5\u627e\n\u5b9a\u4e49\uff1a\u6839\u636e\u8bbe\u5b9a\u7684\u54c8\u5e0c\u51fd\u6570\u548c\u5904\u7406\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u5c06\u4e00\u7ec4\u5173\u952e\u5b57\u6620\u5c04\u5230\u4e00\u4e2a\u6709\u9650\u7684\u8fde\u7eed\u7684\u5730\u5740\u96c6\u4e0a\uff0c\u5e76\u4ee5\u5173\u952e\u5b57\u5728\u5730\u5740\u96c6\u4e2d\u7684\u50cf\u4f5c\u4e3a\u8bb0\u5f55\u5728\u8868\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fd9\u79cd\u8868\u79f0\u4e3a==\u54c8\u5e0c\u8868==\uff0c\u8fd9\u4e00\u6620\u5c04\u8fc7\u7a0b\u79f0\u4e3a==\u54c8\u5e0c\u9020\u8868\u6216\u6563\u5217==\uff0c\u6240\u5f97\u7684\u5b58\u50a8\u4f4d\u7f6e\u79f0\u4e3a==\u54c8\u5e0c\u5730\u5740\u6216\u6563\u5217\u5730\u5740==\n8.5\u6392\u5e8f\n\n\u5185\u90e8\u6392\u5e8f\uff1a\u5f85\u6392\u5e8f\u8bb0\u5f55\u5728\u5185\u5b58\u4e2d\n\u5916\u90e8\u6392\u5e8f\uff1a\u6570\u91cf\u5f88\u5927\uff0c\u6392\u5e8f\u8fc7\u7a0b\u9700\u8981\u5916\u5b58\n\n\n8.5.1\u7b80\u5355\u6392\u5e8f\n\n\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff1a\u4ee5\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u4e00\u4e2a\u6392\u597d\u5e8f\u7684\u961f\u5217\uff0c\u7528\u540e\u9762\u7684\u5143\u7d20\u4ece\u961f\u5217\u540e\u5f80\u524d\u6bd4\u8f83\n\u5192\u6ce1\u6392\u5e8f\n\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff1an-i\u6b21\u6bd4\u8f83\u540e\u9009\u51fa\u6700\u5c0f\u7684\u548c\u7b2ci\u4e2a\u4ea4\u6362\uff0c\u4e00\u822c\u653e\u5728\u6700\u524d\u9762\n\n\n8.5.2\u5e0c\u5c14\u6392\u5e8f\n\u5c06\u5f85\u6392\u5e8f\u8bb0\u5f55\u5207\u6210\u82e5\u5e72\u4e2a\u5b50\u5e8f\u5217\uff0c\u5206\u522b\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u5168\u4f53\u8bb0\u5f55\u5728\u8fdb\u884c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\n8.5.3\u5feb\u901f\u6392\u5e8f\n\n8.5.4\u5806\u6392\u5e8f\n\u5806\u9876\u4e3a\u6700\u5c0f\u5143\u7d20\uff0c\u79f0\u4e3a\u5c0f\u9876\u5806\uff1b\u53cd\u4e4b\u79f0\u4e3a\u5927\u9876\u5806\n8.5.5\u5f52\u5e76\u6392\u5e8f\n\u53cd\u590d\u5c06\u4e24\u4e2a\u6709\u5e8f\u6587\u4ef6\u5f52\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u6587\u4ef6\n8.5.6\u5185\u90e8\u6392\u5e8f\u7684\u9009\u62e9\n\u56e0\u7d20\n\n\u5f85\u6392\u5e8f\u8bb0\u5f55\u6570\n\u8bb0\u5f55\u672c\u8eab\u5927\u5c0f\n\u5173\u952e\u5b57\u5206\u5e03\u60c5\u51b5\n\u7a33\u5b9a\u6027\u8981\u6c42\n\u8bed\u8a00\u5de5\u5177\u7684\u6761\u4ef6\uff0c\u8f85\u52a9\u7a7a\u95f4\u7684\u5927\u5c0f\n\n\n\u7ed3\u8bba\n\n\u6570\u76ee\u8f83\u5c0f\u65f6\uff0c\u53ef\u91c7\u7528==\u76f4\u63a5\u63d2\u5165==\u548c==\u7b80\u5355\u9009\u62e9==\n\u6309\u5173\u952e\u5b57\u57fa\u672c\u6709\u5e8f\uff0c\u91c7\u7528==\u76f4\u63a5\u63d2\u5165==\u6216==\u5192\u6ce1\u6392\u5e8f==\nn\u5f88\u5927\u5173\u952e\u5b57\u4f4d\u6570\u5c11\uff0c\u91c7\u7528==\u94fe\u5f0f\u57fa\u6570\u6392\u5e8f==\nn\u8f83\u5927\uff0c\u91c7\u7528\u5feb\u901f\u6392\u5e8f\uff0c\u5806\u6392\u5e8f\u6216\u5f52\u5e76\u6392\u5e8f\n\n\n8.5.7\u5916\u90e8\u6392\u5e8f\n\u5e38\u7528==\u5f52\u5e76\u6392\u5e8f==\n8.6\u9898\u76ee\u603b\u7ed3\n\n\u54c8\u592b\u66fc\u6811\u4e0e\u6ee1\uff0c\u5e73\u8861\u4e8c\u53c9\u6811\u6ca1\u6709\u5fc5\u8981\u8054\u7cfb\n\u54c8\u5e0c\u8868\u957f\u5ea6\u4e3an\uff0c\u6563\u5217\u51fd\u6570H(Key)=Key mod p,p\u7684\u503c\u4e00\u822c\u4e3a==\u4e0d\u5927\u4e8en\u4e14\u6700\u63a5\u8fd1n\u7684\u8d28\u6570==\uff0c\u5c3d\u91cf\u4f7f\u5173\u952e\u5b57\u90e8\u5206\u90fd\u80fd\u8d77\u4f5c\u7528\uff0c\u53ef\u4ee5\u589e\u52a0\u5220\u9664\u5143\u7d20\n\u961f\u5217\u5165\u961f\u548c\u51fa\u961f\u987a\u5e8f\u4e00\u6837\uff0c\u6808\u867d\u7136\u5148\u8fdb\u540e\u51fa\u4f46==\u4e0d\u4e00\u5b9a\u5e8f\u5217\u5168\u90e8\u4e00\u6b21\u6027\u538b\u5165\u6808==\uff0c\u6240\u4ee5\u6808\u7684\u5165\u6808\u548c\u51fa\u6808\u4e0d\u4e00\u5b9a\u9006\u5e8f\n\n\u4e5d.\u7b97\u6cd5\u8bbe\u8ba1\u4e0e\u5206\u6790\n\u5e38\u7528\u7b97\u6cd5\n\n\u8fed\u4ee3\u6cd5\n\u7a77\u4e3e\u641c\u7d22\u6cd5\n\u9012\u63a8\u6cd5\n\u8d2a\u5fc3\u6cd5\n\u56de\u6eaf\u6cd5\n\u5206\u6cbb\u6cd5\uff1a\u4f8b\u5982Hanoi\u5854\u95ee\u9898\n\u52a8\u6001\u89c4\u5212\u6cd5\uff1a\u9002\u7528\u5f53\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5b58\u5728\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u5f53\u4e2d\n\n\n9.1\u9898\u76ee\u603b\u7ed3\n\n\u5f53\u5e8f\u5217\u57fa\u672c\u6709\u5e8f\u65f6\uff0c\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7684\u6bd4\u8f83\u6b21\u6570\u8f83\u5c0f\uff0c\u4f46\u662f\u9006\u5e8f\u65f6\u6b21\u6570\u6700\u591a\n\n\u5341.\u9762\u5411\u5bf9\u8c61\u6280\u672f\n\u57fa\u672c\u6982\u5ff5\n\n\u5bf9\u8c61\n\u6d88\u606f\uff1a\u5bf9\u8c61\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\n\u7c7bimplement\n\u7ee7\u627f\n\u591a\u6001\n\u52a8\u6001\u7ed1\u5b9a\n\n\n10.1\u9898\u76ee\u603b\u7ed3\n\nUML\u987a\u5e8f\u56fe\n\n\u540c\u6b65\u6d88\u606f\uff1a\u6d88\u606f\u7684\u53d1\u9001\u8005\u628a\u63a7\u5236\u4f20\u9012\u7ed9\u6d88\u606f\u7684\u63a5\u6536\u8005\uff0c\u7136\u540e\u505c\u6b62\u6d3b\u52a8\uff0c\u7b49\u5f85\u6d88\u606f\u7684\u63a5\u6536\u8005\u653e\u5f03\u6216\u8005\u8fd4\u56de\u63a7\u5236\u3002\n\u5f02\u6b65\u6d88\u606f\uff1a\u6d88\u606f\u53d1\u9001\u8005\u901a\u8fc7\u6d88\u606f\u628a\u4fe1\u53f7\u4f20\u9012\u7ed9\u6d88\u606f\u7684\u63a5\u6536\u8005\uff0c==\u7136\u540e\u7ee7\u7eed\u81ea\u5df1\u7684\u6d3b\u52a8==\uff0c\u4e0d\u7b49\u5f85\u63a5\u53d7\u8005\u8fd4\u56de\u6d88\u606f\u6216\u8005\u63a7\u5236\u3002\u5f02\u6b65\u6d88\u606f\u7684\u63a5\u6536\u8005\u548c\u53d1\u9001\u8005\u662f\u5e76\u53d1\u5de5\u4f5c\u7684\u3002\n\u8fd4\u56de\u6d88\u606f\uff1a\u865a\u7ebf\u8fd4\u56de\n\n\n\n\u5b50\u7c7b\u4e2d\u4ee5\u66f4\u5177\u4f53\u7684\u65b9\u5f0f\u5b9e\u73b0\u4ece\u7236\u7c7b\u7ee7\u627f\u6765\u7684\u65b9\u6cd5\u79f0\u4e3a==\u8986\u76d6==\n\n\u8bbe\u8ba1\u6a21\u5f0f\n\n\u7ed3\u6784\u6027\u6a21\u5f0f\n\n\u9002\u914d\u5668\uff1a\u5c06\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u4e3a\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\n\u88c5\u9970\u5668\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\u6765\u4e3a\u67d0\u4e00\u4e2a\u7c7b\u52a8\u6001\u6dfb\u52a0\u65b0\u529f\u80fd\u6216\u589e\u5f3a\u539f\u6709\u529f\u80fd\n\u7ec4\u5408\uff1a\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u4ee5\u8868\u793a\u90e8\u5206\u6574\u4f53\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u8868\u793a\u5bf9\u8c61\u7684==\u90e8\u5206-\u6574\u4f53\u5c42\u6b21\u7ed3\u6784==\n\u4ee3\u7406\n\u4eab\u5143\n\u5916\u89c2\n\u88c5\u9970\u5668\n\u6865\u63a5\n\n\n\n\u884c\u4e3a\u578b\u6a21\u5f0f\n\n\u547d\u4ee4\n\u72b6\u6001\uff1a==\u5141\u8bb8\u4e00\u4e2a\u5bf9\u8c61\u5728\u5176\u5185\u90e8\u72b6\u6001\u6539\u53d8\u65f6\u6539\u53d8\u5b83\u7684\u884c\u4e3a==\n\n\n\n\u521b\u5efa\u578b\u6a21\u5f0f\n\n\u751f\u6210\u5668\n\n\n\n\u7b56\u7565\uff1a\u5c06\u6bcf\u4e00\u4e2a\u7b97\u6cd5\u5c01\u88c5\u8d77\u6765\uff0c\u53ef\u4e92\u76f8\u66ff\u6362\uff0c\u8ba9\u7b97\u6cd5\u72ec\u7acb\u4e8e\u4f7f\u7528\u5b83\u7684\u5ba2\u6237\u800c\u72ec\u7acb\u53d8\u5316\n\n\u62bd\u8c61\u5de5\u5382\uff1a==\u6700\u4e3a\u62bd\u8c61\u548c\u6700\u5177\u4e00\u822c\u6027==\n\n\u89c2\u5bdf\u8005\uff1a\u5b9a\u4e49\u4e86==\u4e00\u5bf9\u591a==\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u8ba9\u591a\u4e2a\u89c2\u5bdf\u8005\u540c\u65f6\u76d1\u542c\u4e00\u4e2a\u4e3b\u4f53\u5bf9\u8c61\uff0c\u4f8b\u5982\u7528\u6237\u8ba2\u9605\u516c\u4f17\u53f7\n\n\u901a\u77e5\uff1a\u4e00\u4e2a\u5bf9\u8c61\u5bf9\u591a\u4e2a\u5bf9\u8c61\u7684\u540c\u6b65\u64cd\u4f5c\n\n\n\n\n\u591a\u6001\n\n\u901a\u7528\u591a\u6001\n\n\u53c2\u6570\uff1a\u5229\u7528\u6cdb\u578b\u7f16\u7a0b\uff0c\u53d1\u6563\u5f0f\u7684\uff0c==\u9759\u6001\u7ed1\u5b9a==\uff0c==\u8ba9\u76f8\u540c\u7684\u4ee3\u7801\u5e94\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u5408==\uff0c\u770b\u4e2d\u7b97\u6cd5\u7684\u666e\u9002\u6027\n\u5305\u542b\uff1a\u5229\u7528OOP\uff0c\u6536\u655b\u5f0f\u7684\uff0c==\u52a8\u6001\u7ed1\u5b9a==\u7684\uff0c==\u8ba9\u4e0d\u540c\u4ee3\u7801\u7528\u4e8e\u76f8\u540c\u573a\u5408==\uff0c\u7740\u91cd\u63a5\u53e3\u5b9e\u73b0\u7684\u5206\u79bb\u5ea6\n\n\n\n\u7279\u6b8a\u591a\u6001\n\n\u5f3a\u5236\uff1a\u53d8\u91cf\u8f6c\u6362\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u9690\u5f0f\u8f6c\u6362\n\u8fc7\u8f7d\uff1a\u6307\u4e00\u4e2a\u540d\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u6709\u4e0d\u540c\u7684\u7c7b\u578b\n\n\n\n\n\n\n\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u5b83\u7684\u7236\u7c7b\u5c5e\u6027\u548c\u64cd\u4f5c\u800c\u4e0d\u5fc5\u81ea\u5df1\u5b9a\u4e49\n\nUML\u90e8\u7f72\u56fe\n\u5c55\u73b0\u8fd0\u884c\u5904\u7406\u8282\u70b9\u4ee5\u53ca\u5176\u4e2d\u6784\u5efa\u7684\u914d\u7f6e\uff0c\u7ed9\u51fa\u4e86\u4f53\u7cfb\u7ed3\u6784\u7684\u9759\u6001\u5b9e\u65bd\u56fe\uff0c\u9002\u5408\u8f6f\u4ef6\u548c\u786c\u4ef6\u4e4b\u95f4\u7684\u5173\u7cfb\n\n\u90e8\u7f72\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u4e0d\u662f\u53cc\u5411\n\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u7c7b\u4f3c\u4e8e\u5305\u56fe\n\u7528\u4e8e\u63cf\u8ff0\u4ee3\u7801\u7684\u7269\u7406\u6a21\u5757\u548c\u7cfb\u7edf\u5728\u4e0d\u540c\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u7269\u7406\u5206\u5e03\n\n\n\n\u72b6\u6001\u56fe\u4e0d\u8868\u793a\u591a\u4e2a\u5bf9\u8c61\u4ea4\u4e92\n\n\u5bf9\u8c61\n\n\u6e05\u6670\u7684\u8fb9\u754c\n\u826f\u597d\u5b9a\u4e49\u7684\u884c\u4e3a\n\u53ef\u6269\u5c55\u6027\n\u4e0d\u786e\u5b9a\u4f4d\u7f6e\u548c\u6570\u91cf\n\n\n\n\u63a5\u53e3\u7528\u4e8ejava\u548cc#\u4e2d\uff0c\u4e0d\u652f\u6301c++\uff0c\u58f0\u660e\u5bf9\u8c61\u7c7b\u6240\u9700\u8981\u7684\u670d\u52a1\n\n\u5355\u4f8b\u6a21\u5f0f\u786e\u4fdd\u67d0\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5411\u6574\u4e2a\u7cfb\u7edf\u63d0\u4f9b\u8be5\u5b9e\u4f8b\uff0c\u5927\u5bb6\u5171\u4eab\u540c\u4e00\u4e2a\u5b9e\u4f8b\n\n\u7ed1\u5b9a\n\u6307\u4e00\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528\u4e0e\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u5173\u8054\u8d77\u6765\n\n\u9759\u6001\uff1a==\u7a0b\u5e8f\u6267\u884c\u524d\u5df2\u7ecf\u88ab\u7ed1\u5b9a==\n\u52a8\u6001\uff1a\u8fd0\u884c\u65f6\u6839\u636e\u5177\u4f53\u7684\u5bf9\u8c61\u7c7b\u578b\u8fdb\u884c\u7ed1\u5b9a\n\n\n\n\u7ec4\u5408\u8bbe\u8ba1\u6a21\u5f0f\u7c7b\u56fe\n\nclient\uff1a\u901a\u8fc7component\u63a5\u53e3\u64cd\u7eb5\u7ec4\u5408\u90e8\u4ef6\u7684\u5bf9\u8c61\ncomposite\uff1a\u5b9a\u4e49\u6709\u5b50\u90e8\u4ef6\u7684\u90a3\u4e9b\u90e8\u4ef6\u7684\u884c\u4e3a\nleaf\uff1a\u8868\u793a\u53f6\u8282\u70b9\u5bf9\u8c61\uff0c==\u5728\u7ec4\u5408\u4e2d\u5b9a\u4e49\u56fe\u5143\u5bf9\u8c61\u7684\u884c\u4e3a==\ncomponent\uff1a\u5bf9\u8c61\u58f0\u660e\u63a5\u53e3\n\n\n\n\n\n\u5341\u4e00.\u6807\u51c6\u5316\u548c\u8f6f\u4ef6\u77e5\u8bc6\u4ea7\u6743\u57fa\u7840\u77e5\u8bc6\n11.1\u9898\u76ee\u603b\u7ed3\n\n\u5f15\u7528\u8d44\u6599\n\u53ef\u4ee5\u4e0d\u7528\u83b7\u5f97\u8bb8\u53ef\uff0c\u4e0d\u7528\u652f\u4ed8\u62a5\u916c\n\n\u76ee\u7684\u4e3a\u4e86\u4ecb\u7ecd\u8bc4\u8bba\u67d0\u4e00\u4f5c\u54c1\u6216\u8bf4\u660e\u67d0\u4e00\u95ee\u9898\n\u6bd4\u4f8b\u5fc5\u987b\u9002\u5f53\n\u5fc5\u987b\u662f==\u5df2\u53d1\u8868\u7684==\n\n\n\n\u8457\u4f5c\u6743\u6cd5\n\n\u6587\u5b57\u4f5c\u54c1\n\n\u53e3\u8ff0\u4f5c\u54c1\uff0c\u6f14\u8bb2\u6388\u8bfe\u8fa9\u8bba\u795d\u8bcd\n\n\u6444\u5f71\u7f8e\u672f\u5efa\u7b51\u7535\u5f71\u4f5c\u54c1\n\n\u8bbe\u8ba1\u56fe\n\n\u8ba1\u7b97\u673a\u8f6f\u4ef6\n\n\u6cd5\u5f8b\u884c\u653f\u6cd5\u89c4\u5b9a\u7684\u5176\u4ed6\u4f5c\u54c1\n\u4e0d\u9002\u7528\u4e8e\n\n\u6cd5\u5f8b\u6cd5\u89c4\n\u65f6\u4e8b\u65b0\u95fb\n\u529b\u6cd5\u901a\u7528\u8868\u683c\n\n\n\n\n\n\n\u516c\u53f8\u89c4\u5b9a\u5199\u7684\u4e00\u4e9b\u4e1c\u897f\u8457\u4f5c\u6743\u5f52\u516c\u53f8\u6240\u6709\n\n\u7532\u4fb5\u6743\uff0c\u4e59\u7528\u4e86\u7532\u7684\u4e1c\u897f==\u4e14\u77e5\u9053\u662f\u76d7\u7248==\uff0c\u4e59\u884c\u4e3a\u4fb5\u6743\uff0c\u652f\u4ed8\u5408\u7406\u8d39\u7528\u540e\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\n\n\u8f6f\u4ef6\u8457\u4f5c\u6743\u7684\u5ba2\u4f53\n\n\u6e90\u7a0b\u5e8f\n\u76ee\u6807\u7a0b\u5e8f\n\u8f6f\u4ef6\u6587\u6863\n\n\n\n\u4e13\u5229\u6743\u5982\u679c\u5728\u5176\u4ed6\u5730\u65b9\u6ca1\u6709\u7533\u8bf7\uff0c\u53ea\u662f\u5728\u672c\u56fd\u7533\u8bf7\uff0c\u90a3\u4e48\u5176\u4ed6\u516c\u53f8\u9500\u552e\u8fd9\u4e2a\u4e13\u5229\u6743\u7684\u4ea7\u54c1==\u4e0d\u7528\u652f\u4ed8\u8d39\u7528==\n\n==\u5408\u7406\u4f7f\u7528==\u53ef\u4ee5\u4e0d\u7ecf\u8fc7\u8457\u4f5c\u6743\u4eba\u8bb8\u53ef\uff0c\u4e0d\u9700\u8981\u652f\u4ed8\u62a5\u916c\u4f7f\u7528\u4ea7\u54c1\n\n\n\u5341\u4e8c.\u8ba1\u7b97\u673a\u4e13\u4e1a\u82f1\u8bed\n\n\nthrowaway\ndeliver\ndiscard\nlump\nbriefing\ninteract\n\n\n\n\n\u4e00\u6b21\u6027\n\u4ea4\u4ed8\n\u4e22\u5f03\n\u5757\n\u7b80\u62a5\n\u4ea4\u4e92\n\n\n\n\n\ncapacity\nlarge-scale\ninfrastructure\narchitecture\nemerge\n\n\n\n\n\n\u5bb9\u91cf\n\u5927\u89c4\u6a21\n\u57fa\u7840\u8bbe\u65bd\n\u67b6\u6784\n\u51fa\u73b0\n\n\n\n\n", "categories": [{"name": "Notes", "slug": "Notes", "permalink": "/category/Notes/"}], "tags": [{"name": "Notes", "slug": "Notes", "permalink": "/tag/Notes/"}, {"name": "\u8f6f\u8003", "slug": "\u8f6f\u8003", "permalink": "/tag/\u8f6f\u8003/"}]}, {"title": "Hello World!", "date": "2019-12-18T16:50:00-00.00", "path": "/archives/typography/", "text": "\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002\u4fdd\u7559\u6216\u8005\u5220\u9664\u672c\u6587\uff0c\u5f00\u59cb\u81ea\u5df1\u7684\u521b\u4f5c\u5427\uff01L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess Mononoke\nPhotoset\n\n\n\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/category/Maverick/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/tag/Design/"}, {"name": "Typography", "slug": "Typography", "permalink": "/tag/Typography/"}]}], "pages": [{"title": "My Project", "date": "2020-06-07T15:22:42-00.00", "path": "/My Project/", "text": "Attendance Miniprogram\n\n\n\u4ecb\u7ecd\uff1a\u4e00\u4e2a\u4e0e\u7ebf\u4e0b\u4eba\u8138\u8bc6\u522b\u7b49\u786c\u4ef6\u7ed3\u5408\u7684\u5b9e\u9a8c\u5ba4\u7ba1\u7406\u5c0f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u67e5\u770b\u51fa\u5165\u65e5\u5fd7\uff0c\u6240\u5728\u5b9e\u9a8c\u5ba4\u7684\u4eba\u5458\u516c\u544a\u7b49\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u7ba1\u7406\u5b9e\u9a8c\u5ba4\u5f00\u5173\u53d1\u5e03\u516c\u544a\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u6dfb\u52a0\u5220\u9664\u5b9e\u9a8c\u5ba4\u7ba1\u7406\u5458\u7b49\u7b49\n\u7c7b\u578b\uff1a\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0cuniapp\n\u4ecb\u7ecd\u6587\u6863\uff1aAttendance Miniprogram\nGithub\u5730\u5740\uff1ahttps://github.com/LifeAlsoIsGG/MyProject-AttendanceMiniprogram-2.0\n\n\nSupermarket System\n\n\n\u4ecb\u7ecd\uff1a\u6a21\u62df\u8d85\u5e02\u91cc\u9762\u6536\u94f6\u8fdb\u8d27\u7cfb\u7edf\uff0c\u4eba\u5458\u7ba1\u7406\u7cfb\u7edf\uff0c\u4ed3\u5e93\u7ba1\u7406\u7684Java\u5e94\u7528\n\u7c7b\u578b\uff1aJava\u5e94\u7528\n\u4ecb\u7ecd\u6587\u6863\uff1aSupermarket System\nGithub\u5730\u5740\uff1ahttps://github.com/LifeAlsoIsGG/MyProject-SupermarketSystem\n\n\nActivity System\n\n\n\u4ecb\u7ecd\uff1aJavaweb\u5e94\u7528\uff0c\u5927\u5b66\u6d3b\u52a8\u7ba1\u7406\u7cfb\u7edf\uff0c\u7ba1\u7406\u5927\u5b66\u6d3b\u52a8\u7533\u8bf7\uff0c\u67e5\u770b\uff0c\u66f4\u6539\u72b6\u6001\uff0c\u7ba1\u7406\u5458\u5ba1\u6838\uff0c\u8d85\u7ea7\u7ba1\u7406\u5458\u6dfb\u52a0\u5220\u9664\u7ba1\u7406\u5458\u7b49\n\u7c7b\u578b\uff1aJavaweb\n\u4ecb\u7ecd\u6587\u6863\uff1aActivity System\n\u9884\u89c8\u94fe\u63a5\uff1aActivity System\nGithub\u5730\u5740\uff1ahttps://github.com/LifeAlsoIsGG/MyProject-JavaWeb-ActivitySystem\n\n\nThe Expanse\n\n\n\u4ecb\u7ecd\uff1a\u5927\u4e8c\u4e0b\u5b66\u671f\u7f51\u9875\u8bbe\u8ba1\u4f5c\u54c1\uff0cHTML+CSS+JAVASCRIPT\u5927\u6742\u70e9\uff0c\u4ee5\u672a\u6765\u661f\u9645\u822a\u7a7a\u4ea4\u8c08\u4e3a\u4e3b\u9898\u7684\u98de\u8239\u79df\u8d41\uff0c\u661f\u65c5\uff0c\u65b0\u95fb\u8d44\u8baf\uff0c\u661f\u9645\u901a\u884c\u8bc1\uff0c\u661f\u9645\u519b\u4e8b\u7b49\u4fe1\u606f\u7efc\u5408\u7c7b\u7f51\u7ad9\n\u7c7b\u578b\uff1a\u7f51\u9875\u8bbe\u8ba1\n\u4ecb\u7ecd\u6587\u6863\uff1a\u65e0\n\u9884\u89c8\u94fe\u63a5\uff1aThe Expanse\nGithub\u5730\u5740\uff1ahttps://github.com/LifeAlsoIsGG/MyProject-WebDesign\n\n\n", "categories": [], "tags": []}, {"title": "About", "date": "2017-06-28T17:27:00-00.00", "path": "/About/", "text": "\n\u672c\u79d1\u5c31\u8bfb\uff0c\u540e\u7aef\u72d7\uff0c\u5065\u8eab\u5c0f\u767d\uff0c\u7bee\u7403\u8521\u9e21\uff0c\u559c\u6b22\u7535\u97f3\u4e36\u590d\u53e4\u7535\u97f3\uff0cLOL\u9000\u5f79\u9009\u624b\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4ebaWiki\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\n\nLinks\nBlog:LifeAlsoIsGG's Blog\nPhotos:LifeAlsoIsGG's Photos\nContact\nE-mail:1138312802@qq.com\nQQ:1138312802\nWechat:a1138312802\n", "categories": [], "tags": []}]}