{"posts": [{"title": "import excel to mysql", "date": "2020-05-28T12:35:00-00.00", "path": "/archives/import-excel-to-mysql/", "text": "Github:import excel to mysql\n1.\u51c6\u5907\n1.1\u6dfb\u52a0\u6240\u9700\u8981\u7684\u7684\u4f9d\u8d56\n&lt;!-- excel\u9700\u8981\u7684\u5305--&gt;\n&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi --&gt;\n&lt;!--\u6587\u4ef6\u4e0a\u4f20\u7ec4\u4ef6--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;\n    &lt;version&gt;1.3.1&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;commons-io&lt;/groupId&gt;\n    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;\n    &lt;version&gt;2.5&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!--\u8bfb\u53d6excel\u6587\u4ef6--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n    &lt;artifactId&gt;poi&lt;/artifactId&gt;\n    &lt;version&gt;3.17&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;\n    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;\n    &lt;version&gt;3.17&lt;/version&gt;\n&lt;/dependency&gt;\n\n1.2\u6839\u636eexcel\u7684\u5b57\u6bb5\u6dfb\u52a0\u5bf9\u5e94\u5b57\u6bb5\u7684\u8868\nexcel\u8868\n\nmysql\u8868\n\n1.3\u5728IDEA\u4f7f\u7528easycode\u63d2\u4ef6\u5bf9\u6b64\u8868\u4f7f\u7528\u751f\u6210MVC\n\u76ee\u5f55\u56fe\u5982\u4e0b\n2.\u6838\u5fc3\u4ee3\u7801\n2.1\u521b\u5efa\u80fd\u5904\u7406excel\u8f6c\u6362\u4e3aList&lt;Object&gt;\u7684\u65b9\u6cd5\n\u521b\u5efaExcelForList\u7c7b\u5e76\u521b\u5efaExcelForList\u65b9\u6cd5\u7528\u4e8e\u5904\u7406excel\u8868\u5404\u4e2a\u8bb0\u5f55\u5e76\u8fd4\u56de\npackage com.example.demo.excelUtils;\n\nimport com.example.demo.entity.Course;\nimport com.example.demo.dao.CourseDao;\nimport com.example.demo.service.CourseService;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.springframework.stereotype.Service;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport javax.annotation.Resource;\nimport java.beans.PropertyDescriptor;\nimport java.io.InputStream;\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;\nimport java.util.ArrayList;\nimport java.util.List;\npublic class ExcelForList {\n    public static List&lt;Object&gt; ExcelForList(MultipartFile file, Class&lt;?&gt;  beanclazz, Boolean titleExist, String excelType) {\n        List&lt;Object&gt; list = new ArrayList&lt;Object&gt;();\n        Workbook wb;\n        try {\n            // IO\u6d41\u8bfb\u53d6\u6587\u4ef6\n            InputStream input = file.getInputStream();\n            // \u521b\u5efa\u6587\u6863\n            if(excelType.equals(&quot;xls&quot;)) {\n                wb = new HSSFWorkbook(input);\n            } else if(excelType.equals(&quot;xlsx&quot;)){\n                wb = new XSSFWorkbook(input);\n            }else{\n                System.out.println(&quot;\u9519\u8bef\uff01---------------------\u6587\u4ef6\u4e0d\u542bxls\u6216xlsx\uff01-----------------&quot;);\n                return  null;\n            }\n            // \u5f97\u5230\u7b2c\u4e00\u5f20\u5de5\u4f5c\u8868\n            Sheet sheet = wb.getSheetAt(0);\n            int i;\n            if (titleExist) {\n                i = 2;\n            } else {\n                i = 0;\n            }\n            // \u884c\u7684\u904d\u5386\n            //excels\u662f\u4ece0\u5f00\u662f\u7684\uff0cgetLastRowNum\u662f\u83b7\u53d6\u6700\u540e\u4e00\u884c\u7684\u884c\u6570\n            for (; i &lt;= sheet.getLastRowNum(); i++) {\n                // \u5f97\u5230\u884c\n                Row row = sheet.getRow(i);\n                // \u5355\u5143\u683c\u7684\u904d\u5386\n                // \u5b9e\u4f8b\u5316\u5bf9\u8c61\n                Object object = beanclazz.newInstance();\n\n                Field[] fields = beanclazz.getDeclaredFields();\n                int j = 0;\n                for (Field field : fields) {\n                    String fieldName = field.getName();\n                    PropertyDescriptor pd = new PropertyDescriptor(fieldName, beanclazz);\n                    Method getMethod = pd.getWriteMethod();\n                    Cell cell = row.getCell(j++);\n                    try{\n                        int type = cell.getCellType();\n\n                        if (type == cell.CELL_TYPE_BOOLEAN) {\n                            // \u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u7684\u503c\n                            boolean value = cell.getBooleanCellValue();\n                            getMethod.invoke(object, value);\n                            System.out.println(object);\n                            System.out.println(value);\n                        } else if (type == cell.CELL_TYPE_NUMERIC) {\n                            // \u8fd4\u56de\u6570\u503c\u7c7b\u578b\u7684\u503c\n                            Double d = cell.getNumericCellValue();\n                            int value = d.intValue();\n                            getMethod.invoke(object, new Integer(value));\n                        } else if (type == cell.CELL_TYPE_STRING) {\n                            // \u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u503c\n                            String value = cell.getStringCellValue();\n                            getMethod.invoke(object, new String(value));\n                        }\n\n                    }catch (Exception e) {\n                        System.out.println(&quot;&quot;);\n                    }\n                }\n                list.add(object);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return list;\n    }\n\n\n}\n\n2.1\u521b\u5efa\u63a5\u53e3\n\n\u83b7\u53d6\u5230\u6587\u4ef6\n\u8c03\u7528\u4e0a\u8ff0\u65b9\u6cd5\u83b7\u53d6\u5230List\n\u5faa\u73afList\u8f6c\u6362\u4e3a\u4e00\u4e2a\u4e2acourse\u5bf9\u8c61\u518d\u63d2\u5165\u5230\u6570\u636e\u5e93\u4e2d\n\n\n//    \u5bfc\u5165excel\u5230\u6570\u636e\u5e93\n@RequestMapping(value=&quot;/import&quot;,method = RequestMethod.POST,produces = { &quot;application/json;charset=UTF-8&quot;})\n    public  String imporCourse(@RequestParam(&quot;excelFile&quot;) MultipartFile excelFile, HttpSession httpSession) throws IOException {\n        InputStream in =excelFile.getInputStream();\n        String fileOriginalName=excelFile.getOriginalFilename();\n        String fileName=excelFile.getName();\n        String excelType=fileOriginalName.substring(fileOriginalName.indexOf(&quot;.&quot;)+1);\n\n        //\u8bb0\u5f55\u63d2\u5165\u591a\u6761\u8bb0\u5f55\u5230\u4e86\u6570\u636e\u5e93\uff1b\n        int importSuccessNum=0;\n        int importAllNum=0;\n        boolean importSuccess;\n\n        System.out.println(&quot;in:::&quot;+in);\n        System.out.println(&quot;fileOriginalName:::&quot;+fileOriginalName);\n        System.out.println(&quot;fileName:::&quot;+fileName);\n        System.out.println(&quot;excelType:::&quot;+excelType);\n        List&lt;Object&gt; forlist= ExcelForList.ExcelForList(excelFile,Course.class,true,excelType);\n        for (Object object: forlist) {\n//            \u5728\u8fd9\u91cc\u5bf9\u6bcf\u4e2aObject\u8f6c\u6362\u4e3acourse\u5bf9\u8c61\n            Course course=(Course) object;\n            importAllNum++;\n            importSuccess=courseService.importExcel(course);\n            if(importSuccess)\n                importSuccessNum++;\n\n        }\n        httpSession.setAttribute(&quot;importAllNum&quot;,importAllNum);\n        httpSession.setAttribute(&quot;importSuccessNum&quot;,importSuccessNum);\n\n        if(importSuccessNum&gt;0)\n            return &quot;success!&quot;+&quot;\u5e94\u5904\u7406&quot;+importAllNum+&quot;\u6761,\u5df2\u6210\u529f\u5904\u7406&quot;+importSuccessNum+&quot;\u6761\uff01&quot;;\n        else{\n            return &quot;error!&quot;;\n        }\n\n3.Console\n3.1POSTMAN\n\u8c03\u7528\u63a5\u53e3http://localhost:8886/course/import\nmethod=\"POST\"\n\nHEADERS\u4e2d\u6dfb\u52a0KEY:Content-Type,VALUE:multipart/form-data\nBODY\u4e2d\u9009\u62e9\u7c7b\u578b\u4e3aform-data\u5e76\u4e0a\u4f20\u6587\u4ef6\n\n\n3.2MYSQL\n3.3IDEA\n\n", "categories": [{"name": "springboot", "slug": "springboot", "permalink": "/category/springboot/"}], "tags": [{"name": "springboot", "slug": "springboot", "permalink": "/tag/springboot/"}]}, {"title": "Hello World!", "date": "2019-12-18T16:50:00-00.00", "path": "/archives/typography/", "text": "\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002\u4fdd\u7559\u6216\u8005\u5220\u9664\u672c\u6587\uff0c\u5f00\u59cb\u81ea\u5df1\u7684\u521b\u4f5c\u5427\uff01L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess Mononoke\nPhotoset\n\n\n\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/category/Maverick/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/tag/Design/"}, {"name": "Typography", "slug": "Typography", "permalink": "/tag/Typography/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2019-12-17T20:34:00-00.00", "path": "/archives/my-first-awesome-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/tag/GitHub/"}]}, {"title": "\u6211\u7684\u7b2c\u4e8c\u7bc7\u6587\u7ae0", "date": "2019-12-17T20:34:00-00.00", "path": "/archives/my-second-awesome-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e8c\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/tag/GitHub/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: hi#imalan.cn (replace # with @)\nTelegram\uff1aAlanDecode\n", "categories": [], "tags": []}]}