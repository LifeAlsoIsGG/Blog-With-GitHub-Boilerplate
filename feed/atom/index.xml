<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><id>/</id><title>LifeAlsoIsGG-Wiki</title><updated>2020-05-28T08:10:31.803036+08:06</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email></author><link href="/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><logo>https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/avatar.png</logo><subtitle>Do not go gentle in that good night</subtitle><entry><id>/archives/my-second-awesome-post/</id><title>我的第二篇文章</title><updated>2020-05-28T08:10:31.803275+00:00</updated><author><name>神</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;这是我的第二篇文章。文章使用 GitHub 管理，并通过 GitHub Actions 自动构建与发布！&lt;/p&gt;
</content><link href="/archives/my-second-awesome-post/" rel="alternate"/><published>2019-12-17T20:34:00+08:06</published></entry><entry><id>/archives/my-first-awesome-post/</id><title>我的第一篇文章</title><updated>2020-05-28T08:10:31.803250+00:00</updated><author><name>&lt;填写你的名字&gt;</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;这是我的第一篇文章。文章使用 GitHub 管理，并通过 GitHub Actions 自动构建与发布！&lt;/p&gt;
</content><link href="/archives/my-first-awesome-post/" rel="alternate"/><published>2019-12-17T20:34:00+08:06</published></entry><entry><id>/archives/typography/</id><title>Hello World!</title><updated>2020-05-28T08:10:31.803225+00:00</updated><author><name>AlanDecode</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;div class="notice"&gt;这是一篇示例文章，在这里你可以看到常用页面元素的显示效果，同时也是 Markdown 语法的参考文章。保留或者删除本文，开始自己的创作吧！&lt;/div&gt;&lt;h2&gt;L2 Heading&lt;/h2&gt;
&lt;h3&gt;L3 Heading&lt;/h3&gt;
&lt;h4&gt;L4 Heading&lt;/h4&gt;
&lt;h5&gt;L5 Heading&lt;/h5&gt;
&lt;h6&gt;L6 Heading&lt;/h6&gt;
&lt;h2&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;We are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.&lt;/p&gt;
&lt;p&gt;We are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.&lt;/p&gt;
&lt;h2&gt;Inline elements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Bold&lt;/strong&gt;, &lt;ruby&gt;Ruby&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ルビ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;, &lt;em&gt;Italic&lt;/em&gt;, &lt;del&gt;Strikethrough&lt;/del&gt;, &lt;a href="https://www.imalan.cn"&gt;Link&lt;/a&gt;&lt;sup id="fn_ref_1"&gt;&lt;a href="#fn_1"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2&gt;Blockquote and nested blockquote&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;安得广厦千万间，大庇天下寒士俱欢颜！风雨不动安如山。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;呜呼！何时眼前突兀见此屋，吾庐独破受冻死亦足！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;int a=1;&lt;/code&gt;. Code block:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List&lt;/h2&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iPhone&lt;ul&gt;
&lt;li&gt;iPhone X&lt;/li&gt;
&lt;li&gt;iPhone 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iPad&lt;/li&gt;
&lt;li&gt;MacBook&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开冰箱&lt;ol&gt;
&lt;li&gt;右手放在冰箱门拉手上&lt;/li&gt;
&lt;li&gt;左手扶住冰箱主体&lt;/li&gt;
&lt;li&gt;右手向后用力&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;把大象放进冰箱&lt;/li&gt;
&lt;li&gt;关上冰箱&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Horizontal rule&lt;/h2&gt;
&lt;hr&gt;
&lt;h2&gt;Math&lt;/h2&gt;
&lt;p&gt;Inline Math: $m\times n$, math block:&lt;/p&gt;
&lt;p&gt;$$C_{m\times k}=A_{m\times n}\cdot B_{n\times k}$$&lt;/p&gt;
&lt;h2&gt;Figures&lt;/h2&gt;
&lt;h3&gt;Single figure&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="836" data-height="450" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/e0affbc80ccb2d596c87b520e37e7071.jpg" alt="Princess Mononoke" /&gt;&lt;figcaption&gt;Princess Mononoke&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;Photoset&lt;/h3&gt;
&lt;div class="photos"&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/4956a144888cdbbb6c2df1d1d15384b0.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="2690" data-height="2688" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/4c66f0da616b08325b3aaa4c8b3f68e1.jpg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/8b4d2334469ffa39b59e6fdb37c8c601.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;div class="photos"&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/0f5023d542a33e7c9d270f3cd6a99562.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/20ec69d2a0276336f95e11f42866d17f.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure&gt;&lt;img data-width="4032" data-height="2688" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/2b8af25285e5a193729a350593113bad.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;h2&gt;Table&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;header&lt;/th&gt;
&lt;th&gt;header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cell 1&lt;/td&gt;
&lt;td&gt;cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cell 3&lt;/td&gt;
&lt;td&gt;cell 4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Link Card&lt;/h2&gt;
&lt;div class="links"&gt;
&lt;a style="display:block" target="_blank" href="https://www.imalan.cn" class="board-item"&gt;                 &lt;div class="board-thumb"&gt;&lt;img src="https://secure.gravatar.com/avatar/1741a6eef5c824899e347e4afcbaa75d?s=200&amp;r=G&amp;d="&gt;&lt;/div&gt;                 &lt;div class="board-title"&gt;AlanDecode&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;div class="footnotes"&gt;&lt;ol&gt;&lt;li id="fn_1"&gt;Home page for AlanDecode &lt;a no-style href="#fn_ref_1"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</content><link href="/archives/typography/" rel="alternate"/><published>2019-12-18T16:50:00+08:06</published></entry><entry><id>/archives/软考软件设计师笔记/</id><title>软考软件设计师笔记</title><updated>2020-05-28T08:10:31.803199+00:00</updated><author><name>patrick</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;h1&gt;一.计算机系统知识&lt;/h1&gt;
&lt;h2&gt;1.1原码反码补码移码&lt;/h2&gt;
&lt;p&gt;正数时&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;原=反=补&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;负数时&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;原转反：符号位不变，其余取反&lt;/p&gt;
&lt;p&gt;反转补：最低位加1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;移码：当偏移量为2的n-1次方时，&lt;strong&gt;将补码符号位取反即可&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;零只有唯一补码&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;1.2定点数浮点数&lt;/h2&gt;
&lt;p&gt;浮点数表示方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;N = M*R^E&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;M为尾数，R为基数，E为阶码&lt;/p&gt;
&lt;h2&gt;1.3校验码&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;确保数据传送无误&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;提高硬件电路的可靠性&lt;/li&gt;
&lt;li&gt;提高代码的检验能力&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;奇偶校验码&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;使码距为2&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;水平奇偶校验码&lt;/li&gt;
&lt;li&gt;垂直奇偶校验码&lt;/li&gt;
&lt;li&gt;水平垂直奇偶校验码&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;海明码&lt;/strong&gt;：在数据位之间插入k个校验码，扩大码距来实现检错和纠错，&lt;/p&gt;
&lt;p&gt;设数据位是n位，校验位k位，则满足&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2的k次方 -1 &amp;gt;= n+k&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;循环冗余校验码(CRC)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;校验码越长，该代码校验能力越强，采用模2运算，其加减运算的规则是按位运算，不发生借位和进位&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/循环冗余校验码.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用模2运算&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/模2运算.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.4计算机系统硬件组成&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;组成&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运算器&lt;/li&gt;
&lt;li&gt;控制器&lt;/li&gt;
&lt;li&gt;存储器&lt;/li&gt;
&lt;li&gt;输入设备&lt;/li&gt;
&lt;li&gt;输出设备&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;中央处理单元(CPU)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主要功能&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;指令控制&lt;/li&gt;
&lt;li&gt;操作控制&lt;/li&gt;
&lt;li&gt;时间控制&lt;/li&gt;
&lt;li&gt;数据加工&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;组成&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;运算器&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;算术逻辑单元(ALU)&lt;/strong&gt;:运算器重要组成部件，负责处理数据，实现对数据的算术运算和逻辑运算&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;累加寄存器(AC)&lt;/strong&gt;:通用寄存器，当ALU工作时，提供一个工作区&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据缓冲寄存器(DR)&lt;/strong&gt;:在对存储器进行读写操作室，用DR暂时存放由由内存储器读写的一条指令或一个数据字，并将不同时间段内读写的数据隔离开来&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;状态条件寄存器(PSW)&lt;/strong&gt;:主要分为状态标志和控制标志，这些标志通常分别由一位触发器保存，反映了当前指令执行完成之后的状态。一个算术操作产生一个运算结果，一个逻辑产生一个判决&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;控制器&lt;/p&gt;
&lt;p&gt;它决定了计算机运行过程的自动化&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指令寄存器(IR)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;程序计数器(PC)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;地址寄存器(AR)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;指令译码器(ID)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;寄存器组：控制器和运算器中的寄存器都是专用寄存器，通用寄存器可由程序员规定其用途&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt; &lt;/h2&gt;
&lt;h2&gt;1.5存储系统&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/存储器层次结构.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/存储器分类.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/Cache.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;相联存储器&lt;/strong&gt;：按内容访问的存储器，通过关键字比较，可用在高速缓冲存储器中，在虚拟存储器中用来做段表等，还可用在数据库中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;高速缓存(Cache)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目的：提高存储器平均访问速度，使存储器速度与cpu速度相匹配，地址变换和数据块的替换算法均由&lt;strong&gt;硬件&lt;/strong&gt;实现。通常被集成到cpu的寄存器中，容小，速快，成高&lt;/p&gt;
&lt;p&gt;&lt;img src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\eb46ffa6605438fbf1f9d0c44576302.jpg" alt="eb46ffa6605438fbf1f9d0c44576302" style="zoom:200%;" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\1154ece620d69877639b8f915ed8507.jpg" alt="1154ece620d69877639b8f915ed8507" /&gt;&lt;figcaption&gt;1154ece620d69877639b8f915ed8507&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;常用的虚拟存储器由&lt;strong&gt;主存-辅存&lt;/strong&gt;组成&lt;/p&gt;
&lt;h2&gt;1.6输入输出技术&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\1e2be5cc42d5d632c6753c57672438d.jpg" alt="1e2be5cc42d5d632c6753c57672438d" /&gt;&lt;figcaption&gt;1e2be5cc42d5d632c6753c57672438d&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\02ddf76d4a6a5b53af97f7944f6daa7.jpg" alt="02ddf76d4a6a5b53af97f7944f6daa7" /&gt;&lt;figcaption&gt;02ddf76d4a6a5b53af97f7944f6daa7&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;1.7&lt;strong&gt;总线结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200201161153550.png" alt="image-20200201161153550" /&gt;&lt;figcaption&gt;image-20200201161153550&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;系统总线：ISA,EISA,PCI&lt;/p&gt;
&lt;p&gt;外部总线：PS-232-C,SCSI,USB,IEEE-1394&lt;/p&gt;
&lt;h2&gt;1.8指令系统&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CISC和RISC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\f29dff9cf6c26fed69daae8d74966c3.jpg" alt="f29dff9cf6c26fed69daae8d74966c3" /&gt;&lt;figcaption&gt;f29dff9cf6c26fed69daae8d74966c3&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;吞吐率&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200201145311489.png" alt="image-20200201145311489" /&gt;&lt;figcaption&gt;image-20200201145311489&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200201145358391.png" alt="image-20200201145358391" /&gt;&lt;figcaption&gt;image-20200201145358391&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.9题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;cache与主存的地址映像由&lt;strong&gt;硬件&lt;/strong&gt;自动完成&lt;/li&gt;
&lt;li&gt;指令寄存器位数取决于&lt;strong&gt;指令字长&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;逻辑异或：相等结果为0否则结果为1&lt;/li&gt;
&lt;li&gt;计算机字长32位，内存容量2GB，按字编址，寻址范围为&lt;strong&gt;2GB/32位&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;常用虚存储器由&lt;strong&gt;主存-辅存&lt;/strong&gt;组成&lt;/li&gt;
&lt;li&gt;中断向量可提供&lt;strong&gt;中断服务程序的入口地址&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;实现多级中断嵌套，使用&lt;strong&gt;堆栈&lt;/strong&gt;保护断点和现场&lt;/li&gt;
&lt;li&gt;CRC格式为k+r&lt;/li&gt;
&lt;li&gt;定点表示法，&lt;strong&gt;小数点不用存储位&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;某无条件转移汇编采用&lt;strong&gt;直接寻址&lt;/strong&gt;，则该指令功能将指令中的地址码送入&lt;strong&gt;PC(程序计数器)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;IO接口与主存采用&lt;strong&gt;统一编址&lt;/strong&gt;，则输入输出操作是通过&lt;strong&gt;访存&lt;/strong&gt;来完(统一编址是指IO端口与主存使用同一个地址空间进行统一编址)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;总线复用&lt;/strong&gt;，指数据和地址在同一个总线上传输的方式，可以&lt;strong&gt;减少总线中信号线的数量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;CPU寄存器中，&lt;strong&gt;指令寄存器&lt;/strong&gt;对用户是完全透明的&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;二.程序语言基础知识&lt;/h1&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203165448772.png" alt="image-20200203165448772" /&gt;&lt;figcaption&gt;image-20200203165448772&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.1编译过程&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203165528889.png" alt="image-20200203165528889" /&gt;&lt;figcaption&gt;image-20200203165528889&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前端部分(与机器无关)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;词法分析，语法分析，语义分析，中间代码生成&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;后端部分(与机器有关)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;代码优化，目标代码生成&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;传值调用：&lt;/strong&gt;实参向形参传递相应类型的值，这种方式形参不能向实参传递信息。在C语言中，要实现被调用函数对实参的修改，&lt;strong&gt;必须用指针作形参&lt;/strong&gt;。即调用时先对实参进行取地址运算，然后将实参地址传递给指针形参。这种方式实现了间接访问内存&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;引用调用：&lt;/strong&gt;是c++增加的数据类型，当形参为引用类型时，&lt;strong&gt;形参名实际上是实参的别名&lt;/strong&gt;，函数中对形参的访问和修改实际上就是针对相应实参所做的访问和改变&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实参可以使常量变量或表达式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用中间代码有&lt;/strong&gt;：后缀式，三元式子，四元式和树&lt;/p&gt;
&lt;h2&gt;2.2文法&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203165552527.png" alt="image-20200203165552527" /&gt;&lt;figcaption&gt;image-20200203165552527&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203171254677.png" alt="image-20200203171254677" /&gt;&lt;figcaption&gt;image-20200203171254677&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203172027367.png" alt="image-20200203172027367" /&gt;&lt;figcaption&gt;image-20200203172027367&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.3有限自动机&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203202245045.png" alt="image-20200203202245045" /&gt;&lt;figcaption&gt;image-20200203202245045&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203202745308.png" alt="image-20200203202745308" /&gt;&lt;figcaption&gt;image-20200203202745308&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.4正规式&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203202329660.png" alt="image-20200203202329660" /&gt;&lt;figcaption&gt;image-20200203202329660&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203202344060.png" alt="image-20200203202344060" /&gt;&lt;figcaption&gt;image-20200203202344060&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.5表达式&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203203505483.png" alt="image-20200203203505483" /&gt;&lt;figcaption&gt;image-20200203203505483&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.6语言特点&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200203204332603.png" alt="image-20200203204332603" /&gt;&lt;figcaption&gt;image-20200203204332603&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.7题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;将高级语言翻译为机器语言程序的过程中，常引入&lt;strong&gt;中间代码&lt;/strong&gt;，好处是&lt;strong&gt;有利于进行与机器无关的优化处理，以及提高编译程序的可移植性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;对高级语言源程序进行编译过程中，有穷自动机(NFA或DFA)是进行&lt;strong&gt;词法分析&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;弱类型语言指不需要进行变量或对象类型声明的语言，例如&lt;strong&gt;python&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编译程序&lt;/strong&gt;和&lt;strong&gt;解释程序&lt;/strong&gt;的相同点：在词法，语法，语义分析方面工作原理基本相同。不同点：在运行用户程序时，&lt;strong&gt;解释程序&lt;/strong&gt;直接执行源程序或源程序的内部形式(中间代码)，因此不产生目标程序，而&lt;strong&gt;编译程序&lt;/strong&gt;将源程序翻译成&lt;strong&gt;目标程序&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在对高级语言源程序进行编译过程中，为源程序变量所分配的存储单元的地址属于&lt;strong&gt;逻辑地址&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;声明语句和可执行语句，对&lt;strong&gt;声明语句&lt;/strong&gt;，主要是将需要的信息正确的填入合理组织的&lt;strong&gt;符号表&lt;/strong&gt;中，对&lt;strong&gt;可执行语句&lt;/strong&gt;，&lt;strong&gt;则是翻译成中间代码或目标代码&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\ee8515f502545f979a1700618a7570a.jpg" alt="ee8515f502545f979a1700618a7570a" /&gt;&lt;figcaption&gt;ee8515f502545f979a1700618a7570a&lt;/figcaption&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\181ddb72e78983b3c16ce1261c5778d.jpg" alt="181ddb72e78983b3c16ce1261c5778d" /&gt;&lt;figcaption&gt;181ddb72e78983b3c16ce1261c5778d&lt;/figcaption&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200204200910126.png" alt="image-20200204200910126" /&gt;&lt;figcaption&gt;image-20200204200910126&lt;/figcaption&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Local\Temp\WeChat Files\6a0a282dee4f33a207c78e7a076fdca.jpg" alt="6a0a282dee4f33a207c78e7a076fdca" /&gt;&lt;figcaption&gt;6a0a282dee4f33a207c78e7a076fdca&lt;/figcaption&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据类型说明&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;说明数据占用的内存和存放形式以分配存储单元&lt;/li&gt;
&lt;li&gt;对参与计算的对象进行检查&lt;/li&gt;
&lt;li&gt;规定数据的取值范围及能够的运算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;三.操作系统知识&lt;/h1&gt;
&lt;h2&gt;3.1基础知识&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="C:\Users\a1138\AppData\Roaming\Typora\typora-user-images\image-20200204230327397.png" alt="image-20200204230327397" /&gt;&lt;figcaption&gt;image-20200204230327397&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特征&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;并发性&lt;/li&gt;
&lt;li&gt;共享性&lt;/li&gt;
&lt;li&gt;虚拟性&lt;/li&gt;
&lt;li&gt;不确定性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;处理机管理&lt;/strong&gt;：对处理机执行时间管理，采用多道程序等技术将CPU合理分配每个人物。常用资源管理单位有&lt;strong&gt;进程&lt;/strong&gt;和&lt;strong&gt;线程&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文件管理&lt;/strong&gt;&lt;ol&gt;
&lt;li&gt;文件存储空间&lt;/li&gt;
&lt;li&gt;目录&lt;/li&gt;
&lt;li&gt;文件的读写&lt;/li&gt;
&lt;li&gt;存取控制&lt;/li&gt;
&lt;li&gt;软件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存储管理&lt;/strong&gt;：对主存空间管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设备管理&lt;/strong&gt;：方便设备使用，提高CPU和I/O设备的利用率&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作业管理&lt;/strong&gt;&lt;ol&gt;
&lt;li&gt;任务管理&lt;/li&gt;
&lt;li&gt;界面管理&lt;/li&gt;
&lt;li&gt;人机交互&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;批处理操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分时操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微机操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;嵌入式操作系统&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;3.2处理机管理&lt;/h2&gt;
&lt;h3&gt;3.2.1前趋图&lt;/h3&gt;
&lt;h3&gt;3.2.2进程的同步与互斥&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="https://github.com/LifeAlsoIsGG/ruankaoNote/blob/master/images/软考软件设计师笔记/%E5%90%8C%E6%AD%A5%E4%B8%8E%E4%BA%92%E6%96%A5.jpg?raw=true" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;3.2.3PV操作&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="https://github.com/LifeAlsoIsGG/ruankaoNote/blob/master/images/软考软件设计师笔记/PV%E6%93%8D%E4%BD%9C.jpg?raw=true" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;例题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="https://github.com/LifeAlsoIsGG/ruankaoNote/blob/master/images/软考软件设计师笔记/PV%E6%93%8D%E4%BD%9C%E4%BE%8B%E9%A2%98.jpg?raw=true" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="https://github.com/LifeAlsoIsGG/ruankaoNote/blob/master/images/软考软件设计师笔记/PV%E6%93%8D%E4%BD%9C%E4%BE%8B%E9%A2%982.jpg?raw=true" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PV操作与前趋图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="https://github.com/LifeAlsoIsGG/ruankaoNote/blob/master/images/软考软件设计师笔记/PV%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%89%8D%E8%B6%8B%E5%9B%BE.jpg?raw=true" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;3.2.4进程调度&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可剥夺式&lt;/li&gt;
&lt;li&gt;不可剥夺式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;算法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;先来先服务(FCFS)&lt;/strong&gt;：总是将就绪队列队首的进程投入运行，特点&lt;strong&gt;有利于长作业，不利于短作业，有利于CPU繁忙的作业，不利于I/O繁忙的作业&lt;/strong&gt;。宏观调度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间片轮转&lt;/strong&gt;：提高进程并发性和响应时间，从而&lt;strong&gt;提高资源利用率&lt;/strong&gt;。微观调度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优先级调度&lt;/strong&gt;&lt;ol&gt;
&lt;li&gt;静态优先级：创建时就已经确定好，知道进程终止都不改变&lt;/li&gt;
&lt;li&gt;动态优先级：可以改变&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多级反馈调度&lt;/strong&gt;：照顾短进程，提高系统吞吐量，缩短平均周转时间，照顾I/o型进程以获得较好的I/O设备利用率，缩短响应时间&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;3.2.4死锁&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源竞争&lt;/li&gt;
&lt;li&gt;进程推进顺序非法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;产生死锁的4个必要条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;互斥条件:一次只允许一个进程使用&lt;/li&gt;
&lt;li&gt;请求保持条件：获得后又请求资源被堵塞&lt;/li&gt;
&lt;li&gt;不可剥夺条件：进程在未结束前不能所获得的资源不能被剥夺&lt;/li&gt;
&lt;li&gt;环路条件：每个进程占有下个进程申请的资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;死锁处理&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;预防：破坏4个条件中一个，措施是&lt;strong&gt;静态分配法&lt;/strong&gt;和&lt;strong&gt;资源有序分配法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;避免：银行家算法&lt;/li&gt;
&lt;li&gt;检测：系统定时运行死锁检测程序&lt;/li&gt;
&lt;li&gt;解除&lt;ul&gt;
&lt;li&gt;资源剥夺法&lt;/li&gt;
&lt;li&gt;撤销进程法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3.2.5线程&lt;/h3&gt;
&lt;p&gt;比进程小，是进程的实体，是系统独立分配和调度的基本单位，也有就绪，阻塞，运行三种状态&lt;/p&gt;
&lt;h3&gt;3.2.6银行家算法&lt;/h3&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;银行家算法&lt;/li&gt;
&lt;li&gt;银行家例题1&lt;/li&gt;
&lt;li&gt;银行家例题2&lt;/li&gt;
&lt;li&gt;银行家例题3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.3存储管理&lt;/h2&gt;
&lt;h3&gt;3.3.1分配算法&lt;/h3&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储分配算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3.3.2页，段，段页式存储&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;页式存储&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页式存储&lt;/li&gt;
&lt;li&gt;页式存储练习题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;段式存储&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;段式存储&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;段页式存储&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;段页式存储&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;快表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果题目没有使用块表，则程序要访问&lt;strong&gt;2&lt;/strong&gt;次内存，第一次是查表，第二次是查到后访问对应的块&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;块表&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3.3.3页面置换算法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;缺页&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;访问内存时没有想要访问的页面，此时产生一次缺页&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抖动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分配页面更多反而缺页率更高&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分配算法例题.jpg&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3.3.4页面淘汰算法&lt;/h3&gt;
&lt;p&gt;指令跨页时产生一次缺页中断，操作数跨页会产生两次缺页中断&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页面淘汰算法练习题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.4文件管理&lt;/h2&gt;
&lt;h3&gt;3.4.1文件和树形目录结构&lt;/h3&gt;
&lt;p&gt;主要考察绝对路径和相对路径&lt;/p&gt;
&lt;p&gt;缺&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件和树形目录结构.jpg&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3.4.2空闲存储空间管理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;位示图法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;字长代表一个字有多少个物理块&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/位示图法.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/位示图法例题.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/位示图法例题2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;3.4.3索引文件结构&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/索引文件结构.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例题&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/索引文件例题.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;3.5设备管理&lt;/h2&gt;
&lt;h3&gt;3.5.1数据传输控制方式&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据传输控制方式.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;3.5.2虚拟设备和spooling技术&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/虚设备和spooling系统.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;3.5.3磁盘调度&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;算法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;扫描算法：从里到外，然后再从外到里&lt;/li&gt;
&lt;li&gt;单向扫描算法，从里到外后到最外面是，再从最开始的里面到外面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例题&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/磁盘调度例题.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解析&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/磁盘调度例题2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;3.6作业管理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;组成&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;程序&lt;/li&gt;
&lt;li&gt;数据&lt;/li&gt;
&lt;li&gt;作业说明书：体现用户的控制意图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;作业控制&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脱机：无需人工干预，用户必须提交作业说明书&lt;/li&gt;
&lt;li&gt;联机：需要人工干预，用户可以通过终端提交意图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;作业状态及其转换&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提交&lt;/li&gt;
&lt;li&gt;后备：通过spooling系统&lt;/li&gt;
&lt;li&gt;执行&lt;/li&gt;
&lt;li&gt;完成：通过spooling系统输出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;作业调度算法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先来先服务(FCFS)&lt;/li&gt;
&lt;li&gt;短作业优先(SJF)&lt;/li&gt;
&lt;li&gt;响应比高优先&lt;/li&gt;
&lt;li&gt;优先级调度算法&lt;/li&gt;
&lt;li&gt;均衡调度算法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.7题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/3.7例题1.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/3.7例题2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;四.系统开发和运行&lt;/h1&gt;
&lt;h2&gt;4.1基础知识&lt;/h2&gt;
&lt;h3&gt;4.1.1开发模型&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/软件开发模型.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;瀑布模型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;需求明确&lt;/strong&gt;，时间严格，二次开发时选用，无法灵活应对需求&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/瀑布模型.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;演化模型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;根据需求快速开发一个可运行版本，然后不断改进，&lt;strong&gt;主要用于对软件需求缺乏准确认识&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;螺旋模型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;包括&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;制定计划&lt;/li&gt;
&lt;li&gt;风险分析&lt;/li&gt;
&lt;li&gt;实施工程&lt;/li&gt;
&lt;li&gt;客户评估&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;瀑布模型和演化模型的结合，在这之上增加了风险分析&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;喷泉模型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;以用户需求为动力，以对象作为驱动，主要用于描述面向对象的开发过程，具有迭代和无间隙特性，适合==面向对象==开发，各开发活动==没有明显界限==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;V模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;强调测试的模型，测试贯穿始终&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/瀑布模型.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;4.1.2软件开发方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;结构化方法&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;面向&lt;strong&gt;数据流&lt;/strong&gt;，自顶向下，逐层分解，最早出现的方法，适合于数据处理领域问题，不适合解决大规模复杂的项目，难以适应需求的变化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Jackson&lt;/strong&gt;方法&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;面向&lt;strong&gt;数据结构&lt;/strong&gt;，以数据结构为驱动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;原型化方法&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;适合需求不明确时&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;面向对象开发方法&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;统一建模语言UML&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4.1.3软件需求分析&lt;/h3&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;功能需求：所开发软件必须有的功能&lt;/li&gt;
&lt;li&gt;非功能需求：如可靠性，响应时间，容错性，扩展性，吞吐量，价格等&lt;/li&gt;
&lt;li&gt;设计约束：限制条件，补充规约&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;4.1.4软件开发项目管理&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;成本估算&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;风险分析&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;风险识别：建立风险条目检查表&lt;/li&gt;
&lt;li&gt;风险预测：&lt;/li&gt;
&lt;li&gt;风险评估：三元组，定义风险参照水准&lt;/li&gt;
&lt;li&gt;风险控制：避免&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进度管理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Gantt图&lt;/strong&gt;：横坐标时间，纵坐标任务，&lt;strong&gt;能清晰的描述任务何时开始何时结束以及各个人物的并行性，不能反映任务的依赖关系，难以确定项目的关键&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PERT图&lt;/strong&gt;：不仅有上面的优点，&lt;strong&gt;还给出了任务间的关系&lt;/strong&gt;，==不能反映并行关系==&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;人员管理&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4.1.5软件配置管理&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;基线&lt;/li&gt;
&lt;li&gt;软件配置项&lt;/li&gt;
&lt;li&gt;版本控制&lt;/li&gt;
&lt;li&gt;变更控制&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;4.1.6软件过程管理&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;软件能力成熟度模型(CMM)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;初始级：无序混乱&lt;/li&gt;
&lt;li&gt;可重复级：建立了基本的项目管理&lt;/li&gt;
&lt;li&gt;已定义级：已将软件管理和工程过程文档化，标准化&lt;/li&gt;
&lt;li&gt;已管理级：收集对软件过程和产品质量的详细度量&lt;/li&gt;
&lt;li&gt;优化级：过程的量化反馈和先进的思想&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;统一过程模型(UP)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用例和风险驱动，以架构为中心，迭代并且增量&lt;/p&gt;
&lt;p&gt;四个阶段&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;初始阶段：生命周期目标&lt;/li&gt;
&lt;li&gt;精化阶段：生命周期构架&lt;/li&gt;
&lt;li&gt;构建阶段：初始运作功能&lt;/li&gt;
&lt;li&gt;移交阶段：产品发布&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;典型代表&lt;strong&gt;RUP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;敏捷开发&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;总体目标：尽可能早地，持续地对有价值的软件的交付&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;极限编程(XP):轻量级高效，4大价值观..&lt;/li&gt;
&lt;li&gt;水晶法(Crystal):每一个不同的项目都需要一套不同的策略，约定和方法论&lt;/li&gt;
&lt;li&gt;并列争球法(Scrum):使用迭代，==按需求的优先级别来实现产品==&lt;/li&gt;
&lt;li&gt;自适应软件开发(ASD):有一个使命，特征为视为客户家辉的关键点&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;4.1.7软件质量管理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;软件质量特性&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;功能性：与一组功能及其指定的性质有关的一组属性&lt;/li&gt;
&lt;li&gt;可靠性：一定时间，软件维持其性能水平有关&lt;/li&gt;
&lt;li&gt;易使用性：为使用软件使用的努力&lt;/li&gt;
&lt;li&gt;效率：规定条件下，软件性能水平与所用资源量关系&lt;/li&gt;
&lt;li&gt;可维护性：进行规定修改所需努力&lt;ol&gt;
&lt;li&gt;易分析&lt;/li&gt;
&lt;li&gt;易改变&lt;/li&gt;
&lt;li&gt;稳定性&lt;ol&gt;
&lt;li&gt;易测试性：与为确认经修改软件所需努力&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;可移植性：到另外环境的能力&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;软件质量保证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软件复杂性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;度量方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;代码行度量方法：统计程序的源代码行数，以此来为指标&lt;/li&gt;
&lt;li&gt;McCabe度量法：取决于控制的复杂性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;软件评审&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软件容错技术&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;实现手段主要是&lt;strong&gt;冗余&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;结构冗余&lt;/li&gt;
&lt;li&gt;信息冗余&lt;/li&gt;
&lt;li&gt;时间冗余&lt;/li&gt;
&lt;li&gt;冗余附加技术&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;4.2系统分析&lt;/h2&gt;
&lt;h2&gt;4.2.1结构化分析方法&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;面向数据流的需求分析方法，适用于分析大型数据处理系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;数据流图&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据流图.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;分层&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;顶层数据流图：描述了系统的输入输出&lt;/li&gt;
&lt;li&gt;0层图：加工输入流&lt;/li&gt;
&lt;li&gt;内部：加工&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;4.3系统实施&lt;/h2&gt;
&lt;h3&gt;4.3.1测试策略和方法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;黑盒测试&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;等价类划分：选出代表性数据来测试&lt;/li&gt;
&lt;li&gt;边界值分析&lt;/li&gt;
&lt;li&gt;错误推测&lt;/li&gt;
&lt;li&gt;因果图：从自然语言描述的程序规格找出因和果，制成判定表&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;白盒测试&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;逻辑覆盖&lt;ol&gt;
&lt;li&gt;语句覆盖：使所有语句都被覆盖，==最弱的逻辑覆盖==&lt;/li&gt;
&lt;li&gt;路径覆盖：所有路径都会执行到&lt;/li&gt;
&lt;li&gt;判定覆盖&lt;/li&gt;
&lt;li&gt;条件覆盖&lt;/li&gt;
&lt;li&gt;判定/条件覆盖&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;循环覆盖：使循环中每个条件都得到验证&lt;/li&gt;
&lt;li&gt;基本路径测试&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;4.4题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;数据流图守恒加工原则如下&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;加工规格说明必须描述输入变为输出数据流的加工规则&lt;/li&gt;
&lt;li&gt;决策表可以用来表示加工规格说明&lt;/li&gt;
&lt;li&gt;对同一个加工来说，输入与输出名字必须不相同&lt;/li&gt;
&lt;li&gt;加工规格说明主要目的是说做什么而不是怎么做的具体流程&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;模块作用范围超过控制范围时&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;通常采用向上移动判断点位置&lt;/li&gt;
&lt;li&gt;将受判定影响的模块下移到控制范围内&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;活动图&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;==关键路径==：从开始到结束得所有路径中，所用时间最长的一条为关键路径。&lt;/p&gt;
&lt;p&gt;==最早开始时间==：在关键路径上，从开始到该任务的最早执行的时间&lt;/p&gt;
&lt;p&gt;==最晚开始时间==：关键路径的总时间-反向得出该任务的时间&lt;/p&gt;
&lt;p&gt;2.==松弛时间==（最多延迟执行的时间）&lt;/p&gt;
&lt;p&gt;最晚开始时间-最早开始时间&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/4.3例题3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;增量式优势&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;==较短时间内==提供有用的产品，能够解决用户急用功能&lt;/li&gt;
&lt;li&gt;只提交用户==部分功能==，用户有充足时间学习和适应&lt;/li&gt;
&lt;li&gt;需求变更时只变更部分部件，==而不必影响整个系统==&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;程序质量评审&lt;/code&gt;
从开发者角度评审，着眼于==软件本身结构==，==与运行环境的接口==，==变更带来的影响==，==模块结构==主要包括以下(不包括==数据结构==)&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;控制流结构&lt;/li&gt;
&lt;li&gt;数据流结构&lt;/li&gt;
&lt;li&gt;模块结构与功能结构之间的对应关系&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;系统可维护性的评价指标&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不包括==可移植性==&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;可理解性&lt;/li&gt;
&lt;li&gt;可测试性&lt;/li&gt;
&lt;li&gt;可修改性&lt;/li&gt;
&lt;li&gt;维护工具&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;逆向工程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通常在原软件生命周期的==软件维护==阶段进行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;等价类划分测试&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把所有可能输入的数据作为测试用例，再在输入时不要输入两个错误用例，否则无法判断&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;单元测试主要检查内容&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;边界测试&lt;/li&gt;
&lt;li&gt;错误处理测试&lt;/li&gt;
&lt;li&gt;路径测试&lt;/li&gt;
&lt;li&gt;局部数据结构测试&lt;/li&gt;
&lt;li&gt;模块接口测试&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;领域类模型&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对领域内的概念类，现实世界的可视化表示，不包含==操作==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PERT图==不能清晰地描述任务间的并行关系==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改错误后，还需要==回归测试==以发现修改是否引起原本正确发生错误&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/4.3例题13.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![](images/软考软件设计师笔记/4.3例题13.2.jpg)&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;McCabe计算&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;公式:V(G)=m-n+2,m为==边数==，n为==节点数==，可以用三个节点两条边来验证&lt;/p&gt;
&lt;p&gt;如果有一条边没有连接两个点，这个边不用算&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/4.3例题14.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;单元测试需要考虑&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;输入参数是否与形式参数是否一致&lt;/li&gt;
&lt;li&gt;全局变量的定义在各模块是否一致&lt;/li&gt;
&lt;li&gt;输入是否改变了形式参数&lt;/li&gt;
&lt;li&gt;调用其他模块的参数与被调用的模块的参数是否一致&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;划分模块原则，一个模块作用范围应该在其控制范围之内，控制范围==完全==取决于系统的结构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;冗余附加技术&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;包括程序，指令，数据，空间和通道&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;屏蔽==硬件错误==&lt;ol&gt;
&lt;li&gt;关键程序和数据的冗余存储及调用&lt;/li&gt;
&lt;li&gt;检测，表决，切换，重构，纠错和复算的实现&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;屏蔽==软件错误==&lt;ol&gt;
&lt;li&gt;冗余备份程序的存储及调用&lt;/li&gt;
&lt;li&gt;实现错误检测和错误恢复的程序&lt;/li&gt;
&lt;li&gt;实现容错软件所需的固化程序&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;模块内聚&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;逻辑内聚：模块内几个逻辑相似功能的模块，通过参数确定执行哪个&lt;/li&gt;
&lt;li&gt;顺序内聚：一个模块中各个处理元素都密切相关同一功能且必须顺序执行，前一功能的元素的输出就是下一功能的输入&lt;/li&gt;
&lt;li&gt;功能内聚：模块内所有元素完成一个功能&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;==无主程序员组==成员相互平等，工作由共同讨论，有利于发挥个人积极性，但职责不明，不适合开发大规模项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;项目组对风险主动，则==风险避免==最好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;产品运行方面的质量特性不包括==灵活性==，这属于产品修正方面的特性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用结构化分析模型进行接口设计时，应以==数据流图==为依据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户数据隔开有关于==安全性==，所以考虑了软件特性的==功能性==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;数据流图&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;加工到数据存储不算==缺失的数据流==，有箭头但没文字不算==缺失的数据流==&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;五.网络基础知识&lt;/h1&gt;
&lt;h2&gt;5.1网络的拓扑结构&lt;/h2&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;总线结构：只有一条双向通路，属于==分布式控制==，==节点的增删和位置的改动==较容易，，节点接口采用==无源电路==，设备少价格低，对信号质量要求高&lt;/li&gt;
&lt;li&gt;星形结构：以==放射状==连接节点，，特点维护管理容易，故障隔离和检测容易&lt;/li&gt;
&lt;li&gt;环形结构：信息流动方向固定，系统响应速度慢&lt;/li&gt;
&lt;li&gt;树形结构：总线结构的扩充形式&lt;/li&gt;
&lt;li&gt;分布式结构：各节点之间多条线路相连，资源共享方便，网络响应时间短&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;5.2ISO/OSI网络体系结构&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/OSI七层模型.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;5.2.1网络互联硬件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;物理层互联设备&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;中继器：为保证有用数据的完整性，用中继器把所接收到的弱信号进行分离，并再放大&lt;/li&gt;
&lt;li&gt;集线器：特殊的中继器，使用双绞线&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;数据链路层互联设备&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;网桥：一个局域网到另一个局域网的建立的桥梁，，作用==扩展网络和过滤帧==&lt;/li&gt;
&lt;li&gt;交换机：具有高端口密集特点的交换产品，雨荨共享型和专用型的局域网进行带宽调整，以减轻局域网之间信息流通出现的瓶颈问题&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;网络层互联设备&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;路由器：用于连接多个逻辑上分开的网络，具有判断网络地址和选择路径的功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;应用层互联设备&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;网关：将协议进行转换，将数据重新分组&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;5.2.2组建网络&lt;/h3&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;服务器&lt;/li&gt;
&lt;li&gt;客户机&lt;/li&gt;
&lt;li&gt;网络设备&lt;/li&gt;
&lt;li&gt;通信介质&lt;/li&gt;
&lt;li&gt;网络软件&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;5.3网络的标准和协议&lt;/h2&gt;
&lt;h2&gt;5.4Internet及应用&lt;/h2&gt;
&lt;h3&gt;5.4.1Internet地址&lt;/h3&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;A类：1个字节网络地址，3个主机地址&lt;/li&gt;
&lt;li&gt;B类：2个字节网络地址，2个主机地址&lt;/li&gt;
&lt;li&gt;C类：3个字节网络地址，1个主机地址&lt;/li&gt;
&lt;li&gt;D类：以1110开始&lt;/li&gt;
&lt;li&gt;E类：以1111开始&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;非类别地址例如：172.18.129.0/==24==，==24==代表在二进制模式下网络地址占多少位，总共==32位==，子网为==2^24^==个，每个子网可使用的主机地址是==2^32^-2==个，2个指的是全0和全1情况&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/IP地址.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;子网划分&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;27个子网，需要5位主机地址来补充，即2^5^，然后把网络地址全为1，主机地址全为0，在转化为十进制就是==子网掩码==&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/子网划分例题1.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/子网划分例题2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/子网划分例题3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;非类最大可表示，让主机地址全为1即能表示的最大&lt;/p&gt;
&lt;h3&gt;5.4.1Internet服务&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;DNS域名服务&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;==域名地址==和==IP地址==等价，通过==域名服务器==，完成映射变换。DNS是一种分布式地址信息数据库系统，用的是==UDP端口==，端口号==53==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;远程登录服务&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;是在==Telnet协议==的支持下，将用户计算机与远程计算机连接，用的是==TCP端口==，端口号==23==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;电子邮件服务&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;格式：用户名@主机名。&lt;/p&gt;
&lt;p&gt;Email系统&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Email客户软件&lt;/li&gt;
&lt;li&gt;Email服务器&lt;/li&gt;
&lt;li&gt;通信协议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;协议：均使用==TCP端口==&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SMTP(邮件传送协议)：端口号==25==&lt;/li&gt;
&lt;li&gt;POP3(邮件接收协议)：端口号==110==&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;WWW服务&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;交互式图形界面的Internet服务，为用户提供超文本传输协议(HTTP),数据文件由==HTML==描述，使用的是==TCP端口==，端口号==80==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;文件传输服务&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;FTP&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户软件&lt;/li&gt;
&lt;li&gt;服务器软件&lt;/li&gt;
&lt;li&gt;FTP通信协议&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两条==TCP==连接&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;控制连接：主要传输命令和参数，端口号==21==&lt;/li&gt;
&lt;li&gt;数据连接：主要传输文件，端口号==20==&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;5.5网络安全&lt;/h2&gt;
&lt;h3&gt;5.5.1网络安全威胁&lt;/h3&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;物理威胁&lt;/li&gt;
&lt;li&gt;网络攻击&lt;/li&gt;
&lt;li&gt;身份鉴别：设置口令的手段实现，密码破译&lt;/li&gt;
&lt;li&gt;编程威胁：通过==病毒==进行攻击&lt;/li&gt;
&lt;li&gt;系统漏洞：有意设置，使用户在失去访问权依然能进入系统&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;5.5.2攻击手段&lt;/h3&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;口令入侵：黑客==用合法用户的账号==登录进行攻击&lt;/li&gt;
&lt;li&gt;防置特洛伊木马：可以远程控制别人主机&lt;/li&gt;
&lt;li&gt;DoS攻击：即拒接服务，目的是使计算机或网路无法提供正常服务，常见有==计算机网络带宽攻击==和==连通性攻击==。DDos指借助于==客户机/服务器技术==，将多个计算机一起攻击平台&lt;/li&gt;
&lt;li&gt;端口扫描：利用Socket编程与目标TCP连接&lt;/li&gt;
&lt;li&gt;网络监听：主机可以接收到本网段在同一条物理通道上传输的所有信息&lt;/li&gt;
&lt;li&gt;欺骗攻击：创造一个易于误解的上下文环境，诱使被攻击这做出缺乏安全的决策，常见Web，APR，IP欺骗&lt;/li&gt;
&lt;li&gt;电子邮件攻击&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;5.5.3防火墙&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;建立在内外网络边界上的过滤封锁机制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;分类&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;包过滤型防火墙：在==网络层==，对于==传输层==，只能识别是TCP还是UDP&lt;/li&gt;
&lt;li&gt;应用代理网关防火墙：==彻底隔断==内网与外网的直接通信&lt;/li&gt;
&lt;li&gt;状态检测技术防火墙：在上面基础上加了10倍&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;组成&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;按照受保护程度从高到低，内网&amp;gt;DMZ&amp;gt;外网&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;5.5.4病毒收录&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;快乐时光&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;VB源程序病毒，电子邮件的附件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;熊猫烧香&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;==蠕虫病毒==的变种，更改exe的文件图标&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;X卧底&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;==手机==里的监控软件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;CIH病毒&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;破坏计算机系统硬件的恶性病毒&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;宏病毒&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;寄存在文档，打开此文档会被感染&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;特洛伊木马&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;秘密潜伏能够通过远程网络进行控制的恶意程序，让受害者为服务端，自己为客户端，从而访问服务端的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;5.5.5安全协议&lt;/h3&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;PGP：基于PSA公钥加密体制的==邮件加密软件==&lt;/li&gt;
&lt;li&gt;HTTPS：安全基础是==SSL==&lt;/li&gt;
&lt;li&gt;IPSec：使用加密的安全服务以确保在Internet网络上进行保密通信&lt;/li&gt;
&lt;li&gt;SSL：为网络通信提供安全数据，与==TLS==最接近&lt;/li&gt;
&lt;li&gt;TLS&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;5.6题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;==PKI体制==中，保证数字证书不被篡改的方法是==用CA的私钥对数字证书签名==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;公开密钥加密算法&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;ECC&lt;/li&gt;
&lt;li&gt;RSA&lt;/li&gt;
&lt;li&gt;DSA&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/5.5例题3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;技术&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;隧道技术：提供了一种现有IPV4路由体系来传递IPV6的数据方法，即将IPV6包作为无结构意义的数据，封装在IPV4中，被IPV4网络传输&lt;/li&gt;
&lt;li&gt;双协议栈技术：==使IPV6与IPV4节点兼容的最直接方式==&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/5.5例题4.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;==(POP)POP3协议==&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;适用于C/S结构的脱机模型的电子邮件协议，是一种规定怎样将个人计算机连接到Internet的邮件服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用==报文摘要算法==生成报文摘要的目的：防止发送的报文被篡改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;冲突域和广播域&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;集线器：一个冲突域和一个广播域&lt;/li&gt;
&lt;li&gt;交换机：多少个主机多少个冲突域和一个广播域&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/5.6例题7.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;通常在UDP协议上的应用是==VOIP==，网页是==HTTP==,==Telnet远程登录==是==TCP==，==邮件==是==SMTP==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过DNS服务器实现网络负载均衡，方法有==启用循环，添加每个Web服务器的主机记录==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数字证书CA，先从CA获取发送方的数字证书&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;验证该证书真伪：==用CA的公钥==&lt;/li&gt;
&lt;li&gt;验证消息的真实性：==A的公钥==&lt;/li&gt;
&lt;li&gt;数字签名：使用CA的秘钥&lt;/li&gt;
&lt;li&gt;发送方用==秘钥==加密&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SNMP服务，需要==administrator==才能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ASP内置对象&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;request：访问任何用HTTP的信息，包括从HTML表格的POST和GET的参数，cookie和用户认证&lt;/li&gt;
&lt;li&gt;response：对象控制发送个用户信息，重定向URL，更改cookie的值&lt;/li&gt;
&lt;li&gt;application：使给定应用程序的所有用户共享信息&lt;/li&gt;
&lt;li&gt;session：存储特定的用户会话信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DNS更新了域名，需要==刷新缓存==，可以用windows命令==ipconfig/flushdns==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;身份验证机制安全级别从小到大&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;匿名身份验证&lt;/li&gt;
&lt;li&gt;基本&lt;/li&gt;
&lt;li&gt;摘要式&lt;/li&gt;
&lt;li&gt;集成Windows&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SMTP传输采用==ASCII==格式表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;网络可用性和可靠性&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;可靠性：规定时间和条件下，网络系统完成规定功能的能力&lt;/li&gt;
&lt;li&gt;可用性：用户可利用网络时间的百分比&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;建筑物综合布线系统&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;工作区子系统：终端到信息插座之间&lt;/li&gt;
&lt;li&gt;水平子系统：楼层接线间到工作区&lt;/li&gt;
&lt;li&gt;干线子系统：各楼层设备之间的互联系统&lt;/li&gt;
&lt;li&gt;园区子系统：连接各个建筑物的通信系统&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;系统&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;漏洞扫描系统：自动检测远程或本地主机安全漏洞的程序，通常指硬件软件等存在安全缺陷。FTP服务器存在可写目录是一个安全漏洞，可以用这个&lt;/li&gt;
&lt;li&gt;防火墙系统：专注内部网和外部&lt;/li&gt;
&lt;li&gt;入侵检测系统：==对网络传输进行实时检测==&lt;/li&gt;
&lt;li&gt;病毒防御系统：防止黑客，病毒，木马&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TCP使用==三==次握手协议&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;六.多媒体基础知识&lt;/h1&gt;
&lt;h2&gt;6.1格式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;图像&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;BMP：win采用的图像格式，==与设备无关的位图格式==&lt;/li&gt;
&lt;li&gt;GIF：压缩图像存储格式，无损压缩&lt;/li&gt;
&lt;li&gt;TIFF：工业标准格式，==支持所有图像类型==&lt;/li&gt;
&lt;li&gt;PCX：使用==RLE方法==对图片压缩&lt;/li&gt;
&lt;li&gt;JPEG：文件非常小，有损&lt;/li&gt;
&lt;li&gt;PCD：数据很大，摄像专用格式&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;视频&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;GIF&lt;/li&gt;
&lt;li&gt;Flic：无损压缩，采用==RLE算法==&lt;/li&gt;
&lt;li&gt;AVI：允许视频和音频一起播放&lt;/li&gt;
&lt;li&gt;Quick Time：苹果公司&lt;/li&gt;
&lt;li&gt;MPEG：运动图像压缩算法的==国际标准==&lt;/li&gt;
&lt;li&gt;RealVideo&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;6.2题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;==矢量图==是由一系列线连接的点，基本单位是==图元==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;==视频信息==的基本单元是==帧==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;声音信号数字化过程首先要进行==A/D转换==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;==dpi==指每英寸的像素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;媒体&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;感觉媒体：使人产生直接感觉的媒体，如声音图像等&lt;/li&gt;
&lt;li&gt;表示媒体：传输==感觉媒体==的中介媒体，用于==数据交换的编码==&lt;/li&gt;
&lt;li&gt;表现媒体：显示媒体，==计算机用于输入输出的媒体==，如键盘，鼠标，光笔，显示器，扫描仪，打印机，数字化仪&lt;/li&gt;
&lt;li&gt;存储媒体&lt;/li&gt;
&lt;li&gt;传输媒体：传输媒体的==物理介质==，电缆光缆电磁波等&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用户放弃下载可以用或显示图片影像问题&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;流媒体技术&lt;/li&gt;
&lt;li&gt;JPEG累进编码方式：接收端由粗糙到清晰&lt;/li&gt;
&lt;li&gt;GIF格式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不能用AD/DA编码方式，这是哟没来模拟数字信号和模拟信号的转换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用==DPI==扫描2x8英寸图片，以得到300x600像素图片，需要分辨率300/2或者600/8的DPI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数字音乐合成技术主要有==FM==和==Wave Table==，使用==Wave Table==音质更好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;计算机通过==MIC(话筒接口)==收到的信号是==音频模拟信号==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;熵编码&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是一种无损压缩&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;哈夫曼编码&lt;/li&gt;
&lt;li&gt;游程编码&lt;/li&gt;
&lt;li&gt;算术编码&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;七.数据库技术&lt;/h1&gt;
&lt;h2&gt;7.1数据模型&lt;/h2&gt;
&lt;p&gt;数据模型三要素&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;数据结构&lt;/li&gt;
&lt;li&gt;数据操作&lt;/li&gt;
&lt;li&gt;数据的约束条件&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;7.1.1E-R模型&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;三个主要概念&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;实体：矩形&lt;/li&gt;
&lt;li&gt;联系：菱形&lt;/li&gt;
&lt;li&gt;属性：椭圆&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3&gt;7.1.2层次模型&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;采用==树形结构==表示==数据与数据间==的联系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;7.1.3网状模型&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;采用网状结构表示数据与数据间的联系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;7.1.4关系模型&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;用表格结构表达实体集以及实体集之间的联系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;7.2关系代数运算&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/关系代数运算.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;7.3数据库设计&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据库设计过程.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据库设计例题3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例题&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据库设计例题.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据库设计例题2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/数据库设计例题4.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第四问&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;优点：减少了连接操作，使查询封装更加方便&lt;/p&gt;
&lt;p&gt;缺点：相对于有权限表，在权限操作的时候造成的数据冗余相对较多&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;E-R图转关系模型&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;一对一：将联系转换成一个独立的关系模式，关系模式的属性包括该联系所关联的两个实体的码及联系属性，==关系的码取自任一方实体的码==&lt;/li&gt;
&lt;li&gt;一对多：将联系转换成一个独立的关系模式，关系模式的属性包括该联系所关联的两个实体的码及联系属性，==关系的码是多方实体的码==&lt;/li&gt;
&lt;li&gt;多对多：==联系只能转换成一个独立的关系模式==，关系模式的属性包括该联系所关联的两个==多方实体==的码及联系属性，关系的码是==多方实体的码构成的属性组==&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;7.4关系数据库规范化&lt;/h2&gt;
&lt;h3&gt;7.4.1函数依赖&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;是通过一个关系中属性间值的相等与否体现出来的数据间的相互关系，关系模式R(U,R),U为组成该关系的属性名集合，F为依赖集&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;X元关系即有几个属性，元组即有多少条记录有多少行&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/函数依赖.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：只要在某个关系能互相等于即可&lt;/p&gt;
&lt;p&gt;&lt;code&gt;规范化&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;1NF(第一范式)：关系模式R的每一个分量都是==不可再分==的数据项&lt;ol&gt;
&lt;li&gt;冗余度大&lt;/li&gt;
&lt;li&gt;引起修改操作的不一致性&lt;/li&gt;
&lt;li&gt;插入异常&lt;/li&gt;
&lt;li&gt;删除异常&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;2NF(第二范式)：若关系模式R属于1NF，且每一个非主属性完全依赖于码&lt;/li&gt;
&lt;li&gt;3NF(第三范式)：当2NF消除了非主属性对码的传递函数依赖，则称为3NF&lt;/li&gt;
&lt;li&gt;BCNF(巴克斯范式)：当3NF消除了主属性对码的部分和传递函数依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;7.5题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;分布式数据库系统&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;分片透明：最高层次的分布透明性，指用户或应用程序只对全局关系进行操作==而不必考虑数据的分片==&lt;/li&gt;
&lt;li&gt;复制透明：提高系统的性能，有些数据不止存放一个地方，很可能同时重复不同的场地&lt;/li&gt;
&lt;li&gt;逻辑透明：位于分片视图和分配视图之间，指用户应当了解分片情况，但不必了解片段的存储场地&lt;/li&gt;
&lt;li&gt;位置透明：用户无需知道数据存放的物理位置&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;==视图==，虚拟表，由一个或多个表或视图中导出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;创建视图&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;create view 表明&lt;/p&gt;
&lt;p&gt;​  as select 查询子句&lt;/p&gt;
&lt;p&gt;​  [with check option]&lt;/p&gt;
&lt;p&gt;注：当保持增删查改操作时依然满足子查询的条件表达式时加上==with check option==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;地址这一类可以往下划分为邮编，省，市的是==简单属性==，是呈链表结构，逐层向下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;候选关键字&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;根据依赖F求L类和N类，即为候选关键字，主属性从候选关键字找&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;八.数据结构&lt;/h1&gt;
&lt;h2&gt;8.1线性结构&lt;/h2&gt;
&lt;h3&gt;8.1.1线性表&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;n个元素的有限序列，除表头表尾外只有一个前驱和后继&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;顺序存储&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;使用一组地址连续的存储单元，使逻辑关系相邻的两个元素==物理位置上也相邻==&lt;/p&gt;
&lt;p&gt;优点：随机存取表中元素&lt;/p&gt;
&lt;p&gt;缺点：插入和删除需要移动大量元素&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;链式存储&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;用节点来存储，可连续可不连续&lt;/p&gt;
&lt;p&gt;节点结构&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;数据域：数据&lt;/p&gt;
&lt;p&gt;指针域：存储前驱和后继&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常用链表&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;双向链表：每个节点有两个指针，可在两个方向上遍历链表&lt;/p&gt;
&lt;p&gt;循环链表：表尾节点的指针指向表中的第一个节点，可以在任何位置开始遍历整个链表&lt;/p&gt;
&lt;p&gt;静态链表：借助数组来描述的链式存储结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;头结点&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;设置第一个节点不存储数据，链表的头指针指向该节点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;优缺点&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;优点：插入和删除不需要移动元素&lt;/p&gt;
&lt;p&gt;缺点：不能进行数据随机访问&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.1.2线性表的插入和删除运算&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;基于顺序存储&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;插入&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;平均移动次数==n/2==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;删除&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;平均移动次数==(n-1/)2==&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;基于链式存储&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;单向链表&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;修改指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;双向链表&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;插入&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;先确定被插节点==P==，设==S==为插入节点，则有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;s-&amp;gt;prior=p-&amp;gt;prior&lt;/li&gt;
&lt;li&gt;p-&amp;gt;prior-&amp;gt;next=s&lt;/li&gt;
&lt;li&gt;s-&amp;gt;next=p&lt;/li&gt;
&lt;li&gt;p-&amp;gt;prior=s&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;删除&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;先确定被删除节点==P==，则有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;p-&amp;gt;prior-&amp;gt;next=p-&amp;gt;next&lt;/li&gt;
&lt;li&gt;p-&amp;gt;next-&amp;gt;prior=p-&amp;gt;prior&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.1.3栈和队列&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;栈&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;==先进后出==，进行操作的一端成称为==栈顶==，另一端为==栈底==&lt;/p&gt;
&lt;p&gt;&lt;code&gt;基本操作&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;置空栈&lt;/p&gt;
&lt;p&gt;判栈空&lt;/p&gt;
&lt;p&gt;入栈：push：更新==栈顶指针==&lt;/p&gt;
&lt;p&gt;出栈：pop：更新==栈顶指针==&lt;/p&gt;
&lt;p&gt;读栈顶元素：top&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;存储结构&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;顺序存储：栈空间有限，要判断栈满&lt;/p&gt;
&lt;p&gt;链式存储：链表头指针就是栈顶指针&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;队列&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;==先进先出==，只允许在一端插入称为==队尾==，另一端删除称为==队头==&lt;/p&gt;
&lt;p&gt;&lt;code&gt;基本操作&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;置队空&lt;/p&gt;
&lt;p&gt;判队空&lt;/p&gt;
&lt;p&gt;入队：更新队尾指针&lt;/p&gt;
&lt;p&gt;出队：更新队头指针&lt;/p&gt;
&lt;p&gt;读队头元素&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;存储结构&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;顺序存储：设置队头队尾指针&lt;/p&gt;
&lt;p&gt;链式存储：设一个头结点，队列为空的判定条件，头指针和尾指针的值相同，且均指向头结点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.1.4串&lt;/h3&gt;
&lt;blockquote&gt;&lt;p&gt;仅由字符构成的有限序列，是取值范围受限的线性表。一般记为S=a1,a2,a3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;8.2树&lt;/h2&gt;
&lt;h3&gt;8.2.1二叉树&lt;/h3&gt;
&lt;p&gt;满二叉树&lt;/p&gt;
&lt;p&gt;完全二叉树&lt;/p&gt;
&lt;p&gt;&lt;code&gt;存储结构&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;顺序存储&lt;/li&gt;
&lt;li&gt;链式存储&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;遍历&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;前序:node-left-right&lt;/li&gt;
&lt;li&gt;中序:left-node-right&lt;/li&gt;
&lt;li&gt;后序:left-right-node&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;线索二叉树&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th style="text-align:center"&gt;ltag&lt;/th&gt;
&lt;th style="text-align:center"&gt;lchild&lt;/th&gt;
&lt;th style="text-align:center"&gt;data&lt;/th&gt;
&lt;th style="text-align:center"&gt;rchild&lt;/th&gt;
&lt;th style="text-align:center"&gt;rtag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;&lt;/td&gt;
&lt;td style="text-align:center"&gt;&lt;/td&gt;
&lt;td style="text-align:center"&gt;&lt;/td&gt;
&lt;td style="text-align:center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;最优二叉树(哈夫曼树)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;权值越大的结点离根结点越近&lt;/p&gt;
&lt;h3&gt;8.2.2树和森林&lt;/h3&gt;
&lt;h2&gt;8.3图&lt;/h2&gt;
&lt;p&gt;由两个集合V和E组成,V是图中==点==的集合,E是图中==边==的集合&lt;/p&gt;
&lt;p&gt;&lt;code&gt;有向图&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;每条边都有方向&lt;/p&gt;
&lt;p&gt;&lt;code&gt;无向图&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;度&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;入度和出度之和&lt;/p&gt;
&lt;p&gt;&lt;code&gt;连通图&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;==无向图==中,任意两点都有路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;强连通图&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;==有向图==中,任意两点都有路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;存储结构&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;邻接矩阵表示法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;遍历&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;深度优先遍历:访问第一个且未被访问的结点&lt;/li&gt;
&lt;li&gt;广度优先遍历:一次访问v的各个未曾访问过得领接点&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;生成树和最小生成树&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由经过的边和所有顶点组成的子图,则称子图为生成树&lt;/p&gt;
&lt;h2&gt;8.4查找&lt;/h2&gt;
&lt;h3&gt;8.4.1静态查找&lt;/h3&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;顺序查找&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;折半查找:要求数组中按照增大或减小排列,适合不经常变动但频繁查找的数组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;分块查找(索引顺序查找)&lt;/p&gt;
&lt;p&gt;| 最大关键字 |      |
| :--------: | :--: |
|  起始地址  |      |&lt;/p&gt;
&lt;p&gt;后面的子表都大于之前的子表&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.4.2动态查找&lt;/h3&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二叉排序树&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;若左子树不空，则==左子树上所有结点的值均小于==它的根结点的值；&lt;/li&gt;
&lt;li&gt;若右子树不空，则==右子树上所有结点的值均大于==它的根结点的值；&lt;/li&gt;
&lt;li&gt;左、右子树也分别为二叉排序树；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;查找过程类似==折半查找==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;B-树&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.4.3哈希表及其查找&lt;/h3&gt;
&lt;p&gt;定义：根据设定的哈希函数和处理冲突的方法，将一组关键字映射到一个有限的连续的地址集上，并以关键字在地址集中的像作为记录在表中的存储位置，这种表称为==哈希表==，这一映射过程称为==哈希造表或散列==，所得的存储位置称为==哈希地址或散列地址==&lt;/p&gt;
&lt;h2&gt;8.5排序&lt;/h2&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;内部排序：待排序记录在内存中&lt;/li&gt;
&lt;li&gt;外部排序：数量很大，排序过程需要外存&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.5.1简单排序&lt;/h3&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;直接插入排序：以第一个元素为一个排好序的队列，用后面的元素从队列后往前比较&lt;/li&gt;
&lt;li&gt;冒泡排序&lt;/li&gt;
&lt;li&gt;简单选择排序：n-i次比较后选出最小的和第i个交换，一般放在最前面&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.5.2希尔排序&lt;/h3&gt;
&lt;p&gt;将待排序记录切成若干个子序列，分别进行直接插入排序，然后对全体记录在进行直接插入排序&lt;/p&gt;
&lt;h3&gt;8.5.3快速排序&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/软考软件设计师笔记/快速排序.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;8.5.4堆排序&lt;/h3&gt;
&lt;p&gt;堆顶为最小元素，称为小顶堆；反之称为大顶堆&lt;/p&gt;
&lt;h3&gt;8.5.5归并排序&lt;/h3&gt;
&lt;p&gt;反复将两个有序文件归并成一个有序文件&lt;/p&gt;
&lt;h3&gt;8.5.6内部排序的选择&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;因素&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;待排序记录数&lt;/li&gt;
&lt;li&gt;记录本身大小&lt;/li&gt;
&lt;li&gt;关键字分布情况&lt;/li&gt;
&lt;li&gt;稳定性要求&lt;/li&gt;
&lt;li&gt;语言工具的条件，辅助空间的大小&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;结论&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;数目较小时，可采用==直接插入==和==简单选择==&lt;/li&gt;
&lt;li&gt;按关键字基本有序，采用==直接插入==或==冒泡排序==&lt;/li&gt;
&lt;li&gt;n很大关键字位数少，采用==链式基数排序==&lt;/li&gt;
&lt;li&gt;n较大，采用快速排序，堆排序或归并排序&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;8.5.7外部排序&lt;/h3&gt;
&lt;p&gt;常用==归并排序==&lt;/p&gt;
&lt;h2&gt;8.6题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;哈夫曼树与满，平衡二叉树没有必要联系&lt;/li&gt;
&lt;li&gt;哈希表长度为n，散列函数H(Key)=Key mod p,p的值一般为==不大于n且最接近n的质数==，尽量使关键字部分都能起作用，可以增加删除元素&lt;/li&gt;
&lt;li&gt;队列入队和出队顺序一样，栈虽然先进后出但==不一定序列全部一次性压入栈==，所以栈的入栈和出栈不一定逆序&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;九.算法设计与分析&lt;/h1&gt;
&lt;p&gt;常用算法&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;迭代法&lt;/li&gt;
&lt;li&gt;穷举搜索法&lt;/li&gt;
&lt;li&gt;递推法&lt;/li&gt;
&lt;li&gt;贪心法&lt;/li&gt;
&lt;li&gt;回溯法&lt;/li&gt;
&lt;li&gt;分治法：例如Hanoi塔问题&lt;/li&gt;
&lt;li&gt;动态规划法：适用当问题的最优解存在于这个问题的子问题的最优解当中&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;9.1题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;当序列基本有序时，直接插入排序的比较次数较小，但是逆序时次数最多&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;十.面向对象技术&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;基本概念&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;对象&lt;/li&gt;
&lt;li&gt;消息：对象之间进行通信&lt;/li&gt;
&lt;li&gt;类implement&lt;/li&gt;
&lt;li&gt;继承&lt;/li&gt;
&lt;li&gt;多态&lt;/li&gt;
&lt;li&gt;动态绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;10.1题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;UML顺序图&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;同步消息：消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。&lt;/li&gt;
&lt;li&gt;异步消息：消息发送者通过消息把信号传递给消息的接收者，==然后继续自己的活动==，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。&lt;/li&gt;
&lt;li&gt;返回消息：虚线返回&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子类中以更具体的方式实现从父类继承来的方法称为==覆盖==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计模式&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;结构性模式&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;适配器：将一个类的接口转换为客户希望的另一个接口&lt;/li&gt;
&lt;li&gt;装饰器：创建一个新类来为某一个类动态添加新功能或增强原有功能&lt;/li&gt;
&lt;li&gt;组合：将对象组合成树形结构以表示部分整体的层次结构，表示对象的==部分-整体层次结构==&lt;/li&gt;
&lt;li&gt;代理&lt;/li&gt;
&lt;li&gt;享元&lt;/li&gt;
&lt;li&gt;外观&lt;/li&gt;
&lt;li&gt;装饰器&lt;/li&gt;
&lt;li&gt;桥接&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;行为型模式&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;命令&lt;/li&gt;
&lt;li&gt;状态：==允许一个对象在其内部状态改变时改变它的行为==&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;创建型模式&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;生成器&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;策略：将每一个算法封装起来，可互相替换，让算法独立于使用它的客户而独立变化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;抽象工厂：==最为抽象和最具一般性==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;观察者：定义了==一对多==的依赖关系，在状态发生变化，会自动更新，让多个观察者同时监听一个主体对象，例如用户订阅公众号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通知：一个对象对多个对象的同步操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多态&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通用多态&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;参数：利用泛型编程，发散式的，==静态绑定==，==让相同的代码应用于不同的场合==，看中算法的普适性&lt;/li&gt;
&lt;li&gt;包含：利用OOP，收敛式的，==动态绑定==的，==让不同代码用于相同场合==，着重接口实现的分离度&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;特殊多态&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;强制：变量转换为不同类型的变量，隐式转换&lt;/li&gt;
&lt;li&gt;过载：指一个名在不同的上下文有不同的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子类可以继承它的父类属性和操作而不必自己定义&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UML部署图&lt;/p&gt;
&lt;p&gt;展现运行处理节点以及其中构建的配置，给出了体系结构的静态实施图，适合软件和硬件之间的关系&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;部署组件之间的依赖不是双向&lt;/li&gt;
&lt;li&gt;组件之间的依赖关系类似于包图&lt;/li&gt;
&lt;li&gt;用于描述代码的物理模块和系统在不同计算机系统的物理分布&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态图不表示多个对象交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对象&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;清晰的边界&lt;/li&gt;
&lt;li&gt;良好定义的行为&lt;/li&gt;
&lt;li&gt;可扩展性&lt;/li&gt;
&lt;li&gt;不确定位置和数量&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接口用于java和c#中，不支持c++，声明对象类所需要的服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;单例模式确保某个类只有一个实例，向整个系统提供该实例，大家共享同一个实例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;绑定&lt;/p&gt;
&lt;p&gt;指一个方法的调用与方法所在的类关联起来&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;静态：==程序执行前已经被绑定==&lt;/li&gt;
&lt;li&gt;动态：运行时根据具体的对象类型进行绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;组合设计模式类图&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;client：通过component接口操纵组合部件的对象&lt;/li&gt;
&lt;li&gt;composite：定义有子部件的那些部件的行为&lt;/li&gt;
&lt;li&gt;leaf：表示叶节点对象，==在组合中定义图元对象的行为==&lt;/li&gt;
&lt;li&gt;component：对象声明接口&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;十一.标准化和软件知识产权基础知识&lt;/h1&gt;
&lt;h2&gt;11.1题目总结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;引用资料&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以不用获得许可，不用支付报酬&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;目的为了介绍评论某一作品或说明某一问题&lt;/li&gt;
&lt;li&gt;比例必须适当&lt;/li&gt;
&lt;li&gt;必须是==已发表的==&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;著作权法&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;文字作品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;口述作品，演讲授课辩论祝词&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;摄影美术建筑电影作品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设计图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;计算机软件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;法律行政法规定的其他作品&lt;/p&gt;
&lt;p&gt;&lt;code&gt;不适用于&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;法律法规&lt;/li&gt;
&lt;li&gt;时事新闻&lt;/li&gt;
&lt;li&gt;力法通用表格&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;公司规定写的一些东西著作权归公司所有&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;甲侵权，乙用了甲的东西==且知道是盗版==，乙行为侵权，支付合理费用后可以继续使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软件著作权的客体&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;源程序&lt;/li&gt;
&lt;li&gt;目标程序&lt;/li&gt;
&lt;li&gt;软件文档&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;专利权如果在其他地方没有申请，只是在本国申请，那么其他公司销售这个专利权的产品==不用支付费用==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;==合理使用==可以不经过著作权人许可，不需要支付报酬使用产品&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;十二.计算机专业英语&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;throwaway&lt;/th&gt;
&lt;th&gt;deliver&lt;/th&gt;
&lt;th style="text-align:center"&gt;discard&lt;/th&gt;
&lt;th&gt;lump&lt;/th&gt;
&lt;th&gt;briefing&lt;/th&gt;
&lt;th&gt;interact&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;一次性&lt;/td&gt;
&lt;td&gt;交付&lt;/td&gt;
&lt;td style="text-align:center"&gt;丢弃&lt;/td&gt;
&lt;td&gt;块&lt;/td&gt;
&lt;td&gt;简报&lt;/td&gt;
&lt;td&gt;交互&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;capacity&lt;/th&gt;
&lt;th&gt;large-scale&lt;/th&gt;
&lt;th&gt;infrastructure&lt;/th&gt;
&lt;th&gt;architecture&lt;/th&gt;
&lt;th&gt;emerge&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;容量&lt;/td&gt;
&lt;td&gt;大规模&lt;/td&gt;
&lt;td&gt;基础设施&lt;/td&gt;
&lt;td&gt;架构&lt;/td&gt;
&lt;td&gt;出现&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content><link href="/archives/软考软件设计师笔记/" rel="alternate"/><published>2020-04-05T23:01:04+08:06</published></entry><entry><id>/archives/Hadoop伪分布式配置/</id><title>Hadoop伪分布式配置</title><updated>2020-05-28T08:10:31.803169+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;h1&gt;1.准备&lt;/h1&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;java&lt;/li&gt;
&lt;li&gt;Hadoop,&lt;a href="http://mirror.bit.edu.cn/apache/hadoop/common/"&gt;镜像下载地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;deepin linux操作系统(或其他Ubuntu)&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h1&gt;2.配置&lt;/h1&gt;
&lt;h2&gt;2.1安装SSH、配置SSH无密码登陆&lt;/h2&gt;
&lt;p&gt;Ubuntu 默认已安装了 SSH client，此外还需要安装 SSH server：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install openssh-server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装后，可以使用如下命令登陆本机：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh localhost
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后用输入yes登录&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="../images/Hadoop/ssh登录.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;生成无密码登录：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;                       &lt;span class="c1"&gt;# 退出刚才的 ssh localhost&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.ssh/      &lt;span class="c1"&gt;# 若没有该目录，请先执行一次ssh localhost&lt;/span&gt;
ssh-keygen -t rsa             &lt;span class="c1"&gt;# 会有提示，都按回车就可以&lt;/span&gt;
cat ./id_rsa.pub &amp;gt;&amp;gt; ./authorized_keys  &lt;span class="c1"&gt;# 加入授权&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.2配置java环境&lt;/h2&gt;
&lt;p&gt;先执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;java -version
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果版本是openjdk，则删除并下载jdk&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get remove openjdk*
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除并下载好jdk后配置java环境变量&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vi /etc/bash.bashrc &lt;span class="c1"&gt;#配置永久环境变量&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后插入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/jdk1.x.y
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JRE_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/jre
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;CLASSPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;.:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/lib:&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;JRE_HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/lib
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再使其生效&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; /etc/bash.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.3配置Hadoop&lt;/h2&gt;
&lt;p&gt;安装hadoop到/usr下&lt;/p&gt;
&lt;p&gt;检验是否安装成功，进入hadoop-2.x.y/bin/hadoop下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/hadoop-2.x.y/bin/hadoop
hadoop version
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;显示版本等信息即成功&lt;/p&gt;
&lt;p&gt;更改环境变量，同上java配置，插入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;HADOOP_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/hadoop
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;HADOOP_COMMON_LIB_NATIVE_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HADOOP_HOME&lt;/span&gt;/lib/native
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置伪分布式需要更改配置文件，首先进入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/hadoop-2.x.y/etc/hadoop
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改==core-site.xml==&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hadoop.tmp.dir&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:/usr/local/hadoop-2.x.y/tmp&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Abase for other temporary directories.&lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;fs.defaultFS&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;hdfs://localhost:9000&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改==hdfs-site.xml==&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.replication&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;        &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;property&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.datanode.data.dir&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;span class="nt"&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置完成后，执行 NameNode 的格式化:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/hadoop

./bin/hdfs namenode -format
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果出现&lt;strong&gt;Error: JAVA_HOME is not set and could not be found&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;java没配好，或者更改==hadoop-env.sh==&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
更改为
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/java/jdk1.8 &lt;span class="c1"&gt;#java路径&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着开启 NameNode 和 DataNode 守护进程：&lt;/p&gt;
&lt;p&gt;进入sbin文件夹下打开终端，输入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;start-all.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;3.检验&lt;/h1&gt;
&lt;p&gt;输入==jps==查看进程状态，如下则说明成功&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="../images/Hadoop/jps查看.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后进入网址&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://localhost:50070"&gt;http://localhost:50070&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/Hadoop/50070.png" style="zoom:200%;" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://localhost:18088"&gt;http://localhost:18088&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/Hadoop/18088.png" style="zoom:200%;" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;运算实例：执行jar包计算圆周率&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;hadoop jar /usr/local/hadoop-2.7.7/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.7.jar pi  &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="m"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一个10是运行10次map任务，第二个10是每个map任务投掷次数，可以改变，可得到不同的近似pi值&lt;/p&gt;
&lt;p&gt;&lt;img src="../images/Hadoop/pi结果.png" style="zoom:200%;" /&gt;&lt;/p&gt;
&lt;h1&gt;4.参考&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://dblab.xmu.edu.cn/blog/install-hadoop/"&gt;厦门大学大数据实验室Hadoop配置&lt;/a&gt;&lt;/p&gt;
</content><link href="/archives/Hadoop伪分布式配置/" rel="alternate"/><published>2020-05-02T18:59:32+08:06</published></entry><entry><id>/archives/import-excel-to-mysql/</id><title>import excel to mysql</title><updated>2020-05-28T08:10:31.803099+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;Github:&lt;a href="https://github.com/LifeAlsoIsGG/MyPractice-Neusoft/tree/master/import-Excel"&gt;import excel to mysql&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1.准备&lt;/h2&gt;
&lt;h3&gt;1.1添加所需要的的依赖&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- excel需要的包--&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi --&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--文件上传组件--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;commons-fileupload&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;commons-fileupload&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.1&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;commons-io&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;commons-io&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.5&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--读取excel文件--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.poi&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;poi&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.17&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.poi&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;poi-ooxml&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.17&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1.2根据excel的字段添加对应字段的表&lt;/h3&gt;
&lt;p&gt;excel表&lt;/p&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/excel字段.jpg"/&gt;&lt;/div&gt;
mysql表

&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/mysql字段表.jpg"/&gt;&lt;/div&gt;&lt;h3&gt;1.3在IDEA使用easycode插件对此表使用生成MVC&lt;/h3&gt;
&lt;p&gt;目录图如下&lt;/p&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/目录.jpg"/&gt;&lt;/div&gt;&lt;h2&gt;2.核心代码&lt;/h2&gt;
&lt;h3&gt;2.1创建能处理excel转换为&lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt;的方法&lt;/h3&gt;
&lt;p&gt;创建&lt;code&gt;ExcelForList&lt;/code&gt;类并创建&lt;code&gt;ExcelForList&lt;/code&gt;方法用于处理excel表各个记录并返回&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;com.example.demo.excelUtils&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.demo.entity.Course&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.demo.dao.CourseDao&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;com.example.demo.service.CourseService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.poi.hssf.usermodel.HSSFWorkbook&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.poi.ss.usermodel.Cell&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.poi.ss.usermodel.Row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.poi.ss.usermodel.Sheet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.poi.ss.usermodel.Workbook&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.poi.xssf.usermodel.XSSFWorkbook&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.springframework.web.multipart.MultipartFile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;javax.annotation.Resource&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.beans.PropertyDescriptor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.InputStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.lang.reflect.Field&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.lang.reflect.Method&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.ArrayList&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.List&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ExcelForList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;ExcelForList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MultipartFile&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&amp;gt;&lt;/span&gt;  &lt;span class="n"&gt;beanclazz&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Boolean&lt;/span&gt; &lt;span class="n"&gt;titleExist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;excelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;Workbook&lt;/span&gt; &lt;span class="n"&gt;wb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// IO流读取文件&lt;/span&gt;
            &lt;span class="n"&gt;InputStream&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="c1"&gt;// 创建文档&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;excelType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xls&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;wb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;HSSFWorkbook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;excelType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
                &lt;span class="n"&gt;wb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;XSSFWorkbook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;错误！---------------------文件不含xls或xlsx！-----------------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// 得到第一张工作表&lt;/span&gt;
            &lt;span class="n"&gt;Sheet&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSheetAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;titleExist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// 行的遍历&lt;/span&gt;
            &lt;span class="c1"&gt;//excels是从0开是的，getLastRowNum是获取最后一行的行数&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getLastRowNum&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// 得到行&lt;/span&gt;
                &lt;span class="n"&gt;Row&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="c1"&gt;// 单元格的遍历&lt;/span&gt;
                &lt;span class="c1"&gt;// 实例化对象&lt;/span&gt;
                &lt;span class="n"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;beanclazz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;newInstance&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                &lt;span class="n"&gt;Field&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;beanclazz&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getDeclaredFields&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Field&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;fieldName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="n"&gt;PropertyDescriptor&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PropertyDescriptor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fieldName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;beanclazz&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="n"&gt;Method&lt;/span&gt; &lt;span class="n"&gt;getMethod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getWriteMethod&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                    &lt;span class="n"&gt;Cell&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getCell&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getCellType&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CELL_TYPE_BOOLEAN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="c1"&gt;// 返回布尔类型的值&lt;/span&gt;
                            &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getBooleanCellValue&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                            &lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                            &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CELL_TYPE_NUMERIC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="c1"&gt;// 返回数值类型的值&lt;/span&gt;
                            &lt;span class="n"&gt;Double&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getNumericCellValue&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;intValue&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                            &lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;CELL_TYPE_STRING&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                            &lt;span class="c1"&gt;// 返回字符串类型的值&lt;/span&gt;
                            &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getStringCellValue&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                            &lt;span class="n"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;

                    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;printStackTrace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2.1创建接口&lt;/h3&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;获取到文件&lt;/li&gt;
&lt;li&gt;调用上述方法获取到List&lt;Object&gt;&lt;/li&gt;
&lt;li&gt;循环List&lt;Object&gt;转换为一个个course对象再插入到数据库中&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//    导入excel到数据库&lt;/span&gt;
&lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/import&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestMethod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;produces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;application/json;charset=UTF-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt;  &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;imporCourse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@RequestParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;excelFile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;MultipartFile&lt;/span&gt; &lt;span class="n"&gt;excelFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpSession&lt;/span&gt; &lt;span class="n"&gt;httpSession&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;InputStream&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;excelFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInputStream&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;fileOriginalName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;excelFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getOriginalFilename&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;excelFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;excelType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fileOriginalName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileOriginalName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//记录插入多条记录到了数据库；&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;importSuccessNum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;importAllNum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;importSuccess&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;in:::&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fileOriginalName:::&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fileOriginalName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fileName:::&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;excelType:::&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;excelType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;forlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ExcelForList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ExcelForList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;excelFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Course&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;excelType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;forlist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//            在这里对每个Object转换为course对象&lt;/span&gt;
            &lt;span class="n"&gt;Course&lt;/span&gt; &lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Course&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;importAllNum&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;importSuccess&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;courseService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;importExcel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;course&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;importSuccess&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;importSuccessNum&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;httpSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;importAllNum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;importAllNum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;httpSession&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;importSuccessNum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;importSuccessNum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;importSuccessNum&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;success!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;应处理&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;importAllNum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;条,已成功处理&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;importSuccessNum&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;条！&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;error!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;3.Console&lt;/h2&gt;
&lt;h3&gt;3.1POSTMAN&lt;/h3&gt;
&lt;p&gt;调用接口&lt;a href="http://localhost:8886/course/import"&gt;http://localhost:8886/course/import&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;method="POST"&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;HEADERS中添加KEY:&lt;code&gt;Content-Type&lt;/code&gt;,VALUE:&lt;code&gt;multipart/form-data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;BODY中选择类型为&lt;code&gt;form-data&lt;/code&gt;并上传文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/postman.jpg"/&gt;&lt;/div&gt;&lt;h3&gt;3.2MYSQL&lt;/h3&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/mysql插入后.jpg"/&gt;&lt;/div&gt;&lt;h3&gt;3.3IDEA&lt;/h3&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/IDEA-1.jpg"/&gt;&lt;/div&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyPractice-Neusoft/import-Excel/images/IDEA-2.jpg"/&gt;&lt;/div&gt;</content><link href="/archives/import-excel-to-mysql/" rel="alternate"/><published>2020-05-28T12:35:00+08:06</published></entry></feed>