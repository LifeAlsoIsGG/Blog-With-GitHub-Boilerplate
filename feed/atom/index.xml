<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><id>/</id><title>LifeAlsoIsGG-Wiki</title><updated>2020-08-09T14:11:22.866530+08:06</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email></author><link href="/" rel="alternate"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><logo>https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/avatar.png</logo><subtitle>Do not go gentle in that good night</subtitle><entry><id>/archives/ActivitySystem/</id><title>Javaweb大学活动管理系统</title><updated>2020-08-09T14:11:22.866985+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;ActivitySystem&lt;/p&gt;
</content><link href="/archives/ActivitySystem/" rel="alternate"/><published>2020-07-12T01:34:30+08:06</published></entry><entry><id>/archives/字节跳动面试/</id><title>字节跳动面试</title><updated>2020-08-09T14:11:22.866958+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;h2&gt;1.Java GC(垃圾回收)&lt;/h2&gt;
&lt;p&gt;主要任务&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;分配内存&lt;/li&gt;
&lt;li&gt;确保被引用对象的内存不被错误地回收&lt;/li&gt;
&lt;li&gt;回收不再被引用的对象的内存空间&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;1.1Minor Gc 和 Full GC 有什么不同呢？&lt;/h3&gt;
&lt;p&gt;目前主流的垃圾收集器都会采用分代回收算法，因此需要将堆内存分为&lt;strong&gt;新生代和老年代&lt;/strong&gt;，这样我们就可以根据各个年代的特点选择合适的垃圾收集算法。&lt;/p&gt;
&lt;p&gt;新生代 GC（Minor GC）: 指发生新生代的的垃圾收集动作，Minor GC 非常频繁，回收速度一般也比较快。&lt;/p&gt;
&lt;p&gt;老年代 GC（Major GC/Full GC）: 指发生在老年代的 GC，出现了 Major GC 经常会伴随至少一次的 Minor GC（并非绝对），Major GC 的速度一般会比 Minor GC 的慢 10 倍以上。&lt;/p&gt;
</content><link href="/archives/字节跳动面试/" rel="alternate"/><published>2020-07-17T00:03:24+08:06</published></entry><entry><id>/archives/MyProject-AttendanceMiniprogram/</id><title>实验室出入管理小程序</title><updated>2020-08-09T14:11:22.866913+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/logo.png"/&gt;&lt;/div&gt;&lt;p&gt;原文链接&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href="https://wiki.lifeisgg.online/archives/MyProject-AttendanceMiniprogram/"&gt;https://wiki.lifeisgg.online/archives/MyProject-AttendanceMiniprogram/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Github&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href="https://github.com/LifeAlsoIsGG/MyProject-AttendanceMiniprogram-2.0"&gt;https://github.com/LifeAlsoIsGG/MyProject-AttendanceMiniprogram-2.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;一.小程序二维码&lt;/h1&gt;
&lt;div align=center&gt;&lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/实验室出入管理小程序二维码.jpg"/&gt;&lt;/div&gt;&lt;p&gt;此小程序获得了&lt;a href="https://developers.weixin.qq.com/community/competition"&gt;2020中国微信官方小程序大赛&lt;/a&gt;华南赛区二等奖🎉&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;一等奖：5%&lt;/li&gt;
&lt;li&gt;二等奖：10%&lt;/li&gt;
&lt;li&gt;三等奖：15%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电子证书还没开放，后续再补充😅&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/华南赛区.png"/&gt;&lt;/div&gt;&lt;h1&gt;二.在开发之前&lt;/h1&gt;
&lt;p&gt;​   这个项目原本是结合物联网硬件指纹和人脸识别的一款实验室出入管理的项目，主要也是为诸如&lt;strong&gt;中国大学生计算机设计大赛，挑战杯，互联网+&lt;/strong&gt;等比赛准备的。我在三人团队中担任的职责是&lt;strong&gt;小程序前后端开发&lt;/strong&gt;，之后恰巧看到这个微信小程序比赛的时候就想着拿来参赛了，当然线下的硬件只能用模拟的方式去进行。&lt;/p&gt;
&lt;h1&gt;三.关于小程序&amp;amp;需求分析&lt;/h1&gt;
&lt;p&gt;​   实验室作为安全性较高的重要封闭场所，对于其它诸如公共封闭场所教室，办公室等场所，实验室的安全性，人员限制性，人员出入管理更为重要。某些实验室还是用着&lt;strong&gt;古老的人员登记表和进入前提前报备管理员&lt;/strong&gt;，所以为了使实验室的管理，透明化，智能化，方便化，我们将管理系统放在移动端小程序上，无论是发布公告，管理人员，控制实验室开关，查看实验室人员情况等都能快速掌握。&lt;/p&gt;
&lt;p&gt;​   对于普通用户来说，查看实验室开放状态，申请进入实验室，查看在某间实验室的时长和实验室公告，查看自己的日志，以及时长排行榜等。&lt;/p&gt;
&lt;p&gt;​   在安全性方面，实验室出入采用指纹和人脸识别，生物识别中的人脸识别及指纹识别，利用其唯一性，可采集性和稳定性。唯一性指的是特征是独一无二的，每个人所有属于自己的唯一属性；可采集性指的是易于被采集；稳定性指的是不会轻易地被外在或内在因素改变。其特征更具有安全性、可靠性和有效性。&lt;/p&gt;
&lt;p&gt;​   在国内已有类似的通过指纹及人脸等技术，对开发性活动室或实验室实现智能化的管理，类似的研究已趋近成熟，但是做成H5端和APP不够方便，且大材小用，相对小程序这种轻量级的还是不足。&lt;/p&gt;
&lt;h1&gt;三.技术方案&lt;/h1&gt;
&lt;h2&gt;3.1前端(小程序端)&lt;/h2&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;使用了第三方组件库ColorUi,uView组件作为前端设计的组件库&lt;/li&gt;
&lt;li&gt;IDE：微信开发者工具，HbuilderX&lt;/li&gt;
&lt;li&gt;框架：&lt;a href="https://uniapp.dcloud.io/"&gt;uniapp&lt;/a&gt;(一款能发布到多端的Vue框架)，并没有用开发者工具去写，因为开发者工具的语法微信自定义太多了，按照&lt;a href="https://ask.dcloud.net.cn/article/35947"&gt;uniapp官方原话&lt;/a&gt;来说，就是不伦不类的语法，两个我都有试过，自己的确更喜欢接近Vue原生的语法。在HbuilderX写好后能自动编译在开发者工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;3.2后端&lt;/h2&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;服务器：阿里云，腾讯云&lt;/li&gt;
&lt;li&gt;框架：SpringBoot，SpringCloud简单部署，Mybatis&lt;/li&gt;
&lt;li&gt;云函数：腾讯云云开发(获取openid，发送腾讯云短信，发送订阅消息等)&lt;/li&gt;
&lt;li&gt;数据库：Mysql5.7&lt;/li&gt;
&lt;li&gt;环境：java1.8&lt;/li&gt;
&lt;li&gt;IDE：IDEA&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;​   后端采用的SSM框架和spring的微服务使业务模块化。而使用云函数是为了方便地获取用户openid以及发送订阅消息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;获取openid&lt;/code&gt;&lt;/p&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/获取openid.jpg"/&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;订阅消息&lt;/code&gt;&lt;/p&gt;
&lt;div align=center&gt;&lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/订阅消息.jpg"/&gt;&lt;/div&gt;&lt;h2&gt;3.3硬件&lt;/h2&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;树莓派，Arduino平台，指纹器，摄像头&lt;/li&gt;
&lt;li&gt;腾讯云物联网开发平台&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;4.页面功能展示说明&lt;/h1&gt;
&lt;p&gt;​   共有5个页面，与底部dock栏一一对应&lt;/p&gt;
&lt;div align=center&gt;&lt;img src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/dock栏.jpg"/&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;首页&lt;/li&gt;
&lt;li&gt;日志&lt;/li&gt;
&lt;li&gt;仪表盘&lt;/li&gt;
&lt;li&gt;排行榜&lt;/li&gt;
&lt;li&gt;我的&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2&gt;4.1首页Home&lt;/h2&gt;
&lt;p&gt;当进入页面时会判断你当前在哪个实验室，如果不在则可以&lt;strong&gt;模拟选择教室进入&lt;/strong&gt;，模拟进入后会发送打卡通知&lt;/p&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home7.jpg"/&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/订阅消息.jpg"/&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;如果你在进入实验室后点击打开通知，则展示目前所在实验室的状态，可以查看如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;顶部可以查看在线时长&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;这间教室的出入日志，公告，文件，概览等&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实验室成员(已进入人员，已离开成员，管理员)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;还有提醒在实验室时长超过六小时&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home1.jpg"/&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home2.jpg"/&gt;   &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;   &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home3.jpg"/&gt; &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home4.jpg"/&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;     &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home5.jpg"/&gt;  &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home6.jpg"/&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;之后点击右下角的按钮则可以&lt;strong&gt;模拟退出实验室&lt;/strong&gt;，成功后也会发送打卡通知&lt;/p&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/home6.jpg"/&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/订阅消息.jpg"/&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;h2&gt;4.2日志Log&lt;/h2&gt;
&lt;p&gt;在这里可以查看自己进出实验室的日志记录，日志记录采用逆序显示，还可以根据时间选择区段查看&lt;/p&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/log1.jpg"/&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/log2.jpg"/&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;点击Tab栏中&lt;strong&gt;我的实验室&lt;/strong&gt;可以查看我去过的实验室，点击实验室卡片可以看到&lt;strong&gt;我在这间实验室的日志&lt;/strong&gt;&lt;/p&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/log3.jpg"/&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/log4.jpg"/&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;h2&gt;4.3控制台Dashboard&lt;/h2&gt;
&lt;p&gt;控制台涉及比较多的CURD事务，也是小程序的核心功能，为了将复杂笨重的管理系统移植到小程序上，做了许多页面简化处理和友好的用户交互体验(但貌似还是过于笨重🏃)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th style="text-align:center"&gt;权限/身份&lt;/th&gt;
&lt;th style="text-align:center"&gt;超管&lt;/th&gt;
&lt;th style="text-align:center"&gt;普通用户&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;查看实验室详细&lt;/td&gt;
&lt;td style="text-align:center"&gt;所有实验室&lt;/td&gt;
&lt;td style="text-align:center"&gt;自己管理的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;关闭/开放实验室&lt;/td&gt;
&lt;td style="text-align:center"&gt;所有实验室&lt;/td&gt;
&lt;td style="text-align:center"&gt;自己管理的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;添加实验室&lt;/td&gt;
&lt;td style="text-align:center"&gt;✔️&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;添加/删除实验室管理员&lt;/td&gt;
&lt;td style="text-align:center"&gt;✔️&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;添加/删除实验室公告&lt;/td&gt;
&lt;td style="text-align:center"&gt;所有实验室&lt;/td&gt;
&lt;td style="text-align:center"&gt;自己管理的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;查看用户/用户详细&lt;/td&gt;
&lt;td style="text-align:center"&gt;✔️&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align:center"&gt;查看所有用户日志&lt;/td&gt;
&lt;td style="text-align:center"&gt;✔️&lt;/td&gt;
&lt;td style="text-align:center"&gt;❌&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;超级管理员：可以查看所有实验室，用户，日志，增加关闭教室，赋予用户为某个实验室的管理员，撤销某个实验室的管理员等等&lt;/li&gt;
&lt;li&gt;管理员：能查看自己管理的实验室日志用户等，能发布公告在自己管理的实验室，总之基于自己管理的实验室。&lt;/li&gt;
&lt;li&gt;普通用户：其实就理解为没有管理实验室的用户，可以查看自己的日志，自己所在教室的动态以及活跃时长排行榜&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;控制台查看实验室，&lt;strong&gt;点击卡片可以查看实验室详情&lt;/strong&gt;，超管可以查看所有实验室详情，普通用户只能查看自己管理的&lt;/li&gt;
&lt;/ul&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/admin1.jpg"/&gt;    &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/room1.jpg"/&gt;  &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/room2.jpg"/&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;在&lt;strong&gt;概览&lt;/strong&gt;页面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超管：&lt;strong&gt;查看监控(TODO)&lt;/strong&gt;，&lt;strong&gt;关闭开放实验室(如果实验室有人会提醒)&lt;/strong&gt;，&lt;strong&gt;添加删除此房间管理员&lt;/strong&gt;，超管默认为管理员，没分配时不会显示，分配后会头像会显示&lt;strong&gt;超管&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;管理员：&lt;strong&gt;查看监控(TODO)&lt;/strong&gt;，&lt;strong&gt;关闭开放实验室(如果实验室有人会提醒)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/room3.jpg"/&gt;    &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/room4.jpg"/&gt;  &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/room5.jpg"/&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;h2&gt;4.4排行榜Rank&lt;/h2&gt;
&lt;p&gt;排行榜类似&lt;code&gt;微信运动&lt;/code&gt;，可以查看目前谁的活跃时长最高，可以查看&lt;strong&gt;当前周和当前月的活跃度排行榜&lt;/strong&gt;💯&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;TODO：图表显示，历史周和历史月排名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/rank1.jpg"/&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/rank2.jpg"/&gt;    &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;h2&gt;4.5我的Profile&lt;/h2&gt;
&lt;p&gt;我的界面，需要在这里实名手机绑定，在学校用基本调用接口输入学号密码，但这里为了方便只能模拟用手机绑定。在这里也可以主动申请服务消息的打卡通知，滑动接收消息的Switch即可。&lt;/p&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/profile1.jpg"/&gt;    &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/profile2.jpg"/&gt;  &lt;img width="30%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/profile3.jpg"/&gt;  &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;点击最下方的&lt;strong&gt;介绍&amp;amp;使用手册&lt;/strong&gt;可以帮助您更快地了解并使用小程序。&lt;/p&gt;
&lt;div align=center&gt;  &lt;table&gt;&lt;tr&gt;    &lt;img width="50%" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/MyProject-AttendanceMiniprogram-2.0/images/readme/refe.jpg"/&gt;   &lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;h1&gt;五.后记&lt;/h1&gt;
&lt;p&gt;​   由于小程序比较复杂，这也造成了评委体验时对我的小程序有点懵的状况，在大家在群里都开始评审的时候我的小程序老师只是来踩了踩点便没了动静，得亏我反馈并说明后才有老师使用，后来在群里也看到有几个人说小程序没有被评审。主办方那边也算挺负责，及时组织评委去使用只是踩了踩点的小程序。除了评委老师可能疏漏的原因(作品数还是比较多的)，我也吸取了教训，就是一开始的用户体验和引导非常重要，能做到手把手教那种更好，避免一上来就要登录或者填写一大推表单的情况（真的会让人瞬间感到烦躁）。还有就是要符合小程序轻量，方便的特点，有些地方做做减法反而效果更好(我也参考了那些入围全国比赛的小程序)。但这些属于前端的灵魂的东西，包括独特的UI设计那些，对于作为后端狗的我来说貌似不太感冒。我在想，或许那些优雅的用户体验前端设计的背后一定是一个温柔细致体贴的人吧😇。&lt;/p&gt;
&lt;p&gt;​   最后还是想说，这个比赛有一定的水分，自己也看了看获奖的小程序，有些真的是过于简单，比如调用第三方接口识图，还有那些综合科普信息展示答题类，更多的是纯静态信息显示，并没有多少难度，比赛结果后也没有分数。再者，有些小程序背靠团队企业资源，名校倾向啥的我也不谈。在答辩过程中准备的PPT那些商业计划啥的准备的很完整，而比赛规定中有一条是没有参加过其他省级以上比赛的项目，而这些却很难去求证了。再者还有条规定，核心功能在19年9月份前开发的小程序算违规，这些也很难去求证了。但是比赛过程中，比赛方的态度都很好，也都有耐心回答我们的问题，群里面也有人展示小程序然后一起讨论，也算不错的比赛体验了。最后拿了个华南赛区二等奖也算是对我那几个星期熬夜的慰问了吧(也不知道对找工作有没有用😂)。&lt;/p&gt;
</content><link href="/archives/MyProject-AttendanceMiniprogram/" rel="alternate"/><published>2020-08-07T00:24:30+08:06</published></entry><entry><id>/archives/Java基础知识笔记/</id><title>Java基础知识笔记</title><updated>2020-08-09T14:11:22.866879+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;h1&gt;1 Java基本程序设计结构&lt;/h1&gt;
&lt;h2&gt;1.1 数据类型&lt;/h2&gt;
&lt;p&gt;Java的数据类型分为两大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;基本数据类型&lt;/strong&gt;：包括 整数 、 浮点数 、 字符 、 布尔 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;引用数据类型&lt;/strong&gt;：包括 类 、 数组 、 接口 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="834" data-height="389" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5631f53cddd2232b651868576cbb3719.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="834" data-height="708" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/fb5243355a529c1106f391121bab60ea.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.1.1 整型&lt;/h3&gt;
&lt;p&gt;整型用于表示没有小数部分的数值， 它允许是负数。Java 提供了 4 种整型，具体内容如下&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="900" data-height="200" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c931af502ae8d310ccda61ecb374bd86.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.1.2 浮点类型&lt;/h3&gt;
&lt;p&gt;浮点类型用于表示有小数部分的数值。在 Java 中有两种浮点类型&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="885" data-height="154" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/56d0c4e14378c156562c00fb3f975181.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;​       double 表示这种类型的数值精度是 float 类型的两倍（有人称之为双精度数值)。&lt;strong&gt;绝大部分应用程序都采用 double 类型&lt;/strong&gt;。在很多情况下，f&lt;strong&gt;loat 类型的精度很难满足需求&lt;/strong&gt;。实际上，只 有很少的情况适合使用 float 类型，例如，需要单精度数据的库， 或者需要存储大量数据。 float 类型的数值有一个后缀 F 或 f (例如，3.14F。) 没有后缀 F 的浮点数值（如 3.14 ) 默 认为 double 类型。当然，也可以在浮点数值后面添加后缀 D 或 d (例如，3.14D) 。&lt;/p&gt;
&lt;h3&gt;1.1.3 char类型&lt;/h3&gt;
&lt;p&gt;​       char 类型原本用于表示单个字符。不过，现在情况已经有所变化。 如今，有些 Unicode 字符可以用一个 chai•值描述，另外一些 Unicode 字符则需要两个 char 值。有关的详细信息请 阅读下一节。 char 类型的字面量值要用单引号括起来。例如：W 是编码值为 65 所对应的字符常量。 它与 "A" 不同，"A" 是包含一个字符 A 的字符串, char 类型的值可以表示为十六进制值，其 范围从 \u0000 到 \Uffff。例如：W2122 表示注册符号 ( ), \u03C0 表示希腊字母 it。 除了转义序列 \u 之外， 还有一些用于表示特殊字符的转义序列， 请参看表 3-3。所有这 些转义序列都可以出现在加引号的字符字面量或字符串中。例如，’ \02丨22' 或 "1 110\11”。转 义序列 \u还可以出现在加引号的字符常量或字符串之外（而其他所有转义序列不可以）。例 如： public static void main(String\u005B\ u00SD args) 就完全符合语法规则， \u005B 和 \u005D 是 [ 和 ] 的编码&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="875" data-height="188" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/481e1d73f5634bdca348eac43da73b16.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.1.3 boolean类型&lt;/h3&gt;
&lt;p&gt;boolean (布尔）类型有两个值：false 和 true, 用来判定逻辑条件 整型值和布尔值之间 不能进行相互转换。&lt;/p&gt;
&lt;h2&gt;1.2 运算符&lt;/h2&gt;
&lt;p&gt;​       在 Java 中，使用算术运算符 + 、-、 * 、/ 表示加、减、 乘、除运算。 &lt;strong&gt;当参与 / 运算的两个 操作数都是整数时， 表示整数除法；否则， 表示浮点除法&lt;/strong&gt;。 整数的求余操作（有时称为取模) 用 ％ 表示。例如，15/2 等于 ，7 15%2 等于 1 , 15.0/2 等于 7.50 需要注意， 整数被 0 除将会产生一个异常， 而浮点数被 0 除将会得到无穷大或 NaN 结果。&lt;/p&gt;
&lt;h3&gt;1.2.1 数学函数与常量&lt;/h3&gt;
&lt;p&gt;在 Math类中，包含了各种各样的数学函数。在编写不同类别的程序时，可能需要的函 数也不同。&lt;/p&gt;
&lt;h2&gt;1.3 数据类型转换&lt;/h2&gt;
&lt;p&gt;Java程序中要求参与的计算的数据，必须要保证数据类型的一致性，如果数据类型不一致将发生类型的转换。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动（隐式）类型转换：从小类型到大类型，不需要强制转换符&lt;/li&gt;
&lt;li&gt;强制类型转换：从大类型到小类型，需要强制转换符实现强制转换，强制转换符：（需要转换成的类型）变量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1.3.1 自动（隐式）转换&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;从小类型到大类型，不需要强制转换符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="843" data-height="213" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c7f9263429d6ab782eef037c4662ea28.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转换原理图解&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​   byte 类型内存占有1个字节，在和 int 类型运算时会提升为 int 类型 ，自动补充3个字节，因此计算后的结果还是 int 类 型。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="855" data-height="778" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/2b28e5662b0d864c0e6a7d0ae9a7a7df.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转换规则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​       范围小的类型向范围大的类型提升， byte、short、char 运算时直接提升为 int 。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="830" data-height="38" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/91b8741c048fabc9a3da930cf0efab8f.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.3.2 强制（显示）转换&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="842" data-height="820" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9a7d4c41253a0f18fcc9e94b26a56a77.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转换原理图解&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="642" data-height="585" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c2693cf6afb2525f6c58faeb486d825d.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;强烈注意&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="869" data-height="183" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/7149979564d1fcd16bbda429bbee3a15.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
</content><link href="/archives/Java基础知识笔记/" rel="alternate"/><published>2020-08-08T12:39:22+08:06</published></entry><entry><id>/archives/Java方法汇总/</id><title>Java方法汇总</title><updated>2020-08-09T14:11:22.866853+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;Java方法汇总&lt;/p&gt;
</content><link href="/archives/Java方法汇总/" rel="alternate"/><published>2020-08-08T12:40:33+08:06</published></entry><entry><id>/archives/数据结构&amp;算法/</id><title>数据结构&amp;算法</title><updated>2020-08-09T14:11:22.866809+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;h3&gt;稀疏数组&lt;/h3&gt;
&lt;p&gt;只适用于大部分元素为相同时，比如五子棋&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="614" data-height="191" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/299d105e1ae3641fb50a5c6a7b30f020.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一行记录总行和总列数和除0外有多少个非零数据，剩余的行则记录每个数据的位置和值&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="493" data-height="313" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a6828b5896a8f048693588ed8cdf16b2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;etc:五子棋&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="762" data-height="374" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/0c32d77ebc057f853e1566c53a9dfe97.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
</content><link href="/archives/数据结构&amp;算法/" rel="alternate"/><published>2020-08-08T12:42:14+08:06</published></entry><entry><id>/archives/Java基础面试题/</id><title>Java基础面试题</title><updated>2020-08-09T14:11:22.866764+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;Java基础面试题&lt;/p&gt;
</content><link href="/archives/Java基础面试题/" rel="alternate"/><published>2020-08-08T23:24:32+08:06</published></entry><entry><id>/archives/Spring框架面试题/</id><title>Spring框架面试题</title><updated>2020-08-09T14:11:22.866711+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;h1&gt;SpringCloud&lt;/h1&gt;
&lt;p&gt;​       微服务架构就是将单体的应用程序分成多个应用程序,这多个应用程序就成为微服务,每个微服务运行在自己的进程中,并使用轻量级的机制通信。这些服务围绕业务能力来划分,并通过自动化部署机制来独立部署。这些服务可以使用不同的编程语言,不同数据库,以保证最低限度的集中式管理。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="954" data-height="279" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/65598ec1c2028e76eeb2084a49d966a3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;SpringCloud优缺点&lt;/h2&gt;
&lt;h3&gt;优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;服务拆分粒度更细，有利于资源重复利用，有利于提高开发效率&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以更精准的制定优化服务方案，提高系统的可维护性&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微服务架构采用去中心化思想，服务之间采用Restful等轻量级通讯，比ESB更轻量&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;适于互联网时代，产品迭代周期更短&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;缺点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;微服务过多，治理成本高，不利于维护系统&lt;/li&gt;
&lt;li&gt;分布式系统开发的成本高（容错，分布式事务等）对团队挑战大&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总的来说优点大过于缺点，目前看来SpringCloud是一套非常完善的分布式框架，目前很多企业开始用微服务&lt;/p&gt;
</content><link href="/archives/Spring框架面试题/" rel="alternate"/><published>2020-08-08T23:25:58+08:06</published></entry><entry><id>/archives/Mysql数据库面试题/</id><title>Mysql数据库面试题</title><updated>2020-08-09T14:11:22.866679+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;Mysql数据库面试题&lt;/p&gt;
</content><link href="/archives/Mysql数据库面试题/" rel="alternate"/><published>2020-08-08T23:26:48+08:06</published></entry><entry><id>/archives/计算机基础面试题/</id><title>计算机基础面试题</title><updated>2020-08-09T14:11:22.866620+00:00</updated><author><name>LifeAlsoIsGG</name><email>1138312802@qq.com</email><uri>https://blog.lifeisgg.online</uri></author><content>&lt;p&gt;计算机基础面试题&lt;/p&gt;
</content><link href="/archives/计算机基础面试题/" rel="alternate"/><published>2020-08-08T23:29:00+08:06</published></entry></feed>