<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>LifeAlsoIsGG-Wiki</title><link>/</link><description>Do not go gentle in that good night</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/avatar.png</url><title>LifeAlsoIsGG-Wiki</title><link>/</link></image><language>zh-CN</language><lastBuildDate>Sun, 08 Nov 2020 16:27:17 +0806</lastBuildDate><pubDate>Sun, 08 Nov 2020 16:27:17 +0806</pubDate><item><title>Java-IO</title><link>/archives/Java-IO/</link><description>&lt;p&gt;javaio流&lt;/p&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Java-IO/</guid><pubDate>Fri, 09 Oct 2020 14:25:20 +0806</pubDate></item><item><title>Mybatis学习笔记</title><link>/archives/Mybatis学习笔记/</link><description>&lt;h1&gt;SELECT&lt;/h1&gt;
&lt;h1&gt;INSERT&lt;/h1&gt;
&lt;p&gt;插入后获取主键，&lt;a href="https://blog.csdn.net/qq_36614559/article/details/80257228?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&amp;amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param"&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;UPDATE&lt;/h1&gt;
&lt;h1&gt;DELETE&lt;/h1&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Mybatis学习笔记/</guid><pubDate>Sat, 10 Oct 2020 15:05:06 +0806</pubDate></item><item><title>Swagger使用</title><link>/archives/Swagger使用/</link><description>&lt;h1&gt;参考&lt;/h1&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/u014231523/article/details/54562695"&gt;https://blog.csdn.net/u014231523/article/details/54562695&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leongfeng.github.io/2017/02/20/springboot-springfox-swagger2markup-spring-restdoc/"&gt;https://leongfeng.github.io/2017/02/20/springboot-springfox-swagger2markup-spring-restdoc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;官方wiki：&lt;a href="https://github.com/swagger-api/swagger-core/wiki/Annotations"&gt;https://github.com/swagger-api/swagger-core/wiki/Annotations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;引入依赖&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!--Swagger依赖--&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.springfox&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;springfox-swagger2&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.9.2&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.springfox&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;springfox-swagger-ui&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.9.2&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;配置SwaggerConfiguration&lt;/h1&gt;
&lt;p&gt;创建&lt;code&gt;SwaggerConfiguration.java&lt;/code&gt;配置类&lt;/p&gt;
&lt;p&gt;加注解&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;@Configuration&lt;/li&gt;
&lt;li&gt;@EnableSwagger2&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="nd"&gt;@EnableSwagger2&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SwaggerConfig&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//                    .apis(RequestHandlerSelectors.basePackage(&amp;quot;com.lifeisgg.springboot_demo.controller&amp;quot;))&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Docket&lt;/span&gt; &lt;span class="nf"&gt;buildDocket&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Docket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DocumentationType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SWAGGER_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;apiInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;apiInfo&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;select&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="c1"&gt;//.apis(RequestHandlerSelectors.basePackage(&amp;quot;com.lifeisgg.springboot_demo.controller&amp;quot;))&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PathSelectors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;any&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="c1"&gt;//是否将参数显示在请求后面&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;enableUrlTemplating&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;ApiInfo&lt;/span&gt; &lt;span class="nf"&gt;apiInfo&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;ApiInfoBuilder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SpringbootDemo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SpringbootDemo-Swagger2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;termsOfServiceUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;localhost:8001&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Contact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Chen Long&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;https://wiki.lifeisgg.online/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;1138312802@qq.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Beta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;license&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;licenseUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输入&lt;a href="http://localhost:8001/swagger-ui.html"&gt;http://localhost:8001/swagger-ui.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1651" data-height="795" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/f0e2c3b5c5e4a081fc645e8a65c25a1b.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1&gt;常用注解&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;注解&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@Api()&lt;/td&gt;
&lt;td&gt;用于controller类上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiOperation()&lt;/td&gt;
&lt;td&gt;用于controller类中的请求方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiParam()&lt;/td&gt;
&lt;td&gt;用于请求中的参数说明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiImplicitParam()&lt;/td&gt;
&lt;td&gt;用于请求方法中的参数说明，不过写在请求方法上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiImplicitParams()&lt;/td&gt;
&lt;td&gt;里面可以包含多个@ApiImplicitParam()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiModel()&lt;/td&gt;
&lt;td&gt;写在实体类上，描述和重命名实体类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiModelProperty()&lt;/td&gt;
&lt;td&gt;写在实体类属性上，描述，重命名，示例等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiResponses()&lt;/td&gt;
&lt;td&gt;用于请求方法上，描述某个返回码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@ApiIgnore()&lt;/td&gt;
&lt;td&gt;作用于类，方法，属性上，使其忽略&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;@Api()：描述Controller类&lt;/h2&gt;
&lt;p&gt;作用于&lt;code&gt;controller&lt;/code&gt;类上&lt;/p&gt;
&lt;p&gt;属性说明&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td&gt;分组，在类上多个时会复制多个controller。也可以当做名字使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td&gt;小标题描述，已弃用，默认为controller类名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@RestController&lt;/span&gt;
&lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;demoData&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Api&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Api_value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Api_description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Api_tags&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DemoDataController&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="556" data-height="197" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/1e4bfd864926938df8926625baba6153.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;@ApiOperation()：描述请求方法&lt;/h2&gt;
&lt;p&gt;作用于controller类中的&lt;code&gt;请求方法&lt;/code&gt;上&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th style="text-align:left"&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td style="text-align:left"&gt;表示标题，如果有多个值则会复制多个controller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;notes&lt;/td&gt;
&lt;td style="text-align:left"&gt;方法内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tags&lt;/td&gt;
&lt;td style="text-align:left"&gt;分组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td style="text-align:left"&gt;默认为&lt;code&gt;false&lt;/code&gt;，&lt;code&gt;true&lt;/code&gt;时隐藏&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@GetMapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/exportExcel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@ApiOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ApiOperation_Value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;notes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ApiOperation_Notes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;exportExcel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="489" data-height="124" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/db2a0302ba369e569d97155fe81d8e8b.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;@ApiParam()：参数&lt;/h2&gt;
&lt;p&gt;作用于controller类中的&lt;code&gt;请求方法形参上&lt;/code&gt;上。用于方法，参数，字段说明，表示对参数的添加元数据（说明或是否必填等）&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;注意，作用于参数时，在Swagger中会要求输入body类型(GET和HEAD无法接受BODY类型)。不想使用body可以在参数前加注解&lt;code&gt;@RequestParam&lt;/code&gt;。或者直接使用注解&lt;code&gt;@ApiImplicitParam()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th style="text-align:left"&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数说明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td style="text-align:left"&gt;是否必填&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;exportExcel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@ApiParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;param&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ApiParam_value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;

 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;name&lt;/code&gt;可以省略&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1554" data-height="458" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/d01d538d585ec8b2d893bf7dfcd5479e.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;@ApiImplicitParams()&lt;/h2&gt;
&lt;p&gt;作用于&lt;code&gt;请求方法&lt;/code&gt;上，对参数进行说明，包含多个&lt;code&gt;@ApiImplicitParam&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;@ApiImplicitParam&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th style="text-align:left"&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td style="text-align:left"&gt;对应参数名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td style="text-align:left"&gt;对参数进行说明&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数是否必须传&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;paramType&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数放在哪个地方，具体值在下方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dataType&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数类型，默认String，其它值dataType="Integer"，也可以写实体类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dataTypeClass&lt;/td&gt;
&lt;td style="text-align:left"&gt;用类当做参数类型，但试过无效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;defaultValue&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数的默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;paramType参数&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th style="text-align:left"&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;header&lt;/td&gt;
&lt;td style="text-align:left"&gt;请求参数的获取：@RequestHeader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td style="text-align:left"&gt;请求参数的获取：@RequestParam&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td style="text-align:left"&gt;用于restful接口， 请求参数的获取：@PathVariable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td style="text-align:left"&gt;@RequestBody&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;form&lt;/td&gt;
&lt;td style="text-align:left"&gt;表单&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@ApiImplicitParams&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nd"&gt;@ApiImplicitParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;User&amp;#39;s name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;paramType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;query&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nd"&gt;@ApiImplicitParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;User&amp;#39;s email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;paramType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;query&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nd"&gt;@ApiImplicitParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;User ID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;long&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;paramType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;query&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;doPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpServletRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpServletResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="n"&gt;ServletException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;IOException&lt;/span&gt; &lt;span class="p"&gt;{...}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;@ApiModel()：实体类&lt;/h2&gt;
&lt;p&gt;作用于实体类上&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th style="text-align:left"&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td style="text-align:left"&gt;实体类名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description&lt;/td&gt;
&lt;td style="text-align:left"&gt;实体类描述&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;@ApiModelProperty：实体类参数上&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;th style="text-align:left"&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td style="text-align:left"&gt;参数描述&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;example&lt;/td&gt;
&lt;td style="text-align:left"&gt;举例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hidden&lt;/td&gt;
&lt;td style="text-align:left"&gt;是否显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td style="text-align:left"&gt;是否必填&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@ApiModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ApiModel_value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ApiModel_description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DemoData&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@ApiModelProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;用户名id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;Integer&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="388" data-height="242" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/836425449f542947caf0f979c7aec1bc.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;@ApiResponses：返回码描述&lt;/h2&gt;
&lt;p&gt;作用于请求方法。设置返回码和响应的描述信息，&lt;code&gt;@ApiResponses&lt;/code&gt;可以设置多个&lt;code&gt;@ApiResponse&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@ApiResponses&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="nd"&gt;@ApiResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Invalid ID supplied&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="nd"&gt;@ApiResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Pet not found&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;@ApiIgnore：忽略类或方法或实体类属性&lt;/h2&gt;
&lt;p&gt;可作用于类，方法和实体类属性上&lt;/p&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Swagger使用/</guid><pubDate>Sat, 10 Oct 2020 18:29:09 +0806</pubDate></item><item><title>Redis学习笔记</title><link>/archives/Redis学习笔记/</link><description>&lt;p&gt;Redis学习笔记&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=2247484858&amp;amp;idx=1&amp;amp;sn=8e222ea6115e0b69cac91af14d2caf36&amp;amp;chksm=cea24a71f9d5c367148dccec3d5ddecf5ecd8ea096b5c5ec32f22080e66ac3c343e99151c9e0&amp;amp;token=1082669959&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect"&gt;redis 总结——重构版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cnblogs.com/jasontec/p/9699242.html"&gt;https://www.cnblogs.com/jasontec/p/9699242.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;简单来说 redis 就是⼀个数据库，不过与传统数据库不同的是 redis 的数据是存在内存中的，所以读 写速度⾮常快，因此 redis 被⼴泛应⽤于缓存⽅向。另外，redis 也经常⽤来做&lt;code&gt;分布式锁&lt;/code&gt;。redis 提 供了多种数据类型来⽀持不同的业务场景。除此之外，redis ⽀持事务 、持久化、LUA脚本、LRU驱动 事件、多种集群⽅案。&lt;/p&gt;
&lt;h1&gt;为什么要用 redis /为什么要用缓存&lt;/h1&gt;
&lt;p&gt;主要从“&lt;code&gt;高性能&lt;/code&gt;”和“&lt;code&gt;高并发&lt;/code&gt;”这两点来看待这个问题。&lt;/p&gt;
&lt;h2&gt;高性能&lt;/h2&gt;
&lt;p&gt;假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="729" data-height="469" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/6a09b66b66ab2e4e7f56d05a035372e6.webp" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;高并发&lt;/h2&gt;
&lt;p&gt;直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="554" data-height="469" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5c917bb9d9fb7894344b3c1727d9e6ca.webp" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1&gt;常⻅数据结构以及使⽤场景分析&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;数据结构&lt;/th&gt;
&lt;th&gt;常用命令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;String&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;常⽤命令: set,get,decr,incr,mget 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;String数据结构是简单的key-value类型，value其实不仅可以是String，也可以是数字。 常规keyvalue缓存应⽤； 常规计数：微博数，粉丝数等。&lt;/p&gt;
&lt;h2&gt;Hash&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;常⽤命令： hget,hset,hgetall 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;hash 是⼀个 string 类型的 field 和 value 的映射表，hash 特别适合⽤于存储对象，后续操作的时 候，你可以直接仅仅修改这个对象中的某个字段的值。 ⽐如我们可以 hash 数据结构来存储⽤户信 息，商品信息等等。⽐如下⾯我就⽤ hash 类型存放了我本⼈的⼀些信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;key=JavaUser&lt;/span&gt;&lt;span class="mi"&gt;293847&lt;/span&gt;
&lt;span class="err"&gt;value=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="err"&gt;“id”:&lt;/span&gt; &lt;span class="err"&gt;1,&lt;/span&gt;
 &lt;span class="err"&gt;“name”:&lt;/span&gt; &lt;span class="err"&gt;“SnailClimb”,&lt;/span&gt;
 &lt;span class="err"&gt;“age”:&lt;/span&gt; &lt;span class="err"&gt;22,&lt;/span&gt;
 &lt;span class="err"&gt;“location”:&lt;/span&gt; &lt;span class="err"&gt;“Wuhan,&lt;/span&gt; &lt;span class="err"&gt;Hubei”&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;常⽤命令: lpush,rpush,lpop,rpop,lrange等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;list 就是链表，Redis list 的应⽤场景⾮常多，也是Redis最重要的数据结构之⼀，⽐如微博的关注 列表，粉丝列表，消息列表等功能都可以⽤Redis的 list 结构来实现。 Redis list 的实现为⼀个双向链表，即可以⽀持反向查找和遍历，更⽅便操作，不过带来了部分额外 的内存开销。 另外可以通过 lrange 命令，就是从某个元素开始读取多少个元素，可以基于 list 实现分⻚查询，这 个很棒的⼀个功能，基于 redis 实现简单的⾼性能分⻚，可以做类似微博那种下拉不断分⻚的东⻄ （⼀⻚⼀⻚的往下⾛），性能⾼。&lt;/p&gt;
&lt;h2&gt;Set&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;常⽤命令： sadd,spop,smembers,sunion 等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;set 对外提供的功能与list类似是⼀个列表的功能，特殊之处在于 set 是可以⾃动排重的。 当你需要存储⼀个列表数据，⼜不希望出现重复数据时，set是⼀个很好的选择，并且set提供了判断某 个成员是否在⼀个set集合内的重要接⼝，这个也是list所不能提供的。可以基于 set 轻易实现交集、 并集、差集的操作。 ⽐如：在微博应⽤中，可以将⼀个⽤户所有的关注⼈存在⼀个集合中，将其所有粉丝存在⼀个集合。 Redis可以⾮常⽅便的实现如共同关注、共同粉丝、共同喜好等功能。这个过程也就是求交集的过程， 具体命令如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sinterstore&lt;/span&gt; &lt;span class="err"&gt;key&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="err"&gt;key&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="err"&gt;key&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="err"&gt;将交集存在key&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;内&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Sorted Set&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;常⽤命令： zadd,zrange,zrem,zcard等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;和set相⽐，sorted set增加了⼀个权重参数score，使得集合中的元素能够按score进⾏有序排列。 举例： 在直播系统中，实时排⾏信息包含直播间在线⽤户列表，各种礼物排⾏榜，弹幕消息（可以理 解为按消息维度的消息排⾏榜）等信息，适合使⽤ Redis 中的 Sorted Set 结构进⾏存储。&lt;/p&gt;
&lt;h1&gt;Redis过期时间&lt;/h1&gt;
&lt;p&gt;Redis中有个设置时间过期的功能，即对存储在 redis 数据库中的值可以设置⼀个过期时间。作为⼀个 缓存数据库，这是⾮常实⽤的。如我们⼀般项⽬中的 token 或者⼀些登录信息，尤其是短信验证码都 是有时间限制的，按照传统的数据库处理⽅式，⼀般都是⾃⼰判断过期，这样⽆疑会严重影响项⽬性 能。&lt;/p&gt;
&lt;p&gt;我们 set key 的时候，都可以给⼀个 expire time，就是过期时间，通过过期时间我们可以指定这个 key 可以存活的时间。&lt;/p&gt;
&lt;p&gt;如果假设你设置了⼀批 key 只能存活1个⼩时，那么接下来1⼩时后，redis是怎么对这批key进⾏删除 的？&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;定期删除：redis默认是每隔 100ms 就随机抽取⼀些设置了过期时间的key，检查其是否过期， 如果过期就删除。注意这⾥是随机抽取的。为什么要随机呢？你想⼀想假如 redis 存了⼏⼗万 个 key ，每隔100ms就遍历所有的设置过期时间的 key 的话，就会给 CPU 带来很⼤的负载！ &lt;/li&gt;
&lt;li&gt;惰性删除 ：定期删除可能会导致很多过期 key 到了时间并没有被删除掉。所以就有了惰性删 除。假如你的过期 key，靠定期删除没有被删除掉，还停留在内存⾥，除⾮你的系统去查⼀下那 个 key，才会被redis给删除掉。这就是所谓的惰性删除，也是够懒的哈！ 但是仅仅通过设置过期时间还是有问题的。我们想⼀下：如果定期删除漏掉了很多过期 key，然后你也 没及时去查，也就没⾛惰性删除，此时会怎么样？如果⼤量过期key堆积在内存⾥，导致redis内存块耗 尽了。怎么解决这个问题呢？ redis 内存淘汰机制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是仅仅通过设置过期时间还是有问题的。我们想⼀下：如果定期删除漏掉了很多过期 key，然后你也 没及时去查，也就没⾛惰性删除，此时会怎么样？如果⼤量过期key堆积在内存⾥，导致redis内存块耗 尽了。怎么解决这个问题呢？ redis 内存淘汰机制。&lt;/p&gt;
&lt;h1&gt;Redis内存淘汰机制&lt;/h1&gt;
&lt;p&gt;redis 提供 6种数据淘汰策略：&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使⽤的数 据淘汰 &lt;/li&gt;
&lt;li&gt;volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘 汰 &lt;/li&gt;
&lt;li&gt;volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰 &lt;/li&gt;
&lt;li&gt;allkeys-lru：当内存不⾜以容纳新写⼊数据时，在键空间中，移除最近最少使⽤的key（这个是 最常⽤的）&lt;/li&gt;
&lt;li&gt;allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰 &lt;/li&gt;
&lt;li&gt;no-eviction：禁⽌驱逐数据，也就是说当内存不⾜以容纳新写⼊数据时，新写⼊操作会报错。 这个应该没⼈使⽤吧！&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;4.0版本后增加以下两种：&lt;/p&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;volatile-lfu：从已设置过期时间的数据集(server.db[i].expires)中挑选最不经常使⽤的数据 淘汰 &lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;allkeys-lfu：当内存不⾜以容纳新写⼊数据时，在键空间中，移除最不经常使⽤的key&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Redis持久化机制&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;怎么保证 redis 挂掉之后再重启数据可以进⾏恢复&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Redis事务&lt;/h1&gt;
&lt;h1&gt;缓存雪崩和缓存穿透问题解决⽅案&lt;/h1&gt;
&lt;h1&gt;区别&lt;/h1&gt;
&lt;h2&gt;redis 和 memcached 的区别&lt;/h2&gt;
&lt;blockquote&gt;&lt;ol&gt;
&lt;li&gt;redis⽀持更丰富的数据类型（⽀持更复杂的应⽤场景）：Redis不仅仅⽀持简单的k/v类型的数 据，同时还提供list，set，zset，hash等数据结构的存储。memcache⽀持简单的数据类型， String。 &lt;/li&gt;
&lt;li&gt;Redis⽀持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进⾏使 ⽤,⽽Memecache把数据全部存在内存之中。 &lt;/li&gt;
&lt;li&gt;集群模式：memcached没有原⽣的集群模式，需要依靠客户端来实现往集群中分⽚写⼊数据；但 是 redis ⽬前是原⽣⽀持 cluster 模式的. &lt;/li&gt;
&lt;li&gt;Memcached是多线程，⾮阻塞IO复⽤的⽹络模型；Redis使⽤单线程的多路 IO 复⽤模型。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1207" data-height="741" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/f67a0c75bb3b9fb63323c66f68e5f3cd.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;为什么要用 redis 而不用 map/guava 做缓存?&lt;/h2&gt;
&lt;p&gt;缓存分为&lt;code&gt;本地缓存&lt;/code&gt;和&lt;code&gt;分布式缓存&lt;/code&gt;。以 Java 为例，使用自带的 map 或者 guava 实现的是本地缓存，最主要的特点是轻量以及快速，生命周期随着 jvm 的销毁而结束，并且在多实例的情况下，每个实例都需要各自保存一份缓存，缓存不具有一致性。&lt;/p&gt;
&lt;p&gt;使用 redis 或 memcached 之类的称为分布式缓存，在多实例的情况下，各实例共用一份缓存数据，缓存具有一致性。缺点是需要保持 redis 或 memcached服务的高可用，整个程序架构上较为复杂。&lt;/p&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Redis学习笔记/</guid><pubDate>Mon, 12 Oct 2020 20:45:07 +0806</pubDate></item><item><title>SQL学习笔记</title><link>/archives/SQL学习笔记/</link><description>&lt;h1&gt;参考&lt;/h1&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.runoob.com/mysql/mysql-tutorial.html"&gt;MYSQL菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;索引&lt;/h1&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.runoob.com/mysql/mysql-index.html"&gt;https://www.runoob.com/mysql/mysql-index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cnblogs.com/songzhixue/p/11160201.html"&gt;https://www.cnblogs.com/songzhixue/p/11160201.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;普通索引&lt;/td&gt;
&lt;td&gt;普通索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;唯一索引&lt;/td&gt;
&lt;td&gt;不允许有俩行具有相同的值，允许空值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主键索引&lt;/td&gt;
&lt;td&gt;为了保持数据库表与表之间的关系，不允许空值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全文索引&lt;/td&gt;
&lt;td&gt;全文索引为在字符串数据中进行复杂的词搜索提供有效支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;创建表时&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;表名&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="err"&gt;字段名&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="err"&gt;数据类型&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;完整性约束条件…&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="err"&gt;字段名&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="err"&gt;数据类型&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;完整性约束条件…&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;FULLTEXT&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SPATIAL&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;索引名&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;字段名&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="err"&gt;长度&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 

&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;普通索引直接&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="err"&gt;索引名&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;索引名&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;字段名&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="err"&gt;长度&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主键索引标注索引时自动为主键索引&lt;/p&gt;
&lt;h2&gt;CREATE在已存在的表上创建索引&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;FULLTEXT&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SPATIAL&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="k"&gt;INDEX&lt;/span&gt;  &lt;span class="err"&gt;索引名&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="err"&gt;表名&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;字段名&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="err"&gt;长度&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;ALTER TABLE&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;表名&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;FULLTEXT&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SPATIAL&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="err"&gt;索引名&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;字段名&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="err"&gt;长度&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;删除索引&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="err"&gt;索引名&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="err"&gt;表名字&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除主键索引&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;表名&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;显示索引信息&lt;/h2&gt;
&lt;p&gt;你可以使用 SHOW INDEX 命令来列出表中的相关的索引信息。可以通过添加 \G 来格式化输出信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;INDEX&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;G&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/SQL学习笔记/</guid><pubDate>Mon, 12 Oct 2020 20:47:17 +0806</pubDate></item><item><title>Java-JDK8新特性</title><link>/archives/Java-JDK8新特性/</link><description>&lt;p&gt;Java-JDK8新特性&lt;/p&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Java-JDK8新特性/</guid><pubDate>Thu, 15 Oct 2020 20:39:47 +0806</pubDate></item><item><title>Java-反射</title><link>/archives/Java-反射/</link><description>&lt;h1&gt;参考&lt;/h1&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/huangliniqng/article/details/88554510"&gt;https://blog.csdn.net/huangliniqng/article/details/88554510&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/9be58ee20dee"&gt;https://www.jianshu.com/p/9be58ee20dee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;定义&lt;/h1&gt;
&lt;p&gt;JAVA反射机制是在运行状态中&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;对于任意一个类，都能够知道这个类的所有属性和方法；&lt;/li&gt;
&lt;li&gt;对于任意一个对象，都能够调用它的任意方法和属性；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种动态获取信息以及动态调用对象方法的功能称为java语言的反射机制。&lt;/p&gt;
&lt;h1&gt;用途&lt;/h1&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jianshu.com/p/3fd80b251399"&gt;https://www.jianshu.com/p/3fd80b251399&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;在日常的第三方应用开发过程中，经常会遇到某个类的某个成员变量、方法或是属性是私有的或是只对系统应用开放，这时候就可以利用Java的反射机制通过反射来获取所需的私有成员或是方法。当然，也不是所有的都适合反射，之前就遇到一个案例，通过反射得到的结果与预期不符。阅读源码发现，经过层层调用后在最终返回结果的地方对应用的权限进行了校验，对于没有权限的应用返回值是没有意义的缺省值，否则返回实际值起到保护用户的隐私目的。&lt;/p&gt;
&lt;h1&gt;反射机制的相关类&lt;/h1&gt;
&lt;p&gt;类名 用途   Class类 代表类的实体，在运行的Java应用程序中表示类和接口  Field类 代表类的成员变量（成员变量也称为类的属性）  Method类 代表类的方法  Constructor类 代表类的构造方法&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类名&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;用途&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Class类&lt;/td&gt;
&lt;td&gt;代表类的实体，在运行的Java应用程序中表示类和接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Field类&lt;/td&gt;
&lt;td&gt;代表类的成员变量（成员变量也称为类的属性）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method类&lt;/td&gt;
&lt;td&gt;代表类的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Constructor类&lt;/td&gt;
&lt;td&gt;代表类的构造方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Class类&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.android.google.cn/reference/java/lang/Class"&gt;Class&lt;/a&gt;代表类的实体，在运行的Java应用程序中表示类和接口。在这个类中提供了很多有用的方法，这里对他们简单的分类介绍。&lt;/p&gt;
&lt;h3&gt;例子&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="989" data-height="320" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/f063f379049e465c1d09cf81a58eeeda.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="595" data-height="197" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/bb4a69a23e08be3547dcecf64e2d2165.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="629" data-height="307" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c998b904840a334ca800dbcb06c9ed71.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;获得类相关的方法&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;asSubclass(Class&lt;U&gt; clazz)&lt;/td&gt;
&lt;td&gt;把传递的类的对象转换成代表其子类的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cast&lt;/td&gt;
&lt;td&gt;把对象转换成代表类或是接口的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getClassLoader()&lt;/td&gt;
&lt;td&gt;获得类的加载器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getClasses()&lt;/td&gt;
&lt;td&gt;返回一个数组，数组中包含该类中所有公共类和接口类的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getDeclaredClasses()&lt;/td&gt;
&lt;td&gt;返回一个数组，数组中包含该类中所有类和接口类的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forName(String className)&lt;/td&gt;
&lt;td&gt;根据类名返回类的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getName()&lt;/td&gt;
&lt;td&gt;获得类的完整路径名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;newInstance()&lt;/td&gt;
&lt;td&gt;创建类的实例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getPackage()&lt;/td&gt;
&lt;td&gt;获得类的包&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getSimpleName()&lt;/td&gt;
&lt;td&gt;获得类的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getSuperclass()&lt;/td&gt;
&lt;td&gt;获得当前类继承的父类的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getInterfaces()&lt;/td&gt;
&lt;td&gt;获得当前类实现的类或是接口&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;获得类中构造器相关的方法&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;getConstructor(Class...&amp;lt;?&amp;gt; parameterTypes)&lt;/td&gt;
&lt;td&gt;获得该类中与参数类型匹配的公有构造方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getConstructors()&lt;/td&gt;
&lt;td&gt;获得该类的所有公有构造方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getDeclaredConstructor(Class...&amp;lt;?&amp;gt; parameterTypes)&lt;/td&gt;
&lt;td&gt;获得该类中与参数类型匹配的构造方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getDeclaredConstructors()&lt;/td&gt;
&lt;td&gt;获得该类所有构造方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;获得类中方法相关的方法&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;getMethod(String name, Class...&amp;lt;?&amp;gt; parameterTypes)&lt;/td&gt;
&lt;td&gt;获得该类某个公有的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getMethods()&lt;/td&gt;
&lt;td&gt;获得该类所有公有的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getDeclaredMethod(String name, Class...&amp;lt;?&amp;gt; parameterTypes)&lt;/td&gt;
&lt;td&gt;获得该类某个方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getDeclaredMethods()&lt;/td&gt;
&lt;td&gt;获得该类所有方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;类中其他重要的方法&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;isAnnotation()&lt;/td&gt;
&lt;td&gt;如果是注解类型则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isAnnotationPresent(Class&amp;lt;? extends Annotation&amp;gt; annotationClass)&lt;/td&gt;
&lt;td&gt;如果是指定类型注解类型则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isAnonymousClass()&lt;/td&gt;
&lt;td&gt;如果是匿名类则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isArray()&lt;/td&gt;
&lt;td&gt;如果是一个数组类则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isEnum()&lt;/td&gt;
&lt;td&gt;如果是枚举类则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isInstance(Object obj)&lt;/td&gt;
&lt;td&gt;如果obj是该类的实例则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isInterface()&lt;/td&gt;
&lt;td&gt;如果是接口类则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isLocalClass()&lt;/td&gt;
&lt;td&gt;如果是局部类则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isMemberClass()&lt;/td&gt;
&lt;td&gt;如果是内部类则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Field类&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.android.google.cn/reference/java/lang/reflect/Field"&gt;Field&lt;/a&gt;代表类的成员变量（成员变量也称为类的属性）。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;equals(Object obj)&lt;/td&gt;
&lt;td&gt;属性与obj相等则返回true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;get(Object obj)&lt;/td&gt;
&lt;td&gt;获得obj中对应的属性值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set(Object obj, Object value)&lt;/td&gt;
&lt;td&gt;设置obj中对应属性值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Method类&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.android.google.cn/reference/java/lang/reflect/Method"&gt;Method&lt;/a&gt;代表类的方法。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;invoke(Object obj, Object... args)&lt;/td&gt;
&lt;td&gt;传递object对象及参数调用该对象对应的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="926" data-height="453" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/ef650e5fa57afdb23f7be587d0e65472.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="757" data-height="310" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c27cd26f373d6b8fc48e87289848345d.png" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;Constructor类&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.android.google.cn/reference/java/lang/reflect/Constructor"&gt;Constructor&lt;/a&gt;代表类的构造方法。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;newInstance(Object... initargs)&lt;/td&gt;
&lt;td&gt;根据传递的参数创建类的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Java-反射/</guid><pubDate>Fri, 16 Oct 2020 16:49:15 +0806</pubDate></item><item><title>腾讯云学习笔记</title><link>/archives/腾讯云学习笔记/</link><description>&lt;h1&gt;学习目录&lt;/h1&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://main.qcloudimg.com/raw/1c7701b98daad4d66b7ab7039cd8ff6a/腾讯云从业者认证-知识点列表V1.0.pdf"&gt;知识点目录1.0&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://main.qcloudimg.com/raw/84235eeb1c66575eb7fa536e88b0934f/腾讯云从业者认证-知识点列表V1.2.pdf"&gt;知识点目录1.2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1561" data-height="818" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/7fb7d1214526fc6fa168ca53729368f6.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1&gt;1. 云计算基础介绍&lt;/h1&gt;
&lt;h2&gt;1.1 企业自定EDC&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1710" data-height="923" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/ea19e18e4f66cb412f4734e67bd34538.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;数据中心等级&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1689" data-height="907" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/737e29bcdc399fd4c3eb358299cb736d.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.2 IDC托管/租用&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Internet Data Center&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1671" data-height="944" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/7bbd9060a212487a9d1ed4efeba78876.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.3 云计算对比&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1621" data-height="950" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/e68d1a01f94b0a05acb08e59ba5ecd3c.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.4 什么是云计算&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1704" data-height="921" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5ca845aeed57568db53b5997c99a5174.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.5 云计算参考模型&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1648" data-height="930" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/d585cf6d026aed2937a5983ece993262.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.6 云计算关键特点/特征&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1614" data-height="858" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/b3154a6ba916b2459427930be0f55b16.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.7 云计算服务模式/云层次&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1642" data-height="946" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/45234ec16f3fc050e42e0e28b83d53dd.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;云计算技术架构&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1623" data-height="918" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/2c8cc005d86c87687f2508c5fc4c003c.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.8 云计算四种部署方式&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1575" data-height="847" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9b16f0f3d3fb7b3066087c85c6d2b960.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.8.1 公有云和私有云区别&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1632" data-height="907" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5d6915508a8b0a1549a49ccf98ce515d.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.8.2 混合云&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1616" data-height="921" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/b7db25646e42ecf5fa90e829e290c919.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;1.8.3 行业云&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1680" data-height="882" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/26455ffde9bf64367c0a13b629b9e1cd.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.9 云计算关键技术&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1224" data-height="670" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/7fe14040d4dd9ecefac934baec5a5cee.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;计算虚拟化原理&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1636" data-height="885" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a2b8ca4bf47e5efe92d39414c7d62501.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;计算虚拟化分类&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1699" data-height="914" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/2567d61d11cd8c0a5bb8d0c0773e7577.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;计算虚拟化对比&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1719" data-height="945" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9c8369563dac30670715f22fe9f10619.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;计算虚拟化-KVM&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;KVM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1660" data-height="870" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/e8bc923bf7ccd817cae5cd756dd6a425.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.10 分布式存储&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1725" data-height="918" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/8ac876007fd4ccbb9ab7107e6bc381e3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.11 网络虚拟化-SDN&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1678" data-height="906" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5a8bdeb6438b0cadc18376b6cb0ec205.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;SDN与NFV对比&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SDN&lt;/code&gt; &lt;code&gt;NFV&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1775" data-height="900" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/0fdcf46e69e0eb4d5d720649ee9d1d48.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.12 云管理平台OpenStack&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OpenStack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1663" data-height="877" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c3fedf88bf932c2394f0f1179cb6f453.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;腾讯云管理平台VStation&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;VStation&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1491" data-height="888" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/17d2a9734b7c14216deef2ff9b7b2d84.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;腾讯云VStation架构&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;VStation架构&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1680" data-height="857" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/0929c6f672ca89cf5120de866ddd4c4c.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;OpenStack对比VStation&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1494" data-height="840" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/20623182e54476325e6ae9b08fb1a3b4.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.13 应用虚拟化-容器技术&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1615" data-height="927" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/79ea5c4e6a858954322774a44f5d457a.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;应用虚拟化-容器技术-Docker&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1724" data-height="884" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a5598432e5471e19b9471f8be76a9640.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.14 大数据&amp;amp;人工智能&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1646" data-height="916" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/3e4b5fd087d5d17ded8eda1df233cb92.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.15 云计算影响与市场&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1219" data-height="642" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/50964323cb23c0e66d6ba01cd2007cd6.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云计算发展阶段&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1729" data-height="811" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/f172d264a7b8d703a33bd0ccff6f73bc.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云计算产业影响&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1619" data-height="908" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5f85cadbcc9b56399e037726199beaac.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1591" data-height="928" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9079cbe037142108a73902dfb1ebb052.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1504" data-height="924" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/b1a02d69eac5b06eab0591f60b68c479.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云计算组织影响-客户&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1562" data-height="804" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9efc97d02e0ca31037dafc6ce0aed201.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云计算组织影响-厂商&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1634" data-height="915" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9eec09a50d2e12ec57246ef29facd62b.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;1.16 腾讯云发展与优势&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1204" data-height="666" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/d6fdc6aaacaf1aaa2398d100eec8f3f2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;腾讯云发展阶段&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1600" data-height="928" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/106a8cb4f7409b369c18be71e469ea82.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;腾讯云竞争优势&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1698" data-height="766" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9a1c938a6410747563462e549a61fd7e.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;腾讯云登上KVM全球贡献榜&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1684" data-height="941" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/92d461673d1d9f68732679f5ceaec141.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;云计算基础课程总结&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1646" data-height="854" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/82de4b4d022affc7488e473ad87e907c.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1&gt;2. 腾讯云服务器产品介绍&lt;/h1&gt;
&lt;h2&gt;2.1 云服务器基础知识&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1256" data-height="814" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9c40785d87b151e1a4cf46b4ef7c6d33.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;地域与可用区&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="-1" data-height="-1" src="images/腾讯云学习笔记/2.1地域与可用区.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1638" data-height="644" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/19835263e5e56cfc57f92b58d9d4a306.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务器实例&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1712" data-height="885" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/bf296ef7ec9004d4d0c05d0157ddb9ab.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;云服务器实例系列&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1683" data-height="914" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/3bf076dce8873902dbb2ce1a34341c22.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;云服务器实例类型&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1740" data-height="946" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a678326d8d28408927ed7fb65db2291b.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;实例类型特点与应用&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1692" data-height="885" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/592198cb2069290393aa1e9c7e759550.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务器镜像&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1732" data-height="957" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/6148491a1ed87abfb743bfefe6fcc40f.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;镜像类型与优势&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1667" data-height="913" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/545481a2123ed591447d563ceb553eb5.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务器存储&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1603" data-height="949" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/8643dd3f411c861a3e859767bac1478f.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务器演进&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1588" data-height="926" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/66fcc6091be8096b9d873aae2389b7ff.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.2 云服务器产品介绍&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CVM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1121" data-height="743" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/d318028158ab590e36eb31d9a17d74ea.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务器CVM&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1691" data-height="915" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/54cbdafba5824eaa499a5ef6f6fe1bff.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务器CVM应用&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1701" data-height="749" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/dec0b3f0b5a0b904a5c041016e609858.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;GPU云服务器&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;GPU&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1657" data-height="932" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a6fca6a3b5cb8a531f2573dde76f271f.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;GPU云服务器类型和应用&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1551" data-height="929" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9c96eeaba082c0d6e739c63e36522d42.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1691" data-height="835" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/cea7aafb31b8f5781da6a9caaacc66a2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;FPGA云服务器&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1665" data-height="898" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/66da2d0c8a895ff028f938a0eda9b7aa.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;FPGA云服务器优势与应用&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1565" data-height="933" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/639ab079b3394e56dec9d5c40d3029ba.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;专用宿主机CDH&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CDH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1656" data-height="896" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/dd5fe499aed8b997977efb138f03ccaa.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1636" data-height="933" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/046f35d2ee13a8c27f7b0b73faceff9c.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;黑石服务器CPM&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CPM&lt;/code&gt; &lt;code&gt;黑石&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1637" data-height="678" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/c47c55432a2da8a5388607e0345ca2d6.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;黑石Stack-V应用混合云&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Stack-V&lt;/code&gt; &lt;code&gt;黑石&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1598" data-height="928" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/d6e16e84c17c5ede7c7fc3d9797d2034.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;黑石ARM应用移动游戏场景&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ARM&lt;/code&gt; &lt;code&gt;黑石&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1679" data-height="858" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/6cf84f6fe60dc406da30d0a67c181d5d.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;黑石OpenPOWER应用大数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;OpenPOWER&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1646" data-height="925" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/5b2994cc849b38784245fbe61cb676f1.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.3 云服务计费方案&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1202" data-height="569" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/53977f9cad09edf9af9fc2d879462e0a.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务计费模式&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1591" data-height="748" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/61e99304a8ff6c2759705be54e5436bc.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1664" data-height="798" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/0eac7bd60c4388ba51455c0edca8940e.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;报包年包月计费&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1608" data-height="887" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/8e261599bb34cf18ce743bd1bf6c2c43.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;包年包月停服回收机制&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1663" data-height="922" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/4ee307e6fea76543907a7c2a2905af05.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;按量计费模式&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1590" data-height="881" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/9d8deb2cc23f5c1de1643a497467612c.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;按量计费冻结机制&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1623" data-height="941" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a7982f27130e3f8e023b671a255c31ca.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;按量计费停服回收机制&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1695" data-height="930" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/eb57aa39fdf111685573d5f21e712f81.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云服务计费方案&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CVM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1412" data-height="787" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/3aacb1a0e06698cdae20d62cf67b6efb.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1688" data-height="861" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/e05f78d42654ae7dfb960f9b78bae682.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1661" data-height="815" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/8384672eef9f1d0ec2bc5ade863682b2.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;CVM示例购买限额&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1627" data-height="867" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/943953500c10b2c5cbc96df7f31d11bf.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;思考题&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1652" data-height="356" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/ddd81e0829c49a0c199e38fbd8190011.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2.4 课程总结&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1392" data-height="416" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/0a7005ae9ea164836eca3b2f273408ad.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1&gt;3. 腾讯云网络产品&lt;/h1&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="987" data-height="589" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/d526f24ea99be14fed48a1837b902060.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;3.1 腾讯云私有网络VPC&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;VPC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1263" data-height="823" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/b90cc60ae0a0cfef142031e727df154b.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;私有网络VPC&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;VPC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1619" data-height="870" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/f941ea55ebf9a803ca628ffd4fa388d8.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;VPC私有网段&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1693" data-height="870" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/e0df739336e0afaae6f60ac682361b80.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1661" data-height="888" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a57d76fe5d82c7f2552304129b8276ac.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;VPC路由表&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1726" data-height="906" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a80f0ab51544cc7afba66df708866ce3.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;安全组与网络ACL&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ACL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1683" data-height="868" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/057ae552fd05fb3b2121b4c6a3620b19.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;VPC访问控制&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1700" data-height="928" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/91481b783fd1ad55615aaffb706cdb96.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;弹性网卡ENI&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ENI&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1688" data-height="841" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/51674a8bb1ea281d0f9b41464dc054d1.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;3.2 腾讯云网络连接产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1172" data-height="837" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/48a5d3acd19dd3a2c2a7bffddaba37a7.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;网络连接服务&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1542" data-height="921" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/55d55472fdfb22a39a22a401eb433d29.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;公网接入&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;NAT&lt;/code&gt; &lt;code&gt;公网网关&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;弹性IP&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1676" data-height="819" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/852a587042886c28e688fc6058a10988.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;公网网关&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1653" data-height="960" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/a876c87434f1c2341a3fb79fce87858b.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;NAT网关&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1682" data-height="904" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/00520e8097c2ebeac686cbeaec760e87.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;NAT对比公网网关&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1627" data-height="938" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/8612920a0cc7e79b0781e13a61360513.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;企业DC连接&lt;/h3&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="176" data-height="79" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/4e02a6a831cb34f8c7845016bd245f34.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;VPN连接&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1649" data-height="958" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/05b34009f25a942706b40e9e5ba5be83.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;专线接入对比VPN连接&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1665" data-height="921" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/648dfd964954728ebafad53db19cb3c9.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;对等连接&lt;/h3&gt;
&lt;p&gt;对等连接&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1635" data-height="936" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/be28bdd52d437d2ceb6e2b0d0d7b30c0.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对等连接限制&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1676" data-height="870" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/e19606aac0d1a6c6cae97337ce51a809.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对等连接对比&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1682" data-height="896" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/85906d142f4604df8bc873ea3ff8390e.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;云联网&lt;/h3&gt;
&lt;h1&gt;4. 腾讯云CDN加速&lt;/h1&gt;
&lt;h1&gt;题目笔记&lt;/h1&gt;
&lt;h2&gt;云计算基础&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1128" data-height="646" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/ef7b80b1ee5438394e93c0691353c493.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;腾讯云机房的达标等级&lt;/h3&gt;
&lt;p&gt;必须在DC等级&lt;code&gt;T3&lt;/code&gt;以上&lt;/p&gt;
&lt;h3&gt;传统IDC两种类型的区别&lt;/h3&gt;
&lt;p&gt;托管型租用型&lt;/p&gt;
&lt;h2&gt;云服务器产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1160" data-height="881" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/ccc3b9cf428115b850ee373959d86164.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1168" data-height="98" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/60a960204a95678c4fc0197f629689e9.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;腾讯云网络产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1165" data-height="866" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/b05f412bd3d82f92933d4b116b5d3fe5.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;腾讯云CDN加速产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1163" data-height="592" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/ab5d406bd5d605173ee7f4a67feb72de.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1162" data-height="344" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/96ea8572e018c92f88d0f111f7581039.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;腾讯云云存储产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="814" data-height="774" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/b3a1a8aa72f6341b1eaf96c66337f475.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;腾讯云数据库产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1276" data-height="917" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/99fe864d3997546e67b498e5fa0d443a.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;腾讯云安全产品&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1277" data-height="776" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/efd77e28eaf03af28b899968faa5b352.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;&lt;img data-width="1276" data-height="490" src="https://cdn.jsdelivr.net/gh/lifealsoisgg/Wiki@gh-pages/archives/assets/304883b4bd818655f9add3bbad6bc57f.jpg" alt="" /&gt;&lt;/figure&gt;&lt;/p&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/腾讯云学习笔记/</guid><pubDate>Tue, 20 Oct 2020 16:12:14 +0806</pubDate></item><item><title>Java-时间处理</title><link>/archives/Java-时间处理/</link><description>&lt;p&gt;Java-时间处理&lt;/p&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Java-时间处理/</guid><pubDate>Wed, 04 Nov 2020 17:31:40 +0806</pubDate></item><item><title>Redis实现单点登录</title><link>/archives/Redis实现单点登录/</link><description>&lt;p&gt;Redis实现单点登录&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.csdn.net/qq_32534441/article/details/90264485"&gt;https://blog.csdn.net/qq_32534441/article/details/90264485&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description><author>1138312802@qq.com (LifeAlsoIsGG)</author><guid isPermaLink="true">/archives/Redis实现单点登录/</guid><pubDate>Sun, 08 Nov 2020 01:33:47 +0806</pubDate></item></channel></rss>